;
; Definition file of MSVCRT40.dll
; Automatic generated by gendef
; written by Kai Tietz 2008
;
LIBRARY "MSVCRT40.dll"
EXPORTS
; public: __thiscall Iostream_init::Iostream_init(class ios &,int)
??0Iostream_init@@QAE@AAVios@@H@Z ; has WINAPI (@0) = msvcirt.??0Iostream_init@@QAE@AAVios@@H@Z
; public: __thiscall Iostream_init::Iostream_init(void)
??0Iostream_init@@QAE@XZ ; has WINAPI (@0) = msvcirt.??0Iostream_init@@QAE@XZ
; public: __thiscall __non_rtti_object::__non_rtti_object(class __non_rtti_object const &)
??0__non_rtti_object@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcrt.??0__non_rtti_object@@QAE@ABV0@@Z
; public: __thiscall __non_rtti_object::__non_rtti_object(char const *)
??0__non_rtti_object@@QAE@PBD@Z ; has WINAPI (@0) = msvcrt.??0__non_rtti_object@@QAE@PBD@Z
; public: __thiscall bad_cast::bad_cast(char const *const &)
??0bad_cast@@QAE@ABQBD@Z ; has WINAPI (@0) = msvcrt.??0bad_cast@@QAE@ABQBD@Z
; public: __thiscall bad_cast::bad_cast(class bad_cast const &)
??0bad_cast@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcrt.??0bad_cast@@QAE@ABV0@@Z
; public: __thiscall bad_typeid::bad_typeid(class bad_typeid const &)
??0bad_typeid@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcrt.??0bad_typeid@@QAE@ABV0@@Z
; public: __thiscall bad_typeid::bad_typeid(char const *)
??0bad_typeid@@QAE@PBD@Z ; has WINAPI (@0) = msvcrt.??0bad_typeid@@QAE@PBD@Z
; public: __thiscall exception::exception(char const *const &)
??0exception@@QAE@ABQBD@Z ; has WINAPI (@0) = msvcrt.??0exception@@QAE@ABQBD@Z
; public: __thiscall exception::exception(class exception const &)
??0exception@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcrt.??0exception@@QAE@ABV0@@Z
; public: __thiscall exception::exception(void)
??0exception@@QAE@XZ ; has WINAPI (@0) = msvcrt.??0exception@@QAE@XZ
; public: __thiscall filebuf::filebuf(class filebuf const &)
??0filebuf@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0filebuf@@QAE@ABV0@@Z
; public: __thiscall filebuf::filebuf(int)
??0filebuf@@QAE@H@Z ; has WINAPI (@0) = msvcirt.??0filebuf@@QAE@H@Z
; public: __thiscall filebuf::filebuf(int,char *,int)
??0filebuf@@QAE@HPADH@Z ; has WINAPI (@0) = msvcirt.??0filebuf@@QAE@HPADH@Z
; public: __thiscall filebuf::filebuf(void)
??0filebuf@@QAE@XZ ; has WINAPI (@0) = msvcirt.??0filebuf@@QAE@XZ
; public: __thiscall fstream::fstream(class fstream const &)
??0fstream@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0fstream@@QAE@ABV0@@Z
; public: __thiscall fstream::fstream(int)
??0fstream@@QAE@H@Z ; has WINAPI (@0) = msvcirt.??0fstream@@QAE@H@Z
; public: __thiscall fstream::fstream(int,char *,int)
??0fstream@@QAE@HPADH@Z ; has WINAPI (@0) = msvcirt.??0fstream@@QAE@HPADH@Z
; public: __thiscall fstream::fstream(char const *,int,int)
??0fstream@@QAE@PBDHH@Z ; has WINAPI (@0) = msvcirt.??0fstream@@QAE@PBDHH@Z
; public: __thiscall fstream::fstream(void)
??0fstream@@QAE@XZ ; has WINAPI (@0) = msvcirt.??0fstream@@QAE@XZ
; public: __thiscall ifstream::ifstream(class ifstream const &)
??0ifstream@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0ifstream@@QAE@ABV0@@Z
; public: __thiscall ifstream::ifstream(int)
??0ifstream@@QAE@H@Z ; has WINAPI (@0) = msvcirt.??0ifstream@@QAE@H@Z
; public: __thiscall ifstream::ifstream(int,char *,int)
??0ifstream@@QAE@HPADH@Z ; has WINAPI (@0) = msvcirt.??0ifstream@@QAE@HPADH@Z
; public: __thiscall ifstream::ifstream(char const *,int,int)
??0ifstream@@QAE@PBDHH@Z ; has WINAPI (@0) = msvcirt.??0ifstream@@QAE@PBDHH@Z
; public: __thiscall ifstream::ifstream(void)
??0ifstream@@QAE@XZ ; has WINAPI (@0) = msvcirt.??0ifstream@@QAE@XZ
; protected: __thiscall ios::ios(class ios const &)
??0ios@@IAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0ios@@IAE@ABV0@@Z
; protected: __thiscall ios::ios(void)
??0ios@@IAE@XZ ; has WINAPI (@0) = msvcirt.??0ios@@IAE@XZ
; public: __thiscall ios::ios(class streambuf *)
??0ios@@QAE@PAVstreambuf@@@Z ; has WINAPI (@0) = msvcirt.??0ios@@QAE@PAVstreambuf@@@Z
; protected: __thiscall iostream::iostream(class iostream const &)
??0iostream@@IAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0iostream@@IAE@ABV0@@Z
; protected: __thiscall iostream::iostream(void)
??0iostream@@IAE@XZ ; has WINAPI (@0) = msvcirt.??0iostream@@IAE@XZ
; public: __thiscall iostream::iostream(class streambuf *)
??0iostream@@QAE@PAVstreambuf@@@Z ; has WINAPI (@0) = msvcirt.??0iostream@@QAE@PAVstreambuf@@@Z
; protected: __thiscall istream::istream(class istream const &)
??0istream@@IAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0istream@@IAE@ABV0@@Z
; protected: __thiscall istream::istream(void)
??0istream@@IAE@XZ ; has WINAPI (@0) = msvcirt.??0istream@@IAE@XZ
; public: __thiscall istream::istream(class streambuf *)
??0istream@@QAE@PAVstreambuf@@@Z ; has WINAPI (@0) = msvcirt.??0istream@@QAE@PAVstreambuf@@@Z
; public: __thiscall istream_withassign::istream_withassign(class istream_withassign const &)
??0istream_withassign@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0istream_withassign@@QAE@ABV0@@Z
; public: __thiscall istream_withassign::istream_withassign(class streambuf *)
??0istream_withassign@@QAE@PAVstreambuf@@@Z ; has WINAPI (@0) = msvcirt.??0istream_withassign@@QAE@PAVstreambuf@@@Z
; public: __thiscall istream_withassign::istream_withassign(void)
??0istream_withassign@@QAE@XZ ; has WINAPI (@0) = msvcirt.??0istream_withassign@@QAE@XZ
; public: __thiscall istrstream::istrstream(class istrstream const &)
??0istrstream@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0istrstream@@QAE@ABV0@@Z
; public: __thiscall istrstream::istrstream(char *)
??0istrstream@@QAE@PAD@Z ; has WINAPI (@0) = msvcirt.??0istrstream@@QAE@PAD@Z
; public: __thiscall istrstream::istrstream(char *,int)
??0istrstream@@QAE@PADH@Z ; has WINAPI (@0) = msvcirt.??0istrstream@@QAE@PADH@Z
; public: __thiscall logic_error::logic_error(char const *const &)
??0logic_error@@QAE@ABQBD@Z ; has WINAPI (@0) = msvcirt.??0logic_error@@QAE@ABQBD@Z
; public: __thiscall logic_error::logic_error(class logic_error const &)
??0logic_error@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0logic_error@@QAE@ABV0@@Z
; public: __thiscall ofstream::ofstream(class ofstream const &)
??0ofstream@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0ofstream@@QAE@ABV0@@Z
; public: __thiscall ofstream::ofstream(int)
??0ofstream@@QAE@H@Z ; has WINAPI (@0) = msvcirt.??0ofstream@@QAE@H@Z
; public: __thiscall ofstream::ofstream(int,char *,int)
??0ofstream@@QAE@HPADH@Z ; has WINAPI (@0) = msvcirt.??0ofstream@@QAE@HPADH@Z
; public: __thiscall ofstream::ofstream(char const *,int,int)
??0ofstream@@QAE@PBDHH@Z ; has WINAPI (@0) = msvcirt.??0ofstream@@QAE@PBDHH@Z
; public: __thiscall ofstream::ofstream(void)
??0ofstream@@QAE@XZ ; has WINAPI (@0) = msvcirt.??0ofstream@@QAE@XZ
; protected: __thiscall ostream::ostream(class ostream const &)
??0ostream@@IAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0ostream@@IAE@ABV0@@Z
; protected: __thiscall ostream::ostream(void)
??0ostream@@IAE@XZ ; has WINAPI (@0) = msvcirt.??0ostream@@IAE@XZ
; public: __thiscall ostream::ostream(class streambuf *)
??0ostream@@QAE@PAVstreambuf@@@Z ; has WINAPI (@0) = msvcirt.??0ostream@@QAE@PAVstreambuf@@@Z
; public: __thiscall ostream_withassign::ostream_withassign(class ostream_withassign const &)
??0ostream_withassign@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0ostream_withassign@@QAE@ABV0@@Z
; public: __thiscall ostream_withassign::ostream_withassign(class streambuf *)
??0ostream_withassign@@QAE@PAVstreambuf@@@Z ; has WINAPI (@0) = msvcirt.??0ostream_withassign@@QAE@PAVstreambuf@@@Z
; public: __thiscall ostream_withassign::ostream_withassign(void)
??0ostream_withassign@@QAE@XZ ; has WINAPI (@0) = msvcirt.??0ostream_withassign@@QAE@XZ
; public: __thiscall ostrstream::ostrstream(class ostrstream const &)
??0ostrstream@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0ostrstream@@QAE@ABV0@@Z
; public: __thiscall ostrstream::ostrstream(char *,int,int)
??0ostrstream@@QAE@PADHH@Z ; has WINAPI (@0) = msvcirt.??0ostrstream@@QAE@PADHH@Z
; public: __thiscall ostrstream::ostrstream(void)
??0ostrstream@@QAE@XZ ; has WINAPI (@0) = msvcirt.??0ostrstream@@QAE@XZ
; public: __thiscall stdiobuf::stdiobuf(class stdiobuf const &)
??0stdiobuf@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0stdiobuf@@QAE@ABV0@@Z
; public: __thiscall stdiobuf::stdiobuf(struct _iobuf *)
??0stdiobuf@@QAE@PAU_iobuf@@@Z ; has WINAPI (@0) = msvcirt.??0stdiobuf@@QAE@PAU_iobuf@@@Z
; public: __thiscall stdiostream::stdiostream(class stdiostream const &)
??0stdiostream@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0stdiostream@@QAE@ABV0@@Z
; public: __thiscall stdiostream::stdiostream(struct _iobuf *)
??0stdiostream@@QAE@PAU_iobuf@@@Z ; has WINAPI (@0) = msvcirt.??0stdiostream@@QAE@PAU_iobuf@@@Z
; protected: __thiscall streambuf::streambuf(char *,int)
??0streambuf@@IAE@PADH@Z ; has WINAPI (@0) = msvcirt.??0streambuf@@IAE@PADH@Z
; protected: __thiscall streambuf::streambuf(void)
??0streambuf@@IAE@XZ ; has WINAPI (@0) = msvcirt.??0streambuf@@IAE@XZ
; public: __thiscall streambuf::streambuf(class streambuf const &)
??0streambuf@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0streambuf@@QAE@ABV0@@Z
; public: __thiscall strstream::strstream(class strstream const &)
??0strstream@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0strstream@@QAE@ABV0@@Z
; public: __thiscall strstream::strstream(char *,int,int)
??0strstream@@QAE@PADHH@Z ; has WINAPI (@0) = msvcirt.??0strstream@@QAE@PADHH@Z
; public: __thiscall strstream::strstream(void)
??0strstream@@QAE@XZ ; has WINAPI (@0) = msvcirt.??0strstream@@QAE@XZ
; public: __thiscall strstreambuf::strstreambuf(class strstreambuf const &)
??0strstreambuf@@QAE@ABV0@@Z ; has WINAPI (@0) = msvcirt.??0strstreambuf@@QAE@ABV0@@Z
; public: __thiscall strstreambuf::strstreambuf(int)
??0strstreambuf@@QAE@H@Z ; has WINAPI (@0) = msvcirt.??0strstreambuf@@QAE@H@Z
; public: __thiscall strstreambuf::strstreambuf(void *(__cdecl *)(long),void(__cdecl *)(void *))
??0strstreambuf@@QAE@P6APAXJ@ZP6AXPAX@Z@Z ; has WINAPI (@0) = msvcirt.??0strstreambuf@@QAE@P6APAXJ@ZP6AXPAX@Z@Z
; public: __thiscall strstreambuf::strstreambuf(char *,int,char *)
??0strstreambuf@@QAE@PADH0@Z ; has WINAPI (@0) = msvcirt.??0strstreambuf@@QAE@PADH0@Z
; public: __thiscall strstreambuf::strstreambuf(void)
??0strstreambuf@@QAE@XZ ; has WINAPI (@0) = msvcirt.??0strstreambuf@@QAE@XZ
; public: __thiscall Iostream_init::~Iostream_init(void)
??1Iostream_init@@QAE@XZ ; has WINAPI (@0) = msvcirt.??1Iostream_init@@QAE@XZ
; public: virtual __thiscall __non_rtti_object::~__non_rtti_object(void)
??1__non_rtti_object@@UAE@XZ ; has WINAPI (@0) = msvcrt.??1__non_rtti_object@@UAE@XZ
; public: virtual __thiscall bad_cast::~bad_cast(void)
??1bad_cast@@UAE@XZ ; has WINAPI (@0) = msvcrt.??1bad_cast@@UAE@XZ
; public: virtual __thiscall bad_typeid::~bad_typeid(void)
??1bad_typeid@@UAE@XZ ; has WINAPI (@0) = msvcrt.??1bad_typeid@@UAE@XZ
; public: virtual __thiscall exception::~exception(void)
??1exception@@UAE@XZ ; has WINAPI (@0) = msvcrt.??1exception@@UAE@XZ
; public: virtual __thiscall filebuf::~filebuf(void)
??1filebuf@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1filebuf@@UAE@XZ
; public: virtual __thiscall fstream::~fstream(void)
??1fstream@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1fstream@@UAE@XZ
; public: virtual __thiscall ifstream::~ifstream(void)
??1ifstream@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1ifstream@@UAE@XZ
; public: virtual __thiscall ios::~ios(void)
??1ios@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1ios@@UAE@XZ
; public: virtual __thiscall iostream::~iostream(void)
??1iostream@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1iostream@@UAE@XZ
; public: virtual __thiscall istream::~istream(void)
??1istream@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1istream@@UAE@XZ
; public: virtual __thiscall istream_withassign::~istream_withassign(void)
??1istream_withassign@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1istream_withassign@@UAE@XZ
; public: virtual __thiscall istrstream::~istrstream(void)
??1istrstream@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1istrstream@@UAE@XZ
; public: virtual __thiscall logic_error::~logic_error(void)
??1logic_error@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1logic_error@@UAE@XZ
; public: virtual __thiscall ofstream::~ofstream(void)
??1ofstream@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1ofstream@@UAE@XZ
; public: virtual __thiscall ostream::~ostream(void)
??1ostream@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1ostream@@UAE@XZ
; public: virtual __thiscall ostream_withassign::~ostream_withassign(void)
??1ostream_withassign@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1ostream_withassign@@UAE@XZ
; public: virtual __thiscall ostrstream::~ostrstream(void)
??1ostrstream@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1ostrstream@@UAE@XZ
; public: virtual __thiscall stdiobuf::~stdiobuf(void)
??1stdiobuf@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1stdiobuf@@UAE@XZ
; public: virtual __thiscall stdiostream::~stdiostream(void)
??1stdiostream@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1stdiostream@@UAE@XZ
; public: virtual __thiscall streambuf::~streambuf(void)
??1streambuf@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1streambuf@@UAE@XZ
; public: virtual __thiscall strstream::~strstream(void)
??1strstream@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1strstream@@UAE@XZ
; public: virtual __thiscall strstreambuf::~strstreambuf(void)
??1strstreambuf@@UAE@XZ ; has WINAPI (@0) = msvcirt.??1strstreambuf@@UAE@XZ
; public: virtual __thiscall type_info::~type_info(void)
??1type_info@@UAE@XZ ; has WINAPI (@0) = msvcrt.??1type_info@@UAE@XZ
; void *__cdecl operator new(unsigned int)
??2@YAPAXI@Z ; has WINAPI (@0) = msvcrt.??2@YAPAXI@Z
; void __cdecl operator delete(void *)
??3@YAXPAX@Z ; has WINAPI (@0) = msvcrt.??3@YAXPAX@Z
; public: class Iostream_init &__thiscall Iostream_init::operator =(class Iostream_init const &)
??4Iostream_init@@QAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcirt.??4Iostream_init@@QAEAAV0@ABV0@@Z
; public: class __non_rtti_object &__thiscall __non_rtti_object::operator =(class __non_rtti_object const &)
??4__non_rtti_object@@QAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcrt.??4__non_rtti_object@@QAEAAV0@ABV0@@Z
; public: class bad_cast &__thiscall bad_cast::operator =(class bad_cast const &)
??4bad_cast@@QAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcrt.??4bad_cast@@QAEAAV0@ABV0@@Z
; public: class bad_typeid &__thiscall bad_typeid::operator =(class bad_typeid const &)
??4bad_typeid@@QAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcrt.??4bad_typeid@@QAEAAV0@ABV0@@Z
; public: class exception &__thiscall exception::operator =(class exception const &)
??4exception@@QAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcrt.??4exception@@QAEAAV0@ABV0@@Z
; public: class filebuf &__thiscall filebuf::operator =(class filebuf const &)
??4filebuf@@QAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcirt.??4filebuf@@QAEAAV0@ABV0@@Z
; public: class fstream &__thiscall fstream::operator =(class fstream &)
??4fstream@@QAEAAV0@AAV0@@Z ; has WINAPI (@0) = msvcirt.??4fstream@@QAEAAV0@AAV0@@Z
; public: class ifstream &__thiscall ifstream::operator =(class ifstream const &)
??4ifstream@@QAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcirt.??4ifstream@@QAEAAV0@ABV0@@Z
; protected: class ios &__thiscall ios::operator =(class ios const &)
??4ios@@IAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcirt.??4ios@@IAEAAV0@ABV0@@Z
; protected: class iostream &__thiscall iostream::operator =(class iostream &)
??4iostream@@IAEAAV0@AAV0@@Z ; has WINAPI (@0) = msvcirt.??4iostream@@IAEAAV0@AAV0@@Z
; protected: class iostream &__thiscall iostream::operator =(class streambuf *)
??4iostream@@IAEAAV0@PAVstreambuf@@@Z ; has WINAPI (@0) = msvcirt.??4iostream@@IAEAAV0@PAVstreambuf@@@Z
; protected: class istream &__thiscall istream::operator =(class istream const &)
??4istream@@IAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcirt.??4istream@@IAEAAV0@ABV0@@Z
; protected: class istream &__thiscall istream::operator =(class streambuf *)
??4istream@@IAEAAV0@PAVstreambuf@@@Z ; has WINAPI (@0) = msvcirt.??4istream@@IAEAAV0@PAVstreambuf@@@Z
; public: class istream_withassign &__thiscall istream_withassign::operator =(class istream_withassign const &)
??4istream_withassign@@QAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcirt.??4istream_withassign@@QAEAAV0@ABV0@@Z
; public: class istream &__thiscall istream_withassign::operator =(class istream const &)
??4istream_withassign@@QAEAAVistream@@ABV1@@Z ; has WINAPI (@0) = msvcirt.??4istream_withassign@@QAEAAVistream@@ABV1@@Z
; public: class istream &__thiscall istream_withassign::operator =(class streambuf *)
??4istream_withassign@@QAEAAVistream@@PAVstreambuf@@@Z ; has WINAPI (@0) = msvcirt.??4istream_withassign@@QAEAAVistream@@PAVstreambuf@@@Z
; public: class istrstream &__thiscall istrstream::operator =(class istrstream const &)
??4istrstream@@QAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcirt.??4istrstream@@QAEAAV0@ABV0@@Z
; public: class logic_error &__thiscall logic_error::operator =(class logic_error const &)
??4logic_error@@QAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcirt.??4logic_error@@QAEAAV0@ABV0@@Z
; public: class ofstream &__thiscall ofstream::operator =(class ofstream const &)
??4ofstream@@QAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcirt.??4ofstream@@QAEAAV0@ABV0@@Z
; protected: class ostream &__thiscall ostream::operator =(class ostream const &)
??4ostream@@IAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcirt.??4ostream@@IAEAAV0@ABV0@@Z
; protected: class ostream &__thiscall ostream::operator =(class streambuf *)
??4ostream@@IAEAAV0@PAVstreambuf@@@Z ; has WINAPI (@0) = msvcirt.??4ostream@@IAEAAV0@PAVstreambuf@@@Z
; public: class ostream_withassign &__thiscall ostream_withassign::operator =(class ostream_withassign const &)
??4ostream_withassign@@QAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcirt.??4ostream_withassign@@QAEAAV0@ABV0@@Z
; public: class ostream &__thiscall ostream_withassign::operator =(class ostream const &)
??4ostream_withassign@@QAEAAVostream@@ABV1@@Z ; has WINAPI (@0) = msvcirt.??4ostream_withassign@@QAEAAVostream@@ABV1@@Z
; public: class ostream &__thiscall ostream_withassign::operator =(class streambuf *)
??4ostream_withassign@@QAEAAVostream@@PAVstreambuf@@@Z ; has WINAPI (@0) = msvcirt.??4ostream_withassign@@QAEAAVostream@@PAVstreambuf@@@Z
; public: class ostrstream &__thiscall ostrstream::operator =(class ostrstream const &)
??4ostrstream@@QAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcirt.??4ostrstream@@QAEAAV0@ABV0@@Z
; public: class stdiobuf &__thiscall stdiobuf::operator =(class stdiobuf const &)
??4stdiobuf@@QAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcirt.??4stdiobuf@@QAEAAV0@ABV0@@Z
; public: class stdiostream &__thiscall stdiostream::operator =(class stdiostream &)
??4stdiostream@@QAEAAV0@AAV0@@Z ; has WINAPI (@0) = msvcirt.??4stdiostream@@QAEAAV0@AAV0@@Z
; public: class streambuf &__thiscall streambuf::operator =(class streambuf const &)
??4streambuf@@QAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcirt.??4streambuf@@QAEAAV0@ABV0@@Z
; public: class strstream &__thiscall strstream::operator =(class strstream &)
??4strstream@@QAEAAV0@AAV0@@Z ; has WINAPI (@0) = msvcirt.??4strstream@@QAEAAV0@AAV0@@Z
; public: class strstreambuf &__thiscall strstreambuf::operator =(class strstreambuf const &)
??4strstreambuf@@QAEAAV0@ABV0@@Z ; has WINAPI (@0) = msvcirt.??4strstreambuf@@QAEAAV0@ABV0@@Z
; public: class istream &__thiscall istream::operator >>(signed char &)
??5istream@@QAEAAV0@AAC@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@AAC@Z
; public: class istream &__thiscall istream::operator >>(char &)
??5istream@@QAEAAV0@AAD@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@AAD@Z
; public: class istream &__thiscall istream::operator >>(unsigned char &)
??5istream@@QAEAAV0@AAE@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@AAE@Z
; public: class istream &__thiscall istream::operator >>(short &)
??5istream@@QAEAAV0@AAF@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@AAF@Z
; public: class istream &__thiscall istream::operator >>(unsigned short &)
??5istream@@QAEAAV0@AAG@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@AAG@Z
; public: class istream &__thiscall istream::operator >>(int &)
??5istream@@QAEAAV0@AAH@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@AAH@Z
; public: class istream &__thiscall istream::operator >>(unsigned int &)
??5istream@@QAEAAV0@AAI@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@AAI@Z
; public: class istream &__thiscall istream::operator >>(long &)
??5istream@@QAEAAV0@AAJ@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@AAJ@Z
; public: class istream &__thiscall istream::operator >>(unsigned long &)
??5istream@@QAEAAV0@AAK@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@AAK@Z
; public: class istream &__thiscall istream::operator >>(float &)
??5istream@@QAEAAV0@AAM@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@AAM@Z
; public: class istream &__thiscall istream::operator >>(double &)
??5istream@@QAEAAV0@AAN@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@AAN@Z
; public: class istream &__thiscall istream::operator >>(long double &)
??5istream@@QAEAAV0@AAO@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@AAO@Z
; public: class istream &__thiscall istream::operator >>(class istream &(__cdecl *)(class istream &))
??5istream@@QAEAAV0@P6AAAV0@AAV0@@Z@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@P6AAAV0@AAV0@@Z@Z
; public: class istream &__thiscall istream::operator >>(class ios &(__cdecl *)(class ios &))
??5istream@@QAEAAV0@P6AAAVios@@AAV1@@Z@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@P6AAAVios@@AAV1@@Z@Z
; public: class istream &__thiscall istream::operator >>(signed char *)
??5istream@@QAEAAV0@PAC@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@PAC@Z
; public: class istream &__thiscall istream::operator >>(char *)
??5istream@@QAEAAV0@PAD@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@PAD@Z
; public: class istream &__thiscall istream::operator >>(unsigned char *)
??5istream@@QAEAAV0@PAE@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@PAE@Z
; public: class istream &__thiscall istream::operator >>(class streambuf *)
??5istream@@QAEAAV0@PAVstreambuf@@@Z ; has WINAPI (@0) = msvcirt.??5istream@@QAEAAV0@PAVstreambuf@@@Z
; public: class ostream &__thiscall ostream::operator <<(signed char)
??6ostream@@QAEAAV0@C@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@C@Z
; public: class ostream &__thiscall ostream::operator <<(char)
??6ostream@@QAEAAV0@D@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@D@Z
; public: class ostream &__thiscall ostream::operator <<(unsigned char)
??6ostream@@QAEAAV0@E@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@E@Z
; public: class ostream &__thiscall ostream::operator <<(short)
??6ostream@@QAEAAV0@F@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@F@Z
; public: class ostream &__thiscall ostream::operator <<(unsigned short)
??6ostream@@QAEAAV0@G@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@G@Z
; public: class ostream &__thiscall ostream::operator <<(int)
??6ostream@@QAEAAV0@H@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@H@Z
; public: class ostream &__thiscall ostream::operator <<(unsigned int)
??6ostream@@QAEAAV0@I@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@I@Z
; public: class ostream &__thiscall ostream::operator <<(long)
??6ostream@@QAEAAV0@J@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@J@Z
; public: class ostream &__thiscall ostream::operator <<(unsigned long)
??6ostream@@QAEAAV0@K@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@K@Z
; public: class ostream &__thiscall ostream::operator <<(float)
??6ostream@@QAEAAV0@M@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@M@Z
; public: class ostream &__thiscall ostream::operator <<(double)
??6ostream@@QAEAAV0@N@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@N@Z
; public: class ostream &__thiscall ostream::operator <<(long double)
??6ostream@@QAEAAV0@O@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@O@Z
; public: class ostream &__thiscall ostream::operator <<(class ostream &(__cdecl *)(class ostream &))
??6ostream@@QAEAAV0@P6AAAV0@AAV0@@Z@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@P6AAAV0@AAV0@@Z@Z
; public: class ostream &__thiscall ostream::operator <<(class ios &(__cdecl *)(class ios &))
??6ostream@@QAEAAV0@P6AAAVios@@AAV1@@Z@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@P6AAAVios@@AAV1@@Z@Z
; public: class ostream &__thiscall ostream::operator <<(class streambuf *)
??6ostream@@QAEAAV0@PAVstreambuf@@@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@PAVstreambuf@@@Z
; public: class ostream &__thiscall ostream::operator <<(signed char const *)
??6ostream@@QAEAAV0@PBC@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@PBC@Z
; public: class ostream &__thiscall ostream::operator <<(char const *)
??6ostream@@QAEAAV0@PBD@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@PBD@Z
; public: class ostream &__thiscall ostream::operator <<(unsigned char const *)
??6ostream@@QAEAAV0@PBE@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@PBE@Z
; public: class ostream &__thiscall ostream::operator <<(void const *)
??6ostream@@QAEAAV0@PBX@Z ; has WINAPI (@0) = msvcirt.??6ostream@@QAEAAV0@PBX@Z
; public: int __thiscall ios::operator !(void)const 
??7ios@@QBEHXZ ; has WINAPI (@0) = msvcirt.??7ios@@QBEHXZ
; public: int __thiscall type_info::operator ==(class type_info const &)const 
??8type_info@@QBEHABV0@@Z ; has WINAPI (@0) = msvcrt.??8type_info@@QBEHABV0@@Z
; public: int __thiscall type_info::operator !=(class type_info const &)const 
??9type_info@@QBEHABV0@@Z ; has WINAPI (@0) = msvcrt.??9type_info@@QBEHABV0@@Z
; public: void __thiscall ios::operator void *(...)const throw()
??Bios@@QBEPAXXZ ; has WINAPI (@0) = msvcirt.??Bios@@QBEPAXXZ
; const __non_rtti_object::$vftable
??_7__non_rtti_object@@6B@ = msvcrt.??_7__non_rtti_object@@6B@ DATA
; const bad_cast::$vftable
??_7bad_cast@@6B@ = msvcrt.??_7bad_cast@@6B@ DATA
; const bad_typeid::$vftable
??_7bad_typeid@@6B@ = msvcrt.??_7bad_typeid@@6B@ DATA
; const exception::$vftable
??_7exception@@6B@ = msvcrt.??_7exception@@6B@ DATA
; const filebuf::$vftable
??_7filebuf@@6B@ = msvcirt.??_7filebuf@@6B@ DATA
; const fstream::$vftable
??_7fstream@@6B@ = msvcirt.??_7fstream@@6B@ DATA
; const ifstream::$vftable
??_7ifstream@@6B@ = msvcirt.??_7ifstream@@6B@ DATA
; const ios::$vftable
??_7ios@@6B@ = msvcirt.??_7ios@@6B@ DATA
; const iostream::$vftable
??_7iostream@@6B@ = msvcirt.??_7iostream@@6B@ DATA
; const istream::$vftable
??_7istream@@6B@ = msvcirt.??_7istream@@6B@ DATA
; const istream_withassign::$vftable
??_7istream_withassign@@6B@ = msvcirt.??_7istream_withassign@@6B@ DATA
; const istrstream::$vftable
??_7istrstream@@6B@ = msvcirt.??_7istrstream@@6B@ DATA
; const logic_error::$vftable
??_7logic_error@@6B@ = msvcirt.??_7logic_error@@6B@ DATA
; const ofstream::$vftable
??_7ofstream@@6B@ = msvcirt.??_7ofstream@@6B@ DATA
; const ostream::$vftable
??_7ostream@@6B@ = msvcirt.??_7ostream@@6B@ DATA
; const ostream_withassign::$vftable
??_7ostream_withassign@@6B@ = msvcirt.??_7ostream_withassign@@6B@ DATA
; const ostrstream::$vftable
??_7ostrstream@@6B@ = msvcirt.??_7ostrstream@@6B@ DATA
; const stdiobuf::$vftable
??_7stdiobuf@@6B@ = msvcirt.??_7stdiobuf@@6B@ DATA
; const stdiostream::$vftable
??_7stdiostream@@6B@ = msvcirt.??_7stdiostream@@6B@ DATA
; const streambuf::$vftable
??_7streambuf@@6B@ = msvcirt.??_7streambuf@@6B@ DATA
; const strstream::$vftable
??_7strstream@@6B@ = msvcirt.??_7strstream@@6B@ DATA
; const strstreambuf::$vftable
??_7strstreambuf@@6B@ = msvcirt.??_7strstreambuf@@6B@ DATA
; const fstream::$vbtable {for 'istream' }
??_8fstream@@7Bistream@@@ ; has WINAPI (@0) = msvcirt.??_8fstream@@7Bistream@@@
; const fstream::$vbtable {for 'ostream' }
??_8fstream@@7Bostream@@@ ; has WINAPI (@0) = msvcirt.??_8fstream@@7Bostream@@@
; const ifstream::$vbtable
??_8ifstream@@7B@ ; has WINAPI (@0) = msvcirt.??_8ifstream@@7B@
; const iostream::$vbtable {for 'istream' }
??_8iostream@@7Bistream@@@ ; has WINAPI (@0) = msvcirt.??_8iostream@@7Bistream@@@
; const iostream::$vbtable {for 'ostream' }
??_8iostream@@7Bostream@@@ ; has WINAPI (@0) = msvcirt.??_8iostream@@7Bostream@@@
; const istream::$vbtable
??_8istream@@7B@ ; has WINAPI (@0) = msvcirt.??_8istream@@7B@
; const istream_withassign::$vbtable
??_8istream_withassign@@7B@ ; has WINAPI (@0) = msvcirt.??_8istream_withassign@@7B@
; const istrstream::$vbtable
??_8istrstream@@7B@ ; has WINAPI (@0) = msvcirt.??_8istrstream@@7B@
; const ofstream::$vbtable
??_8ofstream@@7B@ ; has WINAPI (@0) = msvcirt.??_8ofstream@@7B@
; const ostream::$vbtable
??_8ostream@@7B@ ; has WINAPI (@0) = msvcirt.??_8ostream@@7B@
; const ostream_withassign::$vbtable
??_8ostream_withassign@@7B@ ; has WINAPI (@0) = msvcirt.??_8ostream_withassign@@7B@
; const ostrstream::$vbtable
??_8ostrstream@@7B@ ; has WINAPI (@0) = msvcirt.??_8ostrstream@@7B@
; const stdiostream::$vbtable {for 'istream' }
??_8stdiostream@@7Bistream@@@ ; has WINAPI (@0) = msvcirt.??_8stdiostream@@7Bistream@@@
; const stdiostream::$vbtable {for 'ostream' }
??_8stdiostream@@7Bostream@@@ ; has WINAPI (@0) = msvcirt.??_8stdiostream@@7Bostream@@@
; const strstream::$vbtable {for 'istream' }
??_8strstream@@7Bistream@@@ ; has WINAPI (@0) = msvcirt.??_8strstream@@7Bistream@@@
; const strstream::$vbtable {for 'ostream' }
??_8strstream@@7Bostream@@@ ; has WINAPI (@0) = msvcirt.??_8strstream@@7Bostream@@@
; public: void __thiscall fstream::vbase_destructor(void)
??_Dfstream@@QAEXXZ ; has WINAPI (@0) = msvcirt.??_Dfstream@@QAEXXZ
; public: void __thiscall ifstream::vbase_destructor(void)
??_Difstream@@QAEXXZ ; has WINAPI (@0) = msvcirt.??_Difstream@@QAEXXZ
; public: void __thiscall iostream::vbase_destructor(void)
??_Diostream@@QAEXXZ ; has WINAPI (@0) = msvcirt.??_Diostream@@QAEXXZ
; public: void __thiscall istream::vbase_destructor(void)
??_Distream@@QAEXXZ ; has WINAPI (@0) = msvcirt.??_Distream@@QAEXXZ
; public: void __thiscall istream_withassign::vbase_destructor(void)
??_Distream_withassign@@QAEXXZ ; has WINAPI (@0) = msvcirt.??_Distream_withassign@@QAEXXZ
; public: void __thiscall istrstream::vbase_destructor(void)
??_Distrstream@@QAEXXZ ; has WINAPI (@0) = msvcirt.??_Distrstream@@QAEXXZ
; public: void __thiscall ofstream::vbase_destructor(void)
??_Dofstream@@QAEXXZ ; has WINAPI (@0) = msvcirt.??_Dofstream@@QAEXXZ
; public: void __thiscall ostream::vbase_destructor(void)
??_Dostream@@QAEXXZ ; has WINAPI (@0) = msvcirt.??_Dostream@@QAEXXZ
; public: void __thiscall ostream_withassign::vbase_destructor(void)
??_Dostream_withassign@@QAEXXZ ; has WINAPI (@0) = msvcirt.??_Dostream_withassign@@QAEXXZ
; public: void __thiscall ostrstream::vbase_destructor(void)
??_Dostrstream@@QAEXXZ ; has WINAPI (@0) = msvcirt.??_Dostrstream@@QAEXXZ
; public: void __thiscall stdiostream::vbase_destructor(void)
??_Dstdiostream@@QAEXXZ ; has WINAPI (@0) = msvcirt.??_Dstdiostream@@QAEXXZ
; public: void __thiscall strstream::vbase_destructor(void)
??_Dstrstream@@QAEXXZ ; has WINAPI (@0) = msvcirt.??_Dstrstream@@QAEXXZ
; public: void *__thiscall Iostream_init::__vecDelDtor(unsigned int)
??_EIostream_init@@QAEPAXI@Z = msvcirt.??_EIostream_init@@QAEPAXI@Z ; Check!!! forwards to msvcirt.??_EIostream_init@@QAEPAXI@Z
; public: virtual void *__thiscall __non_rtti_object::__vecDelDtor(unsigned int)
??_E__non_rtti_object@@UAEPAXI@Z ; has WINAPI (@0) = msvcrt.??_E__non_rtti_object@@UAEPAXI@Z
; public: virtual void *__thiscall bad_cast::__vecDelDtor(unsigned int)
??_Ebad_cast@@UAEPAXI@Z ; has WINAPI (@0) = msvcrt.??_Ebad_cast@@UAEPAXI@Z
; public: virtual void *__thiscall bad_typeid::__vecDelDtor(unsigned int)
??_Ebad_typeid@@UAEPAXI@Z ; has WINAPI (@0) = msvcrt.??_Ebad_typeid@@UAEPAXI@Z
; public: virtual void *__thiscall exception::__vecDelDtor(unsigned int)
??_Eexception@@UAEPAXI@Z ; has WINAPI (@0) = msvcrt.??_Eexception@@UAEPAXI@Z
; public: virtual void *__thiscall filebuf::__vecDelDtor(unsigned int)
??_Efilebuf@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Efilebuf@@UAEPAXI@Z
; public: virtual void *__thiscall fstream::__vecDelDtor(unsigned int)
??_Efstream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Efstream@@UAEPAXI@Z
; public: virtual void *__thiscall ifstream::__vecDelDtor(unsigned int)
??_Eifstream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Eifstream@@UAEPAXI@Z
; public: virtual void *__thiscall ios::__vecDelDtor(unsigned int)
??_Eios@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Eios@@UAEPAXI@Z
; public: virtual void *__thiscall iostream::__vecDelDtor(unsigned int)
??_Eiostream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Eiostream@@UAEPAXI@Z
; public: virtual void *__thiscall istream::__vecDelDtor(unsigned int)
??_Eistream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Eistream@@UAEPAXI@Z
; public: virtual void *__thiscall istream_withassign::__vecDelDtor(unsigned int)
??_Eistream_withassign@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Eistream_withassign@@UAEPAXI@Z
; public: virtual void *__thiscall istrstream::__vecDelDtor(unsigned int)
??_Eistrstream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Eistrstream@@UAEPAXI@Z
; public: virtual void *__thiscall logic_error::__vecDelDtor(unsigned int)
??_Elogic_error@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Elogic_error@@UAEPAXI@Z
; public: virtual void *__thiscall ofstream::__vecDelDtor(unsigned int)
??_Eofstream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Eofstream@@UAEPAXI@Z
; public: virtual void *__thiscall ostream::__vecDelDtor(unsigned int)
??_Eostream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Eostream@@UAEPAXI@Z
; public: virtual void *__thiscall ostream_withassign::__vecDelDtor(unsigned int)
??_Eostream_withassign@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Eostream_withassign@@UAEPAXI@Z
; public: virtual void *__thiscall ostrstream::__vecDelDtor(unsigned int)
??_Eostrstream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Eostrstream@@UAEPAXI@Z
; public: virtual void *__thiscall stdiobuf::__vecDelDtor(unsigned int)
??_Estdiobuf@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Estdiobuf@@UAEPAXI@Z
; public: virtual void *__thiscall stdiostream::__vecDelDtor(unsigned int)
??_Estdiostream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Estdiostream@@UAEPAXI@Z
; public: virtual void *__thiscall streambuf::__vecDelDtor(unsigned int)
??_Estreambuf@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Estreambuf@@UAEPAXI@Z
; public: virtual void *__thiscall strstream::__vecDelDtor(unsigned int)
??_Estrstream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Estrstream@@UAEPAXI@Z
; public: virtual void *__thiscall strstreambuf::__vecDelDtor(unsigned int)
??_Estrstreambuf@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Estrstreambuf@@UAEPAXI@Z
; public: void *__thiscall Iostream_init::__delDtor(unsigned int)
??_GIostream_init@@QAEPAXI@Z = msvcirt.??_GIostream_init@@QAEPAXI@Z ; Check!!! forwards to msvcirt.??_GIostream_init@@QAEPAXI@Z
; public: virtual void *__thiscall __non_rtti_object::__delDtor(unsigned int)
??_G__non_rtti_object@@UAEPAXI@Z ; has WINAPI (@0) = msvcrt.??_G__non_rtti_object@@UAEPAXI@Z
; public: virtual void *__thiscall bad_cast::__delDtor(unsigned int)
??_Gbad_cast@@UAEPAXI@Z ; has WINAPI (@0) = msvcrt.??_Gbad_cast@@UAEPAXI@Z
; public: virtual void *__thiscall bad_typeid::__delDtor(unsigned int)
??_Gbad_typeid@@UAEPAXI@Z ; has WINAPI (@0) = msvcrt.??_Gbad_typeid@@UAEPAXI@Z
; public: virtual void *__thiscall exception::__delDtor(unsigned int)
??_Gexception@@UAEPAXI@Z ; has WINAPI (@0) = msvcrt.??_Gexception@@UAEPAXI@Z
; public: virtual void *__thiscall filebuf::__delDtor(unsigned int)
??_Gfilebuf@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Gfilebuf@@UAEPAXI@Z
; public: virtual void *__thiscall fstream::__delDtor(unsigned int)
??_Gfstream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Gfstream@@UAEPAXI@Z
; public: virtual void *__thiscall ifstream::__delDtor(unsigned int)
??_Gifstream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Gifstream@@UAEPAXI@Z
; public: virtual void *__thiscall ios::__delDtor(unsigned int)
??_Gios@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Gios@@UAEPAXI@Z
; public: virtual void *__thiscall iostream::__delDtor(unsigned int)
??_Giostream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Giostream@@UAEPAXI@Z
; public: virtual void *__thiscall istream::__delDtor(unsigned int)
??_Gistream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Gistream@@UAEPAXI@Z
; public: virtual void *__thiscall istream_withassign::__delDtor(unsigned int)
??_Gistream_withassign@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Gistream_withassign@@UAEPAXI@Z
; public: virtual void *__thiscall istrstream::__delDtor(unsigned int)
??_Gistrstream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Gistrstream@@UAEPAXI@Z
; public: virtual void *__thiscall logic_error::__delDtor(unsigned int)
??_Glogic_error@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Glogic_error@@UAEPAXI@Z
; public: virtual void *__thiscall ofstream::__delDtor(unsigned int)
??_Gofstream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Gofstream@@UAEPAXI@Z
; public: virtual void *__thiscall ostream::__delDtor(unsigned int)
??_Gostream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Gostream@@UAEPAXI@Z
; public: virtual void *__thiscall ostream_withassign::__delDtor(unsigned int)
??_Gostream_withassign@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Gostream_withassign@@UAEPAXI@Z
; public: virtual void *__thiscall ostrstream::__delDtor(unsigned int)
??_Gostrstream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Gostrstream@@UAEPAXI@Z
; public: virtual void *__thiscall stdiobuf::__delDtor(unsigned int)
??_Gstdiobuf@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Gstdiobuf@@UAEPAXI@Z
; public: virtual void *__thiscall stdiostream::__delDtor(unsigned int)
??_Gstdiostream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Gstdiostream@@UAEPAXI@Z
; public: virtual void *__thiscall streambuf::__delDtor(unsigned int)
??_Gstreambuf@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Gstreambuf@@UAEPAXI@Z
; public: virtual void *__thiscall strstream::__delDtor(unsigned int)
??_Gstrstream@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Gstrstream@@UAEPAXI@Z
; public: virtual void *__thiscall strstreambuf::__delDtor(unsigned int)
??_Gstrstreambuf@@UAEPAXI@Z ; has WINAPI (@0) = msvcirt.??_Gstrstreambuf@@UAEPAXI@Z
; int(__cdecl *)(unsigned int)__cdecl _query_new_handler(void)
?_query_new_handler@@YAP6AHI@ZXZ ; has WINAPI (@0) = msvcrt.?_query_new_handler@@YAP6AHI@ZXZ
; int __cdecl _query_new_mode(void)
?_query_new_mode@@YAHXZ ; has WINAPI (@0) = msvcrt.?_query_new_mode@@YAHXZ
; int(__cdecl *)(unsigned int)__cdecl _set_new_handler(int(__cdecl *)(unsigned int))
?_set_new_handler@@YAP6AHI@ZP6AHI@Z@Z ; has WINAPI (@0) = msvcrt.?_set_new_handler@@YAP6AHI@ZP6AHI@Z@Z
; int __cdecl _set_new_mode(int)
?_set_new_mode@@YAHH@Z ; has WINAPI (@0) = msvcrt.?_set_new_mode@@YAHH@Z
; void(__cdecl *)(unsigned int,struct _EXCEPTION_POINTERS *)__cdecl _set_se_translator(void(__cdecl *)(unsigned int,struct _EXCEPTION_POINTERS *))
?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z ; has WINAPI (@0) = msvcrt.?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z
; public: static long const ios::adjustfield
?adjustfield@ios@@2JB ; has WINAPI (@0) = msvcirt.?adjustfield@ios@@2JB
; protected: int __thiscall streambuf::allocate(void)
?allocate@streambuf@@IAEHXZ ; has WINAPI (@0) = msvcirt.?allocate@streambuf@@IAEHXZ
; public: class filebuf *__thiscall filebuf::attach(int)
?attach@filebuf@@QAEPAV1@H@Z ; has WINAPI (@0) = msvcirt.?attach@filebuf@@QAEPAV1@H@Z
; public: void __thiscall fstream::attach(int)
?attach@fstream@@QAEXH@Z ; has WINAPI (@0) = msvcirt.?attach@fstream@@QAEXH@Z
; public: void __thiscall ifstream::attach(int)
?attach@ifstream@@QAEXH@Z ; has WINAPI (@0) = msvcirt.?attach@ifstream@@QAEXH@Z
; public: void __thiscall ofstream::attach(int)
?attach@ofstream@@QAEXH@Z ; has WINAPI (@0) = msvcirt.?attach@ofstream@@QAEXH@Z
; public: int __thiscall ios::bad(void)const 
?bad@ios@@QBEHXZ ; has WINAPI (@0) = msvcirt.?bad@ios@@QBEHXZ
; protected: char *__thiscall streambuf::base(void)const 
?base@streambuf@@IBEPADXZ ; has WINAPI (@0) = msvcirt.?base@streambuf@@IBEPADXZ
; public: static long const ios::basefield
?basefield@ios@@2JB ; has WINAPI (@0) = msvcirt.?basefield@ios@@2JB
; public: int __thiscall type_info::before(class type_info const &)const 
?before@type_info@@QBEHABV1@@Z ; has WINAPI (@0) = msvcrt.?before@type_info@@QBEHABV1@@Z
; public: static int const filebuf::binary
?binary@filebuf@@2HB ; has WINAPI (@0) = msvcirt.?binary@filebuf@@2HB
; public: static long __cdecl ios::bitalloc(void)
?bitalloc@ios@@SAJXZ ; has WINAPI (@0) = msvcirt.?bitalloc@ios@@SAJXZ
; protected: int __thiscall streambuf::blen(void)const 
?blen@streambuf@@IBEHXZ ; has WINAPI (@0) = msvcirt.?blen@streambuf@@IBEHXZ
; class ostream_withassign cerr
?cerr@@3Vostream_withassign@@A = msvcirt.?cerr@@3Vostream_withassign@@A DATA
; class istream_withassign cin
?cin@@3Vistream_withassign@@A = msvcirt.?cin@@3Vistream_withassign@@A DATA
; public: void __thiscall ios::clear(int)
?clear@ios@@QAEXH@Z ; has WINAPI (@0) = msvcirt.?clear@ios@@QAEXH@Z
; class ostream_withassign clog
?clog@@3Vostream_withassign@@A = msvcirt.?clog@@3Vostream_withassign@@A DATA
; public: class filebuf *__thiscall filebuf::close(void)
?close@filebuf@@QAEPAV1@XZ ; has WINAPI (@0) = msvcirt.?close@filebuf@@QAEPAV1@XZ
; public: void __thiscall fstream::close(void)
?close@fstream@@QAEXXZ ; has WINAPI (@0) = msvcirt.?close@fstream@@QAEXXZ
; public: void __thiscall ifstream::close(void)
?close@ifstream@@QAEXXZ ; has WINAPI (@0) = msvcirt.?close@ifstream@@QAEXXZ
; public: void __thiscall ofstream::close(void)
?close@ofstream@@QAEXXZ ; has WINAPI (@0) = msvcirt.?close@ofstream@@QAEXXZ
; public: void __cdecl ios::clrlock(void)
?clrlock@ios@@QAAXXZ ; has WINAPI (@0) = msvcirt.?clrlock@ios@@QAAXXZ
; public: void __thiscall streambuf::clrlock(void)
?clrlock@streambuf@@QAEXXZ ; has WINAPI (@0) = msvcirt.?clrlock@streambuf@@QAEXXZ
; class ostream_withassign cout
?cout@@3Vostream_withassign@@A = msvcirt.?cout@@3Vostream_withassign@@A DATA
; public: void __thiscall streambuf::dbp(void)
?dbp@streambuf@@QAEXXZ ; has WINAPI (@0) = msvcirt.?dbp@streambuf@@QAEXXZ
; class ios &__cdecl dec(class ios &)
?dec@@YAAAVios@@AAV1@@Z ; has WINAPI (@0) = msvcirt.?dec@@YAAAVios@@AAV1@@Z
; public: void __thiscall ios::delbuf(int)
?delbuf@ios@@QAEXH@Z ; has WINAPI (@0) = msvcirt.?delbuf@ios@@QAEXH@Z
; public: int __thiscall ios::delbuf(void)const 
?delbuf@ios@@QBEHXZ ; has WINAPI (@0) = msvcirt.?delbuf@ios@@QBEHXZ
; protected: virtual int __thiscall streambuf::doallocate(void)
?doallocate@streambuf@@MAEHXZ ; has WINAPI (@0) = msvcirt.?doallocate@streambuf@@MAEHXZ
; protected: virtual int __thiscall strstreambuf::doallocate(void)
?doallocate@strstreambuf@@MAEHXZ ; has WINAPI (@0) = msvcirt.?doallocate@strstreambuf@@MAEHXZ
; public: void __thiscall istream::eatwhite(void)
?eatwhite@istream@@QAEXXZ ; has WINAPI (@0) = msvcirt.?eatwhite@istream@@QAEXXZ
; protected: char *__thiscall streambuf::eback(void)const 
?eback@streambuf@@IBEPADXZ ; has WINAPI (@0) = msvcirt.?eback@streambuf@@IBEPADXZ
; protected: char *__thiscall streambuf::ebuf(void)const 
?ebuf@streambuf@@IBEPADXZ ; has WINAPI (@0) = msvcirt.?ebuf@streambuf@@IBEPADXZ
; protected: char *__thiscall streambuf::egptr(void)const 
?egptr@streambuf@@IBEPADXZ ; has WINAPI (@0) = msvcirt.?egptr@streambuf@@IBEPADXZ
; class ostream &__cdecl endl(class ostream &)
?endl@@YAAAVostream@@AAV1@@Z ; has WINAPI (@0) = msvcirt.?endl@@YAAAVostream@@AAV1@@Z
; class ostream &__cdecl ends(class ostream &)
?ends@@YAAAVostream@@AAV1@@Z ; has WINAPI (@0) = msvcirt.?ends@@YAAAVostream@@AAV1@@Z
; public: int __thiscall ios::eof(void)const 
?eof@ios@@QBEHXZ ; has WINAPI (@0) = msvcirt.?eof@ios@@QBEHXZ
; protected: char *__thiscall streambuf::epptr(void)const 
?epptr@streambuf@@IBEPADXZ ; has WINAPI (@0) = msvcirt.?epptr@streambuf@@IBEPADXZ
; private: static int ios::fLockcInit
?fLockcInit@ios@@0HA = msvcirt.?fLockcInit@ios@@0HA DATA
; public: int __thiscall ios::fail(void)const 
?fail@ios@@QBEHXZ ; has WINAPI (@0) = msvcirt.?fail@ios@@QBEHXZ
; public: int __thiscall filebuf::fd(void)const 
?fd@filebuf@@QBEHXZ ; has WINAPI (@0) = msvcirt.?fd@filebuf@@QBEHXZ
; public: int __thiscall fstream::fd(void)const 
?fd@fstream@@QBEHXZ ; has WINAPI (@0) = msvcirt.?fd@fstream@@QBEHXZ
; public: int __thiscall ifstream::fd(void)const 
?fd@ifstream@@QBEHXZ ; has WINAPI (@0) = msvcirt.?fd@ifstream@@QBEHXZ
; public: int __thiscall ofstream::fd(void)const 
?fd@ofstream@@QBEHXZ ; has WINAPI (@0) = msvcirt.?fd@ofstream@@QBEHXZ
; public: char __thiscall ios::fill(char)
?fill@ios@@QAEDD@Z ; has WINAPI (@0) = msvcirt.?fill@ios@@QAEDD@Z
; public: char __thiscall ios::fill(void)const 
?fill@ios@@QBEDXZ ; has WINAPI (@0) = msvcirt.?fill@ios@@QBEDXZ
; public: long __thiscall ios::flags(long)
?flags@ios@@QAEJJ@Z ; has WINAPI (@0) = msvcirt.?flags@ios@@QAEJJ@Z
; public: long __thiscall ios::flags(void)const 
?flags@ios@@QBEJXZ ; has WINAPI (@0) = msvcirt.?flags@ios@@QBEJXZ
; public: static long const ios::floatfield
?floatfield@ios@@2JB ; has WINAPI (@0) = msvcirt.?floatfield@ios@@2JB
; class ostream &__cdecl flush(class ostream &)
?flush@@YAAAVostream@@AAV1@@Z ; has WINAPI (@0) = msvcirt.?flush@@YAAAVostream@@AAV1@@Z
; public: class ostream &__thiscall ostream::flush(void)
?flush@ostream@@QAEAAV1@XZ ; has WINAPI (@0) = msvcirt.?flush@ostream@@QAEAAV1@XZ
; public: void __thiscall strstreambuf::freeze(int)
?freeze@strstreambuf@@QAEXH@Z ; has WINAPI (@0) = msvcirt.?freeze@strstreambuf@@QAEXH@Z
; protected: void __thiscall streambuf::gbump(int)
?gbump@streambuf@@IAEXH@Z ; has WINAPI (@0) = msvcirt.?gbump@streambuf@@IAEXH@Z
; public: int __thiscall istream::gcount(void)const 
?gcount@istream@@QBEHXZ ; has WINAPI (@0) = msvcirt.?gcount@istream@@QBEHXZ
; protected: class istream &__thiscall istream::get(char *,int,int)
?get@istream@@IAEAAV1@PADHH@Z ; has WINAPI (@0) = msvcirt.?get@istream@@IAEAAV1@PADHH@Z
; public: class istream &__thiscall istream::get(signed char &)
?get@istream@@QAEAAV1@AAC@Z ; has WINAPI (@0) = msvcirt.?get@istream@@QAEAAV1@AAC@Z
; public: class istream &__thiscall istream::get(char &)
?get@istream@@QAEAAV1@AAD@Z ; has WINAPI (@0) = msvcirt.?get@istream@@QAEAAV1@AAD@Z
; public: class istream &__thiscall istream::get(unsigned char &)
?get@istream@@QAEAAV1@AAE@Z ; has WINAPI (@0) = msvcirt.?get@istream@@QAEAAV1@AAE@Z
; public: class istream &__thiscall istream::get(class streambuf &,char)
?get@istream@@QAEAAV1@AAVstreambuf@@D@Z ; has WINAPI (@0) = msvcirt.?get@istream@@QAEAAV1@AAVstreambuf@@D@Z
; public: class istream &__thiscall istream::get(signed char *,int,char)
?get@istream@@QAEAAV1@PACHD@Z ; has WINAPI (@0) = msvcirt.?get@istream@@QAEAAV1@PACHD@Z
; public: class istream &__thiscall istream::get(char *,int,char)
?get@istream@@QAEAAV1@PADHD@Z ; has WINAPI (@0) = msvcirt.?get@istream@@QAEAAV1@PADHD@Z
; public: class istream &__thiscall istream::get(unsigned char *,int,char)
?get@istream@@QAEAAV1@PAEHD@Z ; has WINAPI (@0) = msvcirt.?get@istream@@QAEAAV1@PAEHD@Z
; public: int __thiscall istream::get(void)
?get@istream@@QAEHXZ ; has WINAPI (@0) = msvcirt.?get@istream@@QAEHXZ
; private: int __thiscall istream::getdouble(char *,int)
?getdouble@istream@@AAEHPADH@Z ; has WINAPI (@0) = msvcirt.?getdouble@istream@@AAEHPADH@Z
; private: int __thiscall istream::getint(char *)
?getint@istream@@AAEHPAD@Z ; has WINAPI (@0) = msvcirt.?getint@istream@@AAEHPAD@Z
; public: class istream &__thiscall istream::getline(signed char *,int,char)
?getline@istream@@QAEAAV1@PACHD@Z ; has WINAPI (@0) = msvcirt.?getline@istream@@QAEAAV1@PACHD@Z
; public: class istream &__thiscall istream::getline(char *,int,char)
?getline@istream@@QAEAAV1@PADHD@Z ; has WINAPI (@0) = msvcirt.?getline@istream@@QAEAAV1@PADHD@Z
; public: class istream &__thiscall istream::getline(unsigned char *,int,char)
?getline@istream@@QAEAAV1@PAEHD@Z ; has WINAPI (@0) = msvcirt.?getline@istream@@QAEAAV1@PAEHD@Z
; public: int __thiscall ios::good(void)const 
?good@ios@@QBEHXZ ; has WINAPI (@0) = msvcirt.?good@ios@@QBEHXZ
; protected: char *__thiscall streambuf::gptr(void)const 
?gptr@streambuf@@IBEPADXZ ; has WINAPI (@0) = msvcirt.?gptr@streambuf@@IBEPADXZ
; class ios &__cdecl hex(class ios &)
?hex@@YAAAVios@@AAV1@@Z ; has WINAPI (@0) = msvcirt.?hex@@YAAAVios@@AAV1@@Z
; public: class istream &__thiscall istream::ignore(int,int)
?ignore@istream@@QAEAAV1@HH@Z ; has WINAPI (@0) = msvcirt.?ignore@istream@@QAEAAV1@HH@Z
; public: int __thiscall streambuf::in_avail(void)const 
?in_avail@streambuf@@QBEHXZ ; has WINAPI (@0) = msvcirt.?in_avail@streambuf@@QBEHXZ
; protected: void __thiscall ios::init(class streambuf *)
?init@ios@@IAEXPAVstreambuf@@@Z ; has WINAPI (@0) = msvcirt.?init@ios@@IAEXPAVstreambuf@@@Z
; public: int __thiscall istream::ipfx(int)
?ipfx@istream@@QAEHH@Z ; has WINAPI (@0) = msvcirt.?ipfx@istream@@QAEHH@Z
; public: int __thiscall filebuf::is_open(void)const 
?is_open@filebuf@@QBEHXZ ; has WINAPI (@0) = msvcirt.?is_open@filebuf@@QBEHXZ
; public: int __thiscall fstream::is_open(void)const 
?is_open@fstream@@QBEHXZ ; has WINAPI (@0) = msvcirt.?is_open@fstream@@QBEHXZ
; public: int __thiscall ifstream::is_open(void)const 
?is_open@ifstream@@QBEHXZ ; has WINAPI (@0) = msvcirt.?is_open@ifstream@@QBEHXZ
; public: int __thiscall ofstream::is_open(void)const 
?is_open@ofstream@@QBEHXZ ; has WINAPI (@0) = msvcirt.?is_open@ofstream@@QBEHXZ
; public: void __thiscall istream::isfx(void)
?isfx@istream@@QAEXXZ ; has WINAPI (@0) = msvcirt.?isfx@istream@@QAEXXZ
; public: long &__thiscall ios::iword(int)const 
?iword@ios@@QBEAAJH@Z ; has WINAPI (@0) = msvcirt.?iword@ios@@QBEAAJH@Z
; public: void __cdecl ios::lock(void)
?lock@ios@@QAAXXZ ; has WINAPI (@0) = msvcirt.?lock@ios@@QAAXXZ
; public: void __thiscall streambuf::lock(void)
?lock@streambuf@@QAEXXZ ; has WINAPI (@0) = msvcirt.?lock@streambuf@@QAEXXZ
; public: void __cdecl ios::lockbuf(void)
?lockbuf@ios@@QAAXXZ ; has WINAPI (@0) = msvcirt.?lockbuf@ios@@QAAXXZ
; protected: static void __cdecl ios::lockc(void)
?lockc@ios@@KAXXZ ; has WINAPI (@0) = msvcirt.?lockc@ios@@KAXXZ
; protected: struct _CRT_CRITICAL_SECTION *__thiscall ios::lockptr(void)
?lockptr@ios@@IAEPAU_CRT_CRITICAL_SECTION@@XZ ; has WINAPI (@0) = msvcirt.?lockptr@ios@@IAEPAU_CRT_CRITICAL_SECTION@@XZ
; protected: struct _CRT_CRITICAL_SECTION *__thiscall streambuf::lockptr(void)
?lockptr@streambuf@@IAEPAU_CRT_CRITICAL_SECTION@@XZ ; has WINAPI (@0) = msvcirt.?lockptr@streambuf@@IAEPAU_CRT_CRITICAL_SECTION@@XZ
; public: char const *__thiscall type_info::name(void)const 
?name@type_info@@QBEPBDXZ ; has WINAPI (@0) = msvcrt.?name@type_info@@QBEPBDXZ
; class ios &__cdecl oct(class ios &)
?oct@@YAAAVios@@AAV1@@Z ; has WINAPI (@0) = msvcirt.?oct@@YAAAVios@@AAV1@@Z
; public: class filebuf *__thiscall filebuf::open(char const *,int,int)
?open@filebuf@@QAEPAV1@PBDHH@Z ; has WINAPI (@0) = msvcirt.?open@filebuf@@QAEPAV1@PBDHH@Z
; public: void __thiscall fstream::open(char const *,int,int)
?open@fstream@@QAEXPBDHH@Z ; has WINAPI (@0) = msvcirt.?open@fstream@@QAEXPBDHH@Z
; public: void __thiscall ifstream::open(char const *,int,int)
?open@ifstream@@QAEXPBDHH@Z ; has WINAPI (@0) = msvcirt.?open@ifstream@@QAEXPBDHH@Z
; public: void __thiscall ofstream::open(char const *,int,int)
?open@ofstream@@QAEXPBDHH@Z ; has WINAPI (@0) = msvcirt.?open@ofstream@@QAEXPBDHH@Z
; public: static int const filebuf::openprot
?openprot@filebuf@@2HB ; has WINAPI (@0) = msvcirt.?openprot@filebuf@@2HB
; public: int __thiscall ostream::opfx(void)
?opfx@ostream@@QAEHXZ ; has WINAPI (@0) = msvcirt.?opfx@ostream@@QAEHXZ
; public: void __thiscall ostream::osfx(void)
?osfx@ostream@@QAEXXZ ; has WINAPI (@0) = msvcirt.?osfx@ostream@@QAEXXZ
; public: int __thiscall streambuf::out_waiting(void)const 
?out_waiting@streambuf@@QBEHXZ ; has WINAPI (@0) = msvcirt.?out_waiting@streambuf@@QBEHXZ
; public: virtual int __thiscall filebuf::overflow(int)
?overflow@filebuf@@UAEHH@Z ; has WINAPI (@0) = msvcirt.?overflow@filebuf@@UAEHH@Z
; public: virtual int __thiscall stdiobuf::overflow(int)
?overflow@stdiobuf@@UAEHH@Z ; has WINAPI (@0) = msvcirt.?overflow@stdiobuf@@UAEHH@Z
; public: virtual int __thiscall strstreambuf::overflow(int)
?overflow@strstreambuf@@UAEHH@Z ; has WINAPI (@0) = msvcirt.?overflow@strstreambuf@@UAEHH@Z
; public: virtual int __thiscall stdiobuf::pbackfail(int)
?pbackfail@stdiobuf@@UAEHH@Z ; has WINAPI (@0) = msvcirt.?pbackfail@stdiobuf@@UAEHH@Z
; public: virtual int __thiscall streambuf::pbackfail(int)
?pbackfail@streambuf@@UAEHH@Z ; has WINAPI (@0) = msvcirt.?pbackfail@streambuf@@UAEHH@Z
; protected: char *__thiscall streambuf::pbase(void)const 
?pbase@streambuf@@IBEPADXZ ; has WINAPI (@0) = msvcirt.?pbase@streambuf@@IBEPADXZ
; protected: void __thiscall streambuf::pbump(int)
?pbump@streambuf@@IAEXH@Z ; has WINAPI (@0) = msvcirt.?pbump@streambuf@@IAEXH@Z
; public: int __thiscall ostrstream::pcount(void)const 
?pcount@ostrstream@@QBEHXZ ; has WINAPI (@0) = msvcirt.?pcount@ostrstream@@QBEHXZ
; public: int __thiscall strstream::pcount(void)const 
?pcount@strstream@@QBEHXZ ; has WINAPI (@0) = msvcirt.?pcount@strstream@@QBEHXZ
; public: int __thiscall istream::peek(void)
?peek@istream@@QAEHXZ ; has WINAPI (@0) = msvcirt.?peek@istream@@QAEHXZ
; protected: char *__thiscall streambuf::pptr(void)const 
?pptr@streambuf@@IBEPADXZ ; has WINAPI (@0) = msvcirt.?pptr@streambuf@@IBEPADXZ
; public: int __thiscall ios::precision(int)
?precision@ios@@QAEHH@Z ; has WINAPI (@0) = msvcirt.?precision@ios@@QAEHH@Z
; public: int __thiscall ios::precision(void)const 
?precision@ios@@QBEHXZ ; has WINAPI (@0) = msvcirt.?precision@ios@@QBEHXZ
; public: class ostream &__thiscall ostream::put(signed char)
?put@ostream@@QAEAAV1@C@Z ; has WINAPI (@0) = msvcirt.?put@ostream@@QAEAAV1@C@Z
; public: class ostream &__thiscall ostream::put(char)
?put@ostream@@QAEAAV1@D@Z ; has WINAPI (@0) = msvcirt.?put@ostream@@QAEAAV1@D@Z
; public: class ostream &__thiscall ostream::put(unsigned char)
?put@ostream@@QAEAAV1@E@Z ; has WINAPI (@0) = msvcirt.?put@ostream@@QAEAAV1@E@Z
; public: class istream &__thiscall istream::putback(char)
?putback@istream@@QAEAAV1@D@Z ; has WINAPI (@0) = msvcirt.?putback@istream@@QAEAAV1@D@Z
; public: void *&__thiscall ios::pword(int)const 
?pword@ios@@QBEAAPAXH@Z ; has WINAPI (@0) = msvcirt.?pword@ios@@QBEAAPAXH@Z
; public: char const *__thiscall type_info::raw_name(void)const 
?raw_name@type_info@@QBEPBDXZ ; has WINAPI (@0) = msvcrt.?raw_name@type_info@@QBEPBDXZ
; public: class filebuf *__thiscall fstream::rdbuf(void)const 
?rdbuf@fstream@@QBEPAVfilebuf@@XZ ; has WINAPI (@0) = msvcirt.?rdbuf@fstream@@QBEPAVfilebuf@@XZ
; public: class filebuf *__thiscall ifstream::rdbuf(void)const 
?rdbuf@ifstream@@QBEPAVfilebuf@@XZ ; has WINAPI (@0) = msvcirt.?rdbuf@ifstream@@QBEPAVfilebuf@@XZ
; public: class streambuf *__thiscall ios::rdbuf(void)const 
?rdbuf@ios@@QBEPAVstreambuf@@XZ ; has WINAPI (@0) = msvcirt.?rdbuf@ios@@QBEPAVstreambuf@@XZ
; public: class strstreambuf *__thiscall istrstream::rdbuf(void)const 
?rdbuf@istrstream@@QBEPAVstrstreambuf@@XZ ; has WINAPI (@0) = msvcirt.?rdbuf@istrstream@@QBEPAVstrstreambuf@@XZ
; public: class filebuf *__thiscall ofstream::rdbuf(void)const 
?rdbuf@ofstream@@QBEPAVfilebuf@@XZ ; has WINAPI (@0) = msvcirt.?rdbuf@ofstream@@QBEPAVfilebuf@@XZ
; public: class strstreambuf *__thiscall ostrstream::rdbuf(void)const 
?rdbuf@ostrstream@@QBEPAVstrstreambuf@@XZ ; has WINAPI (@0) = msvcirt.?rdbuf@ostrstream@@QBEPAVstrstreambuf@@XZ
; public: class stdiobuf *__thiscall stdiostream::rdbuf(void)const 
?rdbuf@stdiostream@@QBEPAVstdiobuf@@XZ ; has WINAPI (@0) = msvcirt.?rdbuf@stdiostream@@QBEPAVstdiobuf@@XZ
; public: class strstreambuf *__thiscall strstream::rdbuf(void)const 
?rdbuf@strstream@@QBEPAVstrstreambuf@@XZ ; has WINAPI (@0) = msvcirt.?rdbuf@strstream@@QBEPAVstrstreambuf@@XZ
; public: int __thiscall ios::rdstate(void)const 
?rdstate@ios@@QBEHXZ ; has WINAPI (@0) = msvcirt.?rdstate@ios@@QBEHXZ
; public: class istream &__thiscall istream::read(signed char *,int)
?read@istream@@QAEAAV1@PACH@Z ; has WINAPI (@0) = msvcirt.?read@istream@@QAEAAV1@PACH@Z
; public: class istream &__thiscall istream::read(char *,int)
?read@istream@@QAEAAV1@PADH@Z ; has WINAPI (@0) = msvcirt.?read@istream@@QAEAAV1@PADH@Z
; public: class istream &__thiscall istream::read(unsigned char *,int)
?read@istream@@QAEAAV1@PAEH@Z ; has WINAPI (@0) = msvcirt.?read@istream@@QAEAAV1@PAEH@Z
; public: int __thiscall streambuf::sbumpc(void)
?sbumpc@streambuf@@QAEHXZ ; has WINAPI (@0) = msvcirt.?sbumpc@streambuf@@QAEHXZ
; public: class istream &__thiscall istream::seekg(long)
?seekg@istream@@QAEAAV1@J@Z ; has WINAPI (@0) = msvcirt.?seekg@istream@@QAEAAV1@J@Z
; public: class istream &__thiscall istream::seekg(long,enum ios::seek_dir)
?seekg@istream@@QAEAAV1@JW4seek_dir@ios@@@Z ; has WINAPI (@0) = msvcirt.?seekg@istream@@QAEAAV1@JW4seek_dir@ios@@@Z
; public: virtual long __thiscall filebuf::seekoff(long,enum ios::seek_dir,int)
?seekoff@filebuf@@UAEJJW4seek_dir@ios@@H@Z ; has WINAPI (@0) = msvcirt.?seekoff@filebuf@@UAEJJW4seek_dir@ios@@H@Z
; public: virtual long __thiscall stdiobuf::seekoff(long,enum ios::seek_dir,int)
?seekoff@stdiobuf@@UAEJJW4seek_dir@ios@@H@Z ; has WINAPI (@0) = msvcirt.?seekoff@stdiobuf@@UAEJJW4seek_dir@ios@@H@Z
; public: virtual long __thiscall streambuf::seekoff(long,enum ios::seek_dir,int)
?seekoff@streambuf@@UAEJJW4seek_dir@ios@@H@Z ; has WINAPI (@0) = msvcirt.?seekoff@streambuf@@UAEJJW4seek_dir@ios@@H@Z
; public: virtual long __thiscall strstreambuf::seekoff(long,enum ios::seek_dir,int)
?seekoff@strstreambuf@@UAEJJW4seek_dir@ios@@H@Z ; has WINAPI (@0) = msvcirt.?seekoff@strstreambuf@@UAEJJW4seek_dir@ios@@H@Z
; public: class ostream &__thiscall ostream::seekp(long)
?seekp@ostream@@QAEAAV1@J@Z ; has WINAPI (@0) = msvcirt.?seekp@ostream@@QAEAAV1@J@Z
; public: class ostream &__thiscall ostream::seekp(long,enum ios::seek_dir)
?seekp@ostream@@QAEAAV1@JW4seek_dir@ios@@@Z ; has WINAPI (@0) = msvcirt.?seekp@ostream@@QAEAAV1@JW4seek_dir@ios@@@Z
; public: virtual long __thiscall streambuf::seekpos(long,int)
?seekpos@streambuf@@UAEJJH@Z ; has WINAPI (@0) = msvcirt.?seekpos@streambuf@@UAEJJH@Z
; void(__cdecl *)(void)__cdecl set_new_handler(void(__cdecl *)(void))
?set_new_handler@@YAP6AXXZP6AXXZ@Z ; has WINAPI (@0) = msvcrt.?set_new_handler@@YAP6AXXZP6AXXZ@Z
; void(__cdecl *)(void)__cdecl set_terminate(void(__cdecl *)(void))
?set_terminate@@YAP6AXXZP6AXXZ@Z ; has WINAPI (@0) = msvcrt.?set_terminate@@YAP6AXXZP6AXXZ@Z
; void(__cdecl *)(void)__cdecl set_unexpected(void(__cdecl *)(void))
?set_unexpected@@YAP6AXXZP6AXXZ@Z ; has WINAPI (@0) = msvcrt.?set_unexpected@@YAP6AXXZP6AXXZ@Z
; protected: void __thiscall streambuf::setb(char *,char *,int)
?setb@streambuf@@IAEXPAD0H@Z ; has WINAPI (@0) = msvcirt.?setb@streambuf@@IAEXPAD0H@Z
; public: virtual class streambuf *__thiscall filebuf::setbuf(char *,int)
?setbuf@filebuf@@UAEPAVstreambuf@@PADH@Z ; has WINAPI (@0) = msvcirt.?setbuf@filebuf@@UAEPAVstreambuf@@PADH@Z
; public: class streambuf *__thiscall fstream::setbuf(char *,int)
?setbuf@fstream@@QAEPAVstreambuf@@PADH@Z ; has WINAPI (@0) = msvcirt.?setbuf@fstream@@QAEPAVstreambuf@@PADH@Z
; public: class streambuf *__thiscall ifstream::setbuf(char *,int)
?setbuf@ifstream@@QAEPAVstreambuf@@PADH@Z ; has WINAPI (@0) = msvcirt.?setbuf@ifstream@@QAEPAVstreambuf@@PADH@Z
; public: class streambuf *__thiscall ofstream::setbuf(char *,int)
?setbuf@ofstream@@QAEPAVstreambuf@@PADH@Z ; has WINAPI (@0) = msvcirt.?setbuf@ofstream@@QAEPAVstreambuf@@PADH@Z
; public: virtual class streambuf *__thiscall streambuf::setbuf(char *,int)
?setbuf@streambuf@@UAEPAV1@PADH@Z ; has WINAPI (@0) = msvcirt.?setbuf@streambuf@@UAEPAV1@PADH@Z
; public: virtual class streambuf *__thiscall strstreambuf::setbuf(char *,int)
?setbuf@strstreambuf@@UAEPAVstreambuf@@PADH@Z ; has WINAPI (@0) = msvcirt.?setbuf@strstreambuf@@UAEPAVstreambuf@@PADH@Z
; public: long __thiscall ios::setf(long)
?setf@ios@@QAEJJ@Z ; has WINAPI (@0) = msvcirt.?setf@ios@@QAEJJ@Z
; public: long __thiscall ios::setf(long,long)
?setf@ios@@QAEJJJ@Z ; has WINAPI (@0) = msvcirt.?setf@ios@@QAEJJJ@Z
; protected: void __thiscall streambuf::setg(char *,char *,char *)
?setg@streambuf@@IAEXPAD00@Z ; has WINAPI (@0) = msvcirt.?setg@streambuf@@IAEXPAD00@Z
; public: void __cdecl ios::setlock(void)
?setlock@ios@@QAAXXZ ; has WINAPI (@0) = msvcirt.?setlock@ios@@QAAXXZ
; public: void __thiscall streambuf::setlock(void)
?setlock@streambuf@@QAEXXZ ; has WINAPI (@0) = msvcirt.?setlock@streambuf@@QAEXXZ
; public: int __thiscall filebuf::setmode(int)
?setmode@filebuf@@QAEHH@Z ; has WINAPI (@0) = msvcirt.?setmode@filebuf@@QAEHH@Z
; public: int __thiscall fstream::setmode(int)
?setmode@fstream@@QAEHH@Z ; has WINAPI (@0) = msvcirt.?setmode@fstream@@QAEHH@Z
; public: int __thiscall ifstream::setmode(int)
?setmode@ifstream@@QAEHH@Z ; has WINAPI (@0) = msvcirt.?setmode@ifstream@@QAEHH@Z
; public: int __thiscall ofstream::setmode(int)
?setmode@ofstream@@QAEHH@Z ; has WINAPI (@0) = msvcirt.?setmode@ofstream@@QAEHH@Z
; protected: void __thiscall streambuf::setp(char *,char *)
?setp@streambuf@@IAEXPAD0@Z ; has WINAPI (@0) = msvcirt.?setp@streambuf@@IAEXPAD0@Z
; public: int __thiscall stdiobuf::setrwbuf(int,int)
?setrwbuf@stdiobuf@@QAEHHH@Z ; has WINAPI (@0) = msvcirt.?setrwbuf@stdiobuf@@QAEHHH@Z
; public: int __thiscall streambuf::sgetc(void)
?sgetc@streambuf@@QAEHXZ ; has WINAPI (@0) = msvcirt.?sgetc@streambuf@@QAEHXZ
; public: int __thiscall streambuf::sgetn(char *,int)
?sgetn@streambuf@@QAEHPADH@Z ; has WINAPI (@0) = msvcirt.?sgetn@streambuf@@QAEHPADH@Z
; public: static int const filebuf::sh_none
?sh_none@filebuf@@2HB ; has WINAPI (@0) = msvcirt.?sh_none@filebuf@@2HB
; public: static int const filebuf::sh_read
?sh_read@filebuf@@2HB ; has WINAPI (@0) = msvcirt.?sh_read@filebuf@@2HB
; public: static int const filebuf::sh_write
?sh_write@filebuf@@2HB ; has WINAPI (@0) = msvcirt.?sh_write@filebuf@@2HB
; public: int __thiscall streambuf::snextc(void)
?snextc@streambuf@@QAEHXZ ; has WINAPI (@0) = msvcirt.?snextc@streambuf@@QAEHXZ
; public: int __thiscall streambuf::sputbackc(char)
?sputbackc@streambuf@@QAEHD@Z ; has WINAPI (@0) = msvcirt.?sputbackc@streambuf@@QAEHD@Z
; public: int __thiscall streambuf::sputc(int)
?sputc@streambuf@@QAEHH@Z ; has WINAPI (@0) = msvcirt.?sputc@streambuf@@QAEHH@Z
; public: int __thiscall streambuf::sputn(char const *,int)
?sputn@streambuf@@QAEHPBDH@Z ; has WINAPI (@0) = msvcirt.?sputn@streambuf@@QAEHPBDH@Z
; public: struct _iobuf *__thiscall stdiobuf::stdiofile(void)
?stdiofile@stdiobuf@@QAEPAU_iobuf@@XZ ; has WINAPI (@0) = msvcirt.?stdiofile@stdiobuf@@QAEPAU_iobuf@@XZ
; public: void __thiscall streambuf::stossc(void)
?stossc@streambuf@@QAEXXZ ; has WINAPI (@0) = msvcirt.?stossc@streambuf@@QAEXXZ
; public: char *__thiscall istrstream::str(void)
?str@istrstream@@QAEPADXZ ; has WINAPI (@0) = msvcirt.?str@istrstream@@QAEPADXZ
; public: char *__thiscall ostrstream::str(void)
?str@ostrstream@@QAEPADXZ ; has WINAPI (@0) = msvcirt.?str@ostrstream@@QAEPADXZ
; public: char *__thiscall strstream::str(void)
?str@strstream@@QAEPADXZ ; has WINAPI (@0) = msvcirt.?str@strstream@@QAEPADXZ
; public: char *__thiscall strstreambuf::str(void)
?str@strstreambuf@@QAEPADXZ ; has WINAPI (@0) = msvcirt.?str@strstreambuf@@QAEPADXZ
; private: static int ios::sunk_with_stdio
?sunk_with_stdio@ios@@0HA = msvcirt.?sunk_with_stdio@ios@@0HA DATA
; public: virtual int __thiscall filebuf::sync(void)
?sync@filebuf@@UAEHXZ ; has WINAPI (@0) = msvcirt.?sync@filebuf@@UAEHXZ
; public: int __thiscall istream::sync(void)
?sync@istream@@QAEHXZ ; has WINAPI (@0) = msvcirt.?sync@istream@@QAEHXZ
; public: virtual int __thiscall stdiobuf::sync(void)
?sync@stdiobuf@@UAEHXZ ; has WINAPI (@0) = msvcirt.?sync@stdiobuf@@UAEHXZ
; public: virtual int __thiscall streambuf::sync(void)
?sync@streambuf@@UAEHXZ ; has WINAPI (@0) = msvcirt.?sync@streambuf@@UAEHXZ
; public: virtual int __thiscall strstreambuf::sync(void)
?sync@strstreambuf@@UAEHXZ ; has WINAPI (@0) = msvcirt.?sync@strstreambuf@@UAEHXZ
; public: static void __cdecl ios::sync_with_stdio(void)
?sync_with_stdio@ios@@SAXXZ ; has WINAPI (@0) = msvcirt.?sync_with_stdio@ios@@SAXXZ
; public: long __thiscall istream::tellg(void)
?tellg@istream@@QAEJXZ ; has WINAPI (@0) = msvcirt.?tellg@istream@@QAEJXZ
; public: long __thiscall ostream::tellp(void)
?tellp@ostream@@QAEJXZ ; has WINAPI (@0) = msvcirt.?tellp@ostream@@QAEJXZ
; void __cdecl terminate(void)
?terminate@@YAXXZ ; has WINAPI (@0) = msvcrt.?terminate@@YAXXZ
; public: static int const filebuf::text
?text@filebuf@@2HB ; has WINAPI (@0) = msvcirt.?text@filebuf@@2HB
; public: class ostream *__thiscall ios::tie(class ostream *)
?tie@ios@@QAEPAVostream@@PAV2@@Z ; has WINAPI (@0) = msvcirt.?tie@ios@@QAEPAVostream@@PAV2@@Z
; public: class ostream *__thiscall ios::tie(void)const 
?tie@ios@@QBEPAVostream@@XZ ; has WINAPI (@0) = msvcirt.?tie@ios@@QBEPAVostream@@XZ
; protected: void __thiscall streambuf::unbuffered(int)
?unbuffered@streambuf@@IAEXH@Z ; has WINAPI (@0) = msvcirt.?unbuffered@streambuf@@IAEXH@Z
; protected: int __thiscall streambuf::unbuffered(void)const 
?unbuffered@streambuf@@IBEHXZ ; has WINAPI (@0) = msvcirt.?unbuffered@streambuf@@IBEHXZ
; public: virtual int __thiscall filebuf::underflow(void)
?underflow@filebuf@@UAEHXZ ; has WINAPI (@0) = msvcirt.?underflow@filebuf@@UAEHXZ
; public: virtual int __thiscall stdiobuf::underflow(void)
?underflow@stdiobuf@@UAEHXZ ; has WINAPI (@0) = msvcirt.?underflow@stdiobuf@@UAEHXZ
; public: virtual int __thiscall strstreambuf::underflow(void)
?underflow@strstreambuf@@UAEHXZ ; has WINAPI (@0) = msvcirt.?underflow@strstreambuf@@UAEHXZ
; void __cdecl unexpected(void)
?unexpected@@YAXXZ ; has WINAPI (@0) = msvcrt.?unexpected@@YAXXZ
; public: void __cdecl ios::unlock(void)
?unlock@ios@@QAAXXZ ; has WINAPI (@0) = msvcirt.?unlock@ios@@QAAXXZ
; public: void __thiscall streambuf::unlock(void)
?unlock@streambuf@@QAEXXZ ; has WINAPI (@0) = msvcirt.?unlock@streambuf@@QAEXXZ
; public: void __cdecl ios::unlockbuf(void)
?unlockbuf@ios@@QAAXXZ ; has WINAPI (@0) = msvcirt.?unlockbuf@ios@@QAAXXZ
; protected: static void __cdecl ios::unlockc(void)
?unlockc@ios@@KAXXZ ; has WINAPI (@0) = msvcirt.?unlockc@ios@@KAXXZ
; public: long __thiscall ios::unsetf(long)
?unsetf@ios@@QAEJJ@Z ; has WINAPI (@0) = msvcirt.?unsetf@ios@@QAEJJ@Z
; public: virtual char const *__thiscall exception::what(void)const 
?what@exception@@UBEPBDXZ ; has WINAPI (@0) = msvcrt.?what@exception@@UBEPBDXZ
; public: int __thiscall ios::width(int)
?width@ios@@QAEHH@Z ; has WINAPI (@0) = msvcirt.?width@ios@@QAEHH@Z
; public: int __thiscall ios::width(void)const 
?width@ios@@QBEHXZ ; has WINAPI (@0) = msvcirt.?width@ios@@QBEHXZ
; public: class ostream &__thiscall ostream::write(signed char const *,int)
?write@ostream@@QAEAAV1@PBCH@Z ; has WINAPI (@0) = msvcirt.?write@ostream@@QAEAAV1@PBCH@Z
; public: class ostream &__thiscall ostream::write(char const *,int)
?write@ostream@@QAEAAV1@PBDH@Z ; has WINAPI (@0) = msvcirt.?write@ostream@@QAEAAV1@PBDH@Z
; public: class ostream &__thiscall ostream::write(unsigned char const *,int)
?write@ostream@@QAEAAV1@PBEH@Z ; has WINAPI (@0) = msvcirt.?write@ostream@@QAEAAV1@PBEH@Z
; private: class ostream &__thiscall ostream::writepad(char const *,char const *)
?writepad@ostream@@AAEAAV1@PBD0@Z ; has WINAPI (@0) = msvcirt.?writepad@ostream@@AAEAAV1@PBD0@Z
; class istream &__cdecl ws(class istream &)
?ws@@YAAAVistream@@AAV1@@Z ; has WINAPI (@0) = msvcirt.?ws@@YAAAVistream@@AAV1@@Z
; private: static int ios::x_curindex
?x_curindex@ios@@0HA = msvcirt.?x_curindex@ios@@0HA DATA
; private: static struct _CRT_CRITICAL_SECTION ios::x_lockc
?x_lockc@ios@@0U_CRT_CRITICAL_SECTION@@A = msvcirt.?x_lockc@ios@@0U_CRT_CRITICAL_SECTION@@A DATA
; private: static long ios::x_maxbit
?x_maxbit@ios@@0JA = msvcirt.?x_maxbit@ios@@0JA DATA
; private: static long *ios::x_statebuf
?x_statebuf@ios@@0PAJA = msvcirt.?x_statebuf@ios@@0PAJA DATA
; public: static int __cdecl ios::xalloc(void)
?xalloc@ios@@SAHXZ ; has WINAPI (@0) = msvcirt.?xalloc@ios@@SAHXZ
; public: virtual int __thiscall streambuf::xsgetn(char *,int)
?xsgetn@streambuf@@UAEHPADH@Z ; has WINAPI (@0) = msvcirt.?xsgetn@streambuf@@UAEHPADH@Z
; public: virtual int __thiscall streambuf::xsputn(char const *,int)
?xsputn@streambuf@@UAEHPBDH@Z ; has WINAPI (@0) = msvcirt.?xsputn@streambuf@@UAEHPBDH@Z
$I10_OUTPUT@0 = msvcrt.$I10_OUTPUT
_CIacos@0 = msvcrt._CIacos
_CIasin@0 = msvcrt._CIasin
_CIatan@0 = msvcrt._CIatan
_CIatan2@0 = msvcrt._CIatan2
_CIcos@0 = msvcrt._CIcos
_CIcosh@0 = msvcrt._CIcosh
_CIexp@0 = msvcrt._CIexp
_CIfmod@0 = msvcrt._CIfmod
_CIlog@0 = msvcrt._CIlog
_CIlog10@0 = msvcrt._CIlog10
_CIpow@0 = msvcrt._CIpow
_CIsin@0 = msvcrt._CIsin
_CIsinh@0 = msvcrt._CIsinh
_CIsqrt@0 = msvcrt._CIsqrt
_CItan@0 = msvcrt._CItan
_CItanh@0 = msvcrt._CItanh
_CxxThrowException@8 = msvcrt._CxxThrowException
_EH_prolog@0 = msvcrt._EH_prolog
_HUGE = msvcrt._HUGE DATA
_XcptFilter@0 = msvcrt._XcptFilter
__CxxFrameHandler@0 = msvcrt.__CxxFrameHandler
__CxxLongjmpUnwind@4 = msvcrt.__CxxLongjmpUnwind
__RTCastToVoid@0 = msvcrt.__RTCastToVoid
__RTDynamicCast@0 = msvcrt.__RTDynamicCast
__RTtypeid@0 = msvcrt.__RTtypeid
__STRINGTOLD@0 = msvcrt.__STRINGTOLD
__argc = msvcrt.__argc DATA
__argv = msvcrt.__argv DATA
__dllonexit@0 = msvcrt.__dllonexit
__doserrno@0 = msvcrt.__doserrno
__fpecode@0 = msvcrt.__fpecode
__getmainargs@0 = msvcrt.__getmainargs
__initenv = msvcrt.__initenv DATA
__isascii@0 = msvcrt.__isascii
__iscsym@0 = msvcrt.__iscsym
__iscsymf@0 = msvcrt.__iscsymf
__lconv_init@0 = msvcrt.__lconv_init
__mb_cur_max = msvcrt.__mb_cur_max DATA
__p___argc@0 = msvcrt.__p___argc
__p___argv@0 = msvcrt.__p___argv
__p___initenv@0 = msvcrt.__p___initenv
__p___mb_cur_max@0 = msvcrt.__p___mb_cur_max
__p___wargv@0 = msvcrt.__p___wargv
__p___winitenv@0 = msvcrt.__p___winitenv
__p__acmdln@0 = msvcrt.__p__acmdln
__p__amblksiz@0 = msvcrt.__p__amblksiz
__p__commode@0 = msvcrt.__p__commode
__p__daylight@0 = msvcrt.__p__daylight
__p__dstbias@0 = msvcrt.__p__dstbias
__p__environ@0 = msvcrt.__p__environ
__p__fmode@0 = msvcrt.__p__fmode
__p__iob@0 = msvcrt.__p__iob
__p__mbctype@0 = msvcrt.__p__mbctype
__p__osver@0 = msvcrt.__p__osver
__p__pctype@0 = msvcrt.__p__pctype
__p__pgmptr@0 = msvcrt.__p__pgmptr
__p__pwctype@0 = msvcrt.__p__pwctype
__p__timezone@0 = msvcrt.__p__timezone
__p__tzname@0 = msvcrt.__p__tzname
__p__wcmdln@0 = msvcrt.__p__wcmdln
__p__wenviron@0 = msvcrt.__p__wenviron
__p__winmajor@0 = msvcrt.__p__winmajor
__p__winminor@0 = msvcrt.__p__winminor
__p__winver@0 = msvcrt.__p__winver
__p__wpgmptr@0 = msvcrt.__p__wpgmptr
__pxcptinfoptrs@0 = msvcrt.__pxcptinfoptrs
__set_app_type@0 = msvcrt.__set_app_type
__setusermatherr@0 = msvcrt.__setusermatherr
__threadhandle@0 = msvcrt.__threadhandle
__threadid@0 = msvcrt.__threadid
__toascii@0 = msvcrt.__toascii
__unDName@0 = msvcrt.__unDName
__wargv = msvcrt.__wargv DATA
__wgetmainargs@0 = msvcrt.__wgetmainargs
__winitenv = msvcrt.__winitenv DATA
_abnormal_termination@0 = msvcrt._abnormal_termination
_access@0 = msvcrt._access
_acmdln = msvcrt._acmdln DATA
_adj_fdiv_m16i@4 = msvcrt._adj_fdiv_m16i
_adj_fdiv_m32@4 = msvcrt._adj_fdiv_m32
_adj_fdiv_m32i@4 = msvcrt._adj_fdiv_m32i
_adj_fdiv_m64@8 = msvcrt._adj_fdiv_m64
_adj_fdiv_r@0 = msvcrt._adj_fdiv_r
_adj_fdivr_m16i@4 = msvcrt._adj_fdivr_m16i
_adj_fdivr_m32@4 = msvcrt._adj_fdivr_m32
_adj_fdivr_m32i@4 = msvcrt._adj_fdivr_m32i
_adj_fdivr_m64@8 = msvcrt._adj_fdivr_m64
_adj_fpatan@0 = msvcrt._adj_fpatan
_adj_fprem@0 = msvcrt._adj_fprem
_adj_fprem1@0 = msvcrt._adj_fprem1
_adj_fptan@0 = msvcrt._adj_fptan
_adjust_fdiv = msvcrt._adjust_fdiv DATA
_aexit_rtn = msvcrt._aexit_rtn DATA
_amsg_exit@0 = msvcrt._amsg_exit
_assert@0 = msvcrt._assert
_atodbl@0 = msvcrt._atodbl
_atoldbl@0 = msvcrt._atoldbl
_beep@0 = msvcrt._beep
_beginthread@0 = msvcrt._beginthread
_beginthreadex@0 = msvcrt._beginthreadex
_c_exit@0 = msvcrt._c_exit
_cabs@0 = msvcrt._cabs
_cexit@0 = msvcrt._cexit
_cgets@0 = msvcrt._cgets
_chdir@0 = msvcrt._chdir
_chdrive@0 = msvcrt._chdrive
_chgsign@0 = msvcrt._chgsign
_chmod@0 = msvcrt._chmod
_chsize@0 = msvcrt._chsize
_clearfp@0 = msvcrt._clearfp
_close@0 = msvcrt._close
_commit@0 = msvcrt._commit
_commode = msvcrt._commode DATA
_control87@0 = msvcrt._control87
_controlfp@0 = msvcrt._controlfp
_copysign@0 = msvcrt._copysign
_cprintf@0 = msvcrt._cprintf
_cputs@0 = msvcrt._cputs
_creat@0 = msvcrt._creat
_cscanf@0 = msvcrt._cscanf
_ctype@0 = msvcrt._ctype
_cwait@0 = msvcrt._cwait
_daylight = msvcrt._daylight DATA
_dstbias = msvcrt._dstbias DATA
_dup@0 = msvcrt._dup
_dup2@0 = msvcrt._dup2
_ecvt@0 = msvcrt._ecvt
_endthread@0 = msvcrt._endthread
_endthreadex@0 = msvcrt._endthreadex
_environ = msvcrt._environ DATA
_eof@0 = msvcrt._eof
_errno@0 = msvcrt._errno
_except_handler2@0 = msvcrt._except_handler2
_except_handler3@0 = msvcrt._except_handler3
_execl@0 = msvcrt._execl
_execle@0 = msvcrt._execle
_execlp@0 = msvcrt._execlp
_execlpe@0 = msvcrt._execlpe
_execv@0 = msvcrt._execv
_execve@0 = msvcrt._execve
_execvp@0 = msvcrt._execvp
_execvpe@0 = msvcrt._execvpe
_exit@0 = msvcrt._exit
_expand@0 = msvcrt._expand
_fcloseall@0 = msvcrt._fcloseall
_fcvt@0 = msvcrt._fcvt
_fdopen@0 = msvcrt._fdopen
_fgetchar@0 = msvcrt._fgetchar
_fgetwchar@0 = msvcrt._fgetwchar
_filbuf@0 = msvcrt._filbuf
_fileinfo = msvcrt._fileinfo DATA
_filelength@0 = msvcrt._filelength
_filelengthi64@0 = msvcrt._filelengthi64
_fileno@0 = msvcrt._fileno
_findclose@0 = msvcrt._findclose
_findfirst@0 = msvcrt._findfirst
_findfirsti64@0 = msvcrt._findfirsti64
_findnext@0 = msvcrt._findnext
_findnexti64@0 = msvcrt._findnexti64
_finite@0 = msvcrt._finite
_flsbuf@0 = msvcrt._flsbuf
_flushall@0 = msvcrt._flushall
_fmode = msvcrt._fmode DATA
_fpclass@0 = msvcrt._fpclass
_fpieee_flt@0 = msvcrt._fpieee_flt
_fpreset@0 = msvcrt._fpreset
_fputchar@0 = msvcrt._fputchar
_fputwchar@0 = msvcrt._fputwchar
_fsopen@0 = msvcrt._fsopen
_fstat@0 = msvcrt._fstat
_fstati64@0 = msvcrt._fstati64
_ftime@0 = msvcrt._ftime32
_ftol@0 = msvcrt._ftol
_fullpath@0 = msvcrt._fullpath
_futime@0 = msvcrt._futime32
_gcvt@0 = msvcrt._gcvt
_get_osfhandle@0 = msvcrt._get_osfhandle
_getch@0 = msvcrt._getch
_getche@0 = msvcrt._getche
_getcwd@0 = msvcrt._getcwd
_getdcwd@0 = msvcrt._getdcwd
_getdiskfree@0 = msvcrt._getdiskfree
_getdllprocaddr@0 = msvcrt._getdllprocaddr
_getdrive@0 = msvcrt._getdrive
_getdrives@0 = msvcrt._getdrives
_getmaxstdio@0 = msvcrt._getmaxstdio
_getmbcp@0 = msvcrt._getmbcp
_getpid@0 = msvcrt._getpid
_getsystime@0 = msvcrt._getsystime
_getw@0 = msvcrt._getw
_getws@0 = msvcrt._getws
_global_unwind2@0 = msvcrt._global_unwind2
_heapadd@0 = msvcrt._heapadd
_heapchk@0 = msvcrt._heapchk
_heapmin@0 = msvcrt._heapmin
_heapset@0 = msvcrt._heapset
_heapused@0 = msvcrt._heapused
_heapwalk@0 = msvcrt._heapwalk
_hypot@0 = msvcrt._hypot
_initterm@0 = msvcrt._initterm
_inp@0 = msvcrt._inp
_inpd@0 = msvcrt._inpd
_inpw@0 = msvcrt._inpw
_iob = msvcrt._iob DATA
_isatty@0 = msvcrt._isatty
_isctype@0 = msvcrt._isctype
_ismbbalnum@0 = msvcrt._ismbbalnum
_ismbbalpha@0 = msvcrt._ismbbalpha
_ismbbgraph@0 = msvcrt._ismbbgraph
_ismbbkalnum@0 = msvcrt._ismbbkalnum
_ismbbkana@0 = msvcrt._ismbbkana
_ismbbkprint@0 = msvcrt._ismbbkprint
_ismbbkpunct@0 = msvcrt._ismbbkpunct
_ismbblead@0 = msvcrt._ismbblead
_ismbbprint@0 = msvcrt._ismbbprint
_ismbbpunct@0 = msvcrt._ismbbpunct
_ismbbtrail@0 = msvcrt._ismbbtrail
_ismbcalnum@0 = msvcrt._ismbcalnum
_ismbcalpha@0 = msvcrt._ismbcalpha
_ismbcdigit@0 = msvcrt._ismbcdigit
_ismbcgraph@0 = msvcrt._ismbcgraph
_ismbchira@0 = msvcrt._ismbchira
_ismbckata@0 = msvcrt._ismbckata
_ismbcl0@0 = msvcrt._ismbcl0
_ismbcl1@0 = msvcrt._ismbcl1
_ismbcl2@0 = msvcrt._ismbcl2
_ismbclegal@0 = msvcrt._ismbclegal
_ismbclower@0 = msvcrt._ismbclower
_ismbcprint@0 = msvcrt._ismbcprint
_ismbcpunct@0 = msvcrt._ismbcpunct
_ismbcspace@0 = msvcrt._ismbcspace
_ismbcsymbol@0 = msvcrt._ismbcsymbol
_ismbcupper@0 = msvcrt._ismbcupper
_ismbslead@0 = msvcrt._ismbslead
_ismbstrail@0 = msvcrt._ismbstrail
_isnan@0 = msvcrt._isnan
_itoa@0 = msvcrt._itoa
_itow@0 = msvcrt._itow
_j0@0 = msvcrt._j0
_j1@0 = msvcrt._j1
_jn@0 = msvcrt._jn
_kbhit@0 = msvcrt._kbhit
_lfind@0 = msvcrt._lfind
_loaddll@0 = msvcrt._loaddll
_local_unwind2@0 = msvcrt._local_unwind2
_locking@0 = msvcrt._locking
_logb@0 = msvcrt._logb
_longjmpex@0 = msvcrt._longjmpex
_lrotl@0 = msvcrt._lrotl
_lrotr@0 = msvcrt._lrotr
_lsearch@0 = msvcrt._lsearch
_lseek@0 = msvcrt._lseek
_lseeki64@0 = msvcrt._lseeki64
_ltoa@0 = msvcrt._ltoa
_ltow@0 = msvcrt._ltow
_makepath@0 = msvcrt._makepath
_mbbtombc@0 = msvcrt._mbbtombc
_mbbtype@0 = msvcrt._mbbtype
_mbccpy@0 = msvcrt._mbccpy
_mbcjistojms@0 = msvcrt._mbcjistojms
_mbcjmstojis@0 = msvcrt._mbcjmstojis
_mbclen@0 = msvcrt._mbclen
_mbctohira@0 = msvcrt._mbctohira
_mbctokata@0 = msvcrt._mbctokata
_mbctolower@0 = msvcrt._mbctolower
_mbctombb@0 = msvcrt._mbctombb
_mbctoupper@0 = msvcrt._mbctoupper
_mbctype = msvcrt._mbctype DATA
_mbsbtype@0 = msvcrt._mbsbtype
_mbscat@0 = msvcrt._mbscat
_mbschr@0 = msvcrt._mbschr
_mbscmp@0 = msvcrt._mbscmp
_mbscoll@0 = msvcrt._mbscoll
_mbscpy@0 = msvcrt._mbscpy
_mbscspn@0 = msvcrt._mbscspn
_mbsdec@0 = msvcrt._mbsdec
_mbsdup@0 = msvcrt._mbsdup
_mbsicmp@0 = msvcrt._mbsicmp
_mbsicoll@0 = msvcrt._mbsicoll
_mbsinc@0 = msvcrt._mbsinc
_mbslen@0 = msvcrt._mbslen
_mbslwr@0 = msvcrt._mbslwr
_mbsnbcat@0 = msvcrt._mbsnbcat
_mbsnbcmp@0 = msvcrt._mbsnbcmp
_mbsnbcnt@0 = msvcrt._mbsnbcnt
_mbsnbcoll@0 = msvcrt._mbsnbcoll
_mbsnbcpy@0 = msvcrt._mbsnbcpy
_mbsnbicmp@0 = msvcrt._mbsnbicmp
_mbsnbicoll@0 = msvcrt._mbsnbicoll
_mbsnbset@0 = msvcrt._mbsnbset
_mbsncat@0 = msvcrt._mbsncat
_mbsnccnt@0 = msvcrt._mbsnccnt
_mbsncmp@0 = msvcrt._mbsncmp
_mbsncoll@0 = msvcrt._mbsncoll
_mbsncpy@0 = msvcrt._mbsncpy
_mbsnextc@0 = msvcrt._mbsnextc
_mbsnicmp@0 = msvcrt._mbsnicmp
_mbsnicoll@0 = msvcrt._mbsnicoll
_mbsninc@0 = msvcrt._mbsninc
_mbsnset@0 = msvcrt._mbsnset
_mbspbrk@0 = msvcrt._mbspbrk
_mbsrchr@0 = msvcrt._mbsrchr
_mbsrev@0 = msvcrt._mbsrev
_mbsset@0 = msvcrt._mbsset
_mbsspn@0 = msvcrt._mbsspn
_mbsspnp@0 = msvcrt._mbsspnp
_mbsstr@0 = msvcrt._mbsstr
_mbstok@0 = msvcrt._mbstok
_mbstrlen@0 = msvcrt._mbstrlen
_mbsupr@0 = msvcrt._mbsupr
_memccpy@0 = msvcrt._memccpy
_memicmp@0 = msvcrt._memicmp
_mkdir@0 = msvcrt._mkdir
_mktemp@0 = msvcrt._mktemp
_msize@0 = msvcrt._msize
_mtlock@0 = msvcirt._mtlock
_mtunlock@0 = msvcirt._mtunlock
_nextafter@0 = msvcrt._nextafter
_onexit@0 = msvcrt._onexit
_open@0 = msvcrt._open
_open_osfhandle@0 = msvcrt._open_osfhandle
_osver = msvcrt._osver DATA
_outp@0 = msvcrt._outp
_outpd@0 = msvcrt._outpd
_outpw@0 = msvcrt._outpw
_pclose@0 = msvcrt._pclose
_pctype = msvcrt._pctype DATA
_pgmptr = msvcrt._pgmptr DATA
_pipe@0 = msvcrt._pipe
_popen@0 = msvcrt._popen
_purecall@0 = msvcrt._purecall
_putch@0 = msvcrt._putch
_putenv@0 = msvcrt._putenv
_putw@0 = msvcrt._putw
_putws@0 = msvcrt._putws
_pwctype = msvcrt._pwctype DATA
_read@0 = msvcrt._read
_rmdir@0 = msvcrt._rmdir
_rmtmp@0 = msvcrt._rmtmp
_rotl@0 = msvcrt._rotl
_rotr@0 = msvcrt._rotr
_safe_fdiv@0 = msvcrt._safe_fdiv
_safe_fdivr@0 = msvcrt._safe_fdivr
_safe_fprem@0 = msvcrt._safe_fprem
_safe_fprem1@0 = msvcrt._safe_fprem1
_scalb@0 = msvcrt._scalb
_searchenv@0 = msvcrt._searchenv
_seh_longjmp_unwind@4 = msvcrt._seh_longjmp_unwind
_set_error_mode@0 = msvcrt._set_error_mode
_seterrormode@0 = msvcrt._seterrormode
_setjmp@0 = msvcrt._setjmp
_setjmp3@0 = msvcrt._setjmp3
_setmaxstdio@0 = msvcrt._setmaxstdio
_setmbcp@0 = msvcrt._setmbcp
_setmode@0 = msvcrt._setmode
_setsystime@0 = msvcrt._setsystime
_sleep@0 = msvcrt._sleep
_snprintf@0 = msvcrt._snprintf
_snwprintf@0 = msvcrt._snwprintf
_sopen@0 = msvcrt._sopen
_spawnl@0 = msvcrt._spawnl
_spawnle@0 = msvcrt._spawnle
_spawnlp@0 = msvcrt._spawnlp
_spawnlpe@0 = msvcrt._spawnlpe
_spawnv@0 = msvcrt._spawnv
_spawnve@0 = msvcrt._spawnve
_spawnvp@0 = msvcrt._spawnvp
_spawnvpe@0 = msvcrt._spawnvpe
_splitpath@0 = msvcrt._splitpath
_stat@0 = msvcrt._stat
_stati64@0 = msvcrt._stati64
_statusfp@0 = msvcrt._statusfp
_strcmpi@0 = msvcrt._strcmpi
_strdate@0 = msvcrt._strdate
_strdup@0 = msvcrt._strdup
_strerror@0 = msvcrt._strerror
_stricmp@0 = msvcrt._stricmp
_stricoll@0 = msvcrt._stricoll
_strlwr@0 = msvcrt._strlwr
_strncoll@0 = msvcrt._strncoll
_strnicmp@0 = msvcrt._strnicmp
_strnicoll@0 = msvcrt._strnicoll
_strnset@0 = msvcrt._strnset
_strrev@0 = msvcrt._strrev
_strset@0 = msvcrt._strset
_strtime@0 = msvcrt._strtime
_strupr@0 = msvcrt._strupr
_swab@0 = msvcrt._swab
_sys_errlist = msvcrt._sys_errlist DATA
_sys_nerr@0 = msvcrt._sys_nerr
_tell@0 = msvcrt._tell
_telli64@0 = msvcrt._telli64
_tempnam@0 = msvcrt._tempnam
_timezone = msvcrt._timezone DATA
_tolower@0 = msvcrt._tolower
_toupper@0 = msvcrt._toupper
_tzname = msvcrt._tzname DATA
_tzset@0 = msvcrt._tzset
_ultoa@0 = msvcrt._ultoa
_ultow@0 = msvcrt._ultow
_umask@0 = msvcrt._umask
_ungetch@0 = msvcrt._ungetch
_unlink@0 = msvcrt._unlink
_unloaddll@0 = msvcrt._unloaddll
_utime@0 = msvcrt._utime32
_vsnprintf@0 = msvcrt._vsnprintf
_vsnwprintf@0 = msvcrt._vsnwprintf
_waccess@0 = msvcrt._waccess
_wasctime@0 = msvcrt._wasctime
_wchdir@0 = msvcrt._wchdir
_wchmod@0 = msvcrt._wchmod
_wcmdln = msvcrt._wcmdln DATA
_wcreat@0 = msvcrt._wcreat
_wcsdup@0 = msvcrt._wcsdup
_wcsicmp@0 = msvcrt._wcsicmp
_wcsicoll@0 = msvcrt._wcsicoll
_wcslwr@0 = msvcrt._wcslwr
_wcsncoll@0 = msvcrt._wcsncoll
_wcsnicmp@0 = msvcrt._wcsnicmp
_wcsnicoll@0 = msvcrt._wcsnicoll
_wcsnset@0 = msvcrt._wcsnset
_wcsrev@0 = msvcrt._wcsrev
_wcsset@0 = msvcrt._wcsset
_wcsupr@0 = msvcrt._wcsupr
_wctime@0 = msvcrt._wctime32
_wenviron = msvcrt._wenviron DATA
_wexecl@0 = msvcrt._wexecl
_wexecle@0 = msvcrt._wexecle
_wexeclp@0 = msvcrt._wexeclp
_wexeclpe@0 = msvcrt._wexeclpe
_wexecv@0 = msvcrt._wexecv
_wexecve@0 = msvcrt._wexecve
_wexecvp@0 = msvcrt._wexecvp
_wexecvpe@0 = msvcrt._wexecvpe
_wfdopen@0 = msvcrt._wfdopen
_wfindfirst@0 = msvcrt._wfindfirst
_wfindfirsti64@0 = msvcrt._wfindfirsti64
_wfindnext@0 = msvcrt._wfindnext
_wfindnexti64@0 = msvcrt._wfindnexti64
_wfopen@0 = msvcrt._wfopen
_wfreopen@0 = msvcrt._wfreopen
_wfsopen@0 = msvcrt._wfsopen
_wfullpath@0 = msvcrt._wfullpath
_wgetcwd@0 = msvcrt._wgetcwd
_wgetdcwd@0 = msvcrt._wgetdcwd
_wgetenv@0 = msvcrt._wgetenv
_winmajor = msvcrt._winmajor DATA
_winminor = msvcrt._winminor DATA
_winver = msvcrt._winver DATA
_wmakepath@0 = msvcrt._wmakepath
_wmkdir@0 = msvcrt._wmkdir
_wmktemp@0 = msvcrt._wmktemp
_wopen@0 = msvcrt._wopen
_wperror@0 = msvcrt._wperror
_wpgmptr = msvcrt._wpgmptr DATA
_wpopen@0 = msvcrt._wpopen
_wputenv@0 = msvcrt._wputenv
_wremove@0 = msvcrt._wremove
_wrename@0 = msvcrt._wrename
_write@0 = msvcrt._write
_wrmdir@0 = msvcrt._wrmdir
_wsearchenv@0 = msvcrt._wsearchenv
_wsetlocale@0 = msvcrt._wsetlocale
_wsopen@0 = msvcrt._wsopen
_wspawnl@0 = msvcrt._wspawnl
_wspawnle@0 = msvcrt._wspawnle
_wspawnlp@0 = msvcrt._wspawnlp
_wspawnlpe@0 = msvcrt._wspawnlpe
_wspawnv@0 = msvcrt._wspawnv
_wspawnve@0 = msvcrt._wspawnve
_wspawnvp@0 = msvcrt._wspawnvp
_wspawnvpe@0 = msvcrt._wspawnvpe
_wsplitpath@0 = msvcrt._wsplitpath
_wstat@0 = msvcrt._wstat
_wstati64@0 = msvcrt._wstati64
_wstrdate@0 = msvcrt._wstrdate
_wstrtime@0 = msvcrt._wstrtime
_wsystem@0 = msvcrt._wsystem
_wtempnam@0 = msvcrt._wtempnam
_wtmpnam@0 = msvcrt._wtmpnam
_wtoi@0 = msvcrt._wtoi
_wtol@0 = msvcrt._wtol
_wunlink@0 = msvcrt._wunlink
_wutime@0 = msvcrt._wutime32
_y0@0 = msvcrt._y0
_y1@0 = msvcrt._y1
_yn@0 = msvcrt._yn
abort@0 = msvcrt.abort
abs@0 = msvcrt.abs
acos@0 = msvcrt.acos
asctime@0 = msvcrt.asctime
asin@0 = msvcrt.asin
atan@0 = msvcrt.atan
atan2@0 = msvcrt.atan2
atexit@0 = msvcrt.atexit
atof@0 = msvcrt.atof
atoi@0 = msvcrt.atoi
atol@0 = msvcrt.atol
bsearch@0 = msvcrt.bsearch
calloc@0 = msvcrt.calloc
ceil@0 = msvcrt.ceil
clearerr@0 = msvcrt.clearerr
clock@0 = msvcrt.clock
cos@0 = msvcrt.cos
cosh@0 = msvcrt.cosh
ctime@0 = msvcrt.ctime
difftime@0 = msvcrt.difftime
div@0 = msvcrt.div
exit@0 = msvcrt.exit
exp@0 = msvcrt.exp
fabs@0 = msvcrt.fabs
fclose@0 = msvcrt.fclose
feof@0 = msvcrt.feof
ferror@0 = msvcrt.ferror
fflush@0 = msvcrt.fflush
fgetc@0 = msvcrt.fgetc
fgetpos@0 = msvcrt.fgetpos
fgets@0 = msvcrt.fgets
fgetwc@0 = msvcrt.fgetwc
fgetws@0 = msvcrt.fgetws
floor@0 = msvcrt.floor
fmod@0 = msvcrt.fmod
fopen@0 = msvcrt.fopen
fprintf@0 = msvcrt.fprintf
fputc@0 = msvcrt.fputc
fputs@0 = msvcrt.fputs
fputwc@0 = msvcrt.fputwc
fputws@0 = msvcrt.fputws
fread@0 = msvcrt.fread
free@0 = msvcrt.free
freopen@0 = msvcrt.freopen
frexp@0 = msvcrt.frexp
fscanf@0 = msvcrt.fscanf
fseek@0 = msvcrt.fseek
fsetpos@0 = msvcrt.fsetpos
ftell@0 = msvcrt.ftell
fwprintf@0 = msvcrt.fwprintf
fwrite@0 = msvcrt.fwrite
fwscanf@0 = msvcrt.fwscanf
getc@0 = msvcrt.getc
getchar@0 = msvcrt.getchar
getenv@0 = msvcrt.getenv
gets@0 = msvcrt.gets
getwc@0 = msvcrt.getwc
getwchar@0 = msvcrt.getwchar
gmtime@0 = msvcrt.gmtime
is_wctype@0 = msvcrt.is_wctype
isalnum@0 = msvcrt.isalnum
isalpha@0 = msvcrt.isalpha
iscntrl@0 = msvcrt.iscntrl
isdigit@0 = msvcrt.isdigit
isgraph@0 = msvcrt.isgraph
isleadbyte@0 = msvcrt.isleadbyte
islower@0 = msvcrt.islower
isprint@0 = msvcrt.isprint
ispunct@0 = msvcrt.ispunct
isspace@0 = msvcrt.isspace
isupper@0 = msvcrt.isupper
iswalnum@0 = msvcrt.iswalnum
iswalpha@0 = msvcrt.iswalpha
iswascii@0 = msvcrt.iswascii
iswcntrl@0 = msvcrt.iswcntrl
iswctype@0 = msvcrt.iswctype
iswdigit@0 = msvcrt.iswdigit
iswgraph@0 = msvcrt.iswgraph
iswlower@0 = msvcrt.iswlower
iswprint@0 = msvcrt.iswprint
iswpunct@0 = msvcrt.iswpunct
iswspace@0 = msvcrt.iswspace
iswupper@0 = msvcrt.iswupper
iswxdigit@0 = msvcrt.iswxdigit
isxdigit@0 = msvcrt.isxdigit
labs@0 = msvcrt.labs
ldexp@0 = msvcrt.ldexp
ldiv@0 = msvcrt.ldiv
localeconv@0 = msvcrt.localeconv
localtime@0 = msvcrt.localtime
log@0 = msvcrt.log
log10@0 = msvcrt.log10
longjmp@0 = msvcrt.longjmp
malloc@0 = msvcrt.malloc
mblen@0 = msvcrt.mblen
mbstowcs@0 = msvcrt.mbstowcs
mbtowc@0 = msvcrt.mbtowc
memchr@0 = msvcrt.memchr
memcmp@0 = msvcrt.memcmp
memcpy@0 = msvcrt.memcpy
memmove@0 = msvcrt.memmove
memset@0 = msvcrt.memset
mktime@0 = msvcrt.mktime
modf@0 = msvcrt.modf
perror@0 = msvcrt.perror
pow@0 = msvcrt.pow
printf@0 = msvcrt.printf
putc@0 = msvcrt.putc
putchar@0 = msvcrt.putchar
puts@0 = msvcrt.puts
putwc@0 = msvcrt.putwc
putwchar@0 = msvcrt.putwchar
qsort@0 = msvcrt.qsort
raise@0 = msvcrt.raise
rand@0 = msvcrt.rand
realloc@0 = msvcrt.realloc
remove@0 = msvcrt.remove
rename@0 = msvcrt.rename
rewind@0 = msvcrt.rewind
scanf@0 = msvcrt.scanf
setbuf@0 = msvcrt.setbuf
setlocale@0 = msvcrt.setlocale
setvbuf@0 = msvcrt.setvbuf
signal@0 = msvcrt.signal
sin@0 = msvcrt.sin
sinh@0 = msvcrt.sinh
sprintf@0 = msvcrt.sprintf
sqrt@0 = msvcrt.sqrt
srand@0 = msvcrt.srand
sscanf@0 = msvcrt.sscanf
strcat@0 = msvcrt.strcat
strchr@0 = msvcrt.strchr
strcmp@0 = msvcrt.strcmp
strcoll@0 = msvcrt.strcoll
strcpy@0 = msvcrt.strcpy
strcspn@0 = msvcrt.strcspn
strerror@0 = msvcrt.strerror
strftime@0 = msvcrt.strftime
strlen@0 = msvcrt.strlen
strncat@0 = msvcrt.strncat
strncmp@0 = msvcrt.strncmp
strncpy@0 = msvcrt.strncpy
strpbrk@0 = msvcrt.strpbrk
strrchr@0 = msvcrt.strrchr
strspn@0 = msvcrt.strspn
strstr@0 = msvcrt.strstr
strtod@0 = msvcrt.strtod
strtok@0 = msvcrt.strtok
strtol@0 = msvcrt.strtol
strtoul@0 = msvcrt.strtoul
strxfrm@0 = msvcrt.strxfrm
swprintf@0 = msvcrt.swprintf
swscanf@0 = msvcrt.swscanf
system@0 = msvcrt.system
tan@0 = msvcrt.tan
tanh@0 = msvcrt.tanh
time@0 = msvcrt.time
tmpfile@0 = msvcrt.tmpfile
tmpnam@0 = msvcrt.tmpnam
tolower@0 = msvcrt.tolower
toupper@0 = msvcrt.toupper
towlower@0 = msvcrt.towlower
towupper@0 = msvcrt.towupper
ungetc@0 = msvcrt.ungetc
ungetwc@0 = msvcrt.ungetwc
vfprintf@0 = msvcrt.vfprintf
vfwprintf@0 = msvcrt.vfwprintf
vprintf@0 = msvcrt.vprintf
vsprintf@0 = msvcrt.vsprintf
vswprintf@0 = msvcrt._vswprintf
vwprintf@0 = msvcrt.vwprintf
wcscat@0 = msvcrt.wcscat
wcschr@0 = msvcrt.wcschr
wcscmp@0 = msvcrt.wcscmp
wcscoll@0 = msvcrt.wcscoll
wcscpy@0 = msvcrt.wcscpy
wcscspn@0 = msvcrt.wcscspn
wcsftime@0 = msvcrt.wcsftime
wcslen@0 = msvcrt.wcslen
wcsncat@0 = msvcrt.wcsncat
wcsncmp@0 = msvcrt.wcsncmp
wcsncpy@0 = msvcrt.wcsncpy
wcspbrk@0 = msvcrt.wcspbrk
wcsrchr@0 = msvcrt.wcsrchr
wcsspn@0 = msvcrt.wcsspn
wcsstr@0 = msvcrt.wcsstr
wcstod@0 = msvcrt.wcstod
wcstok@0 = msvcrt.wcstok
wcstol@0 = msvcrt.wcstol
wcstombs@0 = msvcrt.wcstombs
wcstoul@0 = msvcrt.wcstoul
wcsxfrm@0 = msvcrt.wcsxfrm
wctomb@0 = msvcrt.wctomb
wprintf@0 = msvcrt.wprintf
wscanf@0 = msvcrt.wscanf
