;
; Definition file of DMDskMgr.dll
; Automatic generated by gendef
; written by Kai Tietz 2008
;
LIBRARY "DMDskMgr.dll"
EXPORTS
; public: __thiscall CDataCache::CDataCache(void)
??0CDataCache@@QAE@XZ ; has WINAPI (@0)
; public: __thiscall CDMNodeObj::~CDMNodeObj(void)
??1CDMNodeObj@@QAE@XZ ; has WINAPI (@0)
; public: virtual __thiscall CDataCache::~CDataCache(void)
??1CDataCache@@UAE@XZ ; has WINAPI (@0)
; public: void __thiscall CDataCache::AddFileSystemInfoToCache(unsigned long,struct filesysteminfo *)
?AddFileSystemInfoToCache@CDataCache@@QAEXKPAUfilesysteminfo@@@Z ; has WINAPI (@8)
; public: void __thiscall CDataCache::AddFileSystemInfoToListAndMap(unsigned long,struct filesysteminfo *)
?AddFileSystemInfoToListAndMap@CDataCache@@QAEXKPAUfilesysteminfo@@@Z ; has WINAPI (@8)
; public: void __thiscall CDataCache::AddLDMObjMapEntry(struct _LDM_OBJ_MAP_ENTRY *)
?AddLDMObjMapEntry@CDataCache@@QAEXPAU_LDM_OBJ_MAP_ENTRY@@@Z ; has WINAPI (@4)
; public: void __thiscall CDataCache::AddRegionToVolumeMemberList(class CDMNodeObj *)
?AddRegionToVolumeMemberList@CDataCache@@QAEXPAVCDMNodeObj@@@Z ; has WINAPI (@4)
; public: void __thiscall CDMComponentData::AddRow(class CDMScopeNode *,long)
?AddRow@CDMComponentData@@QAEXPAVCDMScopeNode@@J@Z ; has WINAPI (@8)
; public: void __thiscall CDataCache::AdjustRegionCountInLegendList(enum _REGIONTYPE,int,class CTaskData *)
?AdjustRegionCountInLegendList@CDataCache@@QAEXW4_REGIONTYPE@@HPAVCTaskData@@@Z ; has WINAPI (@12)
; public: void __thiscall CDataCache::AdjustVolumeCountInLegendList(enum _VOLUMELAYOUT,int,class CTaskData *)
?AdjustVolumeCountInLegendList@CDataCache@@QAEXW4_VOLUMELAYOUT@@HPAVCTaskData@@@Z ; has WINAPI (@12)
; public: int __thiscall CDMNodeObj::CanHaveGPT(void)
?CanHaveGPT@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: void __thiscall CDMComponentData::ChangeRow(class CDMScopeNode *,long)
?ChangeRow@CDMComponentData@@QAEXPAVCDMScopeNode@@J@Z ; has WINAPI (@8)
; public: long __thiscall CContextMenu::Command(long,struct IDataObject *,long)
?Command@CContextMenu@@QAEJJPAUIDataObject@@J@Z ; has WINAPI (@12)
; int __stdcall CompareDiskNames(long,long)
?CompareDiskNames@@YGHJJ@Z ; has WINAPI (@8)
; public: int __thiscall CDMNodeObj::ContainsActivePartition(void)
?ContainsActivePartition@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::ContainsBootIniPartition(void)
?ContainsBootIniPartition@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::ContainsBootIniPartitionForWolfpack(void)
?ContainsBootIniPartitionForWolfpack@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::ContainsBootVolumesNumberChange(__int64,int *)
?ContainsBootVolumesNumberChange@CDMNodeObj@@QAEH_JPAH@Z ; has WINAPI (@12)
; public: int __thiscall CDMNodeObj::ContainsESPPartition(void)
?ContainsESPPartition@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::ContainsFVEPartition(void)
?ContainsFVEPartition@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::ContainsLogicalDrvBootPartition(void)
?ContainsLogicalDrvBootPartition@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::ContainsPageFile(void)
?ContainsPageFile@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::ContainsRealSystemPartition(void)
?ContainsRealSystemPartition@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::ContainsSubDiskNeedResync(void)
?ContainsSubDiskNeedResync@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::ContainsSystemInformation(void)
?ContainsSystemInformation@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::ContainsSystemPartition(void)
?ContainsSystemPartition@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; __int64 __stdcall ConvertBytesToMB(__int64)
?ConvertBytesToMB@@YG_J_J@Z ; has WINAPI (@8)
; __int64 __stdcall ConvertMBToBytes(__int64)
?ConvertMBToBytes@@YG_J_J@Z ; has WINAPI (@8)
; void __stdcall CookieSort(long *,unsigned int,unsigned int,unsigned int,int(__stdcall *)(long,long))
?CookieSort@@YGXPAJIIIP6GHJJ@Z@Z ; has WINAPI (@20)
; public: void __thiscall CDataCache::CreateDiskList(void)
?CreateDiskList@CDataCache@@QAEXXZ ; has WINAPI (@0)
; public: class CDMNodeObj *__thiscall CDataCache::CreateNodeObjAndAddToMap(int,enum _NODEOBJ_TYPES,class CDataCache *,void *,__int64)
?CreateNodeObjAndAddToMap@CDataCache@@QAEPAVCDMNodeObj@@HW4_NODEOBJ_TYPES@@PAV1@PAX_J@Z ; has WINAPI (@24)
; public: class CDMNodeObj *__thiscall CDataCache::CreateRegionNodeObj(class CDMNodeObj *,struct regioninfoex *)
?CreateRegionNodeObj@CDataCache@@QAEPAVCDMNodeObj@@PAV2@PAUregioninfoex@@@Z ; has WINAPI (@8)
; public: void __thiscall CDataCache::CreateShortDiskName(struct diskinfoex &)
?CreateShortDiskName@CDataCache@@QAEXAAUdiskinfoex@@@Z ; has WINAPI (@4)
; public: void __thiscall CDataCache::CreateVolumeList(void)
?CreateVolumeList@CDataCache@@QAEXXZ ; has WINAPI (@0)
; public: void __thiscall CDataCache::DeleteDiskGroupData(struct DISK_GROUP_DATA *)
?DeleteDiskGroupData@CDataCache@@QAEXPAUDISK_GROUP_DATA@@@Z ; has WINAPI (@4)
; public: void __thiscall CDataCache::DeleteEncapsulateData(struct ENCAPSULATE_DATA *)
?DeleteEncapsulateData@CDataCache@@QAEXPAUENCAPSULATE_DATA@@@Z ; has WINAPI (@4)
; public: void __thiscall CDataCache::DeleteLists(void)
?DeleteLists@CDataCache@@QAEXXZ ; has WINAPI (@0)
; public: void __thiscall CDataCache::DeleteRegionFromVolumeMemberList(class CDMNodeObj *)
?DeleteRegionFromVolumeMemberList@CDataCache@@QAEXPAVCDMNodeObj@@@Z ; has WINAPI (@4)
; public: void __thiscall CDMComponentData::DeleteRow(class CDMScopeNode *,long)
?DeleteRow@CDMComponentData@@QAEXPAVCDMScopeNode@@J@Z ; has WINAPI (@8)
; public: void __thiscall CContextMenu::DoDelete(long)
?DoDelete@CContextMenu@@QAEXJ@Z ; has WINAPI (@4)
; public: void __thiscall CContextMenu::DoRevertToNT4(long,int)
?DoRevertToNT4@CContextMenu@@QAEXJH@Z ; has WINAPI (@8)
; public: void __thiscall CDMComponentData::EmptyOcxViewData(class CDMScopeNode *)
?EmptyOcxViewData@CDMComponentData@@QAEXPAVCDMScopeNode@@@Z ; has WINAPI (@4)
; public: int __thiscall CDMNodeObj::EnhancedIsUpgradeable(class CTaskData *)
?EnhancedIsUpgradeable@CDMNodeObj@@QAEHPAVCTaskData@@@Z ; has WINAPI (@4)
; public: void __thiscall CDMNodeObj::EnumDiskRegions(long **,long &)
?EnumDiskRegions@CDMNodeObj@@QAEXPAPAJAAJ@Z ; has WINAPI (@8)
; public: void __thiscall CTaskData::EnumDisks(unsigned long &,long **)
?EnumDisks@CTaskData@@QAEXAAKPAPAJ@Z ; has WINAPI (@8)
; public: void __thiscall CDMNodeObj::EnumFirstVolumeMember(long &,long &)
?EnumFirstVolumeMember@CDMNodeObj@@QAEXAAJ0@Z ; has WINAPI (@8)
; public: void __thiscall CDataCache::EnumNTFSwithDriveLetter(int *,unsigned short **)
?EnumNTFSwithDriveLetter@CDataCache@@QAEXPAHPAPAG@Z ; has WINAPI (@8)
; public: void __thiscall CTaskData::EnumNTFSwithDriveLetter(int *,unsigned short **)
?EnumNTFSwithDriveLetter@CTaskData@@QAEXPAHPAPAG@Z ; has WINAPI (@8)
; public: void __thiscall CDMNodeObj::EnumVolumeMembers(long **,long &)
?EnumVolumeMembers@CDMNodeObj@@QAEXPAPAJAAJ@Z ; has WINAPI (@8)
; public: void __thiscall CTaskData::EnumVolumes(unsigned long &,long **)
?EnumVolumes@CTaskData@@QAEXAAKPAPAJ@Z ; has WINAPI (@8)
; public: void __thiscall CDataCache::FillDeviceInstanceId(unsigned short *,unsigned short *)
?FillDeviceInstanceId@CDataCache@@QAEXPAG0@Z ; has WINAPI (@8)
; public: void __thiscall CTaskData::FilterCookiesBigEnoughForFTRepair(unsigned long &,long *,long **,__int64,class CDMNodeObj *)
?FilterCookiesBigEnoughForFTRepair@CTaskData@@QAEXAAKPAJPAPAJ_JPAVCDMNodeObj@@@Z ; has WINAPI (@24)
; public: void __thiscall CTaskData::FilterCookiesBigEnoughForRAID5Repair(unsigned long &,long *,long **,__int64,class CDMNodeObj *)
?FilterCookiesBigEnoughForRAID5Repair@CTaskData@@QAEXAAKPAJPAPAJ_JPAVCDMNodeObj@@@Z ; has WINAPI (@24)
; public: int __thiscall CDataCache::FindCookieAndRemoveFromList(long,class <class CDMNodeObj *,class CDMNodeObj *> *)
?FindCookieAndRemoveFromList@CDataCache@@QAEHJPAV?$CList@PAVCDMNodeObj@@PAV1@@@@Z ; has WINAPI (@8)
; public: unsigned short *__thiscall CDataCache::FindDeviceInstanceId(__int64)
?FindDeviceInstanceId@CDataCache@@QAEPAG_J@Z ; has WINAPI (@8)
; public: int __thiscall CDataCache::FindDiskPtrFromDiskId(__int64,class CDMNodeObj **)
?FindDiskPtrFromDiskId@CDataCache@@QAEH_JPAPAVCDMNodeObj@@@Z ; has WINAPI (@12)
; public: int __thiscall CDataCache::FindDriveLetter(__int64,unsigned short &)
?FindDriveLetter@CDataCache@@QAEH_JAAG@Z ; has WINAPI (@12)
; public: void __thiscall CTaskData::FindDriveLetter(__int64,unsigned short &)
?FindDriveLetter@CTaskData@@QAEX_JAAG@Z ; has WINAPI (@12)
; int __stdcall FindDriveLetterHelper(struct driveletterinfo *,int,__int64,unsigned short &)
?FindDriveLetterHelper@@YGHPAUdriveletterinfo@@H_JAAG@Z ; has WINAPI (@20)
; public: int __thiscall CDataCache::FindFileSystem(__int64,struct filesysteminfo &)
?FindFileSystem@CDataCache@@QAEH_JAAUfilesysteminfo@@@Z ; has WINAPI (@12)
; public: int __thiscall CTaskData::FindFileSystem(__int64,struct filesysteminfo &)
?FindFileSystem@CTaskData@@QAEH_JAAUfilesysteminfo@@@Z ; has WINAPI (@12)
; public: int __thiscall CDataCache::FindRegionPtrFromRegionId(__int64,class CDMNodeObj **)
?FindRegionPtrFromRegionId@CDataCache@@QAEH_JPAPAVCDMNodeObj@@@Z ; has WINAPI (@12)
; public: int __thiscall CTaskData::FindRegionPtrFromRegionId(__int64,class CDMNodeObj **)
?FindRegionPtrFromRegionId@CTaskData@@QAEH_JPAPAVCDMNodeObj@@@Z ; has WINAPI (@12)
; public: int __thiscall CDataCache::FindRegionPtrOnDiskFromRegionId(class CDMNodeObj *,__int64,class CDMNodeObj **,struct __POSITION *&)
?FindRegionPtrOnDiskFromRegionId@CDataCache@@QAEHPAVCDMNodeObj@@_JPAPAV2@AAPAU__POSITION@@@Z ; has WINAPI (@20)
; public: int __thiscall CTaskData::GetAssignedDriveLetter(long,unsigned short &)
?GetAssignedDriveLetter@CTaskData@@QAEHJAAG@Z ; has WINAPI (@8)
; public: int __thiscall CDataCache::GetBootPort(void)
?GetBootPort@CDataCache@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CTaskData::GetBootPort(void)
?GetBootPort@CTaskData@@QAEHXZ ; has WINAPI (@0)
; public: unsigned long __thiscall CDMNodeObj::GetColorRef(void)
?GetColorRef@CDMNodeObj@@QAEKXZ ; has WINAPI (@0)
; public: class CDMComponentData *__thiscall CDataCache::GetComponentData(void)
?GetComponentData@CDataCache@@QAEPAVCDMComponentData@@XZ ; has WINAPI (@0)
; public: class CDMNodeObj *__thiscall CTaskData::GetDMDataObjPtrFromId(__int64)
?GetDMDataObjPtrFromId@CTaskData@@QAEPAVCDMNodeObj@@_J@Z ; has WINAPI (@8)
; public: unsigned long __thiscall CDMNodeObj::GetDeviceAttributes(void)
?GetDeviceAttributes@CDMNodeObj@@QAEKXZ ; has WINAPI (@0)
; public: unsigned long __thiscall CDMNodeObj::GetDeviceState(void)
?GetDeviceState@CDMNodeObj@@QAEKXZ ; has WINAPI (@0)
; public: unsigned long __thiscall CDMNodeObj::GetDeviceType(void)
?GetDeviceType@CDMNodeObj@@QAEKXZ ; has WINAPI (@0)
; protected: void __thiscall CDataCache::GetDiskCookies(unsigned long &,long **)
?GetDiskCookies@CDataCache@@IAEXAAKPAPAJ@Z ; has WINAPI (@8)
; public: void __thiscall CTaskData::GetDiskCookies(unsigned long &,long **,int,unsigned long,int)
?GetDiskCookies@CTaskData@@QAEXAAKPAPAJHKH@Z ; has WINAPI (@20)
; public: void __thiscall CTaskData::GetDiskCookiesForAddMirror(long,unsigned long &,long **)
?GetDiskCookiesForAddMirror@CTaskData@@QAEXJAAKPAPAJ@Z ; has WINAPI (@12)
; public: void __thiscall CTaskData::GetDiskCookiesForCreateVolume(unsigned long &,long **)
?GetDiskCookiesForCreateVolume@CTaskData@@QAEXAAKPAPAJ@Z ; has WINAPI (@8)
; public: void __thiscall CTaskData::GetDiskCookiesForExtendVolume(long,unsigned long &,long **)
?GetDiskCookiesForExtendVolume@CTaskData@@QAEXJAAKPAPAJ@Z ; has WINAPI (@12)
; public: void __thiscall CTaskData::GetDiskCookiesForSig(unsigned long &,long **)
?GetDiskCookiesForSig@CTaskData@@QAEXAAKPAPAJ@Z ; has WINAPI (@8)
; public: void __thiscall CTaskData::GetDiskCookiesForUpgrade(unsigned long &,long **)
?GetDiskCookiesForUpgrade@CTaskData@@QAEXAAKPAPAJ@Z ; has WINAPI (@8)
; public: void __thiscall CTaskData::GetDiskCookiesToEncap(unsigned long &,long **)
?GetDiskCookiesToEncap@CTaskData@@QAEXAAKPAPAJ@Z ; has WINAPI (@8)
; public: void __thiscall CTaskData::GetDiskCookiesWithFreeSpace(unsigned long &,long **)
?GetDiskCookiesWithFreeSpace@CTaskData@@QAEXAAKPAPAJ@Z ; has WINAPI (@8)
; public: unsigned long __thiscall CDataCache::GetDiskCount(void)
?GetDiskCount@CDataCache@@QAEKXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::GetDiskInfo(struct diskinfoex &)
?GetDiskInfo@CDMNodeObj@@QAEHAAUdiskinfoex@@@Z ; has WINAPI (@4)
; public: void __thiscall CTaskData::GetDiskInfoFromVolCookie(long,int &,unsigned long &,long **,unsigned long,int)
?GetDiskInfoFromVolCookie@CTaskData@@QAEXJAAHAAKPAPAJKH@Z ; has WINAPI (@24)
; public: int __thiscall CDMNodeObj::GetDiskSpec(struct diskspec &)
?GetDiskSpec@CDMNodeObj@@QAEHAAUdiskspec@@@Z ; has WINAPI (@4)
; public: int __thiscall CDMNodeObj::GetDiskStatus(class CString &)
?GetDiskStatus@CDMNodeObj@@QAEHAAVCString@@@Z ; has WINAPI (@4)
; int __stdcall GetDiskStatusHelper(struct diskinfoex *,class CString &,int)
?GetDiskStatusHelper@@YGHPAUdiskinfoex@@AAVCString@@H@Z ; has WINAPI (@12)
; public: void __thiscall CDMNodeObj::GetDiskTypeName(class CString &)
?GetDiskTypeName@CDMNodeObj@@QAEXAAVCString@@@Z ; has WINAPI (@4)
; void __stdcall GetDiskTypeNameHelper(struct diskinfoex *,class CString &,unsigned short)
?GetDiskTypeNameHelper@@YGXPAUdiskinfoex@@AAVCString@@G@Z ; has WINAPI (@12)
; public: void __thiscall CDMNodeObj::GetDriveLetter(unsigned short &)
?GetDriveLetter@CDMNodeObj@@QAEXAAG@Z ; has WINAPI (@4)
; protected: void __thiscall CDataCache::GetDriveLetters(short &,unsigned short **,unsigned short)
?GetDriveLetters@CDataCache@@IAEXAAFPAPAGG@Z ; has WINAPI (@12)
; public: void __thiscall CTaskData::GetDriveLetters(short &,unsigned short **,unsigned short)
?GetDriveLetters@CTaskData@@QAEXAAFPAPAGG@Z ; has WINAPI (@12)
; public: unsigned long __thiscall CDMNodeObj::GetExtendedRegionColor(void)
?GetExtendedRegionColor@CDMNodeObj@@QAEKXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::GetExtraRegionStatus(class CString &,int)
?GetExtraRegionStatus@CDMNodeObj@@QAEHAAVCString@@H@Z ; has WINAPI (@8)
; public: void __thiscall CDMNodeObj::GetFileSystemLabel(class CString &)
?GetFileSystemLabel@CDMNodeObj@@QAEXAAVCString@@@Z ; has WINAPI (@4)
; public: void __thiscall CDMNodeObj::GetFileSystemName(class CString &)
?GetFileSystemName@CDMNodeObj@@QAEXAAVCString@@@Z ; has WINAPI (@4)
; public: void __thiscall CDMNodeObj::GetFileSystemSize(long &)
?GetFileSystemSize@CDMNodeObj@@QAEXAAJ@Z ; has WINAPI (@4)
; public: int __thiscall CDMNodeObj::GetFileSystemType(void)
?GetFileSystemType@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: void __thiscall CDataCache::GetFileSystemTypes(unsigned long &,struct ifilesysteminfo **)
?GetFileSystemTypes@CDataCache@@QAEXAAKPAPAUifilesysteminfo@@@Z ; has WINAPI (@8)
; public: void __thiscall CTaskData::GetFileSystemTypes(unsigned long &,struct ifilesysteminfo **)
?GetFileSystemTypes@CTaskData@@QAEXAAKPAPAUifilesysteminfo@@@Z ; has WINAPI (@8)
; public: long __thiscall CDMNodeObj::GetFlags(void)
?GetFlags@CDMNodeObj@@QAEJXZ ; has WINAPI (@0)
; public: short __thiscall CDMNodeObj::GetIVolumeClientVersion(void)
?GetIVolumeClientVersion@CDMNodeObj@@QAEFXZ ; Check!!! Couldn't determine function argument count. Function doesn't return. 
; public: short __thiscall CTaskData::GetIVolumeClientVersion(void)
?GetIVolumeClientVersion@CTaskData@@QAEFXZ ; Check!!! Couldn't determine function argument count. Function doesn't return. 
; public: unsigned int __thiscall CDMNodeObj::GetIconId(int)
?GetIconId@CDMNodeObj@@QAEIH@Z ; has WINAPI (@4)
; public: int __thiscall CDMNodeObj::GetImageNum(void)
?GetImageNum@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: __int64 __thiscall CDataCache::GetLastKnownState(__int64)
?GetLastKnownState@CDataCache@@QAE_J_J@Z ; has WINAPI (@8)
; public: enum _LAYOUT_TYPES __thiscall CDMNodeObj::GetLayoutType(void)
?GetLayoutType@CDMNodeObj@@QAE?AW4_LAYOUT_TYPES@@XZ ; has WINAPI (@0)
; public: __int64 __thiscall CDMNodeObj::GetLdmObjectId(void)
?GetLdmObjectId@CDMNodeObj@@QAE_JXZ ; has WINAPI (@0)
; public: unsigned long __thiscall CDMNodeObj::GetLogicalDriveCount(void)
?GetLogicalDriveCount@CDMNodeObj@@QAEKXZ ; has WINAPI (@0)
; public: void __thiscall CDMNodeObj::GetLongName(class CString &,int)
?GetLongName@CDMNodeObj@@QAEXAAVCString@@H@Z ; has WINAPI (@8)
; public: struct HWND__ *__thiscall CDMComponentData::GetMMCWindow(void)
?GetMMCWindow@CDMComponentData@@QAEPAUHWND__@@XZ ; has WINAPI (@0)
; public: void __thiscall CDMNodeObj::GetMaxAdjustedFreeSize(__int64 &)
?GetMaxAdjustedFreeSize@CDMNodeObj@@QAEXAA_J@Z ; has WINAPI (@4)
; public: unsigned long __thiscall CDMNodeObj::GetMaxPartitionCount(void)
?GetMaxPartitionCount@CDMNodeObj@@QAEKXZ ; has WINAPI (@0)
; protected: void __thiscall CDataCache::GetMinMaxPartitionSizes(long,__int64 &,__int64 &)
?GetMinMaxPartitionSizes@CDataCache@@IAEXJAA_J0@Z ; has WINAPI (@12)
; public: void __thiscall CTaskData::GetMinMaxPartitionSizes(long,__int64 &,__int64 &)
?GetMinMaxPartitionSizes@CTaskData@@QAEXJAA_J0@Z ; has WINAPI (@12)
; public: void __thiscall CDMNodeObj::GetName(class CString &)
?GetName@CDMNodeObj@@QAEXAAVCString@@@Z ; has WINAPI (@4)
; public: unsigned long __thiscall CDMNodeObj::GetNumMembers(void)
?GetNumMembers@CDMNodeObj@@QAEKXZ ; has WINAPI (@0)
; public: unsigned long __thiscall CDMNodeObj::GetNumRegions(void)
?GetNumRegions@CDMNodeObj@@QAEKXZ ; has WINAPI (@0)
; public: void __thiscall CDMNodeObj::GetObjectId(__int64 &)
?GetObjectId@CDMNodeObj@@QAEXAA_J@Z ; has WINAPI (@4)
; public: class CWnd *__thiscall CTaskData::GetOcxFrameCWndPtr(void)
?GetOcxFrameCWndPtr@CTaskData@@QAEPAVCWnd@@XZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::GetOfflineReasonText(class CString &)
?GetOfflineReasonText@CDMNodeObj@@QAEHAAVCString@@@Z ; has WINAPI (@4)
; public: void __thiscall CTaskData::GetOtherDisksFromVolCookie(long,unsigned long &,long **)
?GetOtherDisksFromVolCookie@CTaskData@@QAEXJAAKPAPAJ@Z ; has WINAPI (@12)
; public: class CDMNodeObj *__thiscall CDMNodeObj::GetParentDiskPtr(void)
?GetParentDiskPtr@CDMNodeObj@@QAEPAV1@XZ ; has WINAPI (@0)
; public: class CDMNodeObj *__thiscall CDMNodeObj::GetParentVolumePtr(void)
?GetParentVolumePtr@CDMNodeObj@@QAEPAV1@XZ ; has WINAPI (@0)
; public: enum _PARTITIONSTYLE __thiscall CDMNodeObj::GetPartitionStyle(void)
?GetPartitionStyle@CDMNodeObj@@QAE?AW4_PARTITIONSTYLE@@XZ ; has WINAPI (@0)
; public: void __thiscall CDMNodeObj::GetPartitionStyleString(class CString &,int)
?GetPartitionStyleString@CDMNodeObj@@QAEXAAVCString@@H@Z ; has WINAPI (@8)
; void __stdcall GetPartitionStyleStringHelper(enum _PARTITIONSTYLE,class CString &,int,unsigned long,unsigned long,int)
?GetPartitionStyleStringHelper@@YGXW4_PARTITIONSTYLE@@AAVCString@@HKKH@Z ; has WINAPI (@24)
; public: int __thiscall CDMNodeObj::GetPatternRef(void)
?GetPatternRef@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::GetPort(void)
?GetPort@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: unsigned long __thiscall CDMNodeObj::GetPrimaryPartitionCount(void)
?GetPrimaryPartitionCount@CDMNodeObj@@QAEKXZ ; has WINAPI (@0)
GetPropertyPageData@8
; public: class CDMNodeObj *__thiscall CDMNodeObj::GetRegionByOffset(__int64)
?GetRegionByOffset@CDMNodeObj@@QAEPAV1@_J@Z ; has WINAPI (@8)
; public: void __thiscall CTaskData::GetRegionColorStructPtr(struct _REGION_COLORS **,int &)
?GetRegionColorStructPtr@CTaskData@@QAEXPAPAU_REGION_COLORS@@AAH@Z ; has WINAPI (@8)
; public: int __thiscall CDMNodeObj::GetRegionInfo(struct regioninfoex &)
?GetRegionInfo@CDMNodeObj@@QAEHAAUregioninfoex@@@Z ; has WINAPI (@4)
; public: int __thiscall CDMSnapin::GetResultPane(long,class CDMResultPane **)
?GetResultPane@CDMSnapin@@QAEHJPAPAVCDMResultPane@@@Z ; has WINAPI (@8)
; public: int __thiscall CDMNodeObj::GetResultStringArray(class CStringArray &)
?GetResultStringArray@CDMNodeObj@@QAEHAAVCStringArray@@@Z ; has WINAPI (@4)
; public: int __thiscall CDMScopeNodeCollection::GetScopeNode(long,class CDMScopeNode **)
?GetScopeNode@CDMScopeNodeCollection@@QAEHJPAPAVCDMScopeNode@@@Z ; has WINAPI (@8)
; public: int __thiscall CDMComponentData::GetScopeNodeForResultPane(long,class CDMScopeNode **)
?GetScopeNodeForResultPane@CDMComponentData@@QAEHJPAPAVCDMScopeNode@@@Z ; has WINAPI (@8)
; public: class CString __thiscall CDataCache::GetServerName(void)
?GetServerName@CDataCache@@QAE?AVCString@@XZ ; has WINAPI (@4)
; public: class CString __thiscall CTaskData::GetServerName(void)
?GetServerName@CTaskData@@QAE?AVCString@@XZ ; has WINAPI (@4)
; public: void __thiscall CDMNodeObj::GetShortName(class CString &)
?GetShortName@CDMNodeObj@@QAEXAAVCString@@@Z ; has WINAPI (@4)
; public: __int64 __thiscall CDMNodeObj::GetShrinkableSizeInMB(void)
?GetShrinkableSizeInMB@CDMNodeObj@@QAE_JXZ ; has WINAPI (@0)
; public: void __thiscall CDMNodeObj::GetSize(__int64 &,int)
?GetSize@CDMNodeObj@@QAEXAA_JH@Z ; has WINAPI (@8)
; public: void __thiscall CDMNodeObj::GetSizeMB(__int64 &)
?GetSizeMB@CDMNodeObj@@QAEXAA_J@Z ; has WINAPI (@4)
; public: void __thiscall CDMNodeObj::GetSizeString(class CString &)
?GetSizeString@CDMNodeObj@@QAEXAAVCString@@@Z ; has WINAPI (@4)
; public: __int64 __thiscall CDMNodeObj::GetStartOffset(void)
?GetStartOffset@CDMNodeObj@@QAE_JXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::GetStatus(void)
?GetStatus@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: enum _STORAGE_TYPES __thiscall CDMNodeObj::GetStorageType(void)
?GetStorageType@CDMNodeObj@@QAE?AW4_STORAGE_TYPES@@XZ ; has WINAPI (@0)
; public: void __thiscall CDMNodeObj::GetStorageType(class CString &,int)
?GetStorageType@CDMNodeObj@@QAEXAAVCString@@H@Z ; has WINAPI (@8)
; class CString __stdcall GetStringFromRc(unsigned long)
?GetStringFromRc@@YG?AVCString@@K@Z ; has WINAPI (@8)
; public: unsigned long __thiscall CTaskData::GetUIState(void)
?GetUIState@CTaskData@@QAEKXZ ; has WINAPI (@0)
; public: __int64 __thiscall CDMNodeObj::GetUnallocSpace(int)
?GetUnallocSpace@CDMNodeObj@@QAE_JH@Z ; has WINAPI (@4)
; public: __int64 __thiscall CDMNodeObj::GetUsableContiguousSpaceInMB(void)
?GetUsableContiguousSpaceInMB@CDMNodeObj@@QAE_JXZ ; has WINAPI (@0)
; protected: void __thiscall CDataCache::GetVolumeCookies(unsigned long &,long **)
?GetVolumeCookies@CDataCache@@IAEXAAKPAPAJ@Z ; has WINAPI (@8)
; public: unsigned long __thiscall CDataCache::GetVolumeCount(void)
?GetVolumeCount@CDataCache@@QAEKXZ ; has WINAPI (@0)
; public: long __thiscall CDMNodeObj::GetVolumeFileSystemTypes(unsigned long &,struct ilhfilesysteminfo **)
?GetVolumeFileSystemTypes@CDMNodeObj@@QAEJAAKPAPAUilhfilesysteminfo@@@Z ; has WINAPI (@8)
; public: int __thiscall CDMNodeObj::GetVolumeInfo(struct volumeinfo &)
?GetVolumeInfo@CDMNodeObj@@QAEHAAUvolumeinfo@@@Z ; has WINAPI (@4)
; public: int __thiscall CDMNodeObj::GetVolumeStatus(class CString &)
?GetVolumeStatus@CDMNodeObj@@QAEHAAVCString@@@Z ; has WINAPI (@4)
; public: __int64 __thiscall CDMNodeObj::GetVolumeTotalSizeMB(void)
?GetVolumeTotalSizeMB@CDMNodeObj@@QAE_JXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::HasExtendedPartition(void)
?HasExtendedPartition@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDataCache::HasNTFSwithDriveLetter(void)
?HasNTFSwithDriveLetter@CDataCache@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CTaskData::HasNTFSwithDriveLetter(void)
?HasNTFSwithDriveLetter@CTaskData@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDataCache::HasVMDisk(void)
?HasVMDisk@CDataCache@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::IsActive(void)
?IsActive@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDataCache::IsAlpha(void)
?IsAlpha@CDataCache@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CTaskData::IsAlpha(void)
?IsAlpha@CTaskData@@QAEHXZ ; has WINAPI (@0)
; public: long __thiscall CDMNodeObj::IsConvertSuccess(int)
?IsConvertSuccess@CDMNodeObj@@QAEJH@Z ; has WINAPI (@4)
; public: int __thiscall CDMNodeObj::IsCurrBootVolume(void)
?IsCurrBootVolume@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::IsCurrSystemVolume(void)
?IsCurrSystemVolume@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::IsDiskEmpty(void)
?IsDiskEmpty@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::IsDiskOffline(void)
?IsDiskOffline@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::IsDiskReadOnly(void)
?IsDiskReadOnly@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDataCache::IsDynamic1394(void)
?IsDynamic1394@CDataCache@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::IsEECoveredGPTDisk(void)
?IsEECoveredGPTDisk@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::IsESPPartition(void)
?IsESPPartition@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDataCache::IsEfi(void)
?IsEfi@CDataCache@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CTaskData::IsEfi(void)
?IsEfi@CTaskData@@QAEHXZ ; has WINAPI (@0)
; public: long __thiscall CDMNodeObj::IsExtendedPartitionCreated(void)
?IsExtendedPartitionCreated@CDMNodeObj@@QAEJXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::IsFTVolume(void)
?IsFTVolume@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::IsFakeVolume(void)
?IsFakeVolume@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::IsFirstFreeRegion(void)
?IsFirstFreeRegion@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::IsFreeSpaceFollowed(__int64)
?IsFreeSpaceFollowed@CDMNodeObj@@QAEH_J@Z ; has WINAPI (@8)
; int __stdcall IsHiddenRegion(struct regioninfoex &)
?IsHiddenRegion@@YGHAAUregioninfoex@@@Z ; has WINAPI (@4)
; public: int __thiscall CDMNodeObj::IsHiddenRegion(void)
?IsHiddenRegion@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::IsInFlux(void)
?IsInFlux@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CTaskData::IsLocalMachine(void)
?IsLocalMachine@CTaskData@@QAEHXZ ; has WINAPI (@0)
; int __stdcall IsMbrEEPartition(struct regioninfoex &)
?IsMbrEEPartition@@YGHAAUregioninfoex@@@Z ; has WINAPI (@4)
; public: int __thiscall CDMNodeObj::IsMbrEEPartition(void)
?IsMbrEEPartition@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::IsMember(class CDMNodeObj *)
?IsMember@CDMNodeObj@@QAEHPAV1@@Z ; has WINAPI (@4)
; public: int __thiscall CDMNodeObj::IsNEC_98Disk(void)
?IsNEC_98Disk@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDataCache::IsNEC_98Server(void)
?IsNEC_98Server@CDataCache@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CTaskData::IsNEC_98Server(void)
?IsNEC_98Server@CTaskData@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CTaskData::IsNTServer(void)
?IsNTServer@CTaskData@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::IsOemPartition(void)
?IsOemPartition@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDataCache::IsPersonalOrLapTopServer(void)
?IsPersonalOrLapTopServer@CDataCache@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDataCache::IsPostLonghornVdsVersion(void)
?IsPostLonghornVdsVersion@CDataCache@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CTaskData::IsPostLonghornVdsVersion(void)
?IsPostLonghornVdsVersion@CTaskData@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDataCache::IsPreLonghornVdsVersion(void)
?IsPreLonghornVdsVersion@CDataCache@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CTaskData::IsPreLonghornVdsVersion(void)
?IsPreLonghornVdsVersion@CTaskData@@QAEHXZ ; has WINAPI (@0)
IsRequestPending@0
; public: int __thiscall CDMNodeObj::IsRevertable(void)
?IsRevertable@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CTaskData::IsSecureSystemPartition(void)
?IsSecureSystemPartition@CTaskData@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::IsSpacesProtectivePartition(void)
?IsSpacesProtectivePartition@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::IsUnknownPartition(void)
?IsUnknownPartition@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::IsUpgradeable(void)
?IsUpgradeable@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: long __thiscall CDMNodeObj::IsVolumeArrived(__int64,enum _LAYOUT_TYPES)
?IsVolumeArrived@CDMNodeObj@@QAEJ_JW4_LAYOUT_TYPES@@@Z ; has WINAPI (@12)
; public: int __thiscall CDMNodeObj::IsVolumeSimple(void)
?IsVolumeSimple@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDataCache::IsWolfpack(void)
?IsWolfpack@CDataCache@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CTaskData::IsWolfpack(void)
?IsWolfpack@CTaskData@@QAEHXZ ; has WINAPI (@0)
; public: void __thiscall CDMComponentData::LoadData(class CDMScopeNode *,long)
?LoadData@CDMComponentData@@QAEXPAVCDMScopeNode@@J@Z ; has WINAPI (@8)
LoadPropertyPageData@12
; public: void __thiscall CDMNodeObj::MarkDiskForLastVolume(class CDMNodeObj *)
?MarkDiskForLastVolume@CDMNodeObj@@QAEXPAV1@@Z ; has WINAPI (@4)
; public: void __thiscall CDMNodeObj::MarkDisksForLastVolume(void)
?MarkDisksForLastVolume@CDMNodeObj@@QAEXXZ ; has WINAPI (@0)
; public: int __thiscall CDMNodeObj::OnlyContiguousExtendAllowed(void)
?OnlyContiguousExtendAllowed@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; void __stdcall ParseDeviceName(int *,int *,int *,unsigned short *)
?ParseDeviceName@@YGXPAH00PAG@Z ; has WINAPI (@16)
; public: void __thiscall CContextMenu::PopUpInit(class CDMNodeObj *,int &,int &,int)
?PopUpInit@CContextMenu@@QAEXPAVCDMNodeObj@@AAH1H@Z ; has WINAPI (@16)
; public: void __thiscall CDataCache::PopulateDiskGroupData(struct DISK_GROUP_DATA *)
?PopulateDiskGroupData@CDataCache@@QAEXPAUDISK_GROUP_DATA@@@Z ; has WINAPI (@4)
; public: void __thiscall CDataCache::PopulateEncapsulateData(struct ENCAPSULATE_DATA *)
?PopulateEncapsulateData@CDataCache@@QAEXPAUENCAPSULATE_DATA@@@Z ; has WINAPI (@4)
; public: void __thiscall CDMNodeObj::RecalculateSpace(void)
?RecalculateSpace@CDMNodeObj@@QAEXXZ ; has WINAPI (@0)
; public: void __thiscall CDMComponentData::RefreshDiskView(class CDMScopeNode *)
?RefreshDiskView@CDMComponentData@@QAEXPAVCDMScopeNode@@@Z ; has WINAPI (@4)
; public: void __thiscall CContextMenu::RefreshFileSys(long)
?RefreshFileSys@CContextMenu@@QAEXJ@Z ; has WINAPI (@4)
; public: void __thiscall CDMComponentData::ReloadData(class CDMScopeNode *)
?ReloadData@CDMComponentData@@QAEXPAVCDMScopeNode@@@Z ; has WINAPI (@4)
; __int64 __stdcall RoundUpToMB(__int64)
?RoundUpToMB@@YG_J_J@Z ; has WINAPI (@8)
; public: void __thiscall CDMSnapin::SetDescriptionBarText(long)
?SetDescriptionBarText@CDMSnapin@@QAEXJ@Z ; has WINAPI (@4)
; public: void __thiscall CDataCache::SetDiskList(struct diskinfoex *,unsigned long)
?SetDiskList@CDataCache@@QAEXPAUdiskinfoex@@K@Z ; has WINAPI (@8)
; public: void __thiscall CDataCache::SetDriveLetterInUse(unsigned short,int)
?SetDriveLetterInUse@CDataCache@@QAEXGH@Z ; has WINAPI (@8)
; public: void __thiscall CDMNodeObj::SetFSId(__int64)
?SetFSId@CDMNodeObj@@QAEX_J@Z ; has WINAPI (@8)
; public: void __thiscall CDMComponentData::SetOcxViewType(class CDMScopeNode *)
?SetOcxViewType@CDMComponentData@@QAEXPAVCDMScopeNode@@@Z ; has WINAPI (@4)
; public: void __thiscall CDMComponentData::SetOcxViewTypeForce(class CDMScopeNode *)
?SetOcxViewTypeForce@CDMComponentData@@QAEXPAVCDMScopeNode@@@Z ; has WINAPI (@4)
; public: void __thiscall CTaskData::SetUIState(unsigned long)
?SetUIState@CTaskData@@QAEXK@Z ; has WINAPI (@4)
; public: void __thiscall CDataCache::SetVolumeList(struct volumeinfo *,unsigned long,class CTaskData *)
?SetVolumeList@CDataCache@@QAEXPAUvolumeinfo@@KPAVCTaskData@@@Z ; has WINAPI (@12)
; public: long __thiscall CContextMenu::ShowContextMenu(class CWnd *,long,long,long)
?ShowContextMenu@CContextMenu@@QAEJPAVCWnd@@JJJ@Z ; has WINAPI (@16)
; public: int __thiscall CDataCache::SupportGpt(void)
?SupportGpt@CDataCache@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CTaskData::SupportGpt(void)
?SupportGpt@CTaskData@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDataCache::SupportMirror(void)
?SupportMirror@CDataCache@@QAEHXZ ; has WINAPI (@0)
; public: int __thiscall CDataCache::SupportRaid5(void)
?SupportRaid5@CDataCache@@QAEHXZ ; has WINAPI (@0)
; public: void __thiscall CDMComponentData::UIStateChange(class CDMScopeNode *,unsigned long)
?UIStateChange@CDMComponentData@@QAEXPAVCDMScopeNode@@K@Z ; has WINAPI (@8)
; public: void __thiscall CDMSnapin::UpDateConsoleView(long)
?UpDateConsoleView@CDMSnapin@@QAEXJ@Z ; has WINAPI (@4)
; public: int __thiscall CDMNodeObj::VolumeContainsActiveRegion(void)
?VolumeContainsActiveRegion@CDMNodeObj@@QAEHXZ ; has WINAPI (@0)
; int __stdcall namecmp(unsigned short const *,unsigned short const *)
?namecmp@@YGHPBG0@Z ; has WINAPI (@8)
DllCanUnloadNow@0
DllGetClassObject@12
DllRegisterServer@0
