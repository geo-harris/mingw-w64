;
; Definition file of MfcSubs.dll
; Automatic generated by gendef
; written by Kai Tietz 2008
;
LIBRARY "MfcSubs.dll"
EXPORTS
; void __stdcall <class CString>(class CString *,int)
??$ConstructElements@VCString@@@@YGXPAVCString@@H@Z ; has WINAPI (@8)
; void __stdcall <class CString>(class CString *,class CString const *,int)
??$CopyElements@VCString@@@@YGXPAVCString@@PBV0@H@Z ; has WINAPI (@12)
; void __stdcall <class CString>(class CString *,int)
??$DestructElements@VCString@@@@YGXPAVCString@@H@Z ; has WINAPI (@8)
; unsigned int __stdcall <struct _GUID const &>(struct _GUID const &)
??$HashKey@ABU_GUID@@@@YGIABU_GUID@@@Z ; has WINAPI (@4)
; unsigned int __stdcall <char const *>(char const *)
??$HashKey@PBD@@YGIPBD@Z ; has WINAPI (@4)
; unsigned int __stdcall <unsigned short const *>(unsigned short const *)
??$HashKey@PBG@@YGIPBG@Z ; has WINAPI (@4)
; public: __thiscall CCriticalSection::CCriticalSection(void)
??0CCriticalSection@@QAE@XZ ; has WINAPI (@0)
; public: __thiscall CMapStringToPtr::CMapStringToPtr(int)
??0CMapStringToPtr@@QAE@H@Z ; has WINAPI (@4)
; protected: __thiscall CObject::CObject(void)
??0CObject@@IAE@XZ ; has WINAPI (@0)
; public: __thiscall CString::CString(class CString const &)
??0CString@@QAE@ABV0@@Z ; has WINAPI (@4)
; public: __thiscall CString::CString(unsigned short,int)
??0CString@@QAE@GH@Z ; has WINAPI (@8)
; public: __thiscall CString::CString(char const *)
??0CString@@QAE@PBD@Z ; has WINAPI (@4)
; public: __thiscall CString::CString(unsigned char const *)
??0CString@@QAE@PBE@Z ; has WINAPI (@4)
; public: __thiscall CString::CString(unsigned short const *)
??0CString@@QAE@PBG@Z ; has WINAPI (@4)
; public: __thiscall CString::CString(unsigned short const *,int)
??0CString@@QAE@PBGH@Z ; has WINAPI (@8)
; public: __thiscall CString::CString(void)
??0CString@@QAE@XZ ; has WINAPI (@0)
; public: __thiscall CStringArray::CStringArray(void)
??0CStringArray@@QAE@XZ ; has WINAPI (@0)
; public: __thiscall CSyncObject::CSyncObject(unsigned short const *)
??0CSyncObject@@QAE@PBG@Z ; has WINAPI (@4)
; public: virtual __thiscall CCriticalSection::~CCriticalSection(void)
??1CCriticalSection@@UAE@XZ ; has WINAPI (@0)
; public: virtual __thiscall CMapStringToPtr::~CMapStringToPtr(void)
??1CMapStringToPtr@@UAE@XZ ; has WINAPI (@0)
; public: virtual __thiscall CObject::~CObject(void)
??1CObject@@UAE@XZ ; has WINAPI (@0)
; public: __thiscall CString::~CString(void)
??1CString@@QAE@XZ ; has WINAPI (@0)
; public: virtual __thiscall CStringArray::~CStringArray(void)
??1CStringArray@@UAE@XZ ; has WINAPI (@0)
; public: virtual __thiscall CSyncObject::~CSyncObject(void)
??1CSyncObject@@UAE@XZ ; has WINAPI (@0)
; public: struct CPlex &__thiscall CPlex::operator =(struct CPlex const &)
??4CPlex@@QAEAAU0@ABU0@@Z ; has WINAPI (@4)
; public: class CString const &__thiscall CString::operator =(class CString const &)
??4CString@@QAEABV0@ABV0@@Z ; has WINAPI (@4)
; public: class CString const &__thiscall CString::operator =(char)
??4CString@@QAEABV0@D@Z ; has WINAPI (@4)
; public: class CString const &__thiscall CString::operator =(unsigned short)
??4CString@@QAEABV0@G@Z ; has WINAPI (@4)
; public: class CString const &__thiscall CString::operator =(char const *)
??4CString@@QAEABV0@PBD@Z ; has WINAPI (@4)
; public: class CString const &__thiscall CString::operator =(unsigned char const *)
??4CString@@QAEABV0@PBE@Z ; has WINAPI (@4)
; public: class CString const &__thiscall CString::operator =(unsigned short const *)
??4CString@@QAEABV0@PBG@Z ; has WINAPI (@4)
; bool __stdcall operator ==(class CString const &,class CString const &)
??8@YG_NABVCString@@0@Z ; has WINAPI (@8)
; bool __stdcall operator ==(class CString const &,unsigned short const *)
??8@YG_NABVCString@@PBG@Z ; has WINAPI (@8)
; bool __stdcall operator ==(unsigned short const *,class CString const &)
??8@YG_NPBGABVCString@@@Z ; has WINAPI (@8)
; bool __stdcall operator !=(class CString const &,class CString const &)
??9@YG_NABVCString@@0@Z ; has WINAPI (@8)
; bool __stdcall operator !=(class CString const &,unsigned short const *)
??9@YG_NABVCString@@PBG@Z ; has WINAPI (@8)
; bool __stdcall operator !=(unsigned short const *,class CString const &)
??9@YG_NPBGABVCString@@@Z ; has WINAPI (@8)
; public: void *&__thiscall CMapStringToPtr::operator[](unsigned short const *)
??ACMapStringToPtr@@QAEAAPAXPBG@Z ; has WINAPI (@4)
; public: unsigned short __thiscall CString::operator[](int)const 
??ACString@@QBEGH@Z ; has WINAPI (@4)
; public: class CString &__thiscall CStringArray::operator[](int)
??ACStringArray@@QAEAAVCString@@H@Z ; has WINAPI (@4)
; public: class CString __thiscall CStringArray::operator[](int)const 
??ACStringArray@@QBE?AVCString@@H@Z ; has WINAPI (@8)
; public: void __thiscall CCriticalSection::operator struct _RTL_CRITICAL_SECTION *(...)throw()
??BCCriticalSection@@QAEPAU_RTL_CRITICAL_SECTION@@XZ ; has WINAPI (@0)
; public: void __thiscall CString::operator unsigned short const *(...)const throw()
??BCString@@QBEPBGXZ ; has WINAPI (@0)
; public: void __thiscall CSyncObject::operator void *(...)const throw()
??BCSyncObject@@QBEPAXXZ ; has WINAPI (@0)
; class CString __stdcall operator +(class CString const &,class CString const &)
??H@YG?AVCString@@ABV0@0@Z ; has WINAPI (@12)
; class CString __stdcall operator +(class CString const &,char)
??H@YG?AVCString@@ABV0@D@Z ; has WINAPI (@12)
; class CString __stdcall operator +(class CString const &,unsigned short)
??H@YG?AVCString@@ABV0@G@Z ; has WINAPI (@12)
; class CString __stdcall operator +(class CString const &,unsigned short const *)
??H@YG?AVCString@@ABV0@PBG@Z ; has WINAPI (@12)
; class CString __stdcall operator +(char,class CString const &)
??H@YG?AVCString@@DABV0@@Z ; has WINAPI (@12)
; class CString __stdcall operator +(unsigned short,class CString const &)
??H@YG?AVCString@@GABV0@@Z ; has WINAPI (@12)
; class CString __stdcall operator +(unsigned short const *,class CString const &)
??H@YG?AVCString@@PBGABV0@@Z ; has WINAPI (@12)
; bool __stdcall operator <(class CString const &,class CString const &)
??M@YG_NABVCString@@0@Z ; has WINAPI (@8)
; bool __stdcall operator <(class CString const &,unsigned short const *)
??M@YG_NABVCString@@PBG@Z ; has WINAPI (@8)
; bool __stdcall operator <(unsigned short const *,class CString const &)
??M@YG_NPBGABVCString@@@Z ; has WINAPI (@8)
; bool __stdcall operator <=(class CString const &,class CString const &)
??N@YG_NABVCString@@0@Z ; has WINAPI (@8)
; bool __stdcall operator <=(class CString const &,unsigned short const *)
??N@YG_NABVCString@@PBG@Z ; has WINAPI (@8)
; bool __stdcall operator <=(unsigned short const *,class CString const &)
??N@YG_NPBGABVCString@@@Z ; has WINAPI (@8)
; bool __stdcall operator >(class CString const &,class CString const &)
??O@YG_NABVCString@@0@Z ; has WINAPI (@8)
; bool __stdcall operator >(class CString const &,unsigned short const *)
??O@YG_NABVCString@@PBG@Z ; has WINAPI (@8)
; bool __stdcall operator >(unsigned short const *,class CString const &)
??O@YG_NPBGABVCString@@@Z ; has WINAPI (@8)
; bool __stdcall operator >=(class CString const &,class CString const &)
??P@YG_NABVCString@@0@Z ; has WINAPI (@8)
; bool __stdcall operator >=(class CString const &,unsigned short const *)
??P@YG_NABVCString@@PBG@Z ; has WINAPI (@8)
; bool __stdcall operator >=(unsigned short const *,class CString const &)
??P@YG_NPBGABVCString@@@Z ; has WINAPI (@8)
; public: class CString const &__thiscall CString::operator +=(class CString const &)
??YCString@@QAEABV0@ABV0@@Z ; has WINAPI (@4)
; public: class CString const &__thiscall CString::operator +=(char)
??YCString@@QAEABV0@D@Z ; has WINAPI (@4)
; public: class CString const &__thiscall CString::operator +=(unsigned short)
??YCString@@QAEABV0@G@Z ; has WINAPI (@4)
; public: class CString const &__thiscall CString::operator +=(unsigned short const *)
??YCString@@QAEABV0@PBG@Z ; has WINAPI (@4)
; const CCriticalSection::$vftable
??_7CCriticalSection@@6B@ DATA
; const CMapStringToPtr::$vftable
??_7CMapStringToPtr@@6B@ DATA
; const CObject::$vftable
??_7CObject@@6B@ DATA
; const CStringArray::$vftable
??_7CStringArray@@6B@ DATA
; const CSyncObject::$vftable
??_7CSyncObject@@6B@ DATA
; public: void __thiscall CMapStringToPtr::__dflt_ctor_closure(void)
??_FCMapStringToPtr@@QAEXXZ ; has WINAPI (@0)
; public: int __thiscall CStringArray::Add(unsigned short const *)
?Add@CStringArray@@QAEHPBG@Z ; has WINAPI (@4)
; unsigned short *__stdcall AfxA2WHelper(unsigned short *,char const *,int)
?AfxA2WHelper@@YGPAGPAGPBDH@Z ; has WINAPI (@12)
; int __stdcall AfxExtractSubString(class CString &,unsigned short const *,int,unsigned short)
?AfxExtractSubString@@YGHAAVCString@@PBGHG@Z ; has WINAPI (@16)
; class CString const &__stdcall AfxGetEmptyString(void)
?AfxGetEmptyString@@YGABVCString@@XZ ; has WINAPI (@0)
; int __stdcall AfxLoadString(unsigned int,unsigned short *,unsigned int)
?AfxLoadString@@YGHIPAGI@Z ; has WINAPI (@12)
; char *__stdcall AfxW2AHelper(char *,unsigned short const *,int)
?AfxW2AHelper@@YGPADPADPBGH@Z ; has WINAPI (@12)
; protected: void __thiscall CString::AllocBeforeWrite(int)
?AllocBeforeWrite@CString@@IAEXH@Z ; has WINAPI (@4)
; protected: void __thiscall CString::AllocBuffer(int)
?AllocBuffer@CString@@IAEXH@Z ; has WINAPI (@4)
; protected: void __thiscall CString::AllocCopy(class CString &,unsigned int,unsigned int,unsigned int)const 
?AllocCopy@CString@@IBEXAAV1@III@Z ; has WINAPI (@16)
; public: int __thiscall CStringArray::Append(class CStringArray const &)
?Append@CStringArray@@QAEHABV1@@Z ; has WINAPI (@4)
; protected: void __thiscall CString::AssignCopy(int,unsigned short const *)
?AssignCopy@CString@@IAEXHPBG@Z ; has WINAPI (@8)
; public: int __thiscall CString::Collate(unsigned short const *)const 
?Collate@CString@@QBEHPBG@Z ; has WINAPI (@4)
; public: int __thiscall CString::Compare(unsigned short const *)const 
?Compare@CString@@QBEHPBG@Z ; has WINAPI (@4)
; public: int __thiscall CString::CompareNoCase(unsigned short const *)const 
?CompareNoCase@CString@@QBEHPBG@Z ; has WINAPI (@4)
; protected: void __thiscall CString::ConcatCopy(int,unsigned short const *,int,unsigned short const *)
?ConcatCopy@CString@@IAEXHPBGH0@Z ; has WINAPI (@16)
; protected: void __thiscall CString::ConcatInPlace(int,unsigned short const *)
?ConcatInPlace@CString@@IAEXHPBG@Z ; has WINAPI (@8)
; public: void __thiscall CStringArray::Copy(class CStringArray const &)
?Copy@CStringArray@@QAEXABV1@@Z ; has WINAPI (@4)
; protected: void __thiscall CString::CopyBeforeWrite(void)
?CopyBeforeWrite@CString@@IAEXXZ ; has WINAPI (@0)
; public: static struct CPlex *__stdcall CPlex::Create(struct CPlex *&,unsigned int,unsigned int)
?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; has WINAPI (@12)
; public: class CString &__thiscall CStringArray::ElementAt(int)
?ElementAt@CStringArray@@QAEAAVCString@@H@Z ; has WINAPI (@4)
; public: void __thiscall CString::Empty(void)
?Empty@CString@@QAEXXZ ; has WINAPI (@0)
; public: int __thiscall CString::Find(unsigned short)const 
?Find@CString@@QBEHG@Z ; has WINAPI (@4)
; public: int __thiscall CString::Find(unsigned short const *)const 
?Find@CString@@QBEHPBG@Z ; has WINAPI (@4)
; public: int __thiscall CString::FindOneOf(unsigned short const *)const 
?FindOneOf@CString@@QBEHPBG@Z ; has WINAPI (@4)
; public: void __cdecl CString::Format(unsigned int,...)
?Format@CString@@QAAXIZZ ; has WINAPI (@0)
; public: void __cdecl CString::Format(unsigned short const *,...)
?Format@CString@@QAAXPBGZZ ; has WINAPI (@0)
; public: void __cdecl CString::FormatMessageW(unsigned int,...)
?FormatMessageW@CString@@QAAXIZZ ; has WINAPI (@0)
; public: void __cdecl CString::FormatMessageW(unsigned short const *,...)
?FormatMessageW@CString@@QAAXPBGZZ ; has WINAPI (@0)
; protected: void __thiscall CString::FormatV(unsigned short const *,char *)
?FormatV@CString@@IAEXPBGPAD@Z ; has WINAPI (@8)
; protected: void __thiscall CMapStringToPtr::FreeAssoc(struct CMapStringToPtr::CAssoc *)
?FreeAssoc@CMapStringToPtr@@IAEXPAUCAssoc@1@@Z ; has WINAPI (@4)
; public: void __thiscall CPlex::FreeDataChain(void)
?FreeDataChain@CPlex@@QAEXXZ ; has WINAPI (@0)
; public: void __thiscall CString::FreeExtra(void)
?FreeExtra@CString@@QAEXXZ ; has WINAPI (@0)
; public: void __thiscall CStringArray::FreeExtra(void)
?FreeExtra@CStringArray@@QAEXXZ ; has WINAPI (@0)
; public: int __thiscall CString::GetAllocLength(void)const 
?GetAllocLength@CString@@QBEHXZ ; has WINAPI (@0)
; protected: struct CMapStringToPtr::CAssoc *__thiscall CMapStringToPtr::GetAssocAt(unsigned short const *,unsigned int &)const 
?GetAssocAt@CMapStringToPtr@@IBEPAUCAssoc@1@PBGAAI@Z ; has WINAPI (@8)
; public: unsigned short __thiscall CString::GetAt(int)const 
?GetAt@CString@@QBEGH@Z ; has WINAPI (@4)
; public: class CString __thiscall CStringArray::GetAt(int)const 
?GetAt@CStringArray@@QBE?AVCString@@H@Z ; has WINAPI (@8)
; public: unsigned short *__thiscall CString::GetBuffer(int)
?GetBuffer@CString@@QAEPAGH@Z ; has WINAPI (@4)
; public: unsigned short *__thiscall CString::GetBufferSetLength(int)
?GetBufferSetLength@CString@@QAEPAGH@Z ; has WINAPI (@4)
; public: int __thiscall CMapStringToPtr::GetCount(void)const 
?GetCount@CMapStringToPtr@@QBEHXZ ; has WINAPI (@0)
; protected: struct CStringData *__thiscall CString::GetData(void)const 
?GetData@CString@@IBEPAUCStringData@@XZ ; has WINAPI (@0)
; public: class CString *__thiscall CStringArray::GetData(void)
?GetData@CStringArray@@QAEPAVCString@@XZ ; has WINAPI (@0)
; public: class CString const *__thiscall CStringArray::GetData(void)const 
?GetData@CStringArray@@QBEPBVCString@@XZ ; has WINAPI (@0)
; public: unsigned int __thiscall CMapStringToPtr::GetHashTableSize(void)const 
?GetHashTableSize@CMapStringToPtr@@QBEIXZ ; has WINAPI (@0)
; public: int __thiscall CString::GetLength(void)const 
?GetLength@CString@@QBEHXZ ; has WINAPI (@0)
; public: void __thiscall CMapStringToPtr::GetNextAssoc(struct __POSITION *&,class CString &,void *&)const 
?GetNextAssoc@CMapStringToPtr@@QBEXAAPAU__POSITION@@AAVCString@@AAPAX@Z ; has WINAPI (@12)
; public: int __thiscall CStringArray::GetSize(void)const 
?GetSize@CStringArray@@QBEHXZ ; has WINAPI (@0)
; public: struct __POSITION *__thiscall CMapStringToPtr::GetStartPosition(void)const 
?GetStartPosition@CMapStringToPtr@@QBEPAU__POSITION@@XZ ; has WINAPI (@0)
; public: int __thiscall CStringArray::GetUpperBound(void)const 
?GetUpperBound@CStringArray@@QBEHXZ ; has WINAPI (@0)
; public: unsigned int __thiscall CMapStringToPtr::HashKey(unsigned short const *)const 
?HashKey@CMapStringToPtr@@QBEIPBG@Z ; has WINAPI (@4)
; protected: void __thiscall CString::Init(void)
?Init@CString@@IAEXXZ ; has WINAPI (@0)
; public: void __thiscall CMapStringToPtr::InitHashTable(unsigned int,int)
?InitHashTable@CMapStringToPtr@@QAEXIH@Z ; has WINAPI (@8)
; public: void __thiscall CStringArray::InsertAt(int,class CStringArray *)
?InsertAt@CStringArray@@QAEXHPAV1@@Z ; has WINAPI (@8)
; public: void __thiscall CStringArray::InsertAt(int,unsigned short const *,int)
?InsertAt@CStringArray@@QAEXHPBGH@Z ; has WINAPI (@12)
; public: int __thiscall CMapStringToPtr::IsEmpty(void)const 
?IsEmpty@CMapStringToPtr@@QBEHXZ ; has WINAPI (@0)
; public: int __thiscall CString::IsEmpty(void)const 
?IsEmpty@CString@@QBEHXZ ; has WINAPI (@0)
; public: class CString __thiscall CString::Left(int)const 
?Left@CString@@QBE?AV1@H@Z ; has WINAPI (@8)
; public: int __thiscall CString::LoadStringW(unsigned int)
?LoadStringW@CString@@QAEHI@Z ; has WINAPI (@4)
; public: int __thiscall CCriticalSection::Lock(void)
?Lock@CCriticalSection@@QAEHXZ ; has WINAPI (@0)
; public: virtual int __thiscall CCriticalSection::Lock(unsigned long)
?Lock@CCriticalSection@@UAEHK@Z ; has WINAPI (@4)
; public: virtual int __thiscall CSyncObject::Lock(unsigned long)
?Lock@CSyncObject@@UAEHK@Z ; has WINAPI (@4)
; public: unsigned short *__thiscall CString::LockBuffer(void)
?LockBuffer@CString@@QAEPAGXZ ; has WINAPI (@0)
; public: int __thiscall CMapStringToPtr::Lookup(unsigned short const *,void *&)const 
?Lookup@CMapStringToPtr@@QBEHPBGAAPAX@Z ; has WINAPI (@8)
; public: int __thiscall CMapStringToPtr::LookupKey(unsigned short const *,unsigned short const *&)const 
?LookupKey@CMapStringToPtr@@QBEHPBGAAPBG@Z ; has WINAPI (@8)
; public: void __thiscall CString::MakeLower(void)
?MakeLower@CString@@QAEXXZ ; has WINAPI (@0)
; public: void __thiscall CString::MakeReverse(void)
?MakeReverse@CString@@QAEXXZ ; has WINAPI (@0)
; public: void __thiscall CString::MakeUpper(void)
?MakeUpper@CString@@QAEXXZ ; has WINAPI (@0)
; public: class CString __thiscall CString::Mid(int)const 
?Mid@CString@@QBE?AV1@H@Z ; has WINAPI (@8)
; public: class CString __thiscall CString::Mid(int,int)const 
?Mid@CString@@QBE?AV1@HH@Z ; has WINAPI (@12)
; protected: struct CMapStringToPtr::CAssoc *__thiscall CMapStringToPtr::NewAssoc(void)
?NewAssoc@CMapStringToPtr@@IAEPAUCAssoc@1@XZ ; has WINAPI (@0)
; protected: void __thiscall CString::Release(void)
?Release@CString@@IAEXXZ ; has WINAPI (@0)
; protected: static void __stdcall CString::Release(struct CStringData *)
?Release@CString@@KGXPAUCStringData@@@Z ; has WINAPI (@4)
; public: void __thiscall CString::ReleaseBuffer(int)
?ReleaseBuffer@CString@@QAEXH@Z ; has WINAPI (@4)
; public: void __thiscall CMapStringToPtr::RemoveAll(void)
?RemoveAll@CMapStringToPtr@@QAEXXZ ; has WINAPI (@0)
; public: void __thiscall CStringArray::RemoveAll(void)
?RemoveAll@CStringArray@@QAEXXZ ; has WINAPI (@0)
; public: void __thiscall CStringArray::RemoveAt(int,int)
?RemoveAt@CStringArray@@QAEXHH@Z ; has WINAPI (@8)
; public: int __thiscall CMapStringToPtr::RemoveKey(unsigned short const *)
?RemoveKey@CMapStringToPtr@@QAEHPBG@Z ; has WINAPI (@4)
; public: int __thiscall CString::ReverseFind(unsigned short)const 
?ReverseFind@CString@@QBEHG@Z ; has WINAPI (@4)
; public: class CString __thiscall CString::Right(int)const 
?Right@CString@@QBE?AV1@H@Z ; has WINAPI (@8)
; protected: static int __stdcall CString::SafeStrlen(unsigned short const *)
?SafeStrlen@CString@@KGHPBG@Z ; has WINAPI (@4)
; public: void __thiscall CMapStringToPtr::SetAt(unsigned short const *,void *)
?SetAt@CMapStringToPtr@@QAEXPBGPAX@Z ; has WINAPI (@8)
; public: void __thiscall CString::SetAt(int,unsigned short)
?SetAt@CString@@QAEXHG@Z ; has WINAPI (@8)
; public: void __thiscall CStringArray::SetAt(int,unsigned short const *)
?SetAt@CStringArray@@QAEXHPBG@Z ; has WINAPI (@8)
; public: void __thiscall CStringArray::SetAtGrow(int,unsigned short const *)
?SetAtGrow@CStringArray@@QAEXHPBG@Z ; has WINAPI (@8)
; public: void __thiscall CStringArray::SetSize(int,int)
?SetSize@CStringArray@@QAEXHH@Z ; has WINAPI (@8)
; public: class CString __thiscall CString::SpanExcluding(unsigned short const *)const 
?SpanExcluding@CString@@QBE?AV1@PBG@Z ; has WINAPI (@8)
; public: class CString __thiscall CString::SpanIncluding(unsigned short const *)const 
?SpanIncluding@CString@@QBE?AV1@PBG@Z ; has WINAPI (@8)
; public: void __thiscall CString::TrimLeft(void)
?TrimLeft@CString@@QAEXXZ ; has WINAPI (@0)
; public: void __thiscall CString::TrimRight(void)
?TrimRight@CString@@QAEXXZ ; has WINAPI (@0)
; public: virtual int __thiscall CCriticalSection::Unlock(void)
?Unlock@CCriticalSection@@UAEHXZ ; has WINAPI (@0)
; public: virtual int __thiscall CSyncObject::Unlock(long,long *)
?Unlock@CSyncObject@@UAEHJPAJ@Z ; has WINAPI (@8)
; public: void __thiscall CString::UnlockBuffer(void)
?UnlockBuffer@CString@@QAEXXZ ; has WINAPI (@0)
; public: void *__thiscall CPlex::data(void)
?data@CPlex@@QAEPAXXZ ; has WINAPI (@0)
