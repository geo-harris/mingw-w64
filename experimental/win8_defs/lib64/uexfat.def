;
; Definition file of UEXFAT.dll
; Automatic generated by gendef
; written by Kai Tietz 2008
;
LIBRARY "UEXFAT.dll"
EXPORTS
; public: __cdecl CLUSTER_CHAIN::CLUSTER_CHAIN(void)__ptr64 
??0CLUSTER_CHAIN@@QEAA@XZ
; public: __cdecl EXFATDIR::EXFATDIR(void)__ptr64 
??0EXFATDIR@@QEAA@XZ
; public: __cdecl EXFAT_DIRENT::EXFAT_DIRENT(void)__ptr64 
??0EXFAT_DIRENT@@QEAA@XZ
; public: __cdecl EXFAT_SA::EXFAT_SA(void)__ptr64 
??0EXFAT_SA@@QEAA@XZ
; public: __cdecl EXFAT_VOL::EXFAT_VOL(void)__ptr64 
??0EXFAT_VOL@@QEAA@XZ
; public: virtual __cdecl CLUSTER_CHAIN::~CLUSTER_CHAIN(void)__ptr64 
??1CLUSTER_CHAIN@@UEAA@XZ
; public: virtual __cdecl EXFATDIR::~EXFATDIR(void)__ptr64 
??1EXFATDIR@@UEAA@XZ
; public: virtual __cdecl EXFAT_DIRENT::~EXFAT_DIRENT(void)__ptr64 
??1EXFAT_DIRENT@@UEAA@XZ
; public: virtual __cdecl EXFAT_SA::~EXFAT_SA(void)__ptr64 
??1EXFAT_SA@@UEAA@XZ
; public: virtual __cdecl EXFAT_VOL::~EXFAT_VOL(void)__ptr64 
??1EXFAT_VOL@@UEAA@XZ
; public: unsigned long __cdecl FAT::AllocChain(class EXFATBITMAP *__ptr64,unsigned long,unsigned long *__ptr64)__ptr64 
?AllocChain@FAT@@QEAAKPEAVEXFATBITMAP@@KPEAK@Z
Chkdsk
ChkdskEx
Format
FormatEx
; public: void __cdecl FAT::FreeChain(class EXFATBITMAP *__ptr64,unsigned long)__ptr64 
?FreeChain@FAT@@QEAAXPEAVEXFATBITMAP@@K@Z
GetFilesystemInformation
; public: unsigned char __cdecl CLUSTER_CHAIN::Initialize(class MEM *__ptr64,class LOG_IO_DP_DRIVE *__ptr64,class EXFAT_SA *__ptr64,class FAT const *__ptr64,unsigned long,unsigned long,unsigned char)__ptr64 
?Initialize@CLUSTER_CHAIN@@QEAAEPEAVMEM@@PEAVLOG_IO_DP_DRIVE@@PEAVEXFAT_SA@@PEBVFAT@@KKE@Z
; public: unsigned char __cdecl EXFATDIR::Initialize(class HMEM *__ptr64,class LOG_IO_DP_DRIVE *__ptr64,class EXFAT_SA *__ptr64,class FAT const *__ptr64,unsigned long,unsigned long,unsigned char)__ptr64 
?Initialize@EXFATDIR@@QEAAEPEAVHMEM@@PEAVLOG_IO_DP_DRIVE@@PEAVEXFAT_SA@@PEBVFAT@@KKE@Z
; public: unsigned char __cdecl EXFAT_DIRENT::Initialize(class EXFAT_SA *__ptr64,void *__ptr64,class EXFATDIR *__ptr64,unsigned long)__ptr64 
?Initialize@EXFAT_DIRENT@@QEAAEPEAVEXFAT_SA@@PEAXPEAVEXFATDIR@@K@Z
; public: unsigned char __cdecl EXFAT_SA::Initialize(class LOG_IO_DP_DRIVE *__ptr64,class MESSAGE *__ptr64)__ptr64 
?Initialize@EXFAT_SA@@QEAAEPEAVLOG_IO_DP_DRIVE@@PEAVMESSAGE@@@Z
; public: enum FORMAT_ERROR_CODE __cdecl EXFAT_VOL::Initialize(class WSTRING const *__ptr64,class MESSAGE *__ptr64,unsigned char,unsigned char,enum _MEDIA_TYPE,unsigned char,unsigned char)__ptr64 
?Initialize@EXFAT_VOL@@QEAA?AW4FORMAT_ERROR_CODE@@PEBVWSTRING@@PEAVMESSAGE@@EEW4_MEDIA_TYPE@@EE@Z
; public: unsigned long __cdecl FAT::QueryAllocatedClusters(void)const __ptr64 
?QueryAllocatedClusters@FAT@@QEBAKXZ
; public: __int64 __cdecl EXFAT_DIRENT::QueryFileSize(void)__ptr64 
?QueryFileSize@EXFAT_DIRENT@@QEAA_JXZ
; public: unsigned long __cdecl FAT::QueryLengthOfChain(unsigned long,unsigned long *__ptr64)const __ptr64 
?QueryLengthOfChain@FAT@@QEBAKKPEAK@Z
; public: unsigned long __cdecl FAT::QueryNthCluster(unsigned long,unsigned long)const __ptr64 
?QueryNthCluster@FAT@@QEBAKKK@Z
; public: unsigned long __cdecl EXFAT_DIRENT::QueryStartingCluster(void)__ptr64 
?QueryStartingCluster@EXFAT_DIRENT@@QEAAKXZ
; public: virtual unsigned char __cdecl CLUSTER_CHAIN::Read(void)__ptr64 
?Read@CLUSTER_CHAIN@@UEAAEXZ
; public: unsigned char __cdecl CLUSTER_CHAIN::ReadAndRecordBadSectors(class EXFATSECRUNBITMAP *__ptr64)__ptr64 
?ReadAndRecordBadSectors@CLUSTER_CHAIN@@QEAAEPEAVEXFATSECRUNBITMAP@@@Z
Recover
; public: unsigned char __cdecl EXFAT_DIRENT::SetFileSize(__int64)__ptr64 
?SetFileSize@EXFAT_DIRENT@@QEAAE_J@Z
; public: unsigned char __cdecl EXFAT_DIRENT::SetStartingCluster(unsigned long)__ptr64 
?SetStartingCluster@EXFAT_DIRENT@@QEAAEK@Z
; public: unsigned char __cdecl EXFAT_DIRENT::VerifyAndFixPhase2(class EXFATBITMAP *__ptr64,class EXFATBITMAP *__ptr64,class WSTRING *__ptr64,unsigned char,unsigned char,unsigned char,enum FIX_LEVEL,unsigned char *__ptr64,class MESSAGE *__ptr64)__ptr64 
?VerifyAndFixPhase2@EXFAT_DIRENT@@QEAAEPEAVEXFATBITMAP@@0PEAVWSTRING@@EEEW4FIX_LEVEL@@PEAEPEAVMESSAGE@@@Z
; public: virtual unsigned char __cdecl CLUSTER_CHAIN::Write(void)__ptr64 
?Write@CLUSTER_CHAIN@@UEAAEXZ
; public: unsigned char __cdecl CLUSTER_CHAIN::WriteAndSkipBadSectors(void)__ptr64 
?WriteAndSkipBadSectors@CLUSTER_CHAIN@@QEAAEXZ
