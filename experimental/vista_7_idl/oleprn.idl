/* Automated generated idl file <oleprnlib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Union record forward declarations.  */
dispinterface Iprturl;
dispinterface ISNMP;
dispinterface Iasphelp;
dispinterface IDSPrintQueue;
dispinterface IOleCvt;
dispinterface _InstallEvent;
dispinterface IOleInstall;

/* Union record forward declarations.  */
coclass prturl;
coclass SNMP;
coclass asphelp;
coclass DSPrintQueue;
coclass OleCvt;
coclass OleInstall;

[
  uuid(7586B340-EC08-11D0-A466-00C04FC30DF6),
  version(1.0),
  helpstring("oleprn 1.0 Type Library")
]
library oleprnlib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(92337A8C-E11D-11D0-BE48-00C04FC30DF6),
     helpstring("prturl Class"),
     cancreate
   ]
   coclass prturl
   {
     dispinterface Iprturl;
   };
   [
     uuid(4F664F91-FF01-11D0-8AED-00C04FD7B597),
     helpstring("SNMP Class"),
     cancreate
   ]
   coclass SNMP
   {
     dispinterface ISNMP;
   };
   [
     uuid(3E4D4F1C-2AEE-11D1-9D3D-00C04FC30DF6),
     helpstring("asphelp Class"),
     cancreate
   ]
   coclass asphelp
   {
     dispinterface Iasphelp;
   };
   [
     uuid(435899C9-44AB-11D1-AF00-080036234103),
     helpstring("DSPrintQueue Class"),
     cancreate
   ]
   coclass DSPrintQueue
   {
     dispinterface IDSPrintQueue;
   };
   [
     uuid(65303443-AD66-11D1-9D65-00C04FC30DF6),
     helpstring("OleCvt Class"),
     cancreate
   ]
   coclass OleCvt
   {
     dispinterface IOleCvt;
   };
   [
     uuid(C3701884-B39B-11D1-9D68-00C04FC30DF6),
     helpstring("OleInstall Class"),
     cancreate
   ]
   coclass OleInstall
   {
     dispinterface IOleInstall;
     dispinterface _InstallEvent;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(7586B34D-EC08-11D0-A466-00C04FC30DF6),
     helpstring("Iprturl Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface Iprturl : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall ClientInfo (
       [out retval] long *lpdwInfo
     );
     [id(5), propget]
     HRESULT __stdcall SupportLinkName (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall SupportLink (
       [out retval] BSTR *pVal
     );
     [propput]
     HRESULT __stdcall PrinterName (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall PrinterWebURL (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall PrinterOemURL (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall PrinterOemName (
       [out retval] BSTR *pVal
     );
   };
   [
     uuid(4F664F90-FF01-11D0-8AED-00C04FD7B597),
     helpstring("ISNMP Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ISNMP : IDispatch
   {
     [id(1)]
     HRESULT __stdcall Open (
       BSTR bstrHost,
       BSTR bstrCommunity,
       [in opt] VARIANT varRetry,
       [in opt] VARIANT varTimeout
     );
     HRESULT __stdcall Get (
       BSTR bstrOID,
       [out retval] VARIANT *varValue
     );
     HRESULT __stdcall GetList (
       [in] VARIANT *varList,
       [out retval] VARIANT *varValue
     );
     HRESULT __stdcall GetTree (
       [in] BSTR varTree,
       [out retval] VARIANT *varValue
     );
     HRESULT __stdcall Close (void);
     HRESULT __stdcall OIDFromString (
       BSTR bstrOID,
       [out retval] VARIANT *varOID
     );
     HRESULT __stdcall Set (
       BSTR bstrOID,
       VARIANT varValue
     );
     HRESULT __stdcall SetList (
       [in] VARIANT *varName,
       [in] VARIANT *varValue
     );
     HRESULT __stdcall GetAsByte (
       BSTR bstrOID,
       [out retval] unsigned int *puValue
     );
   };
   [
     uuid(3E4D4F1B-2AEE-11D1-9D3D-00C04FC30DF6),
     helpstring("Iasphelp Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface Iasphelp : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall OnStartPage (
       [in] IUnknown * piUnk
     );
     HRESULT __stdcall OnEndPage (void);
     [id(1)]
     HRESULT __stdcall Open (
       BSTR bstrPrinterName
     );
     HRESULT __stdcall Close (void);
     [propget]
     HRESULT __stdcall AspPage (
       UINT dwPage,
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall Community (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall SNMPDevice (
       [out retval] UINT *pVal
     );
     [propget]
     HRESULT __stdcall SNMPSupported (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall PageRateUnit (
       [out retval] long *pVal
     );
     [id(9), propget]
     HRESULT __stdcall IsHTTP (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall IPAddress (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall IsTCPMonSupported (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall Color (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall Duplex (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall MaximumResolution (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall MediaReady (
       [out retval] VARIANT *pVal
     );
     [propget]
     HRESULT __stdcall PaperNames (
       [out retval] VARIANT *pVal
     );
     [propget]
     HRESULT __stdcall PageRate (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall ComputerName (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall LongPaperName (
       BSTR bstrShortName,
       [out retval] BSTR *pVal
     );
     [id(21), propget]
     HRESULT __stdcall PortName (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall MibErrorDscp (
       UINT dwError,
       [out retval] BSTR *pVal
     );
     HRESULT __stdcall CalcJobETA (void);
     [propget]
     HRESULT __stdcall PendingJobCount (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall JobCompletionMinute (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall AvgJobSizeUnit (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall AvgJobSize (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall Status (
       [out retval] long *pVal
     );
     [id(31), propget]
     HRESULT __stdcall ErrorDscp (
       long lErrCode,
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall DriverName (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall ShareName (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall IsCluster (
       [out retval] long *pVal
     );
   };
   [
     uuid(435899C8-44AB-11D1-AF00-080036234103),
     helpstring("IDSPrintQueue Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IDSPrintQueue : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall UNCName (
       [out retval] BSTR *pVal
     );
     [id(1), propput]
     HRESULT __stdcall UNCName (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pVal
     );
     [id(2), propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Container (
       [out retval] BSTR *pVal
     );
     [id(3), propput]
     HRESULT __stdcall Container (
       [in] BSTR argNo1
     );
     HRESULT __stdcall Publish (
       UINT dwAction
     );
     [propget]
     HRESULT __stdcall Path (
       [out retval] BSTR *pVal
     );
   };
   [
     uuid(65303442-AD66-11D1-9D65-00C04FC30DF6),
     helpstring("IOleCvt Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IOleCvt : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall OnStartPage (
       [in] IUnknown * piUnk
     );
     HRESULT __stdcall OnEndPage (void);
     [id(1), propget]
     HRESULT __stdcall ToUtf8 (
       BSTR bstrUnicode,
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall EncodeUnicodeName (
       BSTR bstrSrcName,
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall DecodeUnicodeName (
       BSTR bstrSrcName,
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall ToUnicode (
       BSTR bstrString,
       long lCodePage,
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall ASPString (
       long lStringID,
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall ASPString1 (
       long lStringID,
       BSTR bstrParam,
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall ASPString2 (
       long lStringID,
       BSTR bstr1,
       BSTR bstr2,
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall SystemLocale (
       [out retval] BSTR *pVal
     );
   };
   [
     uuid(C3701885-B39B-11D1-9D68-00C04FC30DF6),
     helpstring("Event interface for OleInstall"),
     dispatchable
   ]
   dispinterface _InstallEvent
   {
     [id(1)]
     void __stdcall OnProgress (
       [in] long lProgress
     );
     void __stdcall InstallError (
       [in] long lErrCode
     );
   };
   [
     uuid(C3701883-B39B-11D1-9D68-00C04FC30DF6),
     helpstring("IOleInstall Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IOleInstall : IDispatch
   {
     [id(2)]
     HRESULT __stdcall InstallPrinter (
       BSTR pbstrUncName,
       BSTR pbstrUrl
     );
     [id(5)]
     HRESULT __stdcall OpenPrintersFolder (void);
   };

};

