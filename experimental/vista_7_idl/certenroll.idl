/* Automated generated idl file <certenrolllib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Union record forward declarations.  */
dispinterface IObjectId;
dispinterface IObjectIds;
dispinterface IBinaryConverter;
dispinterface IX500DistinguishedName;
dispinterface ICspInformation;
dispinterface ICspAlgorithms;
dispinterface ICspAlgorithm;
dispinterface ICspStatus;
dispinterface IX509EnrollmentStatus;
dispinterface ICspInformations;
dispinterface ICspStatuses;
dispinterface IX509PublicKey;
dispinterface IX509PrivateKey;
dispinterface IX509Extension;
dispinterface IX509Extensions;
dispinterface IX509ExtensionKeyUsage;
dispinterface IX509ExtensionEnhancedKeyUsage;
dispinterface IX509ExtensionTemplateName;
dispinterface IX509ExtensionTemplate;
dispinterface IAlternativeName;
dispinterface IAlternativeNames;
dispinterface IX509ExtensionAlternativeNames;
dispinterface IX509ExtensionBasicConstraints;
dispinterface IX509ExtensionSubjectKeyIdentifier;
dispinterface IX509ExtensionAuthorityKeyIdentifier;
dispinterface ISmimeCapability;
dispinterface ISmimeCapabilities;
dispinterface IX509ExtensionSmimeCapabilities;
dispinterface IPolicyQualifier;
dispinterface IPolicyQualifiers;
dispinterface ICertificatePolicy;
dispinterface ICertificatePolicies;
dispinterface IX509ExtensionCertificatePolicies;
dispinterface IX509ExtensionMSApplicationPolicies;
dispinterface IX509Attribute;
dispinterface IX509Attributes;
dispinterface IX509AttributeExtensions;
dispinterface IX509AttributeClientId;
dispinterface IX509AttributeRenewalCertificate;
dispinterface IX509AttributeArchiveKey;
dispinterface IX509AttributeArchiveKeyHash;
dispinterface IX509AttributeOSVersion;
dispinterface IX509AttributeCspProvider;
dispinterface ICryptAttribute;
dispinterface ICryptAttributes;
dispinterface ICertProperty;
dispinterface ICertProperties;
dispinterface ICertPropertyFriendlyName;
dispinterface ICertPropertyDescription;
dispinterface ICertPropertyAutoEnroll;
dispinterface ICertPropertyRequestOriginator;
dispinterface ICertPropertySHA1Hash;
dispinterface ICertPropertyKeyProvInfo;
dispinterface ICertPropertyArchived;
dispinterface ICertPropertyBackedUp;
dispinterface ICertPropertyEnrollment;
dispinterface ICertPropertyRenewal;
dispinterface ICertPropertyArchivedKeyHash;
dispinterface ICertPropertyEnrollmentPolicyServer;
dispinterface ISignerCertificate;
dispinterface IX509SignatureInformation;
dispinterface IX509NameValuePair;
dispinterface IX509CertificateRequestPkcs10V2;
dispinterface IX509CertificateRequestPkcs10;
dispinterface IX509CertificateRequest;
dispinterface IX509EnrollmentPolicyServer;
dispinterface IX509CertificateTemplates;
dispinterface IX509CertificateTemplate;
dispinterface ICertificationAuthorities;
dispinterface ICertificationAuthority;
dispinterface IX509CertificateRequestCertificate2;
dispinterface IX509CertificateRequestCertificate;
dispinterface IX509CertificateRequestPkcs7V2;
dispinterface IX509CertificateRequestPkcs7;
dispinterface IX509CertificateRequestCmc2;
dispinterface IX509CertificateRequestCmc;
dispinterface IX509NameValuePairs;
dispinterface ISignerCertificates;
dispinterface IX509Enrollment2;
dispinterface IX509Enrollment;
dispinterface IX509EnrollmentWebClassFactory;
dispinterface IX509EnrollmentHelper;
dispinterface IX509MachineEnrollmentFactory;
dispinterface IX509PolicyServerListManager;
dispinterface IX509PolicyServerUrl;
dispinterface IX509CertificateTemplateWritable;

/* Union record forward declarations.  */
coclass CObjectId;
coclass CObjectIds;
coclass CBinaryConverter;
coclass CX500DistinguishedName;
coclass CCspInformation;
coclass CCspInformations;
coclass CCspStatus;
coclass CX509PublicKey;
coclass CX509PrivateKey;
coclass CX509Extension;
coclass CX509Extensions;
coclass CX509ExtensionKeyUsage;
coclass CX509ExtensionEnhancedKeyUsage;
coclass CX509ExtensionTemplateName;
coclass CX509ExtensionTemplate;
coclass CAlternativeName;
coclass CAlternativeNames;
coclass CX509ExtensionAlternativeNames;
coclass CX509ExtensionBasicConstraints;
coclass CX509ExtensionSubjectKeyIdentifier;
coclass CX509ExtensionAuthorityKeyIdentifier;
coclass CSmimeCapability;
coclass CSmimeCapabilities;
coclass CX509ExtensionSmimeCapabilities;
coclass CPolicyQualifier;
coclass CPolicyQualifiers;
coclass CCertificatePolicy;
coclass CCertificatePolicies;
coclass CX509ExtensionCertificatePolicies;
coclass CX509ExtensionMSApplicationPolicies;
coclass CX509Attribute;
coclass CX509Attributes;
coclass CX509AttributeExtensions;
coclass CX509AttributeClientId;
coclass CX509AttributeRenewalCertificate;
coclass CX509AttributeArchiveKey;
coclass CX509AttributeArchiveKeyHash;
coclass CX509AttributeOSVersion;
coclass CX509AttributeCspProvider;
coclass CCryptAttribute;
coclass CCryptAttributes;
coclass CCertProperty;
coclass CCertProperties;
coclass CCertPropertyFriendlyName;
coclass CCertPropertyDescription;
coclass CCertPropertyAutoEnroll;
coclass CCertPropertyRequestOriginator;
coclass CCertPropertySHA1Hash;
coclass CCertPropertyKeyProvInfo;
coclass CCertPropertyArchived;
coclass CCertPropertyBackedUp;
coclass CCertPropertyEnrollment;
coclass CCertPropertyRenewal;
coclass CCertPropertyArchivedKeyHash;
coclass CCertPropertyEnrollmentPolicyServer;
coclass CSignerCertificate;
coclass CX509NameValuePair;
coclass CX509CertificateRequestPkcs10;
coclass CX509CertificateRequestCertificate;
coclass CX509CertificateRequestPkcs7;
coclass CX509CertificateRequestCmc;
coclass CX509Enrollment;
coclass CX509EnrollmentWebClassFactory;
coclass CX509EnrollmentHelper;
coclass CX509MachineEnrollmentFactory;
coclass CX509EnrollmentPolicyActiveDirectory;
coclass CX509EnrollmentPolicyWebService;
coclass CX509PolicyServerListManager;
coclass CX509PolicyServerUrl;
coclass CX509CertificateTemplateADWritable;

/* Enumeration declarations.  */
enum CERTENROLL_OBJECTID
{
  XCN_OID_NONE = (int) 201326592,
  XCN_OID_RSA = (int) 201326593,
  XCN_OID_PKCS = (int) 201326594,
  XCN_OID_RSA_HASH = (int) 201326595,
  XCN_OID_RSA_ENCRYPT = (int) 201326596,
  XCN_OID_PKCS_1 = (int) 201326597,
  XCN_OID_PKCS_2 = (int) 201326598,
  XCN_OID_PKCS_3 = (int) 201326599,
  XCN_OID_PKCS_4 = (int) 201326600,
  XCN_OID_PKCS_5 = (int) 201326601,
  XCN_OID_PKCS_6 = (int) 201326602,
  XCN_OID_PKCS_7 = (int) 201326603,
  XCN_OID_PKCS_8 = (int) 201326604,
  XCN_OID_PKCS_9 = (int) 201326605,
  XCN_OID_PKCS_10 = (int) 201326606,
  XCN_OID_PKCS_12 = (int) 201326607,
  XCN_OID_RSA_RSA = (int) 201326608,
  XCN_OID_RSA_MD2RSA = (int) 201326609,
  XCN_OID_RSA_MD4RSA = (int) 201326610,
  XCN_OID_RSA_MD5RSA = (int) 201326611,
  XCN_OID_RSA_SHA1RSA = (int) 201326612,
  XCN_OID_RSA_SETOAEP_RSA = (int) 201326613,
  XCN_OID_RSA_DH = (int) 201326614,
  XCN_OID_RSA_data = (int) 201326615,
  XCN_OID_RSA_signedData = (int) 201326616,
  XCN_OID_RSA_envelopedData = (int) 201326617,
  XCN_OID_RSA_signEnvData = (int) 201326618,
  XCN_OID_RSA_digestedData = (int) 201326619,
  XCN_OID_RSA_hashedData = (int) 201326620,
  XCN_OID_RSA_encryptedData = (int) 201326621,
  XCN_OID_RSA_emailAddr = (int) 201326622,
  XCN_OID_RSA_unstructName = (int) 201326623,
  XCN_OID_RSA_contentType = (int) 201326624,
  XCN_OID_RSA_messageDigest = (int) 201326625,
  XCN_OID_RSA_signingTime = (int) 201326626,
  XCN_OID_RSA_counterSign = (int) 201326627,
  XCN_OID_RSA_challengePwd = (int) 201326628,
  XCN_OID_RSA_unstructAddr = (int) 201326629,
  XCN_OID_RSA_extCertAttrs = (int) 201326630,
  XCN_OID_RSA_certExtensions = (int) 201326631,
  XCN_OID_RSA_SMIMECapabilities = (int) 201326632,
  XCN_OID_RSA_preferSignedData = (int) 201326633,
  XCN_OID_RSA_SMIMEalg = (int) 201326634,
  XCN_OID_RSA_SMIMEalgESDH = (int) 201326635,
  XCN_OID_RSA_SMIMEalgCMS3DESwrap = (int) 201326636,
  XCN_OID_RSA_SMIMEalgCMSRC2wrap = (int) 201326637,
  XCN_OID_RSA_MD2 = (int) 201326638,
  XCN_OID_RSA_MD4 = (int) 201326639,
  XCN_OID_RSA_MD5 = (int) 201326640,
  XCN_OID_RSA_RC2CBC = (int) 201326641,
  XCN_OID_RSA_RC4 = (int) 201326642,
  XCN_OID_RSA_DES_EDE3_CBC = (int) 201326643,
  XCN_OID_RSA_RC5_CBCPad = (int) 201326644,
  XCN_OID_ANSI_X942 = (int) 201326645,
  XCN_OID_ANSI_X942_DH = (int) 201326646,
  XCN_OID_X957 = (int) 201326647,
  XCN_OID_X957_DSA = (int) 201326648,
  XCN_OID_X957_SHA1DSA = (int) 201326649,
  XCN_OID_DS = (int) 201326650,
  XCN_OID_DSALG = (int) 201326651,
  XCN_OID_DSALG_CRPT = (int) 201326652,
  XCN_OID_DSALG_HASH = (int) 201326653,
  XCN_OID_DSALG_SIGN = (int) 201326654,
  XCN_OID_DSALG_RSA = (int) 201326655,
  XCN_OID_OIW = (int) 201326656,
  XCN_OID_OIWSEC = (int) 201326657,
  XCN_OID_OIWSEC_md4RSA = (int) 201326658,
  XCN_OID_OIWSEC_md5RSA = (int) 201326659,
  XCN_OID_OIWSEC_md4RSA2 = (int) 201326660,
  XCN_OID_OIWSEC_desECB = (int) 201326661,
  XCN_OID_OIWSEC_desCBC = (int) 201326662,
  XCN_OID_OIWSEC_desOFB = (int) 201326663,
  XCN_OID_OIWSEC_desCFB = (int) 201326664,
  XCN_OID_OIWSEC_desMAC = (int) 201326665,
  XCN_OID_OIWSEC_rsaSign = (int) 201326666,
  XCN_OID_OIWSEC_dsa = (int) 201326667,
  XCN_OID_OIWSEC_shaDSA = (int) 201326668,
  XCN_OID_OIWSEC_mdc2RSA = (int) 201326669,
  XCN_OID_OIWSEC_shaRSA = (int) 201326670,
  XCN_OID_OIWSEC_dhCommMod = (int) 201326671,
  XCN_OID_OIWSEC_desEDE = (int) 201326672,
  XCN_OID_OIWSEC_sha = (int) 201326673,
  XCN_OID_OIWSEC_mdc2 = (int) 201326674,
  XCN_OID_OIWSEC_dsaComm = (int) 201326675,
  XCN_OID_OIWSEC_dsaCommSHA = (int) 201326676,
  XCN_OID_OIWSEC_rsaXchg = (int) 201326677,
  XCN_OID_OIWSEC_keyHashSeal = (int) 201326678,
  XCN_OID_OIWSEC_md2RSASign = (int) 201326679,
  XCN_OID_OIWSEC_md5RSASign = (int) 201326680,
  XCN_OID_OIWSEC_sha1 = (int) 201326681,
  XCN_OID_OIWSEC_dsaSHA1 = (int) 201326682,
  XCN_OID_OIWSEC_dsaCommSHA1 = (int) 201326683,
  XCN_OID_OIWSEC_sha1RSASign = (int) 201326684,
  XCN_OID_OIWDIR = (int) 201326685,
  XCN_OID_OIWDIR_CRPT = (int) 201326686,
  XCN_OID_OIWDIR_HASH = (int) 201326687,
  XCN_OID_OIWDIR_SIGN = (int) 201326688,
  XCN_OID_OIWDIR_md2 = (int) 201326689,
  XCN_OID_OIWDIR_md2RSA = (int) 201326690,
  XCN_OID_INFOSEC = (int) 201326691,
  XCN_OID_INFOSEC_sdnsSignature = (int) 201326692,
  XCN_OID_INFOSEC_mosaicSignature = (int) 201326693,
  XCN_OID_INFOSEC_sdnsConfidentiality = (int) 201326694,
  XCN_OID_INFOSEC_mosaicConfidentiality = (int) 201326695,
  XCN_OID_INFOSEC_sdnsIntegrity = (int) 201326696,
  XCN_OID_INFOSEC_mosaicIntegrity = (int) 201326697,
  XCN_OID_INFOSEC_sdnsTokenProtection = (int) 201326698,
  XCN_OID_INFOSEC_mosaicTokenProtection = (int) 201326699,
  XCN_OID_INFOSEC_sdnsKeyManagement = (int) 201326700,
  XCN_OID_INFOSEC_mosaicKeyManagement = (int) 201326701,
  XCN_OID_INFOSEC_sdnsKMandSig = (int) 201326702,
  XCN_OID_INFOSEC_mosaicKMandSig = (int) 201326703,
  XCN_OID_INFOSEC_SuiteASignature = (int) 201326704,
  XCN_OID_INFOSEC_SuiteAConfidentiality = (int) 201326705,
  XCN_OID_INFOSEC_SuiteAIntegrity = (int) 201326706,
  XCN_OID_INFOSEC_SuiteATokenProtection = (int) 201326707,
  XCN_OID_INFOSEC_SuiteAKeyManagement = (int) 201326708,
  XCN_OID_INFOSEC_SuiteAKMandSig = (int) 201326709,
  XCN_OID_INFOSEC_mosaicUpdatedSig = (int) 201326710,
  XCN_OID_INFOSEC_mosaicKMandUpdSig = (int) 201326711,
  XCN_OID_INFOSEC_mosaicUpdatedInteg = (int) 201326712,
  XCN_OID_COMMON_NAME = (int) 201326713,
  XCN_OID_SUR_NAME = (int) 201326714,
  XCN_OID_DEVICE_SERIAL_NUMBER = (int) 201326715,
  XCN_OID_COUNTRY_NAME = (int) 201326716,
  XCN_OID_LOCALITY_NAME = (int) 201326717,
  XCN_OID_STATE_OR_PROVINCE_NAME = (int) 201326718,
  XCN_OID_STREET_ADDRESS = (int) 201326719,
  XCN_OID_ORGANIZATION_NAME = (int) 201326720,
  XCN_OID_ORGANIZATIONAL_UNIT_NAME = (int) 201326721,
  XCN_OID_TITLE = (int) 201326722,
  XCN_OID_DESCRIPTION = (int) 201326723,
  XCN_OID_SEARCH_GUIDE = (int) 201326724,
  XCN_OID_BUSINESS_CATEGORY = (int) 201326725,
  XCN_OID_POSTAL_ADDRESS = (int) 201326726,
  XCN_OID_POSTAL_CODE = (int) 201326727,
  XCN_OID_POST_OFFICE_BOX = (int) 201326728,
  XCN_OID_PHYSICAL_DELIVERY_OFFICE_NAME = (int) 201326729,
  XCN_OID_TELEPHONE_NUMBER = (int) 201326730,
  XCN_OID_TELEX_NUMBER = (int) 201326731,
  XCN_OID_TELETEXT_TERMINAL_IDENTIFIER = (int) 201326732,
  XCN_OID_FACSIMILE_TELEPHONE_NUMBER = (int) 201326733,
  XCN_OID_X21_ADDRESS = (int) 201326734,
  XCN_OID_INTERNATIONAL_ISDN_NUMBER = (int) 201326735,
  XCN_OID_REGISTERED_ADDRESS = (int) 201326736,
  XCN_OID_DESTINATION_INDICATOR = (int) 201326737,
  XCN_OID_PREFERRED_DELIVERY_METHOD = (int) 201326738,
  XCN_OID_PRESENTATION_ADDRESS = (int) 201326739,
  XCN_OID_SUPPORTED_APPLICATION_CONTEXT = (int) 201326740,
  XCN_OID_MEMBER = (int) 201326741,
  XCN_OID_OWNER = (int) 201326742,
  XCN_OID_ROLE_OCCUPANT = (int) 201326743,
  XCN_OID_SEE_ALSO = (int) 201326744,
  XCN_OID_USER_PASSWORD = (int) 201326745,
  XCN_OID_USER_CERTIFICATE = (int) 201326746,
  XCN_OID_CA_CERTIFICATE = (int) 201326747,
  XCN_OID_AUTHORITY_REVOCATION_LIST = (int) 201326748,
  XCN_OID_CERTIFICATE_REVOCATION_LIST = (int) 201326749,
  XCN_OID_CROSS_CERTIFICATE_PAIR = (int) 201326750,
  XCN_OID_GIVEN_NAME = (int) 201326751,
  XCN_OID_INITIALS = (int) 201326752,
  XCN_OID_DN_QUALIFIER = (int) 201326753,
  XCN_OID_DOMAIN_COMPONENT = (int) 201326754,
  XCN_OID_PKCS_12_FRIENDLY_NAME_ATTR = (int) 201326755,
  XCN_OID_PKCS_12_LOCAL_KEY_ID = (int) 201326756,
  XCN_OID_PKCS_12_KEY_PROVIDER_NAME_ATTR = (int) 201326757,
  XCN_OID_LOCAL_MACHINE_KEYSET = (int) 201326758,
  XCN_OID_PKCS_12_EXTENDED_ATTRIBUTES = (int) 201326759,
  XCN_OID_KEYID_RDN = (int) 201326760,
  XCN_OID_AUTHORITY_KEY_IDENTIFIER = (int) 201326761,
  XCN_OID_KEY_ATTRIBUTES = (int) 201326762,
  XCN_OID_CERT_POLICIES_95 = (int) 201326763,
  XCN_OID_KEY_USAGE_RESTRICTION = (int) 201326764,
  XCN_OID_SUBJECT_ALT_NAME = (int) 201326765,
  XCN_OID_ISSUER_ALT_NAME = (int) 201326766,
  XCN_OID_BASIC_CONSTRAINTS = (int) 201326767,
  XCN_OID_KEY_USAGE = (int) 201326768,
  XCN_OID_PRIVATEKEY_USAGE_PERIOD = (int) 201326769,
  XCN_OID_BASIC_CONSTRAINTS2 = (int) 201326770,
  XCN_OID_CERT_POLICIES = (int) 201326771,
  XCN_OID_ANY_CERT_POLICY = (int) 201326772,
  XCN_OID_AUTHORITY_KEY_IDENTIFIER2 = (int) 201326773,
  XCN_OID_SUBJECT_KEY_IDENTIFIER = (int) 201326774,
  XCN_OID_SUBJECT_ALT_NAME2 = (int) 201326775,
  XCN_OID_ISSUER_ALT_NAME2 = (int) 201326776,
  XCN_OID_CRL_REASON_CODE = (int) 201326777,
  XCN_OID_REASON_CODE_HOLD = (int) 201326778,
  XCN_OID_CRL_DIST_POINTS = (int) 201326779,
  XCN_OID_ENHANCED_KEY_USAGE = (int) 201326780,
  XCN_OID_CRL_NUMBER = (int) 201326781,
  XCN_OID_DELTA_CRL_INDICATOR = (int) 201326782,
  XCN_OID_ISSUING_DIST_POINT = (int) 201326783,
  XCN_OID_FRESHEST_CRL = (int) 201326784,
  XCN_OID_NAME_CONSTRAINTS = (int) 201326785,
  XCN_OID_POLICY_MAPPINGS = (int) 201326786,
  XCN_OID_LEGACY_POLICY_MAPPINGS = (int) 201326787,
  XCN_OID_POLICY_CONSTRAINTS = (int) 201326788,
  XCN_OID_RENEWAL_CERTIFICATE = (int) 201326789,
  XCN_OID_ENROLLMENT_NAME_VALUE_PAIR = (int) 201326790,
  XCN_OID_ENROLLMENT_CSP_PROVIDER = (int) 201326791,
  XCN_OID_OS_VERSION = (int) 201326792,
  XCN_OID_ENROLLMENT_AGENT = (int) 201326793,
  XCN_OID_PKIX = (int) 201326794,
  XCN_OID_PKIX_PE = (int) 201326795,
  XCN_OID_AUTHORITY_INFO_ACCESS = (int) 201326796,
  XCN_OID_BIOMETRIC_EXT = (int) 201326797,
  XCN_OID_LOGOTYPE_EXT = (int) 201326798,
  XCN_OID_CERT_EXTENSIONS = (int) 201326799,
  XCN_OID_NEXT_UPDATE_LOCATION = (int) 201326800,
  XCN_OID_REMOVE_CERTIFICATE = (int) 201326801,
  XCN_OID_CROSS_CERT_DIST_POINTS = (int) 201326802,
  XCN_OID_CTL = (int) 201326803,
  XCN_OID_SORTED_CTL = (int) 201326804,
  XCN_OID_SERIALIZED = (int) 201326805,
  XCN_OID_NT_PRINCIPAL_NAME = (int) 201326806,
  XCN_OID_PRODUCT_UPDATE = (int) 201326807,
  XCN_OID_ANY_APPLICATION_POLICY = (int) 201326808,
  XCN_OID_AUTO_ENROLL_CTL_USAGE = (int) 201326809,
  XCN_OID_ENROLL_CERTTYPE_EXTENSION = (int) 201326810,
  XCN_OID_CERT_MANIFOLD = (int) 201326811,
  XCN_OID_CERTSRV_CA_VERSION = (int) 201326812,
  XCN_OID_CERTSRV_PREVIOUS_CERT_HASH = (int) 201326813,
  XCN_OID_CRL_VIRTUAL_BASE = (int) 201326814,
  XCN_OID_CRL_NEXT_PUBLISH = (int) 201326815,
  XCN_OID_KP_CA_EXCHANGE = (int) 201326816,
  XCN_OID_KP_KEY_RECOVERY_AGENT = (int) 201326817,
  XCN_OID_CERTIFICATE_TEMPLATE = (int) 201326818,
  XCN_OID_ENTERPRISE_OID_ROOT = (int) 201326819,
  XCN_OID_RDN_DUMMY_SIGNER = (int) 201326820,
  XCN_OID_APPLICATION_CERT_POLICIES = (int) 201326821,
  XCN_OID_APPLICATION_POLICY_MAPPINGS = (int) 201326822,
  XCN_OID_APPLICATION_POLICY_CONSTRAINTS = (int) 201326823,
  XCN_OID_ARCHIVED_KEY_ATTR = (int) 201326824,
  XCN_OID_CRL_SELF_CDP = (int) 201326825,
  XCN_OID_REQUIRE_CERT_CHAIN_POLICY = (int) 201326826,
  XCN_OID_ARCHIVED_KEY_CERT_HASH = (int) 201326827,
  XCN_OID_ISSUED_CERT_HASH = (int) 201326828,
  XCN_OID_DS_EMAIL_REPLICATION = (int) 201326829,
  XCN_OID_REQUEST_CLIENT_INFO = (int) 201326830,
  XCN_OID_ENCRYPTED_KEY_HASH = (int) 201326831,
  XCN_OID_CERTSRV_CROSSCA_VERSION = (int) 201326832,
  XCN_OID_NTDS_REPLICATION = (int) 201326833,
  XCN_OID_SUBJECT_DIR_ATTRS = (int) 201326834,
  XCN_OID_PKIX_KP = (int) 201326835,
  XCN_OID_PKIX_KP_SERVER_AUTH = (int) 201326836,
  XCN_OID_PKIX_KP_CLIENT_AUTH = (int) 201326837,
  XCN_OID_PKIX_KP_CODE_SIGNING = (int) 201326838,
  XCN_OID_PKIX_KP_EMAIL_PROTECTION = (int) 201326839,
  XCN_OID_PKIX_KP_IPSEC_END_SYSTEM = (int) 201326840,
  XCN_OID_PKIX_KP_IPSEC_TUNNEL = (int) 201326841,
  XCN_OID_PKIX_KP_IPSEC_USER = (int) 201326842,
  XCN_OID_PKIX_KP_TIMESTAMP_SIGNING = (int) 201326843,
  XCN_OID_PKIX_KP_OCSP_SIGNING = (int) 201326844,
  XCN_OID_PKIX_OCSP_NOCHECK = (int) 201326845,
  XCN_OID_IPSEC_KP_IKE_INTERMEDIATE = (int) 201326846,
  XCN_OID_KP_CTL_USAGE_SIGNING = (int) 201326847,
  XCN_OID_KP_TIME_STAMP_SIGNING = (int) 201326848,
  XCN_OID_SERVER_GATED_CRYPTO = (int) 201326849,
  XCN_OID_SGC_NETSCAPE = (int) 201326850,
  XCN_OID_KP_EFS = (int) 201326851,
  XCN_OID_EFS_RECOVERY = (int) 201326852,
  XCN_OID_WHQL_CRYPTO = (int) 201326853,
  XCN_OID_NT5_CRYPTO = (int) 201326854,
  XCN_OID_OEM_WHQL_CRYPTO = (int) 201326855,
  XCN_OID_EMBEDDED_NT_CRYPTO = (int) 201326856,
  XCN_OID_ROOT_LIST_SIGNER = (int) 201326857,
  XCN_OID_KP_QUALIFIED_SUBORDINATION = (int) 201326858,
  XCN_OID_KP_KEY_RECOVERY = (int) 201326859,
  XCN_OID_KP_DOCUMENT_SIGNING = (int) 201326860,
  XCN_OID_KP_LIFETIME_SIGNING = (int) 201326861,
  XCN_OID_KP_MOBILE_DEVICE_SOFTWARE = (int) 201326862,
  XCN_OID_KP_SMART_DISPLAY = (int) 201326863,
  XCN_OID_KP_CSP_SIGNATURE = (int) 201326864,
  XCN_OID_DRM = (int) 201326865,
  XCN_OID_DRM_INDIVIDUALIZATION = (int) 201326866,
  XCN_OID_LICENSES = (int) 201326867,
  XCN_OID_LICENSE_SERVER = (int) 201326868,
  XCN_OID_KP_SMARTCARD_LOGON = (int) 201326869,
  XCN_OID_YESNO_TRUST_ATTR = (int) 201326870,
  XCN_OID_PKIX_POLICY_QUALIFIER_CPS = (int) 201326871,
  XCN_OID_PKIX_POLICY_QUALIFIER_USERNOTICE = (int) 201326872,
  XCN_OID_CERT_POLICIES_95_QUALIFIER1 = (int) 201326873,
  XCN_OID_PKIX_ACC_DESCR = (int) 201326874,
  XCN_OID_PKIX_OCSP = (int) 201326875,
  XCN_OID_PKIX_CA_ISSUERS = (int) 201326876,
  XCN_OID_VERISIGN_PRIVATE_6_9 = (int) 201326877,
  XCN_OID_VERISIGN_ONSITE_JURISDICTION_HASH = (int) 201326878,
  XCN_OID_VERISIGN_BITSTRING_6_13 = (int) 201326879,
  XCN_OID_VERISIGN_ISS_STRONG_CRYPTO = (int) 201326880,
  XCN_OID_NETSCAPE = (int) 201326881,
  XCN_OID_NETSCAPE_CERT_EXTENSION = (int) 201326882,
  XCN_OID_NETSCAPE_CERT_TYPE = (int) 201326883,
  XCN_OID_NETSCAPE_BASE_URL = (int) 201326884,
  XCN_OID_NETSCAPE_REVOCATION_URL = (int) 201326885,
  XCN_OID_NETSCAPE_CA_REVOCATION_URL = (int) 201326886,
  XCN_OID_NETSCAPE_CERT_RENEWAL_URL = (int) 201326887,
  XCN_OID_NETSCAPE_CA_POLICY_URL = (int) 201326888,
  XCN_OID_NETSCAPE_SSL_SERVER_NAME = (int) 201326889,
  XCN_OID_NETSCAPE_COMMENT = (int) 201326890,
  XCN_OID_NETSCAPE_DATA_TYPE = (int) 201326891,
  XCN_OID_NETSCAPE_CERT_SEQUENCE = (int) 201326892,
  XCN_OID_CT_PKI_DATA = (int) 201326893,
  XCN_OID_CT_PKI_RESPONSE = (int) 201326894,
  XCN_OID_PKIX_NO_SIGNATURE = (int) 201326895,
  XCN_OID_CMC = (int) 201326896,
  XCN_OID_CMC_STATUS_INFO = (int) 201326897,
  XCN_OID_CMC_IDENTIFICATION = (int) 201326898,
  XCN_OID_CMC_IDENTITY_PROOF = (int) 201326899,
  XCN_OID_CMC_DATA_RETURN = (int) 201326900,
  XCN_OID_CMC_TRANSACTION_ID = (int) 201326901,
  XCN_OID_CMC_SENDER_NONCE = (int) 201326902,
  XCN_OID_CMC_RECIPIENT_NONCE = (int) 201326903,
  XCN_OID_CMC_ADD_EXTENSIONS = (int) 201326904,
  XCN_OID_CMC_ENCRYPTED_POP = (int) 201326905,
  XCN_OID_CMC_DECRYPTED_POP = (int) 201326906,
  XCN_OID_CMC_LRA_POP_WITNESS = (int) 201326907,
  XCN_OID_CMC_GET_CERT = (int) 201326908,
  XCN_OID_CMC_GET_CRL = (int) 201326909,
  XCN_OID_CMC_REVOKE_REQUEST = (int) 201326910,
  XCN_OID_CMC_REG_INFO = (int) 201326911,
  XCN_OID_CMC_RESPONSE_INFO = (int) 201326912,
  XCN_OID_CMC_QUERY_PENDING = (int) 201326913,
  XCN_OID_CMC_ID_POP_LINK_RANDOM = (int) 201326914,
  XCN_OID_CMC_ID_POP_LINK_WITNESS = (int) 201326915,
  XCN_OID_CMC_ID_CONFIRM_CERT_ACCEPTANCE = (int) 201326916,
  XCN_OID_CMC_ADD_ATTRIBUTES = (int) 201326917,
  XCN_OID_LOYALTY_OTHER_LOGOTYPE = (int) 201326918,
  XCN_OID_BACKGROUND_OTHER_LOGOTYPE = (int) 201326919,
  XCN_OID_PKIX_OCSP_BASIC_SIGNED_RESPONSE = (int) 201326920,
  XCN_OID_PKCS_7_DATA = (int) 201326921,
  XCN_OID_PKCS_7_SIGNED = (int) 201326922,
  XCN_OID_PKCS_7_ENVELOPED = (int) 201326923,
  XCN_OID_PKCS_7_SIGNEDANDENVELOPED = (int) 201326924,
  XCN_OID_PKCS_7_DIGESTED = (int) 201326925,
  XCN_OID_PKCS_7_ENCRYPTED = (int) 201326926,
  XCN_OID_PKCS_9_CONTENT_TYPE = (int) 201326927,
  XCN_OID_PKCS_9_MESSAGE_DIGEST = (int) 201326928,
  XCN_OID_CERT_PROP_ID_PREFIX = (int) 201326929,
  XCN_OID_CERT_KEY_IDENTIFIER_PROP_ID = (int) 201326930,
  XCN_OID_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID = (int) 201326931,
  XCN_OID_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID = (int) 201326932,
  XCN_OID_CERT_MD5_HASH_PROP_ID = (int) 201326933,
  XCN_OID_RSA_SHA256RSA = (int) 201326934,
  XCN_OID_RSA_SHA384RSA = (int) 201326935,
  XCN_OID_RSA_SHA512RSA = (int) 201326936,
  XCN_OID_NIST_sha256 = (int) 201326937,
  XCN_OID_NIST_sha384 = (int) 201326938,
  XCN_OID_NIST_sha512 = (int) 201326939,
  XCN_OID_RSA_MGF1 = (int) 201326940,
  XCN_OID_ECC_PUBLIC_KEY = (int) 201326941,
  XCN_OID_RSA_SSA_PSS = (int) 201326945,
  XCN_OID_ECDSA_SHA1 = (int) 201326946,
  XCN_OID_ECDSA_SPECIFIED = (int) 201326946
};
enum ObjectIdGroupId
{
  XCN_CRYPT_ANY_GROUP_ID = (int) 201326592,
  XCN_CRYPT_HASH_ALG_OID_GROUP_ID = (int) 201326593,
  XCN_CRYPT_ENCRYPT_ALG_OID_GROUP_ID = (int) 201326594,
  XCN_CRYPT_PUBKEY_ALG_OID_GROUP_ID = (int) 201326595,
  XCN_CRYPT_SIGN_ALG_OID_GROUP_ID = (int) 201326596,
  XCN_CRYPT_RDN_ATTR_OID_GROUP_ID = (int) 201326597,
  XCN_CRYPT_EXT_OR_ATTR_OID_GROUP_ID = (int) 201326598,
  XCN_CRYPT_ENHKEY_USAGE_OID_GROUP_ID = (int) 201326599,
  XCN_CRYPT_POLICY_OID_GROUP_ID = (int) 201326600,
  XCN_CRYPT_TEMPLATE_OID_GROUP_ID = (int) 201326601,
  XCN_CRYPT_LAST_OID_GROUP_ID = (int) 201326602,
  XCN_CRYPT_FIRST_ALG_OID_GROUP_ID = (int) 201326593,
  XCN_CRYPT_LAST_ALG_OID_GROUP_ID = (int) 201326596,
  XCN_CRYPT_GROUP_ID_MASK = (int) 201392127,
  XCN_CRYPT_OID_PREFER_CNG_ALGID_FLAG = (int) 1073741824,
  XCN_CRYPT_OID_DISABLE_SEARCH_DS_FLAG = (int) -2147483648,
  XCN_CRYPT_OID_INFO_OID_GROUP_BIT_LEN_MASK = (int) 268369920,
  XCN_CRYPT_OID_INFO_OID_GROUP_BIT_LEN_SHIFT = (int) 201326608,
  XCN_CRYPT_KEY_LENGTH_MASK = (int) 268369920
};
enum ObjectIdPublicKeyFlags
{
  XCN_CRYPT_OID_INFO_PUBKEY_ANY = (int) 201326592,
  XCN_CRYPT_OID_INFO_PUBKEY_SIGN_KEY_FLAG = (int) -2147483648,
  XCN_CRYPT_OID_INFO_PUBKEY_ENCRYPT_KEY_FLAG = (int) 1073741824
};
enum AlgorithmFlags
{
  AlgorithmFlagsNone = (int) 201326592,
  AlgorithmFlagsWrap = (int) 201326593
};
enum EncodingType
{
  XCN_CRYPT_STRING_BASE64HEADER = (int) 201326592,
  XCN_CRYPT_STRING_BASE64 = (int) 201326593,
  XCN_CRYPT_STRING_BINARY = (int) 201326594,
  XCN_CRYPT_STRING_BASE64REQUESTHEADER = (int) 201326595,
  XCN_CRYPT_STRING_HEX = (int) 201326596,
  XCN_CRYPT_STRING_HEXASCII = (int) 201326597,
  XCN_CRYPT_STRING_BASE64_ANY = (int) 201326598,
  XCN_CRYPT_STRING_ANY = (int) 201326599,
  XCN_CRYPT_STRING_HEX_ANY = (int) 201326600,
  XCN_CRYPT_STRING_BASE64X509CRLHEADER = (int) 201326601,
  XCN_CRYPT_STRING_HEXADDR = (int) 201326602,
  XCN_CRYPT_STRING_HEXASCIIADDR = (int) 201326603,
  XCN_CRYPT_STRING_HEXRAW = (int) 201326604,
  XCN_CRYPT_STRING_HASHDATA = (int) 268435456,
  XCN_CRYPT_STRING_STRICT = (int) 536870912,
  XCN_CRYPT_STRING_NOCRLF = (int) 1073741824,
  XCN_CRYPT_STRING_NOCR = (int) -2147483648
};
enum X500NameFlags
{
  XCN_CERT_NAME_STR_NONE = (int) 201326592,
  XCN_CERT_SIMPLE_NAME_STR = (int) 201326593,
  XCN_CERT_OID_NAME_STR = (int) 201326594,
  XCN_CERT_X500_NAME_STR = (int) 201326595,
  XCN_CERT_XML_NAME_STR = (int) 201326596,
  XCN_CERT_NAME_STR_SEMICOLON_FLAG = (int) 1073741824,
  XCN_CERT_NAME_STR_NO_PLUS_FLAG = (int) 536870912,
  XCN_CERT_NAME_STR_NO_QUOTING_FLAG = (int) 268435456,
  XCN_CERT_NAME_STR_CRLF_FLAG = (int) 134217728,
  XCN_CERT_NAME_STR_COMMA_FLAG = (int) 67108864,
  XCN_CERT_NAME_STR_REVERSE_FLAG = (int) 234881024,
  XCN_CERT_NAME_STR_FORWARD_FLAG = (int) 218103808,
  XCN_CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG = (int) 201392128,
  XCN_CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG = (int) 201457664,
  XCN_CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG = (int) 201588736,
  XCN_CERT_NAME_STR_FORCE_UTF8_DIR_STR_FLAG = (int) 201850880,
  XCN_CERT_NAME_STR_DISABLE_UTF8_DIR_STR_FLAG = (int) 202375168,
  XCN_CERT_NAME_STR_ENABLE_PUNYCODE_FLAG = (int) 203423744
};
enum X509ProviderType
{
  XCN_PROV_NONE = (int) 201326592,
  XCN_PROV_RSA_FULL = (int) 201326593,
  XCN_PROV_RSA_SIG = (int) 201326594,
  XCN_PROV_DSS = (int) 201326595,
  XCN_PROV_FORTEZZA = (int) 201326596,
  XCN_PROV_MS_EXCHANGE = (int) 201326597,
  XCN_PROV_SSL = (int) 201326598,
  XCN_PROV_RSA_SCHANNEL = (int) 201326604,
  XCN_PROV_DSS_DH = (int) 201326605,
  XCN_PROV_EC_ECDSA_SIG = (int) 201326606,
  XCN_PROV_EC_ECNRA_SIG = (int) 201326607,
  XCN_PROV_EC_ECDSA_FULL = (int) 201326608,
  XCN_PROV_EC_ECNRA_FULL = (int) 201326609,
  XCN_PROV_DH_SCHANNEL = (int) 201326610,
  XCN_PROV_SPYRUS_LYNKS = (int) 201326612,
  XCN_PROV_RNG = (int) 201326613,
  XCN_PROV_INTEL_SEC = (int) 201326614,
  XCN_PROV_REPLACE_OWF = (int) 201326615,
  XCN_PROV_RSA_AES = (int) 201326616
};
enum AlgorithmType
{
  XCN_BCRYPT_UNKNOWN_INTERFACE = (int) 201326592,
  XCN_BCRYPT_SIGNATURE_INTERFACE = (int) 201326597,
  XCN_BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE = (int) 201326595,
  XCN_BCRYPT_CIPHER_INTERFACE = (int) 201326593,
  XCN_BCRYPT_HASH_INTERFACE = (int) 201326594,
  XCN_BCRYPT_SECRET_AGREEMENT_INTERFACE = (int) 201326596,
  XCN_BCRYPT_RNG_INTERFACE = (int) 201326598
};
enum AlgorithmOperationFlags
{
  XCN_NCRYPT_NO_OPERATION = (int) 201326592,
  XCN_NCRYPT_CIPHER_OPERATION = (int) 201326593,
  XCN_NCRYPT_HASH_OPERATION = (int) 201326594,
  XCN_NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION = (int) 201326596,
  XCN_NCRYPT_SECRET_AGREEMENT_OPERATION = (int) 201326600,
  XCN_NCRYPT_SIGNATURE_OPERATION = (int) 201326608,
  XCN_NCRYPT_RNG_OPERATION = (int) 201326624,
  XCN_NCRYPT_ANY_ASYMMETRIC_OPERATION = (int) 201326620,
  XCN_NCRYPT_PREFER_SIGNATURE_ONLY_OPERATION = (int) 203423744,
  XCN_NCRYPT_PREFER_NON_SIGNATURE_OPERATION = (int) 205520896,
  XCN_NCRYPT_EXACT_MATCH_OPERATION = (int) 209715200,
  XCN_NCRYPT_PREFERENCE_MASK_OPERATION = (int) 216006656
};
enum X509KeySpec
{
  XCN_AT_NONE = (int) 201326592,
  XCN_AT_KEYEXCHANGE = (int) 201326593,
  XCN_AT_SIGNATURE = (int) 201326594
};
enum EnrollmentSelectionStatus
{
  SelectedNo = (int) 201326592,
  SelectedYes = (int) 201326593
};
enum EnrollmentDisplayStatus
{
  DisplayNo = (int) 201326592,
  DisplayYes = (int) 201326593
};
enum EnrollmentEnrollStatus
{
  Enrolled = (int) 201326593,
  EnrollPended = (int) 201326594,
  EnrollUIDeferredEnrollmentRequired = (int) 201326596,
  EnrollError = (int) 201326608,
  EnrollUnknown = (int) 201326624,
  EnrollSkipped = (int) 201326656,
  EnrollDenied = (int) 201326848
};
enum KeyIdentifierHashAlgorithm
{
  SKIHashDefault = (int) 201326592,
  SKIHashSha1 = (int) 201326593,
  SKIHashCapiSha1 = (int) 201326594
};
enum X509PrivateKeyVerify
{
  VerifyNone = (int) 201326592,
  VerifySilent = (int) 201326593,
  VerifySmartCardNone = (int) 201326594,
  VerifySmartCardSilent = (int) 201326595,
  VerifyAllowUI = (int) 201326596
};
enum X509PrivateKeyExportFlags
{
  XCN_NCRYPT_ALLOW_EXPORT_NONE = (int) 201326592,
  XCN_NCRYPT_ALLOW_EXPORT_FLAG = (int) 201326593,
  XCN_NCRYPT_ALLOW_PLAINTEXT_EXPORT_FLAG = (int) 201326594,
  XCN_NCRYPT_ALLOW_ARCHIVING_FLAG = (int) 201326596,
  XCN_NCRYPT_ALLOW_PLAINTEXT_ARCHIVING_FLAG = (int) 201326600
};
enum X509PrivateKeyUsageFlags
{
  XCN_NCRYPT_ALLOW_USAGES_NONE = (int) 201326592,
  XCN_NCRYPT_ALLOW_DECRYPT_FLAG = (int) 201326593,
  XCN_NCRYPT_ALLOW_SIGNING_FLAG = (int) 201326594,
  XCN_NCRYPT_ALLOW_KEY_AGREEMENT_FLAG = (int) 201326596,
  XCN_NCRYPT_ALLOW_ALL_USAGES = (int) 218103807
};
enum X509PrivateKeyProtection
{
  XCN_NCRYPT_UI_NO_PROTECTION_FLAG = (int) 201326592,
  XCN_NCRYPT_UI_PROTECT_KEY_FLAG = (int) 201326593,
  XCN_NCRYPT_UI_FORCE_HIGH_PROTECTION_FLAG = (int) 201326594
};
enum X509KeyUsageFlags
{
  XCN_CERT_NO_KEY_USAGE = (int) 201326592,
  XCN_CERT_DIGITAL_SIGNATURE_KEY_USAGE = (int) 201326720,
  XCN_CERT_NON_REPUDIATION_KEY_USAGE = (int) 201326656,
  XCN_CERT_KEY_ENCIPHERMENT_KEY_USAGE = (int) 201326624,
  XCN_CERT_DATA_ENCIPHERMENT_KEY_USAGE = (int) 201326608,
  XCN_CERT_KEY_AGREEMENT_KEY_USAGE = (int) 201326600,
  XCN_CERT_KEY_CERT_SIGN_KEY_USAGE = (int) 201326596,
  XCN_CERT_OFFLINE_CRL_SIGN_KEY_USAGE = (int) 201326594,
  XCN_CERT_CRL_SIGN_KEY_USAGE = (int) 201326594,
  XCN_CERT_ENCIPHER_ONLY_KEY_USAGE = (int) 201326593,
  XCN_CERT_DECIPHER_ONLY_KEY_USAGE = (int) 201359360
};
enum AlternativeNameType
{
  XCN_CERT_ALT_NAME_UNKNOWN = (int) 201326592,
  XCN_CERT_ALT_NAME_OTHER_NAME = (int) 201326593,
  XCN_CERT_ALT_NAME_RFC822_NAME = (int) 201326594,
  XCN_CERT_ALT_NAME_DNS_NAME = (int) 201326595,
  XCN_CERT_ALT_NAME_DIRECTORY_NAME = (int) 201326597,
  XCN_CERT_ALT_NAME_URL = (int) 201326599,
  XCN_CERT_ALT_NAME_IP_ADDRESS = (int) 201326600,
  XCN_CERT_ALT_NAME_REGISTERED_ID = (int) 201326601,
  XCN_CERT_ALT_NAME_GUID = (int) 201326602,
  XCN_CERT_ALT_NAME_USER_PRINCIPLE_NAME = (int) 201326603
};
enum PolicyQualifierType
{
  PolicyQualifierTypeUnknown = (int) 201326592,
  PolicyQualifierTypeUrl = (int) 201326593,
  PolicyQualifierTypeUserNotice = (int) 201326594
};
enum RequestClientInfoClientId
{
  ClientIdNone = (int) 201326592,
  ClientIdXEnroll2003 = (int) 201326593,
  ClientIdAutoEnroll2003 = (int) 201326594,
  ClientIdWizard2003 = (int) 201326595,
  ClientIdCertReq2003 = (int) 201326596,
  ClientIdDefaultRequest = (int) 201326597,
  ClientIdAutoEnroll = (int) 201326598,
  ClientIdRequestWizard = (int) 201326599,
  ClientIdEOBO = (int) 201326600,
  ClientIdCertReq = (int) 201326601,
  ClientIdTest = (int) 201326602,
  ClientIdUserStart = (int) 201327592
};
enum CERTENROLL_PROPERTYID
{
  XCN_PROPERTYID_NONE = (int) 201326592,
  XCN_CERT_KEY_PROV_HANDLE_PROP_ID = (int) 201326593,
  XCN_CERT_KEY_PROV_INFO_PROP_ID = (int) 201326594,
  XCN_CERT_SHA1_HASH_PROP_ID = (int) 201326595,
  XCN_CERT_MD5_HASH_PROP_ID = (int) 201326596,
  XCN_CERT_HASH_PROP_ID = (int) 201326595,
  XCN_CERT_KEY_CONTEXT_PROP_ID = (int) 201326597,
  XCN_CERT_KEY_SPEC_PROP_ID = (int) 201326598,
  XCN_CERT_IE30_RESERVED_PROP_ID = (int) 201326599,
  XCN_CERT_PUBKEY_HASH_RESERVED_PROP_ID = (int) 201326600,
  XCN_CERT_ENHKEY_USAGE_PROP_ID = (int) 201326601,
  XCN_CERT_CTL_USAGE_PROP_ID = (int) 201326601,
  XCN_CERT_NEXT_UPDATE_LOCATION_PROP_ID = (int) 201326602,
  XCN_CERT_FRIENDLY_NAME_PROP_ID = (int) 201326603,
  XCN_CERT_PVK_FILE_PROP_ID = (int) 201326604,
  XCN_CERT_DESCRIPTION_PROP_ID = (int) 201326605,
  XCN_CERT_ACCESS_STATE_PROP_ID = (int) 201326606,
  XCN_CERT_SIGNATURE_HASH_PROP_ID = (int) 201326607,
  XCN_CERT_SMART_CARD_DATA_PROP_ID = (int) 201326608,
  XCN_CERT_EFS_PROP_ID = (int) 201326609,
  XCN_CERT_FORTEZZA_DATA_PROP_ID = (int) 201326610,
  XCN_CERT_ARCHIVED_PROP_ID = (int) 201326611,
  XCN_CERT_KEY_IDENTIFIER_PROP_ID = (int) 201326612,
  XCN_CERT_AUTO_ENROLL_PROP_ID = (int) 201326613,
  XCN_CERT_PUBKEY_ALG_PARA_PROP_ID = (int) 201326614,
  XCN_CERT_CROSS_CERT_DIST_POINTS_PROP_ID = (int) 201326615,
  XCN_CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID = (int) 201326616,
  XCN_CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID = (int) 201326617,
  XCN_CERT_ENROLLMENT_PROP_ID = (int) 201326618,
  XCN_CERT_DATE_STAMP_PROP_ID = (int) 201326619,
  XCN_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID = (int) 201326620,
  XCN_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID = (int) 201326621,
  XCN_CERT_EXTENDED_ERROR_INFO_PROP_ID = (int) 201326622,
  XCN_CERT_RENEWAL_PROP_ID = (int) 201326656,
  XCN_CERT_ARCHIVED_KEY_HASH_PROP_ID = (int) 201326657,
  XCN_CERT_AUTO_ENROLL_RETRY_PROP_ID = (int) 201326658,
  XCN_CERT_AIA_URL_RETRIEVED_PROP_ID = (int) 201326659,
  XCN_CERT_AUTHORITY_INFO_ACCESS_PROP_ID = (int) 201326660,
  XCN_CERT_BACKED_UP_PROP_ID = (int) 201326661,
  XCN_CERT_OCSP_RESPONSE_PROP_ID = (int) 201326662,
  XCN_CERT_REQUEST_ORIGINATOR_PROP_ID = (int) 201326663,
  XCN_CERT_SOURCE_LOCATION_PROP_ID = (int) 201326664,
  XCN_CERT_SOURCE_URL_PROP_ID = (int) 201326665,
  XCN_CERT_NEW_KEY_PROP_ID = (int) 201326666,
  XCN_CERT_FIRST_RESERVED_PROP_ID = (int) 201326684,
  XCN_CERT_LAST_RESERVED_PROP_ID = (int) 201359359,
  XCN_CERT_FIRST_USER_PROP_ID = (int) 201359360,
  XCN_CERT_LAST_USER_PROP_ID = (int) 201392127,
  XCN_CERT_STORE_LOCALIZED_NAME_PROP_ID = (int) 201330688,
  XCN_CERT_CEP_PROP_ID = (int) 201326679
};
enum EnrollmentPolicyServerPropertyFlags
{
  DefaultNone = (int) 201326592,
  DefaultPolicyServer = (int) 201326593
};
enum X509EnrollmentAuthFlags
{
  X509AuthNone = (int) 201326592,
  X509AuthAnonymous = (int) 201326593,
  X509AuthKerberos = (int) 201326594,
  X509AuthUsername = (int) 201326596,
  X509AuthCertificate = (int) 201326600
};
enum PolicyServerUrlFlags
{
  PsfNone = (int) 201326592,
  PsfLocationGroupPolicy = (int) 201326593,
  PsfLocationRegistry = (int) 201326594,
  PsfUseClientId = (int) 201326596,
  PsfAutoEnrollmentEnabled = (int) 201326608,
  PsfAllowUnTrustedCA = (int) 201326624
};
enum X509CertificateTemplateGeneralFlag
{
  GeneralMachineType = (int) 201326656,
  GeneralCA = (int) 201326720,
  GeneralCrossCA = (int) 201328640,
  GeneralDefault = (int) 201392128,
  GeneralModified = (int) 201457664,
  GeneralDonotPersist = (int) 201330688
};
enum X509CertificateTemplateEnrollmentFlag
{
  EnrollmentIncludeSymmetricAlgorithms = (int) 201326593,
  EnrollmentPendAllRequests = (int) 201326594,
  EnrollmentPublishToKRAContainer = (int) 201326596,
  EnrollmentPublishToDS = (int) 201326600,
  EnrollmentAutoEnrollmentCheckUserDSCertificate = (int) 201326608,
  EnrollmentAutoEnrollment = (int) 201326624,
  EnrollmentDomainAuthenticationNotRequired = (int) 201326720,
  EnrollmentPreviousApprovalValidateReenrollment = (int) 201326656,
  EnrollmentUserInteractionRequired = (int) 201326848,
  EnrollmentAddTemplateName = (int) 201327104,
  EnrollmentRemoveInvalidCertificateFromPersonalStore = (int) 201327616,
  EnrollmentAllowEnrollOnBehalfOf = (int) 201328640,
  EnrollmentAddOCSPNoCheck = (int) 201330688,
  EnrollmentReuseKeyOnFullSmartCard = (int) 201334784,
  EnrollmentNoRevocationInfoInCerts = (int) 201342976,
  EnrollmentIncludeBasicConstraintsForEECerts = (int) 201359360
};
enum X509CertificateTemplateSubjectNameFlag
{
  SubjectNameEnrolleeSupplies = (int) 201326593,
  SubjectNameRequireDirectoryPath = (int) -2147483648,
  SubjectNameRequireCommonName = (int) 1073741824,
  SubjectNameRequireEmail = (int) 536870912,
  SubjectNameRequireDNS = (int) 268435456,
  SubjectNameAndAlternativeNameOldCertSupplies = (int) 201326600,
  SubjectAlternativeNameEnrolleeSupplies = (int) 201392128,
  SubjectAlternativeNameRequireDirectoryGUID = (int) 218103808,
  SubjectAlternativeNameRequireUPN = (int) 234881024,
  SubjectAlternativeNameRequireEmail = (int) 67108864,
  SubjectAlternativeNameRequireSPN = (int) 209715200,
  SubjectAlternativeNameRequireDNS = (int) 134217728,
  SubjectAlternativeNameRequireDomainDNS = (int) 205520896
};
enum X509CertificateTemplatePrivateKeyFlag
{
  PrivateKeyRequireArchival = (int) 201326593,
  PrivateKeyExportable = (int) 201326608,
  PrivateKeyRequireStrongKeyProtection = (int) 201326624,
  PrivateKeyRequireAlternateSignatureAlgorithm = (int) 201326656
};
enum X509CertificateEnrollmentContext
{
  ContextUser = (int) 201326593,
  ContextMachine = (int) 201326594,
  ContextAdministratorForceMachine = (int) 201326595
};
enum InnerRequestLevel
{
  LevelInnermost = (int) 201326592,
  LevelNext = (int) 201326593
};
enum X509RequestType
{
  TypeAny = (int) 201326592,
  TypePkcs10 = (int) 201326593,
  TypePkcs7 = (int) 201326594,
  TypeCmc = (int) 201326595,
  TypeCertificate = (int) 201326596
};
enum X509RequestInheritOptions
{
  InheritDefault = (int) 201326592,
  InheritNewDefaultKey = (int) 201326593,
  InheritNewSimilarKey = (int) 201326594,
  InheritPrivateKey = (int) 201326595,
  InheritPublicKey = (int) 201326596,
  InheritKeyMask = (int) 201326607,
  InheritNone = (int) 201326608,
  InheritRenewalCertificateFlag = (int) 201326624,
  InheritTemplateFlag = (int) 201326656,
  InheritSubjectFlag = (int) 201326720,
  InheritExtensionsFlag = (int) 201326848,
  InheritSubjectAltNameFlag = (int) 201327104,
  InheritValidityPeriodFlag = (int) 201327616
};
enum Pkcs10AllowedSignatureTypes
{
  AllowedKeySignature = (int) 201326593,
  AllowedNullSignature = (int) 201326594
};
enum __MIDL___MIDL_itf_certenroll_0000_0069_0001
{
  LoadOptionDefault = (int) 201326592,
  LoadOptionCacheOnly = (int) 201326593,
  LoadOptionReload = (int) 201326594,
  LoadOptionRegisterForADChanges = (int) 201326596
};
enum EnrollmentTemplateProperty
{
  TemplatePropCommonName = (int) 201326593,
  TemplatePropFriendlyName = (int) 201326594,
  TemplatePropEKUs = (int) 201326595,
  TemplatePropCryptoProviders = (int) 201326596,
  TemplatePropMajorRevision = (int) 201326597,
  TemplatePropDescription = (int) 201326598,
  TemplatePropKeySpec = (int) 201326599,
  TemplatePropSchemaVersion = (int) 201326600,
  TemplatePropMinorRevision = (int) 201326601,
  TemplatePropRASignatureCount = (int) 201326602,
  TemplatePropMinimumKeySize = (int) 201326603,
  TemplatePropOID = (int) 201326604,
  TemplatePropSupersede = (int) 201326605,
  TemplatePropRACertificatePolicies = (int) 201326606,
  TemplatePropRAEKUs = (int) 201326607,
  TemplatePropCertificatePolicies = (int) 201326608,
  TemplatePropV1ApplicationPolicy = (int) 201326609,
  TemplatePropAsymmetricAlgorithm = (int) 201326610,
  TemplatePropKeySecurityDescriptor = (int) 201326611,
  TemplatePropSymmetricAlgorithm = (int) 201326612,
  TemplatePropSymmetricKeyLength = (int) 201326613,
  TemplatePropHashAlgorithm = (int) 201326614,
  TemplatePropKeyUsage = (int) 201326615,
  TemplatePropEnrollmentFlags = (int) 201326616,
  TemplatePropSubjectNameFlags = (int) 201326617,
  TemplatePropPrivateKeyFlags = (int) 201326618,
  TemplatePropGeneralFlags = (int) 201326619,
  TemplatePropSecurityDescriptor = (int) 201326620,
  TemplatePropExtensions = (int) 201326621,
  TemplatePropValidityPeriod = (int) 201326622,
  TemplatePropRenewalPeriod = (int) 201326623
};
enum EnrollmentCAProperty
{
  CAPropCommonName = (int) 201326593,
  CAPropDistinguishedName = (int) 201326594,
  CAPropSanitizedName = (int) 201326595,
  CAPropSanitizedShortName = (int) 201326596,
  CAPropDNSName = (int) 201326597,
  CAPropCertificateTypes = (int) 201326598,
  CAPropCertificate = (int) 201326599,
  CAPropDescription = (int) 201326600,
  CAPropWebServers = (int) 201326601,
  CAPropSiteName = (int) 201326602,
  CAPropSecurity = (int) 201326603,
  CAPropRenewalOnly = (int) 201326604
};
enum X509EnrollmentPolicyExportFlags
{
  ExportTemplates = (int) 201326593,
  ExportOIDs = (int) 201326594,
  ExportCAs = (int) 201326596
};
enum InstallResponseRestrictionFlags
{
  AllowNone = (int) 201326592,
  AllowNoOutstandingRequest = (int) 201326593,
  AllowUntrustedCertificate = (int) 201326594,
  AllowUntrustedRoot = (int) 201326596
};
enum PFXExportOptions
{
  PFXExportEEOnly = (int) 201326592,
  PFXExportChainNoRoot = (int) 201326593,
  PFXExportChainWithRoot = (int) 201326594
};
enum WebEnrollmentFlags
{
  EnrollPrompt = (int) 201326593
};
enum PolicyServerUrlPropertyID
{
  PsPolicyID = (int) 201326592,
  PsFriendlyName = (int) 201326593
};
enum CommitTemplateFlags
{
  CommitFlagSaveTemplateGenerateOID = (int) 201326593,
  CommitFlagSaveTemplateUseCurrentOID = (int) 201326594,
  CommitFlagSaveTemplateOverwrite = (int) 201326595,
  CommitFlagDeleteTemplate = (int) 201326596
};

/* Type definitions.  */
typedef enum __MIDL___MIDL_itf_certenroll_0000_0069_0001 X509EnrollmentPolicyLoadOption;

[
  uuid(728AB348-217D-11DA-B2A4-000E7BBB2B09),
  version(1.0),
  helpstring("CertEnroll 1.0 Type Library")
]
library certenrolllib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(884E2000-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Object Identifier Class"),
     cancreate
   ]
   coclass CObjectId
   {
     dispinterface IObjectId;
   };
   [
     uuid(884E2001-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Object Identifier Collection Class"),
     cancreate
   ]
   coclass CObjectIds
   {
     dispinterface IObjectIds;
   };
   [
     uuid(884E2002-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Binary Converter Class"),
     cancreate
   ]
   coclass CBinaryConverter
   {
     dispinterface IBinaryConverter;
   };
   [
     uuid(884E2003-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.500 Distinguished Name Class"),
     cancreate
   ]
   coclass CX500DistinguishedName
   {
     dispinterface IX500DistinguishedName;
   };
   [
     uuid(884E2007-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Csp Information Class"),
     cancreate
   ]
   coclass CCspInformation
   {
     dispinterface ICspInformation;
   };
   [
     uuid(884E2008-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Csp Information Collection Class"),
     cancreate
   ]
   coclass CCspInformations
   {
     dispinterface ICspInformations;
   };
   [
     uuid(884E2009-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Csp Status Class"),
     cancreate
   ]
   coclass CCspStatus
   {
     dispinterface ICspStatus;
   };
   [
     uuid(884E200B-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Public Key Class"),
     cancreate
   ]
   coclass CX509PublicKey
   {
     dispinterface IX509PublicKey;
   };
   [
     uuid(884E200C-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Private Key Class"),
     cancreate
   ]
   coclass CX509PrivateKey
   {
     dispinterface IX509PrivateKey;
   };
   [
     uuid(884E200D-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Extension Class"),
     cancreate
   ]
   coclass CX509Extension
   {
     dispinterface IX509Extension;
   };
   [
     uuid(884E200E-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Extension Collection Class"),
     cancreate
   ]
   coclass CX509Extensions
   {
     dispinterface IX509Extensions;
   };
   [
     uuid(884E200F-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Key Usage Extension Class"),
     cancreate
   ]
   coclass CX509ExtensionKeyUsage
   {
     dispinterface IX509ExtensionKeyUsage;
   };
   [
     uuid(884E2010-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Enhanced Key Usage Extension Class"),
     cancreate
   ]
   coclass CX509ExtensionEnhancedKeyUsage
   {
     dispinterface IX509ExtensionEnhancedKeyUsage;
   };
   [
     uuid(884E2011-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Template Name Extension Class"),
     cancreate
   ]
   coclass CX509ExtensionTemplateName
   {
     dispinterface IX509ExtensionTemplateName;
   };
   [
     uuid(884E2012-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Template Extension Class"),
     cancreate
   ]
   coclass CX509ExtensionTemplate
   {
     dispinterface IX509ExtensionTemplate;
   };
   [
     uuid(884E2013-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("AlternativeName Class"),
     cancreate
   ]
   coclass CAlternativeName
   {
     dispinterface IAlternativeName;
   };
   [
     uuid(884E2014-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("AlternativeNames Class"),
     cancreate
   ]
   coclass CAlternativeNames
   {
     dispinterface IAlternativeNames;
   };
   [
     uuid(884E2015-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X509ExtensionAlternativeNames Class"),
     cancreate
   ]
   coclass CX509ExtensionAlternativeNames
   {
     dispinterface IX509ExtensionAlternativeNames;
   };
   [
     uuid(884E2016-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X509ExtensionBasicConstraints Class"),
     cancreate
   ]
   coclass CX509ExtensionBasicConstraints
   {
     dispinterface IX509ExtensionBasicConstraints;
   };
   [
     uuid(884E2017-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X509ExtensionSubjectKeyIdentifier Class"),
     cancreate
   ]
   coclass CX509ExtensionSubjectKeyIdentifier
   {
     dispinterface IX509ExtensionSubjectKeyIdentifier;
   };
   [
     uuid(884E2018-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X509ExtensionAuthorityKeyIdentifier Class"),
     cancreate
   ]
   coclass CX509ExtensionAuthorityKeyIdentifier
   {
     dispinterface IX509ExtensionAuthorityKeyIdentifier;
   };
   [
     uuid(884E2019-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("SmimeCapability Class"),
     cancreate
   ]
   coclass CSmimeCapability
   {
     dispinterface ISmimeCapability;
   };
   [
     uuid(884E201A-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("SmimeCapabilities Class"),
     cancreate
   ]
   coclass CSmimeCapabilities
   {
     dispinterface ISmimeCapabilities;
   };
   [
     uuid(884E201B-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X509ExtensionSmimeCapabilities Class"),
     cancreate
   ]
   coclass CX509ExtensionSmimeCapabilities
   {
     dispinterface IX509ExtensionSmimeCapabilities;
   };
   [
     uuid(884E201C-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("PolicyQualifier Class"),
     cancreate
   ]
   coclass CPolicyQualifier
   {
     dispinterface IPolicyQualifier;
   };
   [
     uuid(884E201D-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("PolicyQualifiers Class"),
     cancreate
   ]
   coclass CPolicyQualifiers
   {
     dispinterface IPolicyQualifiers;
   };
   [
     uuid(884E201E-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("CertificatePolicy Class"),
     cancreate
   ]
   coclass CCertificatePolicy
   {
     dispinterface ICertificatePolicy;
   };
   [
     uuid(884E201F-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("CertificatePolicies Class"),
     cancreate
   ]
   coclass CCertificatePolicies
   {
     dispinterface ICertificatePolicies;
   };
   [
     uuid(884E2020-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X509ExtensionCertificatePolicies Class"),
     cancreate
   ]
   coclass CX509ExtensionCertificatePolicies
   {
     dispinterface IX509ExtensionCertificatePolicies;
   };
   [
     uuid(884E2021-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X509ExtensionMSApplicationPolicies Class"),
     cancreate
   ]
   coclass CX509ExtensionMSApplicationPolicies
   {
     dispinterface IX509ExtensionMSApplicationPolicies;
   };
   [
     uuid(884E2022-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Attribute Value Class"),
     cancreate
   ]
   coclass CX509Attribute
   {
     dispinterface IX509Attribute;
   };
   [
     uuid(884E2023-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Attribute Value Collection Class"),
     cancreate
   ]
   coclass CX509Attributes
   {
     dispinterface IX509Attributes;
   };
   [
     uuid(884E2024-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Extensions Attribute Class"),
     cancreate
   ]
   coclass CX509AttributeExtensions
   {
     dispinterface IX509AttributeExtensions;
   };
   [
     uuid(884E2025-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X509AttributeClientId Class"),
     cancreate
   ]
   coclass CX509AttributeClientId
   {
     dispinterface IX509AttributeClientId;
   };
   [
     uuid(884E2026-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X509AttributeRenewalCertificate Class"),
     cancreate
   ]
   coclass CX509AttributeRenewalCertificate
   {
     dispinterface IX509AttributeRenewalCertificate;
   };
   [
     uuid(884E2027-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X509AttributeArchiveKey Class"),
     cancreate
   ]
   coclass CX509AttributeArchiveKey
   {
     dispinterface IX509AttributeArchiveKey;
   };
   [
     uuid(884E2028-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X509AttributeArchiveKeyHash Class"),
     cancreate
   ]
   coclass CX509AttributeArchiveKeyHash
   {
     dispinterface IX509AttributeArchiveKeyHash;
   };
   [
     uuid(884E202A-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X509AttributeOSVersion Class"),
     cancreate
   ]
   coclass CX509AttributeOSVersion
   {
     dispinterface IX509AttributeOSVersion;
   };
   [
     uuid(884E202B-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X509AttributeCspProvider Class"),
     cancreate
   ]
   coclass CX509AttributeCspProvider
   {
     dispinterface IX509AttributeCspProvider;
   };
   [
     uuid(884E202C-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Crypt Attribute Class"),
     cancreate
   ]
   coclass CCryptAttribute
   {
     dispinterface ICryptAttribute;
   };
   [
     uuid(884E202D-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Crypt Attribute Collection Class"),
     cancreate
   ]
   coclass CCryptAttributes
   {
     dispinterface ICryptAttributes;
   };
   [
     uuid(884E202E-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Certificate Property Class"),
     cancreate
   ]
   coclass CCertProperty
   {
     dispinterface ICertProperty;
   };
   [
     uuid(884E202F-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Certificate Property Collection Class"),
     cancreate
   ]
   coclass CCertProperties
   {
     dispinterface ICertProperties;
   };
   [
     uuid(884E2030-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Certificate Friendly Name Property Class"),
     cancreate
   ]
   coclass CCertPropertyFriendlyName
   {
     dispinterface ICertPropertyFriendlyName;
   };
   [
     uuid(884E2031-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Certificate Description Property Class"),
     cancreate
   ]
   coclass CCertPropertyDescription
   {
     dispinterface ICertPropertyDescription;
   };
   [
     uuid(884E2032-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("CertPropertyAutoEnroll Class"),
     cancreate
   ]
   coclass CCertPropertyAutoEnroll
   {
     dispinterface ICertPropertyAutoEnroll;
   };
   [
     uuid(884E2033-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("CertPropertyRequestOriginator Class"),
     cancreate
   ]
   coclass CCertPropertyRequestOriginator
   {
     dispinterface ICertPropertyRequestOriginator;
   };
   [
     uuid(884E2034-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("PropSHA1Hash Class"),
     cancreate
   ]
   coclass CCertPropertySHA1Hash
   {
     dispinterface ICertPropertySHA1Hash;
   };
   [
     uuid(884E2036-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("CertPropertyKeyProvInfo Class"),
     cancreate
   ]
   coclass CCertPropertyKeyProvInfo
   {
     dispinterface ICertPropertyKeyProvInfo;
   };
   [
     uuid(884E2037-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("PropArchived Class"),
     cancreate
   ]
   coclass CCertPropertyArchived
   {
     dispinterface ICertPropertyArchived;
   };
   [
     uuid(884E2038-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("PropBackedUp Class"),
     cancreate
   ]
   coclass CCertPropertyBackedUp
   {
     dispinterface ICertPropertyBackedUp;
   };
   [
     uuid(884E2039-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("PropEnrollment Class"),
     cancreate
   ]
   coclass CCertPropertyEnrollment
   {
     dispinterface ICertPropertyEnrollment;
   };
   [
     uuid(884E203A-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("PropRenewal Class"),
     cancreate
   ]
   coclass CCertPropertyRenewal
   {
     dispinterface ICertPropertyRenewal;
   };
   [
     uuid(884E203B-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("PropArchivedKeyHash Class"),
     cancreate
   ]
   coclass CCertPropertyArchivedKeyHash
   {
     dispinterface ICertPropertyArchivedKeyHash;
   };
   [
     uuid(884E204C-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("CertPropertyEnrollmentPolicyServer Class"),
     cancreate
   ]
   coclass CCertPropertyEnrollmentPolicyServer
   {
     dispinterface ICertPropertyEnrollmentPolicyServer;
   };
   [
     uuid(884E203D-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Signer Certificate Class"),
     cancreate
   ]
   coclass CSignerCertificate
   {
     dispinterface ISignerCertificate;
   };
   [
     uuid(884E203F-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Name Value Pair Class"),
     cancreate
   ]
   coclass CX509NameValuePair
   {
     dispinterface IX509NameValuePair;
   };
   [
     uuid(884E2042-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Certificate Request Pkcs10 Class"),
     cancreate
   ]
   coclass CX509CertificateRequestPkcs10
   {
     dispinterface IX509CertificateRequestPkcs10V2;
   };
   [
     uuid(884E2043-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Certificate Request Certificate Class"),
     cancreate
   ]
   coclass CX509CertificateRequestCertificate
   {
     dispinterface IX509CertificateRequestCertificate2;
   };
   [
     uuid(884E2044-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Certificate Request Pkcs7 Class"),
     cancreate
   ]
   coclass CX509CertificateRequestPkcs7
   {
     dispinterface IX509CertificateRequestPkcs7V2;
   };
   [
     uuid(884E2045-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Certificate Request Cmc Class"),
     cancreate
   ]
   coclass CX509CertificateRequestCmc
   {
     dispinterface IX509CertificateRequestCmc2;
   };
   [
     uuid(884E2046-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Enrollment Class"),
     cancreate
   ]
   coclass CX509Enrollment
   {
     dispinterface IX509Enrollment2;
   };
   [
     uuid(884E2049-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 EnrollmentWebClassFactory Class"),
     cancreate
   ]
   coclass CX509EnrollmentWebClassFactory
   {
     dispinterface IX509EnrollmentWebClassFactory;
   };
   [
     uuid(884E2050-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 EnrollHelper Class"),
     cancreate
   ]
   coclass CX509EnrollmentHelper
   {
     dispinterface IX509EnrollmentHelper;
   };
   [
     uuid(884E2051-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 MachineEnrollmentFactory Class"),
     cancreate
   ]
   coclass CX509MachineEnrollmentFactory
   {
     dispinterface IX509MachineEnrollmentFactory;
   };
   [
     uuid(91F39027-217F-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Active Directory Policy Server Class"),
     cancreate
   ]
   coclass CX509EnrollmentPolicyActiveDirectory
   {
     dispinterface IX509EnrollmentPolicyServer;
   };
   [
     uuid(91F39028-217F-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Web Service Policy Server Class"),
     cancreate
   ]
   coclass CX509EnrollmentPolicyWebService
   {
     dispinterface IX509EnrollmentPolicyServer;
   };
   [
     uuid(91F39029-217F-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Policy Server List Manager Class"),
     cancreate
   ]
   coclass CX509PolicyServerListManager
   {
     dispinterface IX509PolicyServerListManager;
   };
   [
     uuid(91F3902A-217F-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Policy Server URL Class"),
     cancreate
   ]
   coclass CX509PolicyServerUrl
   {
     dispinterface IX509PolicyServerUrl;
   };
   [
     uuid(8336E323-2E6A-4A04-937C-548F681839B3),
     helpstring("X.509 Certificate Template AD Writable Class"),
     cancreate
   ]
   coclass CX509CertificateTemplateADWritable
   {
     dispinterface IX509CertificateTemplateWritable;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(728AB300-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Object Identifier Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IObjectId : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall InitializeFromName (
       [in] enum CERTENROLL_OBJECTID Name
     );
     HRESULT __stdcall InitializeFromValue (
       [in] BSTR strValue
     );
     HRESULT __stdcall InitializeFromAlgorithmName (
       [in] enum ObjectIdGroupId GroupId,
       [in] enum ObjectIdPublicKeyFlags KeyFlags,
       [in] enum AlgorithmFlags AlgFlags,
       [in] BSTR strAlgorithmName
     );
     [propget]
     HRESULT __stdcall Name (
       [out retval] enum CERTENROLL_OBJECTID *pValue
     );
     [propget]
     HRESULT __stdcall FriendlyName (
       [out retval] BSTR *pValue
     );
     [id(1610743812), propput]
     HRESULT __stdcall FriendlyName (
       [in] BSTR argNo1
     );
     [id(1610743814), propget]
     HRESULT __stdcall Value (
       [out retval] BSTR *pValue
     );
     HRESULT __stdcall GetAlgorithmName (
       [in] enum ObjectIdGroupId GroupId,
       [in] enum ObjectIdPublicKeyFlags KeyFlags,
       [out retval] BSTR *pstrAlgorithmName
     );
   };
   [
     uuid(728AB301-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Object Identifier Collection Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IObjectIds : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall ItemByIndex (
       [in] long Index,
       [out retval] dispinterface IObjectId **pVal
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pVal
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pVal
     );
     [id(2)]
     HRESULT __stdcall Add (
       [in] dispinterface IObjectId *pVal
     );
     HRESULT __stdcall Remove (
       [in] long Index
     );
     HRESULT __stdcall Clear (void);
     [id(1610743814)]
     HRESULT __stdcall AddRange (
       [in] dispinterface IObjectIds *pValue
     );
   };
   [
     uuid(728AB302-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Binary Converter Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IBinaryConverter : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall StringToString (
       [in] BSTR strEncodedIn,
       [in] enum EncodingType EncodingIn,
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pstrEncoded
     );
     HRESULT __stdcall VariantByteArrayToString (
       [in] VARIANT *pvarByteArray,
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pstrEncoded
     );
     HRESULT __stdcall StringToVariantByteArray (
       [in] BSTR strEncoded,
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] VARIANT *pvarByteArray
     );
   };
   [
     uuid(728AB303-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.500 Distinguished Name Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX500DistinguishedName : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall Decode (
       [in] BSTR strEncodedName,
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [in opt] enum X500NameFlags NameFlags = (int) 201326592
     );
     HRESULT __stdcall Encode (
       [in] BSTR strName,
       [in opt] enum X500NameFlags NameFlags = (int) 201326592
     );
     [propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall EncodedName (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB307-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Csp Information Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICspInformation : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall InitializeFromName (
       [in] BSTR strName
     );
     HRESULT __stdcall InitializeFromType (
       [in] enum X509ProviderType Type,
       [in] dispinterface IObjectId *pAlgorithm,
       [in] WINBOOL MachineContext
     );
     [propget]
     HRESULT __stdcall CspAlgorithms (
       [out retval] dispinterface ICspAlgorithms **ppValue
     );
     [propget]
     HRESULT __stdcall HasHardwareRandomNumberGenerator (
       [out retval] WINBOOL *pValue
     );
     [propget]
     HRESULT __stdcall IsHardwareDevice (
       [out retval] WINBOOL *pValue
     );
     [propget]
     HRESULT __stdcall IsRemovable (
       [out retval] WINBOOL *pValue
     );
     [propget]
     HRESULT __stdcall IsSoftwareDevice (
       [out retval] WINBOOL *pValue
     );
     [propget]
     HRESULT __stdcall Valid (
       [out retval] WINBOOL *pValue
     );
     [propget]
     HRESULT __stdcall MaxKeyContainerNameLength (
       [out retval] long *pValue
     );
     [propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall Type (
       [out retval] enum X509ProviderType *pValue
     );
     [propget]
     HRESULT __stdcall Version (
       [out retval] long *pValue
     );
     [propget]
     HRESULT __stdcall KeySpec (
       [out retval] enum X509KeySpec *pValue
     );
     [propget]
     HRESULT __stdcall IsSmartCard (
       [out retval] WINBOOL *pValue
     );
     HRESULT __stdcall GetDefaultSecurityDescriptor (
       [in] WINBOOL MachineContext,
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall LegacyCsp (
       [out retval] WINBOOL *pValue
     );
     HRESULT __stdcall GetCspStatusFromOperations (
       [in] dispinterface IObjectId *pAlgorithm,
       [in] enum AlgorithmOperationFlags Operations,
       [out retval] dispinterface ICspStatus **ppValue
     );
   };
   [
     uuid(728AB306-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Csp Algorithm Collection Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICspAlgorithms : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall ItemByIndex (
       [in] long Index,
       [out retval] dispinterface ICspAlgorithm **pVal
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pVal
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pVal
     );
     [id(2)]
     HRESULT __stdcall Add (
       [in] dispinterface ICspAlgorithm *pVal
     );
     HRESULT __stdcall Remove (
       [in] long Index
     );
     HRESULT __stdcall Clear (void);
     [id(1610743814), propget]
     HRESULT __stdcall ItemByName (
       [in] BSTR strName,
       [out retval] dispinterface ICspAlgorithm **ppValue
     );
     [propget]
     HRESULT __stdcall IndexByObjectId (
       [in] dispinterface IObjectId *pObjectId,
       [out retval] long *pIndex
     );
   };
   [
     uuid(728AB305-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Csp Algorithm Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICspAlgorithm : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall GetAlgorithmOid (
       [in] long Length,
       [in] enum AlgorithmFlags AlgFlags,
       [out retval] dispinterface IObjectId **ppValue
     );
     [propget]
     HRESULT __stdcall DefaultLength (
       [out retval] long *pValue
     );
     [propget]
     HRESULT __stdcall IncrementLength (
       [out retval] long *pValue
     );
     [propget]
     HRESULT __stdcall LongName (
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall Valid (
       [out retval] WINBOOL *pValue
     );
     [propget]
     HRESULT __stdcall MaxLength (
       [out retval] long *pValue
     );
     [propget]
     HRESULT __stdcall MinLength (
       [out retval] long *pValue
     );
     [propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall Type (
       [out retval] enum AlgorithmType *pValue
     );
     [propget]
     HRESULT __stdcall Operations (
       [out retval] enum AlgorithmOperationFlags *pValue
     );
   };
   [
     uuid(728AB309-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Csp Status Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICspStatus : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall Initialize (
       [in] dispinterface ICspInformation *pCsp,
       [in] dispinterface ICspAlgorithm *pAlgorithm
     );
     [propget]
     HRESULT __stdcall Ordinal (
       [out retval] long *pValue
     );
     [id(1610743809), propput]
     HRESULT __stdcall Ordinal (
       [in] long argNo1
     );
     [id(1610743811), propget]
     HRESULT __stdcall CspAlgorithm (
       [out retval] dispinterface ICspAlgorithm **ppValue
     );
     [propget]
     HRESULT __stdcall CspInformation (
       [out retval] dispinterface ICspInformation **ppValue
     );
     [propget]
     HRESULT __stdcall EnrollmentStatus (
       [out retval] dispinterface IX509EnrollmentStatus **ppValue
     );
     [propget]
     HRESULT __stdcall DisplayName (
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB304-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Enrollment Status Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509EnrollmentStatus : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall AppendText (
       [in] BSTR strText
     );
     [propget]
     HRESULT __stdcall Text (
       [out retval] BSTR *pValue
     );
     [id(1610743809), propput]
     HRESULT __stdcall Text (
       [in] BSTR argNo1
     );
     [id(1610743811), propget]
     HRESULT __stdcall Selected (
       [out retval] enum EnrollmentSelectionStatus *pValue
     );
     [id(1610743811), propput]
     HRESULT __stdcall Selected (
       [in] enum EnrollmentSelectionStatus argNo1
     );
     [id(1610743813), propget]
     HRESULT __stdcall Display (
       [out retval] enum EnrollmentDisplayStatus *pValue
     );
     [id(1610743813), propput]
     HRESULT __stdcall Display (
       [in] enum EnrollmentDisplayStatus argNo1
     );
     [id(1610743815), propget]
     HRESULT __stdcall Status (
       [out retval] enum EnrollmentEnrollStatus *pValue
     );
     [id(1610743815), propput]
     HRESULT __stdcall Status (
       [in] enum EnrollmentEnrollStatus argNo1
     );
     [id(1610743817), propget]
     HRESULT __stdcall Error (
       [out retval] HRESULT *pValue
     );
     [id(1610743817), propput]
     HRESULT __stdcall Error (
       [in] HRESULT argNo1
     );
     [id(1610743819), propget]
     HRESULT __stdcall ErrorText (
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB308-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Csp Information Collection Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICspInformations : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall ItemByIndex (
       [in] long Index,
       [out retval] dispinterface ICspInformation **pVal
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pVal
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pVal
     );
     [id(2)]
     HRESULT __stdcall Add (
       [in] dispinterface ICspInformation *pVal
     );
     HRESULT __stdcall Remove (
       [in] long Index
     );
     HRESULT __stdcall Clear (void);
     [id(1610743814)]
     HRESULT __stdcall AddAvailableCsps (void);
     [propget]
     HRESULT __stdcall ItemByName (
       [in] BSTR strName,
       [out retval] dispinterface ICspInformation **ppCspInformation
     );
     HRESULT __stdcall GetCspStatusFromProviderName (
       [in] BSTR strProviderName,
       [in] enum X509KeySpec LegacyKeySpec,
       [out retval] dispinterface ICspStatus **ppValue
     );
     HRESULT __stdcall GetCspStatusesFromOperations (
       [in] enum AlgorithmOperationFlags Operations,
       [in] dispinterface ICspInformation *pCspInformation,
       [out retval] dispinterface ICspStatuses **ppValue
     );
     HRESULT __stdcall GetEncryptionCspAlgorithms (
       [in] dispinterface ICspInformation *pCspInformation,
       [out retval] dispinterface ICspAlgorithms **ppValue
     );
     HRESULT __stdcall GetHashAlgorithms (
       [in] dispinterface ICspInformation *pCspInformation,
       [out retval] dispinterface IObjectIds **ppValue
     );
   };
   [
     uuid(728AB30A-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Csp Status Collection Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICspStatuses : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall ItemByIndex (
       [in] long Index,
       [out retval] dispinterface ICspStatus **pVal
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pVal
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pVal
     );
     [id(2)]
     HRESULT __stdcall Add (
       [in] dispinterface ICspStatus *pVal
     );
     HRESULT __stdcall Remove (
       [in] long Index
     );
     HRESULT __stdcall Clear (void);
     [id(1610743814), propget]
     HRESULT __stdcall ItemByName (
       [in] BSTR strCspName,
       [in] BSTR strAlgorithmName,
       [out retval] dispinterface ICspStatus **ppValue
     );
     [propget]
     HRESULT __stdcall ItemByOrdinal (
       [in] long Ordinal,
       [out retval] dispinterface ICspStatus **ppValue
     );
     [propget]
     HRESULT __stdcall ItemByOperations (
       [in] BSTR strCspName,
       [in] BSTR strAlgorithmName,
       [in] enum AlgorithmOperationFlags Operations,
       [out retval] dispinterface ICspStatus **ppValue
     );
     [propget]
     HRESULT __stdcall ItemByProvider (
       [in] dispinterface ICspStatus *pCspStatus,
       [out retval] dispinterface ICspStatus **ppValue
     );
   };
   [
     uuid(728AB30B-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Public Key Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509PublicKey : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall Initialize (
       [in] dispinterface IObjectId *pObjectId,
       [in] BSTR strEncodedKey,
       [in] BSTR strEncodedParameters,
       [in opt] enum EncodingType Encoding = (int) 201326593
     );
     HRESULT __stdcall InitializeFromEncodedPublicKeyInfo (
       [in] BSTR strEncodedPublicKeyInfo,
       [in opt] enum EncodingType Encoding = (int) 201326593
     );
     [propget]
     HRESULT __stdcall Algorithm (
       [out retval] dispinterface IObjectId **ppValue
     );
     [propget]
     HRESULT __stdcall Length (
       [out retval] long *pValue
     );
     [propget]
     HRESULT __stdcall EncodedKey (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall EncodedParameters (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
     HRESULT __stdcall ComputeKeyIdentifier (
       [in] enum KeyIdentifierHashAlgorithm Algorithm,
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB30C-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Private Key Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509PrivateKey : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall Open (void);
     HRESULT __stdcall Create (void);
     HRESULT __stdcall Close (void);
     HRESULT __stdcall Delete (void);
     HRESULT __stdcall Verify (
       [in] enum X509PrivateKeyVerify VerifyType
     );
     HRESULT __stdcall Import (
       [in] BSTR strExportType,
       [in] BSTR strEncodedKey,
       [in opt] enum EncodingType Encoding = (int) 201326593
     );
     HRESULT __stdcall Export (
       [in] BSTR strExportType,
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pstrEncodedKey
     );
     HRESULT __stdcall ExportPublicKey (
       [out retval] dispinterface IX509PublicKey **ppPublicKey
     );
     [propget]
     HRESULT __stdcall ContainerName (
       [out retval] BSTR *pValue
     );
     [id(1610743816), propput]
     HRESULT __stdcall ContainerName (
       [in] BSTR argNo1
     );
     [id(1610743818), propget]
     HRESULT __stdcall ContainerNamePrefix (
       [out retval] BSTR *pValue
     );
     [id(1610743818), propput]
     HRESULT __stdcall ContainerNamePrefix (
       [in] BSTR argNo1
     );
     [id(1610743820), propget]
     HRESULT __stdcall ReaderName (
       [out retval] BSTR *pValue
     );
     [id(1610743820), propput]
     HRESULT __stdcall ReaderName (
       [in] BSTR argNo1
     );
     [id(1610743822), propget]
     HRESULT __stdcall CspInformations (
       [out retval] dispinterface ICspInformations **ppValue
     );
     [id(1610743822), propput]
     HRESULT __stdcall CspInformations (
       [in] dispinterface ICspInformations *argNo1
     );
     [id(1610743824), propget]
     HRESULT __stdcall CspStatus (
       [out retval] dispinterface ICspStatus **ppValue
     );
     [id(1610743824), propput]
     HRESULT __stdcall CspStatus (
       [in] dispinterface ICspStatus *argNo1
     );
     [id(1610743826), propget]
     HRESULT __stdcall ProviderName (
       [out retval] BSTR *pValue
     );
     [id(1610743826), propput]
     HRESULT __stdcall ProviderName (
       [in] BSTR argNo1
     );
     [id(1610743828), propget]
     HRESULT __stdcall ProviderType (
       [out retval] enum X509ProviderType *pValue
     );
     [id(1610743828), propput]
     HRESULT __stdcall ProviderType (
       [in] enum X509ProviderType argNo1
     );
     [id(1610743830), propget]
     HRESULT __stdcall LegacyCsp (
       [out retval] WINBOOL *pValue
     );
     [id(1610743830), propput]
     HRESULT __stdcall LegacyCsp (
       [in] WINBOOL argNo1
     );
     [id(1610743832), propget]
     HRESULT __stdcall Algorithm (
       [out retval] dispinterface IObjectId **ppValue
     );
     [id(1610743832), propput]
     HRESULT __stdcall Algorithm (
       [in] dispinterface IObjectId *argNo1
     );
     [id(1610743834), propget]
     HRESULT __stdcall KeySpec (
       [out retval] enum X509KeySpec *pValue
     );
     [id(1610743834), propput]
     HRESULT __stdcall KeySpec (
       [in] enum X509KeySpec argNo1
     );
     [id(1610743836), propget]
     HRESULT __stdcall Length (
       [out retval] long *pValue
     );
     [id(1610743836), propput]
     HRESULT __stdcall Length (
       [in] long argNo1
     );
     [id(1610743838), propget]
     HRESULT __stdcall ExportPolicy (
       [out retval] enum X509PrivateKeyExportFlags *pValue
     );
     [id(1610743838), propput]
     HRESULT __stdcall ExportPolicy (
       [in] enum X509PrivateKeyExportFlags argNo1
     );
     [id(1610743840), propget]
     HRESULT __stdcall KeyUsage (
       [out retval] enum X509PrivateKeyUsageFlags *pValue
     );
     [id(1610743840), propput]
     HRESULT __stdcall KeyUsage (
       [in] enum X509PrivateKeyUsageFlags argNo1
     );
     [id(1610743842), propget]
     HRESULT __stdcall KeyProtection (
       [out retval] enum X509PrivateKeyProtection *pValue
     );
     [id(1610743842), propput]
     HRESULT __stdcall KeyProtection (
       [in] enum X509PrivateKeyProtection argNo1
     );
     [id(1610743844), propget]
     HRESULT __stdcall MachineContext (
       [out retval] WINBOOL *pValue
     );
     [id(1610743844), propput]
     HRESULT __stdcall MachineContext (
       [in] WINBOOL argNo1
     );
     [id(1610743846), propget]
     HRESULT __stdcall SecurityDescriptor (
       [out retval] BSTR *pValue
     );
     [id(1610743846), propput]
     HRESULT __stdcall SecurityDescriptor (
       [in] BSTR argNo1
     );
     [id(1610743848), propget]
     HRESULT __stdcall Certificate (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
     [id(1610743848), propput]
     HRESULT __stdcall Certificate (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [in] BSTR argNo2
     );
     [id(1610743850), propget]
     HRESULT __stdcall UniqueContainerName (
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall Opened (
       [out retval] WINBOOL *pValue
     );
     [propget]
     HRESULT __stdcall DefaultContainer (
       [out retval] WINBOOL *pValue
     );
     [propget]
     HRESULT __stdcall Existing (
       [out retval] WINBOOL *pValue
     );
     [id(1610743853), propput]
     HRESULT __stdcall Existing (
       [in] WINBOOL argNo1
     );
     [id(1610743855), propget]
     HRESULT __stdcall Silent (
       [out retval] WINBOOL *pValue
     );
     [id(1610743855), propput]
     HRESULT __stdcall Silent (
       [in] WINBOOL argNo1
     );
     [id(1610743857), propget]
     HRESULT __stdcall ParentWindow (
       [out retval] long *pValue
     );
     [id(1610743857), propput]
     HRESULT __stdcall ParentWindow (
       [in] long argNo1
     );
     [id(1610743859), propget]
     HRESULT __stdcall UIContextMessage (
       [out retval] BSTR *pValue
     );
     [id(1610743859), propput]
     HRESULT __stdcall UIContextMessage (
       [in] BSTR argNo1
     );
     [id(1610743861), propput]
     HRESULT __stdcall Pin (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall FriendlyName (
       [out retval] BSTR *pValue
     );
     [id(1610743862), propput]
     HRESULT __stdcall FriendlyName (
       [in] BSTR argNo1
     );
     [id(1610743864), propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *pValue
     );
     [id(1610743864), propput]
     HRESULT __stdcall Description (
       [in] BSTR argNo1
     );
   };
   [
     uuid(728AB30D-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Extension Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509Extension : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall Initialize (
       [in] dispinterface IObjectId *pObjectId,
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall ObjectId (
       [out retval] dispinterface IObjectId **ppValue
     );
     [propget]
     HRESULT __stdcall RawData (
       [in] enum EncodingType Encoding,
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall Critical (
       [out retval] WINBOOL *pValue
     );
     [id(1610743811), propput]
     HRESULT __stdcall Critical (
       [in] WINBOOL argNo1
     );
   };
   [
     uuid(728AB30E-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Extension Collection Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509Extensions : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall ItemByIndex (
       [in] long Index,
       [out retval] dispinterface IX509Extension **pVal
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pVal
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pVal
     );
     [id(2)]
     HRESULT __stdcall Add (
       [in] dispinterface IX509Extension *pVal
     );
     HRESULT __stdcall Remove (
       [in] long Index
     );
     HRESULT __stdcall Clear (void);
     [id(1610743814), propget]
     HRESULT __stdcall IndexByObjectId (
       [in] dispinterface IObjectId *pObjectId,
       [out retval] long *pIndex
     );
     HRESULT __stdcall AddRange (
       [in] dispinterface IX509Extensions *pValue
     );
   };
   [
     uuid(728AB30F-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Key Usage Extension Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509ExtensionKeyUsage : IX509Extension
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncode (
       [in] enum X509KeyUsageFlags UsageFlags
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall KeyUsage (
       [out retval] enum X509KeyUsageFlags *pValue
     );
   };
   [
     uuid(728AB310-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Enhanced Key Usage Extension Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509ExtensionEnhancedKeyUsage : IX509Extension
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncode (
       [in] dispinterface IObjectIds *pValue
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall EnhancedKeyUsage (
       [out retval] dispinterface IObjectIds **ppValue
     );
   };
   [
     uuid(728AB311-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Template Name Extension Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509ExtensionTemplateName : IX509Extension
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncode (
       [in] BSTR strTemplateName
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall TemplateName (
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB312-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Template Extension Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509ExtensionTemplate : IX509Extension
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncode (
       [in] dispinterface IObjectId *pTemplateOid,
       [in] long MajorVersion,
       [in] long MinorVersion
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall TemplateOid (
       [out retval] dispinterface IObjectId **ppValue
     );
     [propget]
     HRESULT __stdcall MajorVersion (
       [out retval] long *pValue
     );
     [propget]
     HRESULT __stdcall MinorVersion (
       [out retval] long *pValue
     );
   };
   [
     uuid(728AB313-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("IAlternativeName Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAlternativeName : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall InitializeFromString (
       [in] enum AlternativeNameType Type,
       [in] BSTR strValue
     );
     HRESULT __stdcall InitializeFromRawData (
       [in] enum AlternativeNameType Type,
       [in] enum EncodingType Encoding,
       [in] BSTR strRawData
     );
     HRESULT __stdcall InitializeFromOtherName (
       [in] dispinterface IObjectId *pObjectId,
       [in] enum EncodingType Encoding,
       [in] BSTR strRawData,
       [in] WINBOOL ToBeWrapped
     );
     [propget]
     HRESULT __stdcall Type (
       [out retval] enum AlternativeNameType *pValue
     );
     [propget]
     HRESULT __stdcall strValue (
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall ObjectId (
       [out retval] dispinterface IObjectId **ppValue
     );
     [propget]
     HRESULT __stdcall RawData (
       [in] enum EncodingType Encoding,
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB314-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("IAlternativeNames Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAlternativeNames : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall ItemByIndex (
       [in] long Index,
       [out retval] dispinterface IAlternativeName **pVal
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pVal
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pVal
     );
     [id(2)]
     HRESULT __stdcall Add (
       [in] dispinterface IAlternativeName *pVal
     );
     HRESULT __stdcall Remove (
       [in] long Index
     );
     HRESULT __stdcall Clear (void);
   };
   [
     uuid(728AB315-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("IX509ExtensionAlternativeNames Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509ExtensionAlternativeNames : IX509Extension
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncode (
       [in] dispinterface IAlternativeNames *pValue
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall AlternativeNames (
       [out retval] dispinterface IAlternativeNames **ppValue
     );
   };
   [
     uuid(728AB316-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("IX509ExtensionBasicConstraints Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509ExtensionBasicConstraints : IX509Extension
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncode (
       [in] WINBOOL IsCA,
       [in] long PathLenConstraint
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall IsCA (
       [out retval] WINBOOL *pValue
     );
     [propget]
     HRESULT __stdcall PathLenConstraint (
       [out retval] long *pValue
     );
   };
   [
     uuid(728AB317-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("IX509ExtensionSubjectKeyIdentifier Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509ExtensionSubjectKeyIdentifier : IX509Extension
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncode (
       [in] enum EncodingType Encoding,
       [in] BSTR strKeyIdentifier
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall SubjectKeyIdentifier (
       [in] enum EncodingType Encoding,
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB318-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("IX509ExtensionAuthorityKeyIdentifier Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509ExtensionAuthorityKeyIdentifier : IX509Extension
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncode (
       [in] enum EncodingType Encoding,
       [in] BSTR strKeyIdentifier
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall AuthorityKeyIdentifier (
       [in] enum EncodingType Encoding,
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB319-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("ISmimeCapability Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ISmimeCapability : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall Initialize (
       [in] dispinterface IObjectId *pObjectId,
       [in] long BitCount
     );
     [propget]
     HRESULT __stdcall ObjectId (
       [out retval] dispinterface IObjectId **ppValue
     );
     [propget]
     HRESULT __stdcall BitCount (
       [out retval] long *pValue
     );
   };
   [
     uuid(728AB31A-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("ISmimeCapabilities Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ISmimeCapabilities : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall ItemByIndex (
       [in] long Index,
       [out retval] dispinterface ISmimeCapability **pVal
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pVal
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pVal
     );
     [id(2)]
     HRESULT __stdcall Add (
       [in] dispinterface ISmimeCapability *pVal
     );
     HRESULT __stdcall Remove (
       [in] long Index
     );
     HRESULT __stdcall Clear (void);
     [id(1610743814)]
     HRESULT __stdcall AddFromCsp (
       [in] dispinterface ICspInformation *pValue
     );
     HRESULT __stdcall AddAvailableSmimeCapabilities (
       [in] WINBOOL MachineContext
     );
   };
   [
     uuid(728AB31B-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("IX509ExtensionSmimeCapabilities Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509ExtensionSmimeCapabilities : IX509Extension
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncode (
       [in] dispinterface ISmimeCapabilities *pValue
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall SmimeCapabilities (
       [out retval] dispinterface ISmimeCapabilities **ppValue
     );
   };
   [
     uuid(728AB31C-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("IPolicyQualifier Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IPolicyQualifier : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall InitializeEncode (
       [in] BSTR strQualifier,
       [in] enum PolicyQualifierType Type
     );
     [propget]
     HRESULT __stdcall ObjectId (
       [out retval] dispinterface IObjectId **ppValue
     );
     [propget]
     HRESULT __stdcall Qualifier (
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall Type (
       [out retval] enum PolicyQualifierType *pValue
     );
     [propget]
     HRESULT __stdcall RawData (
       [in] enum EncodingType Encoding,
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB31D-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("IPolicyQualifiers Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IPolicyQualifiers : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall ItemByIndex (
       [in] long Index,
       [out retval] dispinterface IPolicyQualifier **pVal
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pVal
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pVal
     );
     [id(2)]
     HRESULT __stdcall Add (
       [in] dispinterface IPolicyQualifier *pVal
     );
     HRESULT __stdcall Remove (
       [in] long Index
     );
     HRESULT __stdcall Clear (void);
   };
   [
     uuid(728AB31E-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("ICertificatePolicy Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertificatePolicy : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall Initialize (
       [in] dispinterface IObjectId *pValue
     );
     [propget]
     HRESULT __stdcall ObjectId (
       [out retval] dispinterface IObjectId **ppValue
     );
     [propget]
     HRESULT __stdcall PolicyQualifiers (
       [out retval] dispinterface IPolicyQualifiers **ppValue
     );
   };
   [
     uuid(728AB31F-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("ICertificatePolicies Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertificatePolicies : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall ItemByIndex (
       [in] long Index,
       [out retval] dispinterface ICertificatePolicy **pVal
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pVal
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pVal
     );
     [id(2)]
     HRESULT __stdcall Add (
       [in] dispinterface ICertificatePolicy *pVal
     );
     HRESULT __stdcall Remove (
       [in] long Index
     );
     HRESULT __stdcall Clear (void);
   };
   [
     uuid(728AB320-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X509ExtensionCertificatePolicies Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509ExtensionCertificatePolicies : IX509Extension
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncode (
       [in] dispinterface ICertificatePolicies *pValue
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall Policies (
       [out retval] dispinterface ICertificatePolicies **ppValue
     );
   };
   [
     uuid(728AB321-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X509ExtensionMSApplicationPolicies Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509ExtensionMSApplicationPolicies : IX509Extension
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncode (
       [in] dispinterface ICertificatePolicies *pValue
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall Policies (
       [out retval] dispinterface ICertificatePolicies **ppValue
     );
   };
   [
     uuid(728AB322-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Attribute Value Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509Attribute : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall Initialize (
       [in] dispinterface IObjectId *pObjectId,
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall ObjectId (
       [out retval] dispinterface IObjectId **ppValue
     );
     [propget]
     HRESULT __stdcall RawData (
       [in] enum EncodingType Encoding,
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB323-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Attribute Value Collection Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509Attributes : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall ItemByIndex (
       [in] long Index,
       [out retval] dispinterface IX509Attribute **pVal
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pVal
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pVal
     );
     [id(2)]
     HRESULT __stdcall Add (
       [in] dispinterface IX509Attribute *pVal
     );
     HRESULT __stdcall Remove (
       [in] long Index
     );
     HRESULT __stdcall Clear (void);
   };
   [
     uuid(728AB324-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Extensions Attribute Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509AttributeExtensions : IX509Attribute
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncode (
       [in] dispinterface IX509Extensions *pExtensions
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall X509Extensions (
       [out retval] dispinterface IX509Extensions **ppValue
     );
   };
   [
     uuid(728AB325-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("IX509AttributeClientId Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509AttributeClientId : IX509Attribute
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncode (
       [in] enum RequestClientInfoClientId ClientId,
       [in] BSTR strMachineDnsName,
       [in] BSTR strUserSamName,
       [in] BSTR strProcessName
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall ClientId (
       [out retval] enum RequestClientInfoClientId *pValue
     );
     [propget]
     HRESULT __stdcall MachineDnsName (
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall UserSamName (
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall ProcessName (
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB326-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("IX509AttributeRenewalCertificate Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509AttributeRenewalCertificate : IX509Attribute
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncode (
       [in] enum EncodingType Encoding,
       [in] BSTR strCert
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall RenewalCertificate (
       [in] enum EncodingType Encoding,
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB327-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("IX509AttributeArchiveKey Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509AttributeArchiveKey : IX509Attribute
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncode (
       [in] dispinterface IX509PrivateKey *pKey,
       [in] enum EncodingType Encoding,
       [in] BSTR strCAXCert,
       [in] dispinterface IObjectId *pAlgorithm,
       [in] long EncryptionStrength
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall EncryptedKeyBlob (
       [in] enum EncodingType Encoding,
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall EncryptionAlgorithm (
       [out retval] dispinterface IObjectId **ppValue
     );
     [propget]
     HRESULT __stdcall EncryptionStrength (
       [out retval] long *pValue
     );
   };
   [
     uuid(728AB328-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("IX509AttributeArchiveKeyHash Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509AttributeArchiveKeyHash : IX509Attribute
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncodeFromEncryptedKeyBlob (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncryptedKeyBlob
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall EncryptedKeyHashBlob (
       [in] enum EncodingType Encoding,
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB32A-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("IX509AttributeOSVersion Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509AttributeOSVersion : IX509Attribute
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncode (
       [in] BSTR strOSVersion
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall OSVersion (
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB32B-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("IX509AttributeCspProvider Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509AttributeCspProvider : IX509Attribute
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeEncode (
       [in] enum X509KeySpec KeySpec,
       [in] BSTR strProviderName,
       [in] enum EncodingType Encoding,
       [in] BSTR strSignature
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall KeySpec (
       [out retval] enum X509KeySpec *pValue
     );
     [propget]
     HRESULT __stdcall ProviderName (
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall Signature (
       [in] enum EncodingType Encoding,
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB32C-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Crypt Attribute Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICryptAttribute : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall InitializeFromObjectId (
       [in] dispinterface IObjectId *pObjectId
     );
     HRESULT __stdcall InitializeFromValues (
       [in] dispinterface IX509Attributes *pAttributes
     );
     [propget]
     HRESULT __stdcall ObjectId (
       [out retval] dispinterface IObjectId **ppValue
     );
     [propget]
     HRESULT __stdcall Values (
       [out retval] dispinterface IX509Attributes **ppValue
     );
   };
   [
     uuid(728AB32D-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Crypt Attribute Collection Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICryptAttributes : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall ItemByIndex (
       [in] long Index,
       [out retval] dispinterface ICryptAttribute **pVal
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pVal
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pVal
     );
     [id(2)]
     HRESULT __stdcall Add (
       [in] dispinterface ICryptAttribute *pVal
     );
     HRESULT __stdcall Remove (
       [in] long Index
     );
     HRESULT __stdcall Clear (void);
     [id(1610743814), propget]
     HRESULT __stdcall IndexByObjectId (
       [in] dispinterface IObjectId *pObjectId,
       [out retval] long *pIndex
     );
     HRESULT __stdcall AddRange (
       [in] dispinterface ICryptAttributes *pValue
     );
   };
   [
     uuid(728AB32E-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Certificate Property Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertProperty : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall InitializeFromCertificate (
       [in] WINBOOL MachineContext,
       [in] enum EncodingType Encoding,
       [in] BSTR strCertificate
     );
     HRESULT __stdcall InitializeDecode (
       [in] enum EncodingType Encoding,
       [in] BSTR strEncodedData
     );
     [propget]
     HRESULT __stdcall PropertyId (
       [out retval] enum CERTENROLL_PROPERTYID *pValue
     );
     [id(1610743810), propput]
     HRESULT __stdcall PropertyId (
       [in] enum CERTENROLL_PROPERTYID argNo1
     );
     [id(1610743812), propget]
     HRESULT __stdcall RawData (
       [in] enum EncodingType Encoding,
       [out retval] BSTR *pValue
     );
     HRESULT __stdcall RemoveFromCertificate (
       [in] WINBOOL MachineContext,
       [in] enum EncodingType Encoding,
       [in] BSTR strCertificate
     );
     HRESULT __stdcall SetValueOnCertificate (
       [in] WINBOOL MachineContext,
       [in] enum EncodingType Encoding,
       [in] BSTR strCertificate
     );
   };
   [
     uuid(728AB32F-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Certificate Property Collection Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertProperties : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall ItemByIndex (
       [in] long Index,
       [out retval] dispinterface ICertProperty **pVal
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pVal
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pVal
     );
     [id(2)]
     HRESULT __stdcall Add (
       [in] dispinterface ICertProperty *pVal
     );
     HRESULT __stdcall Remove (
       [in] long Index
     );
     HRESULT __stdcall Clear (void);
     [id(1610743814)]
     HRESULT __stdcall InitializeFromCertificate (
       [in] WINBOOL MachineContext,
       [in] enum EncodingType Encoding,
       [in] BSTR strCertificate
     );
   };
   [
     uuid(728AB330-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Certificate Friendly Name Property Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertPropertyFriendlyName : ICertProperty
   {
     [id(1610809344)]
     HRESULT __stdcall Initialize (
       [in] BSTR strFriendlyName
     );
     [propget]
     HRESULT __stdcall FriendlyName (
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB331-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Certificate Description Property Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertPropertyDescription : ICertProperty
   {
     [id(1610809344)]
     HRESULT __stdcall Initialize (
       [in] BSTR strDescription
     );
     [propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB332-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("ICertPropertyAutoEnroll Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertPropertyAutoEnroll : ICertProperty
   {
     [id(1610809344)]
     HRESULT __stdcall Initialize (
       [in] BSTR strTemplateName
     );
     [propget]
     HRESULT __stdcall TemplateName (
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB333-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("ICertPropertyRequestOriginator Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertPropertyRequestOriginator : ICertProperty
   {
     [id(1610809344)]
     HRESULT __stdcall Initialize (
       [in] BSTR strRequestOriginator
     );
     HRESULT __stdcall InitializeFromLocalRequestOriginator (void);
     [propget]
     HRESULT __stdcall RequestOriginator (
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB334-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("ICertPropertySHA1Hash Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertPropertySHA1Hash : ICertProperty
   {
     [id(1610809344)]
     HRESULT __stdcall Initialize (
       [in] enum EncodingType Encoding,
       [in] BSTR strRenewalValue
     );
     [propget]
     HRESULT __stdcall SHA1Hash (
       [in] enum EncodingType Encoding,
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB336-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("ICertPropertyKeyProvInfo Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertPropertyKeyProvInfo : ICertProperty
   {
     [id(1610809344)]
     HRESULT __stdcall Initialize (
       [in] dispinterface IX509PrivateKey *pValue
     );
     [propget]
     HRESULT __stdcall PrivateKey (
       [out retval] dispinterface IX509PrivateKey **ppValue
     );
   };
   [
     uuid(728AB337-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("ICertPropertyArchived Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertPropertyArchived : ICertProperty
   {
     [id(1610809344)]
     HRESULT __stdcall Initialize (
       [in] WINBOOL ArchivedValue
     );
     [propget]
     HRESULT __stdcall Archived (
       [out retval] WINBOOL *pValue
     );
   };
   [
     uuid(728AB338-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("ICertPropertyBackedUp Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertPropertyBackedUp : ICertProperty
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeFromCurrentTime (
       [in] WINBOOL BackedUpValue
     );
     HRESULT __stdcall Initialize (
       [in] WINBOOL BackedUpValue,
       [in] DATE Date
     );
     [propget]
     HRESULT __stdcall BackedUpValue (
       [out retval] WINBOOL *pValue
     );
     [propget]
     HRESULT __stdcall BackedUpTime (
       [out retval] DATE *pDate
     );
   };
   [
     uuid(728AB339-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("ICertPropertyEnrollment Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertPropertyEnrollment : ICertProperty
   {
     [id(1610809344)]
     HRESULT __stdcall Initialize (
       [in] long RequestId,
       [in] BSTR strCADnsName,
       [in] BSTR strCAName,
       [in opt] BSTR strFriendlyName = L"0"
     );
     [propget]
     HRESULT __stdcall RequestId (
       [out retval] long *pValue
     );
     [propget]
     HRESULT __stdcall CADnsName (
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall CAName (
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall FriendlyName (
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB33A-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("ICertPropertyRenewal Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertPropertyRenewal : ICertProperty
   {
     [id(1610809344)]
     HRESULT __stdcall Initialize (
       [in] enum EncodingType Encoding,
       [in] BSTR strRenewalValue
     );
     HRESULT __stdcall InitializeFromCertificateHash (
       [in] WINBOOL MachineContext,
       [in] enum EncodingType Encoding,
       [in] BSTR strCertificate
     );
     [propget]
     HRESULT __stdcall Renewal (
       [in] enum EncodingType Encoding,
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB33B-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("ICertPropertyArchivedKeyHash Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertPropertyArchivedKeyHash : ICertProperty
   {
     [id(1610809344)]
     HRESULT __stdcall Initialize (
       [in] enum EncodingType Encoding,
       [in] BSTR strArchivedKeyHashValue
     );
     [propget]
     HRESULT __stdcall ArchivedKeyHash (
       [in] enum EncodingType Encoding,
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB34A-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("ICertPropertyEnrollmentPolicyServer Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertPropertyEnrollmentPolicyServer : ICertProperty
   {
     [id(1610809344)]
     HRESULT __stdcall Initialize (
       [in] enum EnrollmentPolicyServerPropertyFlags PropertyFlags,
       [in] enum X509EnrollmentAuthFlags AuthFlags,
       [in] enum X509EnrollmentAuthFlags EnrollmentServerAuthFlags,
       [in] enum PolicyServerUrlFlags UrlFlags,
       [in] BSTR strRequestId,
       [in] BSTR strUrl,
       [in] BSTR strId,
       [in] BSTR strEnrollmentServerUrl
     );
     HRESULT __stdcall GetPolicyServerUrl (
       [out retval] BSTR *pValue
     );
     HRESULT __stdcall GetPolicyServerId (
       [out retval] BSTR *pValue
     );
     HRESULT __stdcall GetEnrollmentServerUrl (
       [out retval] BSTR *pValue
     );
     HRESULT __stdcall GetRequestIdString (
       [out retval] BSTR *pValue
     );
     HRESULT __stdcall GetPropertyFlags (
       [out retval] enum EnrollmentPolicyServerPropertyFlags *pValue
     );
     HRESULT __stdcall GetUrlFlags (
       [out retval] enum PolicyServerUrlFlags *pValue
     );
     HRESULT __stdcall GetAuthentication (
       [out retval] enum X509EnrollmentAuthFlags *pValue
     );
     HRESULT __stdcall GetEnrollmentServerAuthentication (
       [out retval] enum X509EnrollmentAuthFlags *pValue
     );
   };
   [
     uuid(728AB33D-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Signer Certificate Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ISignerCertificate : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall Initialize (
       [in] WINBOOL MachineContext,
       [in] enum X509PrivateKeyVerify VerifyType,
       [in] enum EncodingType Encoding,
       [in] BSTR strCertifcate
     );
     [propget]
     HRESULT __stdcall Certificate (
       [in] enum EncodingType Encoding,
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall PrivateKey (
       [out retval] dispinterface IX509PrivateKey **ppValue
     );
     [propget]
     HRESULT __stdcall Silent (
       [out retval] WINBOOL *pValue
     );
     [id(1610743811), propput]
     HRESULT __stdcall Silent (
       [in] WINBOOL argNo1
     );
     [id(1610743813), propget]
     HRESULT __stdcall ParentWindow (
       [out retval] long *pValue
     );
     [id(1610743813), propput]
     HRESULT __stdcall ParentWindow (
       [in] long argNo1
     );
     [id(1610743815), propget]
     HRESULT __stdcall UIContextMessage (
       [out retval] BSTR *pValue
     );
     [id(1610743815), propput]
     HRESULT __stdcall UIContextMessage (
       [in] BSTR argNo1
     );
     [id(1610743817), propput]
     HRESULT __stdcall Pin (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall SignatureInformation (
       [out retval] dispinterface IX509SignatureInformation **ppValue
     );
   };
   [
     uuid(728AB33C-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Signature Information Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509SignatureInformation : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall HashAlgorithm (
       [out retval] dispinterface IObjectId **ppValue
     );
     [id(1610743808), propput]
     HRESULT __stdcall HashAlgorithm (
       [in] dispinterface IObjectId *argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall PublicKeyAlgorithm (
       [out retval] dispinterface IObjectId **ppValue
     );
     [id(1610743810), propput]
     HRESULT __stdcall PublicKeyAlgorithm (
       [in] dispinterface IObjectId *argNo1
     );
     [id(1610743812), propget]
     HRESULT __stdcall Parameters (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
     [id(1610743812), propput]
     HRESULT __stdcall Parameters (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [in] BSTR argNo2
     );
     [id(1610743814), propget]
     HRESULT __stdcall AlternateSignatureAlgorithm (
       [out retval] WINBOOL *pValue
     );
     [id(1610743814), propput]
     HRESULT __stdcall AlternateSignatureAlgorithm (
       [in] WINBOOL argNo1
     );
     [id(1610743816), propget]
     HRESULT __stdcall AlternateSignatureAlgorithmSet (
       [out retval] WINBOOL *pValue
     );
     [propget]
     HRESULT __stdcall NullSigned (
       [out retval] WINBOOL *pValue
     );
     [id(1610743817), propput]
     HRESULT __stdcall NullSigned (
       [in] WINBOOL argNo1
     );
     [id(1610743819)]
     HRESULT __stdcall GetSignatureAlgorithm (
       [in] WINBOOL Pkcs7Signature,
       [in] WINBOOL SignatureKey,
       [out retval] dispinterface IObjectId **ppValue
     );
     HRESULT __stdcall SetDefaultValues (void);
   };
   [
     uuid(728AB33F-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Name Value Pair Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509NameValuePair : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall Initialize (
       [in] BSTR strName,
       [in] BSTR strValue
     );
     [propget]
     HRESULT __stdcall Value (
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB35B-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Certificate Request Pkcs10 Interface v2"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509CertificateRequestPkcs10V2 : IX509CertificateRequestPkcs10
   {
     [id(1610874880)]
     HRESULT __stdcall InitializeFromTemplate (
       [in] enum X509CertificateEnrollmentContext Context,
       [in] dispinterface IX509EnrollmentPolicyServer *pPolicyServer,
       [in] dispinterface IX509CertificateTemplate *pTemplate
     );
     HRESULT __stdcall InitializeFromPrivateKeyTemplate (
       [in] enum X509CertificateEnrollmentContext Context,
       [in] dispinterface IX509PrivateKey *pPrivateKey,
       [in] dispinterface IX509EnrollmentPolicyServer *pPolicyServer,
       [in] dispinterface IX509CertificateTemplate *pTemplate
     );
     HRESULT __stdcall InitializeFromPublicKeyTemplate (
       [in] enum X509CertificateEnrollmentContext Context,
       [in] dispinterface IX509PublicKey *pPublicKey,
       [in] dispinterface IX509EnrollmentPolicyServer *pPolicyServer,
       [in] dispinterface IX509CertificateTemplate *pTemplate
     );
     [propget]
     HRESULT __stdcall PolicyServer (
       [out retval] dispinterface IX509EnrollmentPolicyServer **ppPolicyServer
     );
     [propget]
     HRESULT __stdcall Template (
       [out retval] dispinterface IX509CertificateTemplate **ppTemplate
     );
   };
   [
     uuid(728AB342-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Certificate Request Pkcs10 Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509CertificateRequestPkcs10 : IX509CertificateRequest
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeFromTemplateName (
       [in] enum X509CertificateEnrollmentContext Context,
       [in] BSTR strTemplateName
     );
     HRESULT __stdcall InitializeFromPrivateKey (
       [in] enum X509CertificateEnrollmentContext Context,
       [in] dispinterface IX509PrivateKey *pPrivateKey,
       [in] BSTR strTemplateName
     );
     HRESULT __stdcall InitializeFromPublicKey (
       [in] enum X509CertificateEnrollmentContext Context,
       [in] dispinterface IX509PublicKey *pPublicKey,
       [in] BSTR strTemplateName
     );
     HRESULT __stdcall InitializeFromCertificate (
       [in] enum X509CertificateEnrollmentContext Context,
       [in] BSTR strCertificate,
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [in opt] enum X509RequestInheritOptions InheritOptions = (int) 201326592
     );
     HRESULT __stdcall InitializeDecode (
       [in] BSTR strEncodedData,
       [in opt] enum EncodingType Encoding = (int) 201326593
     );
     HRESULT __stdcall CheckSignature (
       [in opt] enum Pkcs10AllowedSignatureTypes AllowedSignatureTypes = (int) 201326593
     );
     HRESULT __stdcall IsSmartCard (
       [out retval] WINBOOL *pValue
     );
     [propget]
     HRESULT __stdcall TemplateObjectId (
       [out retval] dispinterface IObjectId **ppValue
     );
     [propget]
     HRESULT __stdcall PublicKey (
       [out retval] dispinterface IX509PublicKey **ppValue
     );
     [propget]
     HRESULT __stdcall PrivateKey (
       [out retval] dispinterface IX509PrivateKey **ppValue
     );
     [propget]
     HRESULT __stdcall NullSigned (
       [out retval] WINBOOL *pValue
     );
     [propget]
     HRESULT __stdcall ReuseKey (
       [out retval] WINBOOL *pValue
     );
     [propget]
     HRESULT __stdcall OldCertificate (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall Subject (
       [out retval] dispinterface IX500DistinguishedName **ppValue
     );
     [id(1610809357), propput]
     HRESULT __stdcall Subject (
       [in] dispinterface IX500DistinguishedName *argNo1
     );
     [id(1610809359), propget]
     HRESULT __stdcall CspStatuses (
       [out retval] dispinterface ICspStatuses **ppValue
     );
     [propget]
     HRESULT __stdcall SmimeCapabilities (
       [out retval] WINBOOL *pValue
     );
     [id(1610809360), propput]
     HRESULT __stdcall SmimeCapabilities (
       [in] WINBOOL argNo1
     );
     [id(1610809362), propget]
     HRESULT __stdcall SignatureInformation (
       [out retval] dispinterface IX509SignatureInformation **ppValue
     );
     [propget]
     HRESULT __stdcall KeyContainerNamePrefix (
       [out retval] BSTR *pValue
     );
     [id(1610809363), propput]
     HRESULT __stdcall KeyContainerNamePrefix (
       [in] BSTR argNo1
     );
     [id(1610809365), propget]
     HRESULT __stdcall CryptAttributes (
       [out retval] dispinterface ICryptAttributes **ppValue
     );
     [propget]
     HRESULT __stdcall X509Extensions (
       [out retval] dispinterface IX509Extensions **ppValue
     );
     [propget]
     HRESULT __stdcall CriticalExtensions (
       [out retval] dispinterface IObjectIds **ppValue
     );
     [propget]
     HRESULT __stdcall SuppressOids (
       [out retval] dispinterface IObjectIds **ppValue
     );
     [propget]
     HRESULT __stdcall RawDataToBeSigned (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall Signature (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
     HRESULT __stdcall GetCspStatuses (
       [in] enum X509KeySpec KeySpec,
       [out retval] dispinterface ICspStatuses **ppCspStatuses
     );
   };
   [
     uuid(728AB341-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Certificate Request Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509CertificateRequest : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall Initialize (
       [in] enum X509CertificateEnrollmentContext Context
     );
     HRESULT __stdcall Encode (void);
     HRESULT __stdcall ResetForEncode (void);
     HRESULT __stdcall GetInnerRequest (
       [in] enum InnerRequestLevel Level,
       [out retval] dispinterface IX509CertificateRequest **ppValue
     );
     [propget]
     HRESULT __stdcall Type (
       [out retval] enum X509RequestType *pValue
     );
     [propget]
     HRESULT __stdcall EnrollmentContext (
       [out retval] enum X509CertificateEnrollmentContext *pValue
     );
     [propget]
     HRESULT __stdcall Silent (
       [out retval] WINBOOL *pValue
     );
     [id(1610743814), propput]
     HRESULT __stdcall Silent (
       [in] WINBOOL argNo1
     );
     [id(1610743816), propget]
     HRESULT __stdcall ParentWindow (
       [out retval] long *pValue
     );
     [id(1610743816), propput]
     HRESULT __stdcall ParentWindow (
       [in] long argNo1
     );
     [id(1610743818), propget]
     HRESULT __stdcall UIContextMessage (
       [out retval] BSTR *pValue
     );
     [id(1610743818), propput]
     HRESULT __stdcall UIContextMessage (
       [in] BSTR argNo1
     );
     [id(1610743820), propget]
     HRESULT __stdcall SuppressDefaults (
       [out retval] WINBOOL *pValue
     );
     [id(1610743820), propput]
     HRESULT __stdcall SuppressDefaults (
       [in] WINBOOL argNo1
     );
     [id(1610743822), propget]
     HRESULT __stdcall RenewalCertificate (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
     [id(1610743822), propput]
     HRESULT __stdcall RenewalCertificate (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [in] BSTR argNo2
     );
     [id(1610743824), propget]
     HRESULT __stdcall ClientId (
       [out retval] enum RequestClientInfoClientId *pValue
     );
     [id(1610743824), propput]
     HRESULT __stdcall ClientId (
       [in] enum RequestClientInfoClientId argNo1
     );
     [id(1610743826), propget]
     HRESULT __stdcall CspInformations (
       [out retval] dispinterface ICspInformations **ppValue
     );
     [id(1610743826), propput]
     HRESULT __stdcall CspInformations (
       [in] dispinterface ICspInformations *argNo1
     );
     [id(1610743828), propget]
     HRESULT __stdcall HashAlgorithm (
       [out retval] dispinterface IObjectId **ppValue
     );
     [id(1610743828), propput]
     HRESULT __stdcall HashAlgorithm (
       [in] dispinterface IObjectId *argNo1
     );
     [id(1610743830), propget]
     HRESULT __stdcall AlternateSignatureAlgorithm (
       [out retval] WINBOOL *pValue
     );
     [id(1610743830), propput]
     HRESULT __stdcall AlternateSignatureAlgorithm (
       [in] WINBOOL argNo1
     );
     [id(1610743832), propget]
     HRESULT __stdcall RawData (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(13B79026-2181-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Policy Server Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509EnrollmentPolicyServer : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall Initialize (
       [in] BSTR bstrPolicyServerUrl,
       [in] BSTR bstrPolicyServerId,
       [in] enum X509EnrollmentAuthFlags AuthFlags,
       [in] WINBOOL fIsUnTrusted,
       [in] enum X509CertificateEnrollmentContext Context
     );
     HRESULT __stdcall LoadPolicy (
       [in] X509EnrollmentPolicyLoadOption option
     );
     HRESULT __stdcall GetTemplates (
       [out retval] dispinterface IX509CertificateTemplates **pTemplates
     );
     HRESULT __stdcall GetCAsForTemplate (
       [in] dispinterface IX509CertificateTemplate *pTemplate,
       [out retval] dispinterface ICertificationAuthorities **ppCAs
     );
     HRESULT __stdcall GetCAs (
       [out retval] dispinterface ICertificationAuthorities **ppCAs
     );
     HRESULT __stdcall Validate (void);
     HRESULT __stdcall GetCustomOids (
       [out retval] dispinterface IObjectIds **ppObjectIds
     );
     HRESULT __stdcall GetNextUpdateTime (
       [out retval] DATE *pDate
     );
     HRESULT __stdcall GetLastUpdateTime (
       [out retval] DATE *pDate
     );
     HRESULT __stdcall GetPolicyServerUrl (
       [out retval] BSTR *pValue
     );
     HRESULT __stdcall GetPolicyServerId (
       [out retval] BSTR *pValue
     );
     HRESULT __stdcall GetFriendlyName (
       [out retval] BSTR *pValue
     );
     HRESULT __stdcall GetIsDefaultCEP (
       [out retval] WINBOOL *pValue
     );
     HRESULT __stdcall GetUseClientId (
       [out retval] WINBOOL *pValue
     );
     HRESULT __stdcall GetAllowUnTrustedCA (
       [out retval] WINBOOL *pValue
     );
     HRESULT __stdcall GetCachePath (
       [out retval] BSTR *pValue
     );
     HRESULT __stdcall GetCacheDir (
       [out retval] BSTR *pValue
     );
     HRESULT __stdcall GetAuthFlags (
       [out retval] enum X509EnrollmentAuthFlags *pValue
     );
     HRESULT __stdcall SetCredential (
       [in] long hWndParent,
       [in] enum X509EnrollmentAuthFlags flag,
       [in] BSTR strCredential,
       [in] BSTR strPassword
     );
     HRESULT __stdcall QueryChanges (
       [out retval] WINBOOL *pValue
     );
     HRESULT __stdcall InitializeImport (
       [in] VARIANT val
     );
     HRESULT __stdcall Export (
       [in] enum X509EnrollmentPolicyExportFlags exportFlags,
       [out retval] VARIANT *pVal
     );
     [propget]
     HRESULT __stdcall Cost (
       [out retval] UINT *pValue
     );
     [id(1610743830), propput]
     HRESULT __stdcall Cost (
       [in] UINT argNo1
     );
   };
   [
     uuid(13B79003-2181-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Certificate Templates Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509CertificateTemplates : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall ItemByIndex (
       [in] long Index,
       [out retval] dispinterface IX509CertificateTemplate **pVal
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pVal
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pVal
     );
     [id(2)]
     HRESULT __stdcall Add (
       [in] dispinterface IX509CertificateTemplate *pVal
     );
     HRESULT __stdcall Remove (
       [in] long Index
     );
     HRESULT __stdcall Clear (void);
     [id(1610743814), propget]
     HRESULT __stdcall ItemByName (
       [in] BSTR bstrName,
       [out retval] dispinterface IX509CertificateTemplate **ppValue
     );
     [propget]
     HRESULT __stdcall ItemByOid (
       [in] dispinterface IObjectId *pOid,
       [out retval] dispinterface IX509CertificateTemplate **ppValue
     );
   };
   [
     uuid(54244A13-555A-4E22-896D-1B0E52F76406),
     helpstring("X.509 Certificate Template Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509CertificateTemplate : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Property (
       [in] enum EnrollmentTemplateProperty Property,
       [out retval] VARIANT *pValue
     );
   };
   [
     uuid(13B79005-2181-11DA-B2A4-000E7BBB2B09),
     helpstring("Certification Authorities Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertificationAuthorities : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall ItemByIndex (
       [in] long Index,
       [out retval] dispinterface ICertificationAuthority **pVal
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pVal
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pVal
     );
     [id(2)]
     HRESULT __stdcall Add (
       [in] dispinterface ICertificationAuthority *pVal
     );
     HRESULT __stdcall Remove (
       [in] long Index
     );
     HRESULT __stdcall Clear (void);
     [id(1610743814)]
     HRESULT __stdcall ComputeSiteCosts (void);
     [propget]
     HRESULT __stdcall ItemByName (
       [in] BSTR strName,
       [out retval] dispinterface ICertificationAuthority **ppValue
     );
   };
   [
     uuid(835D1F61-1E95-4BC8-B4D3-976C42B968F7),
     helpstring("Certification Authority Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICertificationAuthority : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Property (
       [in] enum EnrollmentCAProperty Property,
       [out retval] VARIANT *pValue
     );
   };
   [
     uuid(728AB35A-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Certificate Request Pkcs10 Interface v2"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509CertificateRequestCertificate2 : IX509CertificateRequestCertificate
   {
     [id(1610940416)]
     HRESULT __stdcall InitializeFromTemplate (
       [in] enum X509CertificateEnrollmentContext Context,
       [in] dispinterface IX509EnrollmentPolicyServer *pPolicyServer,
       [in] dispinterface IX509CertificateTemplate *pTemplate
     );
     HRESULT __stdcall InitializeFromPrivateKeyTemplate (
       [in] enum X509CertificateEnrollmentContext Context,
       [in] dispinterface IX509PrivateKey *pPrivateKey,
       [in] dispinterface IX509EnrollmentPolicyServer *pPolicyServer,
       [in] dispinterface IX509CertificateTemplate *pTemplate
     );
     [propget]
     HRESULT __stdcall PolicyServer (
       [out retval] dispinterface IX509EnrollmentPolicyServer **ppPolicyServer
     );
     [propget]
     HRESULT __stdcall Template (
       [out retval] dispinterface IX509CertificateTemplate **ppTemplate
     );
   };
   [
     uuid(728AB343-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Certificate Request Certificate Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509CertificateRequestCertificate : IX509CertificateRequestPkcs10
   {
     [id(1610874880)]
     HRESULT __stdcall CheckPublicKeySignature (
       [in] dispinterface IX509PublicKey *pPublicKey
     );
     [propget]
     HRESULT __stdcall Issuer (
       [out retval] dispinterface IX500DistinguishedName **ppValue
     );
     [id(1610874881), propput]
     HRESULT __stdcall Issuer (
       [in] dispinterface IX500DistinguishedName *argNo1
     );
     [id(1610874883), propget]
     HRESULT __stdcall NotBefore (
       [out retval] DATE *pValue
     );
     [id(1610874883), propput]
     HRESULT __stdcall NotBefore (
       [in] DATE argNo1
     );
     [id(1610874885), propget]
     HRESULT __stdcall NotAfter (
       [out retval] DATE *pValue
     );
     [id(1610874885), propput]
     HRESULT __stdcall NotAfter (
       [in] DATE argNo1
     );
     [id(1610874887), propget]
     HRESULT __stdcall SerialNumber (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
     [id(1610874887), propput]
     HRESULT __stdcall SerialNumber (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [in] BSTR argNo2
     );
     [id(1610874889), propget]
     HRESULT __stdcall SignerCertificate (
       [out retval] dispinterface ISignerCertificate **ppValue
     );
     [id(1610874889), propput]
     HRESULT __stdcall SignerCertificate (
       [in] dispinterface ISignerCertificate *argNo1
     );
   };
   [
     uuid(728AB35C-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Certificate Request Pkcs7 Interface v2"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509CertificateRequestPkcs7V2 : IX509CertificateRequestPkcs7
   {
     [id(1610874880)]
     HRESULT __stdcall InitializeFromTemplate (
       [in] enum X509CertificateEnrollmentContext Context,
       [in] dispinterface IX509EnrollmentPolicyServer *pPolicyServer,
       [in] dispinterface IX509CertificateTemplate *pTemplate
     );
     [propget]
     HRESULT __stdcall PolicyServer (
       [out retval] dispinterface IX509EnrollmentPolicyServer **ppPolicyServer
     );
     [propget]
     HRESULT __stdcall Template (
       [out retval] dispinterface IX509CertificateTemplate **ppTemplate
     );
     HRESULT __stdcall CheckCertificateSignature (
       [in] WINBOOL ValidateCertificateChain
     );
   };
   [
     uuid(728AB344-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Certificate Request Pkcs7 Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509CertificateRequestPkcs7 : IX509CertificateRequest
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeFromTemplateName (
       [in] enum X509CertificateEnrollmentContext Context,
       [in] BSTR strTemplateName
     );
     HRESULT __stdcall InitializeFromCertificate (
       [in] enum X509CertificateEnrollmentContext Context,
       [in] WINBOOL RenewalRequest,
       [in] BSTR strCertificate,
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [in opt] enum X509RequestInheritOptions InheritOptions = (int) 201326592
     );
     HRESULT __stdcall InitializeFromInnerRequest (
       [in] dispinterface IX509CertificateRequest *pInnerRequest
     );
     HRESULT __stdcall InitializeDecode (
       [in] BSTR strEncodedData,
       [in opt] enum EncodingType Encoding = (int) 201326593
     );
     [propget]
     HRESULT __stdcall RequesterName (
       [out retval] BSTR *pValue
     );
     [id(1610809348), propput]
     HRESULT __stdcall RequesterName (
       [in] BSTR argNo1
     );
     [id(1610809350), propget]
     HRESULT __stdcall SignerCertificate (
       [out retval] dispinterface ISignerCertificate **ppValue
     );
     [id(1610809350), propput]
     HRESULT __stdcall SignerCertificate (
       [in] dispinterface ISignerCertificate *argNo1
     );
   };
   [
     uuid(728AB35D-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Certificate Request Cmc Interface v2"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509CertificateRequestCmc2 : IX509CertificateRequestCmc
   {
     [id(1610940416)]
     HRESULT __stdcall InitializeFromTemplate (
       [in] enum X509CertificateEnrollmentContext Context,
       [in] dispinterface IX509EnrollmentPolicyServer *pPolicyServer,
       [in] dispinterface IX509CertificateTemplate *pTemplate
     );
     HRESULT __stdcall InitializeFromInnerRequestTemplate (
       [in] dispinterface IX509CertificateRequest *pInnerRequest,
       [in] dispinterface IX509EnrollmentPolicyServer *pPolicyServer,
       [in] dispinterface IX509CertificateTemplate *pTemplate
     );
     [propget]
     HRESULT __stdcall PolicyServer (
       [out retval] dispinterface IX509EnrollmentPolicyServer **ppPolicyServer
     );
     [propget]
     HRESULT __stdcall Template (
       [out retval] dispinterface IX509CertificateTemplate **ppTemplate
     );
     HRESULT __stdcall CheckSignature (
       [in opt] enum Pkcs10AllowedSignatureTypes AllowedSignatureTypes = (int) 201326593
     );
     HRESULT __stdcall CheckCertificateSignature (
       [in] dispinterface ISignerCertificate *pSignerCertificate,
       [in] WINBOOL ValidateCertificateChain
     );
   };
   [
     uuid(728AB345-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Certificate Request Cmc Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509CertificateRequestCmc : IX509CertificateRequestPkcs7
   {
     [id(1610874880)]
     HRESULT __stdcall InitializeFromInnerRequestTemplateName (
       [in] dispinterface IX509CertificateRequest *pInnerRequest,
       [in] BSTR strTemplateName
     );
     [propget]
     HRESULT __stdcall TemplateObjectId (
       [out retval] dispinterface IObjectId **ppValue
     );
     [propget]
     HRESULT __stdcall NullSigned (
       [out retval] WINBOOL *pValue
     );
     [propget]
     HRESULT __stdcall CryptAttributes (
       [out retval] dispinterface ICryptAttributes **ppValue
     );
     [propget]
     HRESULT __stdcall NameValuePairs (
       [out retval] dispinterface IX509NameValuePairs **ppValue
     );
     [propget]
     HRESULT __stdcall X509Extensions (
       [out retval] dispinterface IX509Extensions **ppValue
     );
     [propget]
     HRESULT __stdcall CriticalExtensions (
       [out retval] dispinterface IObjectIds **ppValue
     );
     [propget]
     HRESULT __stdcall SuppressOids (
       [out retval] dispinterface IObjectIds **ppValue
     );
     [propget]
     HRESULT __stdcall TransactionId (
       [out retval] long *pValue
     );
     [id(1610874888), propput]
     HRESULT __stdcall TransactionId (
       [in] long argNo1
     );
     [id(1610874890), propget]
     HRESULT __stdcall SenderNonce (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
     [id(1610874890), propput]
     HRESULT __stdcall SenderNonce (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [in] BSTR argNo2
     );
     [id(1610874892), propget]
     HRESULT __stdcall SignatureInformation (
       [out retval] dispinterface IX509SignatureInformation **ppValue
     );
     [propget]
     HRESULT __stdcall ArchivePrivateKey (
       [out retval] WINBOOL *pValue
     );
     [id(1610874893), propput]
     HRESULT __stdcall ArchivePrivateKey (
       [in] WINBOOL argNo1
     );
     [id(1610874895), propget]
     HRESULT __stdcall KeyArchivalCertificate (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
     [id(1610874895), propput]
     HRESULT __stdcall KeyArchivalCertificate (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [in] BSTR argNo2
     );
     [id(1610874897), propget]
     HRESULT __stdcall EncryptionAlgorithm (
       [out retval] dispinterface IObjectId **ppValue
     );
     [id(1610874897), propput]
     HRESULT __stdcall EncryptionAlgorithm (
       [in] dispinterface IObjectId *argNo1
     );
     [id(1610874899), propget]
     HRESULT __stdcall EncryptionStrength (
       [out retval] long *pValue
     );
     [id(1610874899), propput]
     HRESULT __stdcall EncryptionStrength (
       [in] long argNo1
     );
     [id(1610874901), propget]
     HRESULT __stdcall EncryptedKeyHash (
       [in] enum EncodingType Encoding,
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall SignerCertificates (
       [out retval] dispinterface ISignerCertificates **ppValue
     );
   };
   [
     uuid(728AB340-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Name Value Pair Collection Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509NameValuePairs : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall ItemByIndex (
       [in] long Index,
       [out retval] dispinterface IX509NameValuePair **pVal
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pVal
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pVal
     );
     [id(2)]
     HRESULT __stdcall Add (
       [in] dispinterface IX509NameValuePair *pVal
     );
     HRESULT __stdcall Remove (
       [in] long Index
     );
     HRESULT __stdcall Clear (void);
   };
   [
     uuid(728AB33E-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("Signer Certificate Collection Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ISignerCertificates : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall ItemByIndex (
       [in] long Index,
       [out retval] dispinterface ISignerCertificate **pVal
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pVal
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pVal
     );
     [id(2)]
     HRESULT __stdcall Add (
       [in] dispinterface ISignerCertificate *pVal
     );
     HRESULT __stdcall Remove (
       [in] long Index
     );
     HRESULT __stdcall Clear (void);
     [id(1610743814)]
     HRESULT __stdcall Find (
       [in] dispinterface ISignerCertificate *pSignerCert,
       [out retval] long *piSignerCert
     );
   };
   [
     uuid(728AB350-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Enrollment Interface v2"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509Enrollment2 : IX509Enrollment
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeFromTemplate (
       [in] enum X509CertificateEnrollmentContext Context,
       [in] dispinterface IX509EnrollmentPolicyServer *pPolicyServer,
       [in] dispinterface IX509CertificateTemplate *pTemplate
     );
     HRESULT __stdcall InstallResponse2 (
       [in] enum InstallResponseRestrictionFlags Restrictions,
       [in] BSTR strResponse,
       [in] enum EncodingType Encoding,
       [in] BSTR strPassword,
       [in] BSTR strEnrollmentPolicyServerUrl,
       [in] BSTR strEnrollmentPolicyServerID,
       [in] enum PolicyServerUrlFlags EnrollmentPolicyServerFlags,
       [in] enum X509EnrollmentAuthFlags AuthFlags
     );
     [propget]
     HRESULT __stdcall PolicyServer (
       [out retval] dispinterface IX509EnrollmentPolicyServer **ppPolicyServer
     );
     [propget]
     HRESULT __stdcall Template (
       [out retval] dispinterface IX509CertificateTemplate **ppTemplate
     );
     [propget]
     HRESULT __stdcall RequestIdString (
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB346-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Enrollment Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509Enrollment : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall Initialize (
       [in] enum X509CertificateEnrollmentContext Context
     );
     HRESULT __stdcall InitializeFromTemplateName (
       [in] enum X509CertificateEnrollmentContext Context,
       [in] BSTR strTemplateName
     );
     HRESULT __stdcall InitializeFromRequest (
       [in] dispinterface IX509CertificateRequest *pRequest
     );
     HRESULT __stdcall CreateRequest (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
     HRESULT __stdcall Enroll (void);
     HRESULT __stdcall InstallResponse (
       [in] enum InstallResponseRestrictionFlags Restrictions,
       [in] BSTR strResponse,
       [in] enum EncodingType Encoding,
       [in] BSTR strPassword
     );
     HRESULT __stdcall CreatePFX (
       [in] BSTR strPassword,
       [in] enum PFXExportOptions ExportOptions,
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall Request (
       [out retval] dispinterface IX509CertificateRequest **pValue
     );
     [propget]
     HRESULT __stdcall Silent (
       [out retval] WINBOOL *pValue
     );
     [id(1610743816), propput]
     HRESULT __stdcall Silent (
       [in] WINBOOL argNo1
     );
     [id(1610743818), propget]
     HRESULT __stdcall ParentWindow (
       [out retval] long *pValue
     );
     [id(1610743818), propput]
     HRESULT __stdcall ParentWindow (
       [in] long argNo1
     );
     [id(1610743820), propget]
     HRESULT __stdcall NameValuePairs (
       [out retval] dispinterface IX509NameValuePairs **ppValue
     );
     [propget]
     HRESULT __stdcall EnrollmentContext (
       [out retval] enum X509CertificateEnrollmentContext *pValue
     );
     [propget]
     HRESULT __stdcall Status (
       [out retval] dispinterface IX509EnrollmentStatus **ppValue
     );
     [propget]
     HRESULT __stdcall Certificate (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall Response (
       [in opt] enum EncodingType Encoding = (int) 201326593,
       [out retval] BSTR *pValue
     );
     [propget]
     HRESULT __stdcall CertificateFriendlyName (
       [out retval] BSTR *pValue
     );
     [id(1610743825), propput]
     HRESULT __stdcall CertificateFriendlyName (
       [in] BSTR argNo1
     );
     [id(1610743827), propget]
     HRESULT __stdcall CertificateDescription (
       [out retval] BSTR *pValue
     );
     [id(1610743827), propput]
     HRESULT __stdcall CertificateDescription (
       [in] BSTR argNo1
     );
     [id(1610743829), propget]
     HRESULT __stdcall RequestId (
       [out retval] long *pValue
     );
     [propget]
     HRESULT __stdcall CAConfigString (
       [out retval] BSTR *pValue
     );
   };
   [
     uuid(728AB349-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 EnrollmentWebClassFactory Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509EnrollmentWebClassFactory : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall CreateObject (
       [in] BSTR strProgID,
       [out retval] IUnknown **ppIUnknown
     );
   };
   [
     uuid(728AB351-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Enrollment Helper"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509EnrollmentHelper : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall AddPolicyServer (
       [in] BSTR strEnrollmentPolicyServerURI,
       [in] BSTR strEnrollmentPolicyID,
       [in] enum PolicyServerUrlFlags EnrollmentPolicyServerFlags,
       [in] enum X509EnrollmentAuthFlags AuthFlags,
       [in] BSTR strCredential,
       [in] BSTR strPassword
     );
     HRESULT __stdcall AddEnrollmentServer (
       [in] BSTR strEnrollmentServerURI,
       [in] enum X509EnrollmentAuthFlags AuthFlags,
       [in] BSTR strCredential,
       [in] BSTR strPassword
     );
     HRESULT __stdcall Enroll (
       [in] BSTR strEnrollmentPolicyServerURI,
       [in] BSTR strTemplateName,
       [in] enum EncodingType Encoding,
       [in] enum WebEnrollmentFlags enrollFlags,
       [out retval] BSTR *pstrCertificate
     );
     HRESULT __stdcall Initialize (
       [in] enum X509CertificateEnrollmentContext Context
     );
   };
   [
     uuid(728AB352-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 MachineEnrollmentFactory Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509MachineEnrollmentFactory : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall CreateObject (
       [in] BSTR strProgID,
       [out retval] dispinterface IX509EnrollmentHelper **ppIHelper
     );
   };
   [
     uuid(884E204B-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Policy Server List Manager Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509PolicyServerListManager : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall ItemByIndex (
       [in] long Index,
       [out retval] dispinterface IX509PolicyServerUrl **pVal
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pVal
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pVal
     );
     [id(2)]
     HRESULT __stdcall Add (
       [in] dispinterface IX509PolicyServerUrl *pVal
     );
     HRESULT __stdcall Remove (
       [in] long Index
     );
     HRESULT __stdcall Clear (void);
     [id(1610743814)]
     HRESULT __stdcall Initialize (
       [in] enum X509CertificateEnrollmentContext Context,
       [in] enum PolicyServerUrlFlags Flags
     );
   };
   [
     uuid(884E204A-217D-11DA-B2A4-000E7BBB2B09),
     helpstring("X.509 Policy Server URL Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509PolicyServerUrl : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall Initialize (
       [in] enum X509CertificateEnrollmentContext Context
     );
     [propget]
     HRESULT __stdcall Url (
       [out retval] BSTR *ppValue
     );
     [id(1610743809), propput]
     HRESULT __stdcall Url (
       [in] BSTR argNo1
     );
     [id(1610743811), propget]
     HRESULT __stdcall Default (
       [out retval] WINBOOL *pValue
     );
     [id(1610743811), propput]
     HRESULT __stdcall Default (
       [in] WINBOOL argNo1
     );
     [id(1610743813), propget]
     HRESULT __stdcall Flags (
       [out retval] enum PolicyServerUrlFlags *pValue
     );
     [id(1610743813), propput]
     HRESULT __stdcall Flags (
       [in] enum PolicyServerUrlFlags argNo1
     );
     [id(1610743815), propget]
     HRESULT __stdcall AuthFlags (
       [out retval] enum X509EnrollmentAuthFlags *pValue
     );
     [id(1610743815), propput]
     HRESULT __stdcall AuthFlags (
       [in] enum X509EnrollmentAuthFlags argNo1
     );
     [id(1610743817), propget]
     HRESULT __stdcall Cost (
       [out retval] UINT *pValue
     );
     [id(1610743817), propput]
     HRESULT __stdcall Cost (
       [in] UINT argNo1
     );
     [id(1610743819)]
     HRESULT __stdcall GetStringProperty (
       [in] enum PolicyServerUrlPropertyID PropertyId,
       [out retval] BSTR *ppValue
     );
     HRESULT __stdcall SetStringProperty (
       [in] enum PolicyServerUrlPropertyID PropertyId,
       [in] BSTR pValue
     );
     HRESULT __stdcall UpdateRegistry (
       [in] enum X509CertificateEnrollmentContext Context
     );
     HRESULT __stdcall RemoveFromRegistry (
       [in] enum X509CertificateEnrollmentContext Context
     );
   };
   [
     uuid(F49466A7-395A-4E9E-B6E7-32B331600DC0),
     helpstring("X.509 Certificate Template Writable Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IX509CertificateTemplateWritable : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall Initialize (
       [in] dispinterface IX509CertificateTemplate *pValue
     );
     HRESULT __stdcall Commit (
       [in] enum CommitTemplateFlags commitFlags,
       [in] BSTR strServerContext
     );
     [propget]
     HRESULT __stdcall Property (
       [in] enum EnrollmentTemplateProperty Property,
       [out retval] VARIANT *pValue
     );
     [id(1610743810), propput]
     HRESULT __stdcall Property (
       [in] enum EnrollmentTemplateProperty Property,
       [in] VARIANT argNo2
     );
     [id(1610743812), propget]
     HRESULT __stdcall Template (
       [out retval] dispinterface IX509CertificateTemplate **ppValue
     );
   };

};

