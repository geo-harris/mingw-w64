/* Automated generated idl file <wvc9>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Structure forward declarations.  */
struct tagRECT;
struct tagPOINT;

/* Union record forward declarations.  */
dispinterface IWinChartEvents;
dispinterface WCChartEventInfo;
dispinterface IOMEvent;
dispinterface WCWinChart;
dispinterface WCBorder;
dispinterface WCCharts;
dispinterface WCChart;
dispinterface WCAxes;
dispinterface WCScaling;
dispinterface WCAxis;
dispinterface WCFont;
dispinterface WCGridlines;
dispinterface WCTitle;
dispinterface WCInterior;
dispinterface WCLegend;
dispinterface WCLegendEntries;
dispinterface WCLegendEntry;
dispinterface WCPlotArea;
dispinterface WCSeriesCollection;
dispinterface WCSeries;
dispinterface WCDataLabelsCollection;
dispinterface WCDataLabels;
dispinterface WCPoints;
dispinterface WCPoint;
dispinterface WCErrorBarsCollection;
dispinterface WCErrorBars;
dispinterface WCMarker;
dispinterface WCTrendlines;
dispinterface WCTrendline;
dispinterface WCDataLabel;

/* Union record forward declarations.  */
coclass ChartSpace;

/* Enumeration declarations.  */
enum __MIDL___MIDL_itf_wvc_0000_0000_0027
{
  chChartLayoutAutomatic = (int) 201326592,
  chChartLayoutHorizontal = (int) 201326593,
  chChartLayoutVertical = (int) 201326594
};
enum ChartTypeEnum
{
  chChartTypeCombo = (int) -1,
  chChartTypeColumnClustered = (int) 201326592,
  chChartTypeColumnStacked = (int) 201326593,
  chChartTypeColumnStacked100 = (int) 201326594,
  chChartTypeBarClustered = (int) 201326595,
  chChartTypeBarStacked = (int) 201326596,
  chChartTypeBarStacked100 = (int) 201326597,
  chChartTypeLine = (int) 201326598,
  chChartTypeLineStacked = (int) 201326600,
  chChartTypeLineStacked100 = (int) 201326602,
  chChartTypeLineMarkers = (int) 201326599,
  chChartTypeLineStackedMarkers = (int) 201326601,
  chChartTypeLineStacked100Markers = (int) 201326603,
  chChartTypeSmoothLine = (int) 201326604,
  chChartTypeSmoothLineStacked = (int) 201326606,
  chChartTypeSmoothLineStacked100 = (int) 201326608,
  chChartTypeSmoothLineMarkers = (int) 201326605,
  chChartTypeSmoothLineStackedMarkers = (int) 201326607,
  chChartTypeSmoothLineStacked100Markers = (int) 201326609,
  chChartTypePie = (int) 201326610,
  chChartTypePieExploded = (int) 201326611,
  chChartTypePieStacked = (int) 201326612,
  chChartTypeScatterMarkers = (int) 201326613,
  chChartTypeScatterLine = (int) 201326617,
  chChartTypeScatterLineMarkers = (int) 201326616,
  chChartTypeScatterLineFilled = (int) 201326618,
  chChartTypeScatterSmoothLine = (int) 201326615,
  chChartTypeScatterSmoothLineMarkers = (int) 201326614,
  chChartTypeBubble = (int) 201326619,
  chChartTypeBubbleLine = (int) 201326620,
  chChartTypeArea = (int) 201326621,
  chChartTypeAreaStacked = (int) 201326622,
  chChartTypeAreaStacked100 = (int) 201326623,
  chChartTypeDoughnut = (int) 201326624,
  chChartTypeDoughnutExploded = (int) 201326625,
  chChartTypeRadarLine = (int) 201326626,
  chChartTypeRadarLineMarkers = (int) 201326627,
  chChartTypeRadarLineFilled = (int) 201326628,
  chChartTypeRadarSmoothLine = (int) 201326629,
  chChartTypeRadarSmoothLineMarkers = (int) 201326630,
  chChartTypeStockHLC = (int) 201326631,
  chChartTypeStockOHLC = (int) 201326632,
  chChartTypePolarMarkers = (int) 201326633,
  chChartTypePolarLine = (int) 201326634,
  chChartTypePolarLineMarkers = (int) 201326635,
  chChartTypePolarSmoothLine = (int) 201326636,
  chChartTypePolarSmoothLineMarkers = (int) 201326637
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0035
{
  wvcLineStyleAutomatic = (int) -1,
  wvcLineStyleSolid = (int) 201326592,
  wvcLineStyleDash = (int) 201326593,
  wvcLineStyleDot = (int) 201326594,
  wvcLineStyleDashDot = (int) 201326595,
  wvcLineStyleDashDotDot = (int) 201326596,
  wvcLineStyleNone = (int) 201326597
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0032
{
  wvcLineWeightHairline = (int) 201326592,
  wvcLineWeightThin = (int) 201326593,
  wvcLineWeightMedium = (int) 201326594,
  wvcLineWeightThick = (int) 201326595
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0023
{
  chScaleOrientationMinMax = (int) 201326592,
  chScaleOrientationMaxMin = (int) 201326593
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0024
{
  chScaleTypeLinear = (int) 201326592,
  chScaleTypeLogarithmic = (int) 201326593
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0008
{
  chAxisPositionTop = (int) -1,
  chAxisPositionBottom = (int) -2,
  chAxisPositionLeft = (int) -3,
  chAxisPositionRight = (int) -4,
  chAxisPositionRadial = (int) -5,
  chAxisPositionCircular = (int) -6
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0009
{
  chCategoryAxis = (int) 201326592,
  chValueAxis = (int) 201326593
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0006
{
  chAxisCrossesAutomatic = (int) 201326592,
  chAxisCrossesCustom = (int) 201326595
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0033
{
  wvcUnderlineStyleNone = (int) 201326592,
  wvcUnderlineStyleSingle = (int) 201326593,
  wvcUnderlineStyleDouble = (int) 201326594,
  wvcUnderlineStyleSingleAccounting = (int) 201326595,
  wvcUnderlineStyleDoubleAccounting = (int) 201326596
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0007
{
  chTickMarkAutomatic = (int) 201326592,
  chTickMarkNone = (int) 201326593,
  chTickMarkInside = (int) 201326594,
  chTickMarkOutside = (int) 201326595,
  chTickMarkCross = (int) 201326596
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0025
{
  chTitlePositionAutomatic = (int) 201326592,
  chTitlePositionTop = (int) 201326593,
  chTitlePositionBottom = (int) 201326594,
  chTitlePositionLeft = (int) 201326595,
  chTitlePositionRight = (int) 201326596
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0021
{
  chLegendPositionAutomatic = (int) 201326592,
  chLegendPositionTop = (int) 201326593,
  chLegendPositionBottom = (int) 201326594,
  chLegendPositionLeft = (int) 201326595,
  chLegendPositionRight = (int) 201326596
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0010
{
  chLabelPositionAutomatic = (int) 201326592,
  chLabelPositionCenter = (int) 201326593,
  chLabelPositionInsideEnd = (int) 201326594,
  chLabelPositionInsideBase = (int) 201326595,
  chLabelPositionOutsideEnd = (int) 201326596,
  chLabelPositionOutsideBase = (int) 201326597,
  chLabelPositionLeft = (int) 201326598,
  chLabelPositionRight = (int) 201326599,
  chLabelPositionTop = (int) 201326600,
  chLabelPositionBottom = (int) 201326601
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0028
{
  chDimSeriesNames = (int) 201326592,
  chDimCategories = (int) 201326593,
  chDimValues = (int) 201326594,
  chDimYValues = (int) 201326595,
  chDimXValues = (int) 201326596,
  chDimOpenValues = (int) 201326597,
  chDimCloseValues = (int) 201326598,
  chDimHighValues = (int) 201326599,
  chDimLowValues = (int) 201326600,
  chDimBubbleValues = (int) 201326601,
  chDimRValues = (int) 201326602,
  chDimThetaValues = (int) 201326603
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0013
{
  chEndStyleNone = (int) 201326593,
  chEndStyleCap = (int) 201326594
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0030
{
  chErrorBarDirectionY = (int) 201326592,
  chErrorBarDirectionX = (int) 201326593
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0014
{
  chErrorBarIncludePlusValues = (int) 201326592,
  chErrorBarIncludeMinusValues = (int) 201326593,
  chErrorBarIncludeBoth = (int) 201326594
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0015
{
  chErrorBarTypeFixedValue = (int) 201326592,
  chErrorBarTypePercent = (int) 201326593,
  chErrorBarTypeCustom = (int) 201326594
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0016
{
  chErrorBarPlusValues = (int) 201326604,
  chErrorBarMinusValues = (int) 201326605
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0022
{
  chMarkerStyleNone = (int) 201326592,
  chMarkerStyleSquare = (int) 201326593,
  chMarkerStyleDiamond = (int) 201326594,
  chMarkerStyleTriangle = (int) 201326595,
  chMarkerStyleX = (int) 201326596,
  chMarkerStyleStar = (int) 201326597,
  chMarkerStyleDot = (int) 201326598,
  chMarkerStyleDash = (int) 201326599,
  chMarkerStyleCircle = (int) 201326600,
  chMarkerStylePlus = (int) 201326601
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0026
{
  chTrendlineTypeExponential = (int) 201326592,
  chTrendlineTypeLinear = (int) 201326593,
  chTrendlineTypeLogarithmic = (int) 201326594,
  chTrendlineTypePolynomial = (int) 201326595,
  chTrendlineTypePower = (int) 201326596
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0019
{
  chSizeIsWidth = (int) 201326592,
  chSizeIsArea = (int) 201326593
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0003
{
  chSelectionNone = (int) 201326592,
  chSelectionAxis = (int) 201326593,
  chSelectionChart = (int) 201326594,
  chSelectionPlotArea = (int) 201326596,
  chSelectionDataLabels = (int) 201326600,
  chSelectionErrorbars = (int) 201326608,
  chSelectionGridlines = (int) 201326624,
  chSelectionLegend = (int) 201326656,
  chSelectionLegendEntry = (int) 201326720,
  chSelectionPoint = (int) 201326848,
  chSelectionSeries = (int) 201327104,
  chSelectionTitle = (int) 201327616,
  chSelectionTrendline = (int) 201328640,
  chSelectionWinChart = (int) 201330688
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0001
{
  wvcDataSetChange = (int) 201331693,
  wvcDblClick = (int) 201331694,
  wvcClick = (int) 201331695,
  wvcKeyDown = (int) 201331696,
  wvcKeyPress = (int) 201331697,
  wvcKeyUp = (int) 201331698,
  wvcMouseDown = (int) 201331699,
  wvcMouseMove = (int) 201331700,
  wvcMouseUp = (int) 201331701,
  wvcZoom = (int) 201331702,
  wvcToolTip = (int) 201331703
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0002
{
  esksNone = (int) 201326592,
  esksLeftMouse = (int) 201326593,
  esksRightMouse = (int) 201326594,
  esksMidMouse = (int) 201326596,
  esksShift = (int) 201326600,
  esksControl = (int) 201326608,
  esksAlt = (int) 201326624
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0004
{
  chLabelSpacingAutomatic = (int) -1
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0005
{
  chCategoryScaling = (int) 201326592,
  chValueScaling = (int) 201326593,
  chValueScaling1 = (int) 201326594,
  chValueScaling2 = (int) 201326595
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0011
{
  chNone = (int) -1,
  chSolid = (int) 201326592
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0012
{
  chDataSourceTypeUnknown = (int) 201326592,
  chDataSourceTypeSpreadsheet = (int) 201326593,
  chDataSourceTypeRecordset = (int) 201326594,
  chDataSourceTypePivotlist = (int) 201326595
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0017
{
  chColorAutomatic = (int) -1,
  chColorNone = (int) -2
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0018
{
  chDataGroupingFunctionMinimum = (int) 201326592,
  chDataGroupingFunctionMaximum = (int) 201326593,
  chDataGroupingFunctionSum = (int) 201326594,
  chDataGroupingFunctionAverage = (int) 201326595
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0020
{
  chSeriesByRows = (int) 201326592,
  chSeriesByColumns = (int) 201326593
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0029
{
  chDataLiteral = (int) -1,
  chDataNone = (int) -2
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0031
{
  chPivotColumns = (int) -1,
  chPivotRows = (int) -2,
  chPivotColAggregates = (int) -3,
  chPivotRowAggregates = (int) -4
};
enum __MIDL___MIDL_itf_wvc_0000_0000_0034
{
  chAlignGeneral = (int) 201326592,
  chAlignLeft = (int) 201326593,
  chAlignCenter = (int) 201326594,
  chAlignRight = (int) 201326595,
  chAlignTop = (int) 201326596,
  chAlignBottom = (int) 201326597
};

/* Structure/union declarations.  */
struct tagRECT
{
  long left;
  long top;
  long right;
  long bottom;
};
struct tagPOINT
{
  long X;
  long Y;
};

/* Type definitions.  */
[
  uuid(5CCE1C59-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0027 ChartChartLayoutEnum;
[
  uuid(5CCE1C50-01DC-11D4-AE77-00C04F613171)
]
typedef enum ChartTypeEnum ChartChartTypeEnum;
[
  uuid(5CCE1BC8-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0035 LineStyleEnum;
[
  uuid(5CCE1C53-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0032 LineWeightEnum;
[
  uuid(5CCE1C55-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0023 ChartScaleOrientationEnum;
[
  uuid(5CCE1C56-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0024 ChartScaleTypeEnum;
[
  uuid(5CCE1C45-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0008 ChartAxisPositionEnum;
[
  uuid(5CCE1C46-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0009 ChartAxisTypeEnum;
[
  uuid(5CCE1C43-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0006 ChartAxisCrossesEnum;
[
  uuid(5CCE1BCA-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0033 UnderlineStyleEnum;
[
  uuid(5CCE1C44-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0007 ChartTickMarkEnum;
[
  uuid(5CCE1C57-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0025 ChartTitlePositionEnum;
[
  uuid(5CCE1C52-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0021 ChartLegendPositionEnum;
[
  uuid(5CCE1C47-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0010 ChartDataLabelPositionEnum;
[
  uuid(5CCE1C42-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0028 ChartDimensionsEnum;
[
  uuid(5CCE1C4A-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0013 ChartEndStyleEnum;
[
  uuid(5CCE1BD3-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0030 ChartErrorBarDirectionEnum;
[
  uuid(5CCE1C4B-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0014 ChartErrorBarIncludeEnum;
[
  uuid(5CCE1C4C-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0015 ChartErrorBarTypeEnum;
[
  uuid(5CCE1C6A-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0016 ChartErrorBarCustomValuesEnum;
[
  uuid(5CCE1C54-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0022 ChartMarkerStyleEnum;
[
  uuid(5CCE1C58-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0026 ChartTrendlineTypeEnum;
[
  uuid(5CCE1C4F-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0019 ChartSizeRepresentsEnum;
[
  uuid(5CCE1C12-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0003 ChartSelectionsEnum;
[
  uuid(A7EACF84-73ED-4B20-9E8E-BA7E2E9C4488)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0001 ChartEvents;
[
  uuid(5CCE1C13-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0002 MouseMessages;
[
  uuid(5CCE1C84-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0004 ChartAxisLabelSpacing;
[
  uuid(5CCE1C71-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0005 ChartSeriesScalingsEnum;
[
  uuid(5CCE1C29-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0011 ChartFillStyleEnum;
[
  uuid(5CCE1C49-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0012 ChartDataSourceTypeEnum;
[
  uuid(5CCE1C4D-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0017 ChartColorIndexEnum;
[
  uuid(5CCE1C4E-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0018 ChartDataGroupingFunctionEnum;
[
  uuid(5CCE1C51-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0020 ChartSeriesByEnum;
[
  uuid(5CCE1BD2-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0029 ChartSpecialDataSourcesEnum;
[
  uuid(5CCE1C70-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0031 ChartPivotDataReferenceEnum;
[
  uuid(5CCE1BCB-01DC-11D4-AE77-00C04F613171)
]
typedef enum __MIDL___MIDL_itf_wvc_0000_0000_0034 TextAlign;

[
  uuid(5CCE1B98-01DC-11D4-AE77-00C04F613171),
  version(1.0),
  helpstring("Windows Visual Components 9.0"),
  helpfile("msowcvba.chm")
]
library wvc9
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(5CCE1B92-01DC-11D4-AE77-00C04F613171),
     helpstring("Windows Visual Components Chart 9.0"),
     cancreate,
     control
   ]
   coclass ChartSpace
   {
     dispinterface WCWinChart;
     dispinterface IWinChartEvents;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(5CCE1BAC-01DC-11D4-AE77-00C04F613171),
     dispatchable
   ]
   dispinterface IWinChartEvents
   {
     [id(5101)]
     void __stdcall DataSetChange (void);
     void __stdcall DblClick (
       [in] dispinterface WCChartEventInfo *ChartEventInfo
     );
     void __stdcall Click (
       [in] dispinterface WCChartEventInfo *ChartEventInfo
     );
     void __stdcall KeyDown (
       [in] dispinterface WCChartEventInfo *ChartEventInfo
     );
     void __stdcall KeyPress (
       [in] dispinterface WCChartEventInfo *ChartEventInfo
     );
     void __stdcall KeyUp (
       [in] dispinterface WCChartEventInfo *ChartEventInfo
     );
     void __stdcall MouseDown (
       [in] dispinterface WCChartEventInfo *ChartEventInfo
     );
     void __stdcall MouseMove (
       [in] dispinterface WCChartEventInfo *ChartEventInfo
     );
     void __stdcall MouseUp (
       [in] dispinterface WCChartEventInfo *ChartEventInfo
     );
     void __stdcall Zoom (
       [in] dispinterface WCChartEventInfo *ChartEventInfo
     );
     void __stdcall ToolTip (
       [in] dispinterface WCChartEventInfo *ChartEventInfo
     );
   };
   [
     uuid(5CCE1BF8-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCChartEventInfo : IOMEvent
   {
   };
   [
     uuid(5CCE1C15-01DC-11D4-AE77-00C04F613171),
     helpstring("Event object"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IOMEvent : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall X (
       [out retval] long *px
     );
     [propget]
     HRESULT __stdcall Y (
       [out retval] long *py
     );
     [propget]
     HRESULT __stdcall KeyCode (
       [out retval] long *pvk
     );
     [propget]
     HRESULT __stdcall KeyChar (
       [out retval] BSTR *Char
     );
     [propget]
     HRESULT __stdcall Button (
       [out retval] long *pbutton
     );
     [propget]
     HRESULT __stdcall AltKey (
       [out retval] WINBOOL *pvb
     );
     [propget]
     HRESULT __stdcall CtrlKey (
       [out retval] WINBOOL *pvb
     );
     [propget]
     HRESULT __stdcall ShiftKey (
       [out retval] WINBOOL *pvb
     );
     [propget]
     HRESULT __stdcall Selection (
       [out retval] struct tagRECT *prect
     );
     [propget]
     HRESULT __stdcall right (
       [out retval] long *pright
     );
     [propget]
     HRESULT __stdcall left (
       [out retval] long *pleft
     );
   };
   [
     uuid(5CCE1BB4-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCWinChart : IDispatch
   {
     [id(5000), propput, bindable]
     HRESULT __stdcall ChartLayout (
       [in] ChartChartLayoutEnum argNo1
     );
     [id(5000), propget, bindable]
     HRESULT __stdcall ChartLayout (
       [out retval] ChartChartLayoutEnum *pChartChartLayout
     );
     [propput, bindable]
     HRESULT __stdcall ChartWrapCount (
       [in] long argNo1
     );
     [id(5001), propget, bindable]
     HRESULT __stdcall ChartWrapCount (
       [out retval] long *plcount
     );
     [id(5016), propput, bindable]
     HRESULT __stdcall EnableEvents (
       [in] WINBOOL argNo1
     );
     [id(5016), propget, bindable]
     HRESULT __stdcall EnableEvents (
       [out retval] WINBOOL *pfEnableEvents
     );
     [id(5002), propput, bindable]
     HRESULT __stdcall HasChartSpaceLegend (
       [in] WINBOOL argNo1
     );
     [id(5002), propget, bindable]
     HRESULT __stdcall HasChartSpaceLegend (
       [out retval] WINBOOL *pfHasChartSpaceLegend
     );
     [id(1610743816), propget]
     HRESULT __stdcall BuildNumber (
       [out retval] BSTR *pbstrBuildNumber
     );
     [propget]
     HRESULT __stdcall ChartTypeString (
       [in] ChartChartTypeEnum type,
       [out retval] BSTR *pbstr
     );
     [id(5003), propput, nonbrowsable]
     HRESULT __stdcall ScreenUpdating (
       [in] WINBOOL argNo1
     );
     [id(5003), propget, nonbrowsable]
     HRESULT __stdcall ScreenUpdating (
       [out retval] WINBOOL *pfUpdate
     );
     [propget]
     HRESULT __stdcall Border (
       [out retval] dispinterface WCBorder **ppline
     );
     [propget]
     HRESULT __stdcall Charts (
       [out retval] dispinterface WCCharts **ppcharts
     );
     [id(5017), propput, bindable]
     HRESULT __stdcall HasChartSpaceTitle (
       [in] WINBOOL argNo1
     );
     [id(5017), propget, bindable]
     HRESULT __stdcall HasChartSpaceTitle (
       [out retval] WINBOOL *pfHasChartSpaceTitle
     );
     [id(5007), propget]
     HRESULT __stdcall Interior (
       [out retval] dispinterface WCInterior **ppinterior
     );
     [propget]
     HRESULT __stdcall ChartSpaceLegend (
       [out retval] dispinterface WCLegend **pplegend
     );
     [propget]
     HRESULT __stdcall ChartSpaceTitle (
       [out retval] dispinterface WCTitle **pptitle
     );
     [id(1610743827), propget, nonbrowsable]
     HRESULT __stdcall Constants (
       [out retval] IDispatch **ppIDispatchConstants
     );
     [id(5019), hidden]
     HRESULT __stdcall BuildLitChart (void);
     [id(5012)]
     HRESULT __stdcall Clear (void);
     [id(1610743830)]
     HRESULT __stdcall CloseZoom (void);
     HRESULT __stdcall ExportPicture (
       [in opt] BSTR FileName = L"chart.gif",
       [in opt] BSTR FilterName = L"gif",
       [in opt] long width = (int) -1,
       [in opt] long height = (int) -1
     );
     [id(5014)]
     HRESULT __stdcall Refresh (void);
     [id(5025)]
     HRESULT __stdcall RangeFromPoint (
       [in] int X,
       [in] int Y,
       [out retval] IDispatch **ppobject
     );
     [id(5029)]
     HRESULT __stdcall RangeFromPointEx (
       [in] int X,
       [in] int Y,
       [out] IDispatch **ppobject,
       [out] ChartSelectionsEnum *itype
     );
     [id(1610743835), propput, hidden]
     HRESULT __stdcall Enabled (
       [in] WINBOOL argNo1
     );
     [id(1610743835), propget, hidden]
     HRESULT __stdcall Enabled (
       [out retval] WINBOOL *fEnabled
     );
     [id(5026), propget, hidden]
     HRESULT __stdcall AllowAboutDialog (
       [out retval] WINBOOL *AllowAboutDialog
     );
     [id(5026), propput, hidden]
     HRESULT __stdcall AllowAboutDialog (
       [in] WINBOOL argNo1
     );
     [propget, hidden]
     HRESULT __stdcall StaticCategories (
       [out retval] WINBOOL *StaticCategories
     );
     [id(5027), propput, hidden]
     HRESULT __stdcall StaticCategories (
       [in] WINBOOL argNo1
     );
     [id(1610743841), propput]
     HRESULT __stdcall EnabledToolTips (
       [in] long msec,
       [in] UINT argNo2
     );
     HRESULT __stdcall SetZoom (
       [in] int left,
       [in] int right
     );
     void __stdcall __MIDL____MIDL_itf_wvc_0001_00920000 (
       [in] dispinterface WCChartEventInfo *pChartEvent,
       [in] VARIANT *pUserData
     );
     [id(5028)]
     HRESULT __stdcall SetEventHandler (
       [in] long dispid,
       [in] dispinterface WCWinChart *pCallback,
       [in] VARIANT *vUserData
     );
   };
   [
     uuid(5CCE1BA4-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCBorder : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Color (
       [out retval] VARIANT *Color
     );
     [id(1610743808), propput]
     HRESULT __stdcall Color (
       [in] VARIANT *argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall LineStyle (
       [out retval] VARIANT *LineStyle
     );
     [id(1610743810), propput]
     HRESULT __stdcall LineStyle (
       [in] LineStyleEnum argNo1
     );
     [id(1610743812), propget]
     HRESULT __stdcall Parent (
       [out retval] IDispatch **Parent
     );
     [propget]
     HRESULT __stdcall Weight (
       [out retval] VARIANT *LineWeight
     );
     [id(1610743813), propput]
     HRESULT __stdcall Weight (
       [in] LineWeightEnum argNo1
     );
   };
   [
     uuid(5CCE1C16-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCCharts : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Count (
       [out retval] long *pCount
     );
     [propget]
     HRESULT __stdcall Parent (
       [out retval] IDispatch **ppiwinchart
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppunk
     );
     [id(1610743811)]
     HRESULT __stdcall Add (
       [in opt] long Index = (int) -1,
       [out retval] dispinterface WCChart **ppchart
     );
     HRESULT __stdcall DeleteItem (
       [in] VARIANT Index
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT Index,
       [out retval] dispinterface WCChart **ppchart
     );
   };
   [
     uuid(5CCE1C17-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCChart : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Axes (
       [out retval] dispinterface WCAxes **ppaxes
     );
     [propget]
     HRESULT __stdcall Border (
       [out retval] dispinterface WCBorder **ppline
     );
     [propput]
     HRESULT __stdcall HasLegend (
       [in] WINBOOL argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall HasLegend (
       [out retval] WINBOOL *pfHasLegend
     );
     [id(1610743812), propput]
     HRESULT __stdcall HasTitle (
       [in] WINBOOL argNo1
     );
     [id(1610743812), propget]
     HRESULT __stdcall HasTitle (
       [out retval] WINBOOL *pfHasTitle
     );
     [id(1610743814), propput]
     HRESULT __stdcall WidthRatio (
       [in] long argNo1
     );
     [id(1610743814), propget]
     HRESULT __stdcall WidthRatio (
       [out retval] long *pratio
     );
     [id(1610743816), propput]
     HRESULT __stdcall HeightRatio (
       [in] long argNo1
     );
     [id(1610743816), propget]
     HRESULT __stdcall HeightRatio (
       [out retval] long *pratio
     );
     [id(1610743818), propget]
     HRESULT __stdcall Index (
       [out retval] long *piChart
     );
     [propget]
     HRESULT __stdcall Interior (
       [out retval] dispinterface WCInterior **ppinterior
     );
     [propget]
     HRESULT __stdcall Legend (
       [out retval] dispinterface WCLegend **pplegend
     );
     [propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [id(1610743821), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstr
     );
     [id(1610743823), propget]
     HRESULT __stdcall Parent (
       [out retval] IDispatch **ppwcwinchart
     );
     [propget]
     HRESULT __stdcall PlotArea (
       [out retval] dispinterface WCPlotArea **ppplotarea
     );
     [propget]
     HRESULT __stdcall Title (
       [out retval] dispinterface WCTitle **pptitle
     );
     [propput]
     HRESULT __stdcall BubbleScale (
       [in] double argNo1
     );
     [id(1610743826), propget]
     HRESULT __stdcall BubbleScale (
       [out retval] double *pdBubbleScalew
     );
     [id(1610743828), propput]
     HRESULT __stdcall FirstSliceAngle (
       [in] long argNo1
     );
     [id(1610743828), propget]
     HRESULT __stdcall FirstSliceAngle (
       [out retval] long *panFirst
     );
     [id(1610743830), propput]
     HRESULT __stdcall GapWidth (
       [in] long argNo1
     );
     [id(1610743830), propget]
     HRESULT __stdcall GapWidth (
       [out retval] long *plGapWidth
     );
     [id(1610743832), propput]
     HRESULT __stdcall HoleSize (
       [in] long argNo1
     );
     [id(1610743832), propget]
     HRESULT __stdcall HoleSize (
       [out retval] long *plHoleSize
     );
     [id(1610743834), propput]
     HRESULT __stdcall Overlap (
       [in] long argNo1
     );
     [id(1610743834), propget]
     HRESULT __stdcall Overlap (
       [out retval] long *plOverlap
     );
     [id(1610743836), propget]
     HRESULT __stdcall SeriesCollection (
       [out retval] dispinterface WCSeriesCollection **ppseriesCollection
     );
     [propput]
     HRESULT __stdcall SizeRepresents (
       [in] ChartSizeRepresentsEnum argNo1
     );
     [id(1610743837), propget]
     HRESULT __stdcall SizeRepresents (
       [out retval] ChartSizeRepresentsEnum *pocpSR
     );
     [id(1610743839), propget]
     HRESULT __stdcall Scalings (
       [in] ChartDimensionsEnum Dimension,
       [out retval] dispinterface WCScaling **ppwcscaling
     );
     [propput]
     HRESULT __stdcall type (
       [in] ChartChartTypeEnum argNo1
     );
     [id(1610743840), propget]
     HRESULT __stdcall type (
       [out retval] ChartChartTypeEnum *pocpGT
     );
     [id(1610743842)]
     HRESULT __stdcall SetData (
       [in] ChartDimensionsEnum Dimension,
       [in] long DataSourceIndex,
       [in opt] VARIANT DataReference
     );
     [hidden]
     HRESULT __stdcall GetDataReference (
       [in] ChartDimensionsEnum Dimension,
       [out retval] BSTR *DataSourceReference
     );
     [hidden]
     HRESULT __stdcall GetDataSourceIndex (
       [in] ChartDimensionsEnum Dimension,
       [out retval] long *DataSourceIndex
     );
     [hidden]
     HRESULT __stdcall GetData (
       [in] ChartDimensionsEnum Dimension,
       [out] VARIANT *DataSourceIndex,
       [out] VARIANT *DataReference
     );
     [propput]
     HRESULT __stdcall ZoomColor (
       [in] VARIANT *argNo1
     );
   };
   [
     uuid(5CCE1C18-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCAxes : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Count (
       [out retval] long *pcaxis
     );
     [propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface WCChart **ppchart
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppunk
     );
     [id(1610743811)]
     HRESULT __stdcall Add (
       [in] dispinterface WCScaling *Scaling,
       [in] ChartAxisPositionEnum pos,
       [in] ChartAxisTypeEnum type,
       [out retval] dispinterface WCAxis **ppaxis
     );
     HRESULT __stdcall DeleteItem (
       [in] VARIANT Index
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT Index,
       [out retval] dispinterface WCAxis **ppaxis
     );
   };
   [
     uuid(5CCE1BED-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCScaling : IDispatch
   {
     [id(1610743808), propput]
     HRESULT __stdcall HasAutoMaximum (
       [in] WINBOOL argNo1
     );
     [id(1610743808), propget]
     HRESULT __stdcall HasAutoMaximum (
       [out retval] WINBOOL *pfAutoMax
     );
     [id(1610743810), propput]
     HRESULT __stdcall HasAutoMinimum (
       [in] WINBOOL argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall HasAutoMinimum (
       [out retval] WINBOOL *pfHasAutoMinimum
     );
     [id(1610743812), propput]
     HRESULT __stdcall HasSplit (
       [in] WINBOOL argNo1
     );
     [id(1610743812), propget]
     HRESULT __stdcall HasSplit (
       [out retval] WINBOOL *pfHasSplit
     );
     [id(1610743814), propput]
     HRESULT __stdcall LogBase (
       [in] double argNo1
     );
     [id(1610743814), propget]
     HRESULT __stdcall LogBase (
       [out retval] double *pdLogBase
     );
     [id(1610743816), propput]
     HRESULT __stdcall Maximum (
       [in] double argNo1
     );
     [id(1610743816), propget]
     HRESULT __stdcall Maximum (
       [out retval] double *pdMax
     );
     [id(1610743818), propput]
     HRESULT __stdcall Minimum (
       [in] double argNo1
     );
     [id(1610743818), propget]
     HRESULT __stdcall Minimum (
       [out retval] double *pdMin
     );
     [id(1610743820), propput]
     HRESULT __stdcall Orientation (
       [in] ChartScaleOrientationEnum argNo1
     );
     [id(1610743820), propget]
     HRESULT __stdcall Orientation (
       [out retval] ChartScaleOrientationEnum *pocpSO
     );
     [id(1610743822), propput]
     HRESULT __stdcall type (
       [in] ChartScaleTypeEnum argNo1
     );
     [id(1610743822), propget]
     HRESULT __stdcall type (
       [out retval] ChartScaleTypeEnum *pocpST
     );
     [id(1610743824), propput]
     HRESULT __stdcall SplitMaximum (
       [in] double argNo1
     );
     [id(1610743824), propget]
     HRESULT __stdcall SplitMaximum (
       [out retval] double *pdSplitMax
     );
     [id(1610743826), propput]
     HRESULT __stdcall SplitMinimum (
       [in] double argNo1
     );
     [id(1610743826), propget]
     HRESULT __stdcall SplitMinimum (
       [out retval] double *pdSplitMin
     );
   };
   [
     uuid(5CCE1C19-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCAxis : IDispatch
   {
     [id(1610743808), propput]
     HRESULT __stdcall Crosses (
       [in] ChartAxisCrossesEnum argNo1
     );
     [id(1610743808), propget]
     HRESULT __stdcall Crosses (
       [out retval] ChartAxisCrossesEnum *pocpACT
     );
     [id(1610743810), propput]
     HRESULT __stdcall CrossesAtValue (
       [in] double argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall CrossesAtValue (
       [out retval] double *pdCrossesAt
     );
     [id(1610743812), propput]
     HRESULT __stdcall CrossingAxis (
       [in] dispinterface WCAxis *argNo1
     );
     [id(1610743812), propget]
     HRESULT __stdcall CrossingAxis (
       [out retval] dispinterface WCAxis **ppaxis
     );
     [id(1610743814), propget]
     HRESULT __stdcall Font (
       [out retval] dispinterface WCFont **ppfont
     );
     [propput]
     HRESULT __stdcall HasAutoMajorUnit (
       [in] WINBOOL argNo1
     );
     [id(1610743815), propget]
     HRESULT __stdcall HasAutoMajorUnit (
       [out retval] WINBOOL *pfHasAutoMajorUnit
     );
     [id(1610743817), propput]
     HRESULT __stdcall HasAutoMinorUnit (
       [in] WINBOOL argNo1
     );
     [id(1610743817), propget]
     HRESULT __stdcall HasAutoMinorUnit (
       [out retval] WINBOOL *pfHasAutoMinorUnit
     );
     [id(1610743819), propput]
     HRESULT __stdcall HasMajorGridlines (
       [in] WINBOOL argNo1
     );
     [id(1610743819), propget]
     HRESULT __stdcall HasMajorGridlines (
       [out retval] WINBOOL *pfHasMajorGridlines
     );
     [id(1610743821), propput]
     HRESULT __stdcall HasMinorGridlines (
       [in] WINBOOL argNo1
     );
     [id(1610743821), propget]
     HRESULT __stdcall HasMinorGridlines (
       [out retval] WINBOOL *pfHasMinorGridlines
     );
     [id(1610743823), propput]
     HRESULT __stdcall HasTitle (
       [in] WINBOOL argNo1
     );
     [id(1610743823), propget]
     HRESULT __stdcall HasTitle (
       [out retval] WINBOOL *pfHasTitle
     );
     [id(1610743825), propget]
     HRESULT __stdcall Line (
       [out retval] dispinterface WCBorder **ppline
     );
     [propget]
     HRESULT __stdcall MajorGridlines (
       [out retval] dispinterface WCGridlines **ppgridlines
     );
     [propput]
     HRESULT __stdcall MajorTickMarks (
       [in] ChartTickMarkEnum argNo1
     );
     [id(1610743827), propget]
     HRESULT __stdcall MajorTickMarks (
       [out retval] ChartTickMarkEnum *pocpTMT
     );
     [id(1610743829), propput]
     HRESULT __stdcall MajorUnit (
       [in] double argNo1
     );
     [id(1610743829), propget]
     HRESULT __stdcall MajorUnit (
       [out retval] double *pdMajorUnit
     );
     [id(1610743831), propget]
     HRESULT __stdcall MinorGridlines (
       [out retval] dispinterface WCGridlines **ppgridlines
     );
     [propput]
     HRESULT __stdcall MinorTickMarks (
       [in] ChartTickMarkEnum argNo1
     );
     [id(1610743832), propget]
     HRESULT __stdcall MinorTickMarks (
       [out retval] ChartTickMarkEnum *pocpTMT
     );
     [id(1610743834), propput]
     HRESULT __stdcall MinorUnit (
       [in] double argNo1
     );
     [id(1610743834), propget]
     HRESULT __stdcall MinorUnit (
       [out retval] double *pdMinorUnit
     );
     [id(1610743836), propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [id(1610743836), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstr
     );
     [id(1610743838), propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface WCChart **ppchart
     );
     [propput]
     HRESULT __stdcall Position (
       [in] ChartAxisPositionEnum argNo1
     );
     [id(1610743839), propget]
     HRESULT __stdcall Position (
       [out retval] ChartAxisPositionEnum *pChartAxisPosition
     );
     [id(1610743841), propget]
     HRESULT __stdcall Scaling (
       [out retval] dispinterface WCScaling **ppscaling
     );
     [propput]
     HRESULT __stdcall HasTickLabels (
       [in] WINBOOL argNo1
     );
     [id(1610743842), propget]
     HRESULT __stdcall HasTickLabels (
       [out retval] WINBOOL *pfLabels
     );
     [id(1610743844), propput]
     HRESULT __stdcall TickLabelSpacing (
       [in] long argNo1
     );
     [id(1610743844), propget]
     HRESULT __stdcall TickLabelSpacing (
       [out retval] long *pcCat
     );
     [id(1610743846), propput]
     HRESULT __stdcall TickMarkSpacing (
       [in] long argNo1
     );
     [id(1610743846), propget]
     HRESULT __stdcall TickMarkSpacing (
       [out retval] long *pcCat
     );
     [id(1610743848), propget]
     HRESULT __stdcall Title (
       [out retval] dispinterface WCTitle **pptitle
     );
     [propget]
     HRESULT __stdcall type (
       [out retval] ChartAxisTypeEnum *pocpAT
     );
     [propget]
     HRESULT __stdcall Index (
       [out retval] long *piAxis
     );
     [propput]
     HRESULT __stdcall NumberFormat (
       [in] BSTR argNo1
     );
     [id(1610743851), propget]
     HRESULT __stdcall NumberFormat (
       [out retval] BSTR *pbstrNumberFormat
     );
     [id(1610743853), propput]
     HRESULT __stdcall InfoBarPosition (
       [in] long Index,
       [in] long argNo2
     );
     [propget]
     HRESULT __stdcall InfoBar (
       [in] long Index,
       [out retval] dispinterface WCGridlines **ppgridlines
     );
     HRESULT __stdcall AddInfoBar (
       [in opt] long Index = (int) -1,
       [out retval] dispinterface WCGridlines **ppgridlines
     );
     HRESULT __stdcall DeleteInfoBar (
       [in] long Index
     );
     [propput]
     HRESULT __stdcall EnableZoom (
       [in] WINBOOL argNo1
     );
     [id(1610743857), propget]
     HRESULT __stdcall EnableZoom (
       [out retval] WINBOOL *bEnable
     );
     [id(1610743859), propget]
     HRESULT __stdcall IndexFromPoint (
       [in] long pos,
       [out retval] long *Index
     );
   };
   [
     uuid(5CCE1BB8-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCFont : IDispatch
   {
     [id(3), propget]
     HRESULT __stdcall Bold (
       [out retval] VARIANT *Bold
     );
     [id(3), propput]
     HRESULT __stdcall Bold (
       [in] WINBOOL argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall Color (
       [out retval] VARIANT *Color
     );
     [id(1610743810), propput]
     HRESULT __stdcall Color (
       [in] VARIANT *argNo1
     );
     [id(4), propget]
     HRESULT __stdcall Italic (
       [out retval] VARIANT *Italic
     );
     [id(4), propput]
     HRESULT __stdcall Italic (
       [in] WINBOOL argNo1
     );
     [id(0), propget]
     HRESULT __stdcall Name (
       [out retval] VARIANT *Name
     );
     [id(0), propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [id(1610743816), propget]
     HRESULT __stdcall Parent (
       [out retval] IDispatch **ppIDispatch
     );
     [id(2), propget]
     HRESULT __stdcall Size (
       [out retval] VARIANT *Size
     );
     [id(2), propput]
     HRESULT __stdcall Size (
       [in] long argNo1
     );
     [id(5), propget]
     HRESULT __stdcall Underline (
       [out retval] VARIANT *UnderlineStyle
     );
     [id(5), propput]
     HRESULT __stdcall Underline (
       [in] UnderlineStyleEnum argNo1
     );
   };
   [
     uuid(5CCE1BF6-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCGridlines : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Line (
       [out retval] dispinterface WCBorder **ppline
     );
     [propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface WCAxis **ppaxis
     );
   };
   [
     uuid(5CCE1BF0-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCTitle : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Border (
       [out retval] dispinterface WCBorder **ppline
     );
     [propput]
     HRESULT __stdcall Caption (
       [in] BSTR argNo1
     );
     [id(1610743809), propget]
     HRESULT __stdcall Caption (
       [out retval] BSTR *pbstr
     );
     [id(1610743811), propget]
     HRESULT __stdcall Font (
       [out retval] dispinterface WCFont **ppfont
     );
     [propget]
     HRESULT __stdcall Interior (
       [out retval] dispinterface WCInterior **ppinterior
     );
     [propget]
     HRESULT __stdcall Parent (
       [out retval] IDispatch **ppIDispatch
     );
     [propput]
     HRESULT __stdcall Position (
       [in] ChartTitlePositionEnum argNo1
     );
     [id(1610743814), propget]
     HRESULT __stdcall Position (
       [out retval] ChartTitlePositionEnum *pocpPos
     );
   };
   [
     uuid(5CCE1B9C-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCInterior : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Color (
       [out retval] VARIANT *Color
     );
     [id(1610743808), propput]
     HRESULT __stdcall Color (
       [in] VARIANT *argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall Parent (
       [out retval] IDispatch **Parent
     );
   };
   [
     uuid(5CCE1C1E-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCLegend : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Border (
       [out retval] dispinterface WCBorder **ppline
     );
     [propget]
     HRESULT __stdcall Font (
       [out retval] dispinterface WCFont **pfont
     );
     [propget]
     HRESULT __stdcall Interior (
       [out retval] dispinterface WCInterior **ppinterior
     );
     [propget]
     HRESULT __stdcall LegendEntries (
       [out retval] dispinterface WCLegendEntries **pplegendentries
     );
     [propget]
     HRESULT __stdcall Parent (
       [out retval] IDispatch **ppIDispatch
     );
     [propput]
     HRESULT __stdcall Position (
       [in] ChartLegendPositionEnum argNo1
     );
     [id(1610743813), propget]
     HRESULT __stdcall Position (
       [out retval] ChartLegendPositionEnum *pocpPos
     );
   };
   [
     uuid(5CCE1BEA-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCLegendEntries : IDispatch
   {
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppunk
     );
     [id(1610743809), propget]
     HRESULT __stdcall Count (
       [out retval] long *cLegendEntries
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long Index,
       [out retval] dispinterface WCLegendEntry **pplegendentry
     );
     [id(1610743811), propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface WCLegend **pplegend
     );
   };
   [
     uuid(5CCE1BEB-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCLegendEntry : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Font (
       [out retval] dispinterface WCFont **ppfont
     );
     [propput]
     HRESULT __stdcall Visible (
       [in] WINBOOL argNo1
     );
     [id(1610743809), propget]
     HRESULT __stdcall Visible (
       [out retval] WINBOOL *pfVisible
     );
     [id(1610743811), propget]
     HRESULT __stdcall Index (
       [out retval] long *pilegendentry
     );
     [propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface WCLegend **pplegend
     );
   };
   [
     uuid(5CCE1BEC-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCPlotArea : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Border (
       [out retval] dispinterface WCBorder **ppline
     );
     [propget]
     HRESULT __stdcall Interior (
       [out retval] dispinterface WCInterior **ppinterior
     );
     [propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface WCChart **ppchart
     );
     HRESULT __stdcall FlipHorizontal (void);
     HRESULT __stdcall FlipVertical (void);
     HRESULT __stdcall RotateClockwise (void);
     HRESULT __stdcall RotateCounterClockwise (void);
   };
   [
     uuid(5CCE1BEF-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCSeriesCollection : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Count (
       [out retval] long *cSeries
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT Index,
       [out retval] dispinterface WCSeries **ppseries
     );
     [id(1610743810), propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface WCChart **ppchart
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppunk
     );
     [id(1610743812)]
     HRESULT __stdcall Add (
       [in opt] long Index = (int) -1,
       [out retval] dispinterface WCSeries **ppseries
     );
     HRESULT __stdcall DeleteItem (
       [in] VARIANT Index
     );
     HRESULT __stdcall SetItemPos (
       [in] VARIANT *iSeries,
       [in] long iPos
     );
   };
   [
     uuid(5CCE1BF3-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCSeries : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Border (
       [out retval] dispinterface WCBorder **ppline
     );
     [propget]
     HRESULT __stdcall DataLabelsCollection (
       [out retval] dispinterface WCDataLabelsCollection **ppdatalabels
     );
     [propget]
     HRESULT __stdcall Points (
       [out retval] dispinterface WCPoints **pppoints
     );
     [propput]
     HRESULT __stdcall Caption (
       [in] BSTR argNo1
     );
     [id(1610743811), propget]
     HRESULT __stdcall Caption (
       [out retval] BSTR *pbstr
     );
     [id(1610743813), propput]
     HRESULT __stdcall Explosion (
       [in] long argNo1
     );
     [id(1610743813), propget]
     HRESULT __stdcall Explosion (
       [out retval] long *pl
     );
     [id(1610743815), propget]
     HRESULT __stdcall ErrorBarsCollection (
       [out retval] dispinterface WCErrorBarsCollection **pperrorbars
     );
     [propget]
     HRESULT __stdcall Index (
       [out retval] long *pIndex
     );
     [propget]
     HRESULT __stdcall Interior (
       [out retval] dispinterface WCInterior **ppinterior
     );
     [propget]
     HRESULT __stdcall Line (
       [out retval] dispinterface WCBorder **ppline
     );
     [propget]
     HRESULT __stdcall Marker (
       [out retval] dispinterface WCMarker **ppMarker
     );
     [propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface WCChart **ppchart
     );
     [propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [id(1610743821), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstr
     );
     [id(1610743823), propget]
     HRESULT __stdcall Scalings (
       [in] ChartDimensionsEnum Dimension,
       [out retval] dispinterface WCScaling **ppwcscaling
     );
     [propget]
     HRESULT __stdcall Trendlines (
       [out retval] dispinterface WCTrendlines **pptrendlines
     );
     [propput]
     HRESULT __stdcall type (
       [in] ChartChartTypeEnum argNo1
     );
     [id(1610743825), propget]
     HRESULT __stdcall type (
       [out retval] ChartChartTypeEnum *pocpGT
     );
     [id(1610743827)]
     HRESULT __stdcall SetData (
       [in] ChartDimensionsEnum Dimension,
       [in] long DataSourceIndex,
       [in opt] VARIANT DataReference
     );
     HRESULT __stdcall SetDataPoint (
       [in] ChartDimensionsEnum Dimension,
       [in] long DataSourceIndex,
       [in] VARIANT *DataReference
     );
     HRESULT __stdcall ShiftData (
       [in] long Shift
     );
     [hidden]
     HRESULT __stdcall GetDataReference (
       [in] ChartDimensionsEnum Dimension,
       [out retval] BSTR *DataSourceReference
     );
     [hidden]
     HRESULT __stdcall GetDataSourceIndex (
       [in] ChartDimensionsEnum Dimension,
       [out retval] long *DataSourceIndex
     );
     [hidden]
     HRESULT __stdcall GetData (
       [in] ChartDimensionsEnum Dimension,
       [out] VARIANT *DataSourceIndex,
       [out] VARIANT *DataReference
     );
     [id(1610743816), propput]
     HRESULT __stdcall Index (
       long argNo1
     );
   };
   [
     uuid(5CCE1BA3-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCDataLabelsCollection : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface WCSeries **ppseries
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long Index,
       [out retval] dispinterface WCDataLabels **ppdatalabels
     );
     [id(1610743810), propget]
     HRESULT __stdcall Count (
       [out retval] long *Count
     );
     HRESULT __stdcall Add (
       [out retval] dispinterface WCDataLabels **ppdatalabels
     );
     HRESULT __stdcall DeleteItem (
       [in] long Index
     );
   };
   [
     uuid(5CCE1BF4-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCDataLabels : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Border (
       [out retval] dispinterface WCBorder **ppline
     );
     [propget]
     HRESULT __stdcall Font (
       [out retval] dispinterface WCFont **ppfont
     );
     [propput]
     HRESULT __stdcall HasBubbleSize (
       [in] WINBOOL argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall HasBubbleSize (
       [out retval] WINBOOL *pfHasBubbleSize
     );
     [id(1610743812), propput]
     HRESULT __stdcall HasCategoryName (
       [in] WINBOOL argNo1
     );
     [id(1610743812), propget]
     HRESULT __stdcall HasCategoryName (
       [out retval] WINBOOL *pfHasCategoryName
     );
     [id(1610743814), propput]
     HRESULT __stdcall HasPercentage (
       [in] WINBOOL argNo1
     );
     [id(1610743814), propget]
     HRESULT __stdcall HasPercentage (
       [out retval] WINBOOL *pfHasPercentage
     );
     [id(1610743816), propput]
     HRESULT __stdcall HasSeriesName (
       [in] WINBOOL argNo1
     );
     [id(1610743816), propget]
     HRESULT __stdcall HasSeriesName (
       [out retval] WINBOOL *pfHasSeriesName
     );
     [id(1610743818), propput]
     HRESULT __stdcall HasValue (
       [in] WINBOOL argNo1
     );
     [id(1610743818), propget]
     HRESULT __stdcall HasValue (
       [out retval] WINBOOL *pfHasValue
     );
     [id(1610743820), propget]
     HRESULT __stdcall Interior (
       [out retval] dispinterface WCInterior **ppinterior
     );
     [propput]
     HRESULT __stdcall NumberFormat (
       [in] BSTR argNo1
     );
     [id(1610743821), propget]
     HRESULT __stdcall NumberFormat (
       [out retval] BSTR *pbstrNumberFormat
     );
     [id(1610743823), propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface WCSeries **ppseries
     );
     [propput]
     HRESULT __stdcall Position (
       [in] ChartDataLabelPositionEnum argNo1
     );
     [id(1610743824), propget]
     HRESULT __stdcall Position (
       [out retval] ChartDataLabelPositionEnum *pocpDLP
     );
     [id(1610743826), propput]
     HRESULT __stdcall Separator (
       [in] BSTR argNo1
     );
     [id(1610743826), propget]
     HRESULT __stdcall Separator (
       [out retval] BSTR *pbstrSeperator
     );
   };
   [
     uuid(5CCE1C1C-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCPoints : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface WCSeries **ppseries
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppunk
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT Index,
       [out retval] dispinterface WCPoint **pppoint
     );
     [id(1610743811), propget]
     HRESULT __stdcall Count (
       [out retval] long *Count
     );
   };
   [
     uuid(5CCE1C1B-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCPoint : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Border (
       [out retval] dispinterface WCBorder **ppline
     );
     [propput]
     HRESULT __stdcall Explosion (
       [in] long argNo1
     );
     [id(1610743809), propget]
     HRESULT __stdcall Explosion (
       [out retval] long *pExplode
     );
     [id(1610743811), propget]
     HRESULT __stdcall Interior (
       [out retval] dispinterface WCInterior **ppinterior
     );
     [propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface WCSeries **ppseries
     );
     [propget]
     HRESULT __stdcall Index (
       [out retval] long *piDataSource
     );
     [propget]
     HRESULT __stdcall Point (
       [out retval] struct tagPOINT *Point
     );
     HRESULT __stdcall GetValue (
       [in] ChartDimensionsEnum Dimension,
       [out retval] VARIANT *Value
     );
     HRESULT __stdcall GetValueEx (
       [in] ChartDimensionsEnum Dimension,
       [in] struct tagPOINT Point,
       [out retval] VARIANT *Value
     );
   };
   [
     uuid(5CCE1BE9-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCErrorBarsCollection : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Count (
       [out retval] long *cErrorbars
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long Index,
       [out retval] dispinterface WCErrorBars **pptrendline
     );
     [id(1610743810), propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface WCSeries **ppseries
     );
     HRESULT __stdcall Add (
       [out retval] dispinterface WCErrorBars **pptrendline
     );
     HRESULT __stdcall DeleteItem (
       [in] long Index
     );
   };
   [
     uuid(5CCE1C1D-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCErrorBars : IDispatch
   {
     [id(1610743808), propput]
     HRESULT __stdcall EndStyle (
       [in] ChartEndStyleEnum argNo1
     );
     [id(1610743808), propget]
     HRESULT __stdcall EndStyle (
       [out retval] ChartEndStyleEnum *pocpESC
     );
     [id(1610743810), propput]
     HRESULT __stdcall Direction (
       [in] ChartErrorBarDirectionEnum argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall Direction (
       [out retval] ChartErrorBarDirectionEnum *pocpdir
     );
     [id(1610743812), propget]
     HRESULT __stdcall Index (
       [out retval] long *pIndex
     );
     [propget]
     HRESULT __stdcall Line (
       [out retval] dispinterface WCBorder **ppline
     );
     [propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface WCSeries **ppseries
     );
     [propput]
     HRESULT __stdcall Amount (
       [in] VARIANT argNo1
     );
     [id(1610743815), propget]
     HRESULT __stdcall Amount (
       [out retval] VARIANT *pbstrAmount
     );
     [id(1610743817), propput]
     HRESULT __stdcall Include (
       [in] ChartErrorBarIncludeEnum argNo1
     );
     [id(1610743817), propget]
     HRESULT __stdcall Include (
       [out retval] ChartErrorBarIncludeEnum *pocpEBI
     );
     [id(1610743819), propput]
     HRESULT __stdcall type (
       [in] ChartErrorBarTypeEnum argNo1
     );
     [id(1610743819), propget]
     HRESULT __stdcall type (
       [out retval] ChartErrorBarTypeEnum *pocpEBT
     );
     [id(1610743821)]
     HRESULT __stdcall SetData (
       [in] ChartErrorBarCustomValuesEnum Dimension,
       [in] long DataSourceIndex,
       [in opt] VARIANT DataReference
     );
     [hidden]
     HRESULT __stdcall GetDataReference (
       [in] ChartErrorBarCustomValuesEnum ErrorBarDirection,
       [out retval] BSTR *DataSourceReference
     );
     [hidden]
     HRESULT __stdcall GetDataSourceIndex (
       [in] ChartErrorBarCustomValuesEnum ErrorBarDirection,
       [out retval] long *DataSourceIndex
     );
     [hidden]
     HRESULT __stdcall GetData (
       [in] ChartErrorBarCustomValuesEnum ErrorBarDirection,
       [out] VARIANT *DataSourceIndex,
       [out] VARIANT *DataReference
     );
   };
   [
     uuid(5CCE1BEE-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCMarker : IDispatch
   {
     [id(1610743808), propput]
     HRESULT __stdcall Style (
       [in] ChartMarkerStyleEnum argNo1
     );
     [id(1610743808), propget]
     HRESULT __stdcall Style (
       [out retval] ChartMarkerStyleEnum *plStyle
     );
     [id(1610743810), propput]
     HRESULT __stdcall Size (
       [in] long argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall Size (
       [out retval] long *plSize
     );
   };
   [
     uuid(5CCE1BF2-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCTrendlines : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Count (
       [out retval] long *cScaling
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long Index,
       [out retval] dispinterface WCTrendline **pptrendline
     );
     [id(1610743810), propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface WCSeries **ppseries
     );
     HRESULT __stdcall Add (
       [out retval] dispinterface WCTrendline **pptrendline
     );
     HRESULT __stdcall DeleteItem (
       [in] long Index
     );
   };
   [
     uuid(5CCE1BF1-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCTrendline : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall DataLabel (
       [out retval] dispinterface WCDataLabel **ppdatalabel
     );
     [propget]
     HRESULT __stdcall Index (
       [out retval] long *pIndex
     );
     [propput]
     HRESULT __stdcall IsDisplayingEquation (
       [in] WINBOOL argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall IsDisplayingEquation (
       [out retval] WINBOOL *pfIsDisplEquation
     );
     [id(1610743812), propput]
     HRESULT __stdcall IsDisplayingRSquared (
       [in] WINBOOL argNo1
     );
     [id(1610743812), propget]
     HRESULT __stdcall IsDisplayingRSquared (
       [out retval] WINBOOL *pfIsDisplRSquared
     );
     [id(1610743814), propget]
     HRESULT __stdcall Line (
       [out retval] dispinterface WCBorder **ppline
     );
     [propput]
     HRESULT __stdcall Order (
       [in] long argNo1
     );
     [id(1610743815), propget]
     HRESULT __stdcall Order (
       [out retval] long *plOrder
     );
     [id(1610743817), propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface WCSeries **ppseries
     );
     [propput]
     HRESULT __stdcall type (
       [in] ChartTrendlineTypeEnum argNo1
     );
     [id(1610743818), propget]
     HRESULT __stdcall type (
       [out retval] ChartTrendlineTypeEnum *pocpTT
     );
     [id(1610743820), propput]
     HRESULT __stdcall Caption (
       [in] BSTR argNo1
     );
     [id(1610743820), propget]
     HRESULT __stdcall Caption (
       [out retval] BSTR *pbstr
     );
     [id(1610743822), propput]
     HRESULT __stdcall HasAutoCaption (
       [in] WINBOOL argNo1
     );
     [id(1610743822), propget]
     HRESULT __stdcall HasAutoCaption (
       [out retval] WINBOOL *pfAuto
     );
   };
   [
     uuid(5CCE1C1A-01DC-11D4-AE77-00C04F613171),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface WCDataLabel : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Font (
       [out retval] dispinterface WCFont **ppfont
     );
   };

};

