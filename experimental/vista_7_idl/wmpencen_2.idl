/* Automated generated idl file <wmencprivatetlb>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Union record forward declarations.  */
dispinterface IWMEncPrivateProfile;
dispinterface IWMEncAudienceCollection;
dispinterface IWMEncAudience;

/* Enumeration declarations.  */
[
  uuid(6FAC4EE6-2936-49F8-8B43-EF6C99A2556C),
  helpstring("Not Public.  Internal interface used by Windows Media Player.")
]
enum WMENC_SOURCE_TYPE
{
  WMENC_AUDIO = (int) 201326593,
  WMENC_VIDEO = (int) 201326594,
  WMENC_SCRIPT = (int) 201326596,
  WMENC_FILETRANSFER = (int) 201326600
};

[
  uuid(09983440-F796-4D6D-B554-D557EAABF428),
  version(1.0),
  helpstring("Not Public.  Internal interface used by Windows Media Player.")
]
library wmencprivatetlb
{
  importlib("stdole2.tlb");

   /* Dispatch interface declarations.  */
   [
     uuid(53796910-D224-44E8-84A4-0AD3227C5983),
     helpstring("IWMEncPrivateProfile Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IWMEncPrivateProfile : IDispatch
   {
     [id(90002), propget]
     HRESULT __stdcall PrivAudienceCollection (
       [out retval] dispinterface IWMEncAudienceCollection **ppAudienceCollection
     );
     [propget]
     HRESULT __stdcall PrivCompressed (
       [out retval] WINBOOL *pbCompressed
     );
     [id(90005), propget]
     HRESULT __stdcall PrivProfileData (
       [out retval] BSTR *pbstrData
     );
     HRESULT __stdcall PrivProfileFindMinMaxSizes (
       [out] long *plMinWidth,
       [out] long *plMinHeight,
       [out] long *plMaxWidth,
       [out] long *plMaxHeight
     );
   };
   [
     uuid(46E51A6B-9738-4E66-80B9-DD4281F819C3),
     helpstring("Not Public.  Internal interface used by Windows Media Player."),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IWMEncAudienceCollection : IDispatch
   {
     [id(9), propget]
     HRESULT __stdcall length (
       [out retval] long *plCount
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **pIUnknown
     );
     [id(0)]
     HRESULT __stdcall Item (
       [in] long Index,
       [out retval] dispinterface IWMEncAudience **ppAudience
     );
   };
   [
     uuid(C70CE368-2564-452B-8495-B9896DC0B826),
     helpstring("Not Public.  Internal interface used by Windows Media Player."),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IWMEncAudience : IDispatch
   {
     [id(371), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstrName
     );
     [propget]
     HRESULT __stdcall Bandwidth (
       [out retval] long *plBandwidth
     );
     [propget]
     HRESULT __stdcall Selected (
       [out retval] WINBOOL *pbSelected
     );
     [id(373), propput]
     HRESULT __stdcall Selected (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall OutputStreamCount (
       [in] enum WMENC_SOURCE_TYPE enumType,
       [in] short iMediaIndex,
       [out retval] short *pnCount
     );
     [propget]
     HRESULT __stdcall StreamBandwidth (
       [in] enum WMENC_SOURCE_TYPE enumType,
       [in] short iMediaIndex,
       [in] short iStreamIndex,
       [out retval] long *plBandwidth
     );
   };

};

