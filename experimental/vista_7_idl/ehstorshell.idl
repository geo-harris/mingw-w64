/* Automated generated idl file <enhancedstorageshelllib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface IContextMenu;
interface IShellExtInit;
interface IDataObject;
interface IEnumFORMATETC;
interface IAdviseSink;
interface IMoniker;
interface IPersistStream;
interface IPersist;
interface IStream;
interface ISequentialStream;
interface IBindCtx;
interface IRunningObjectTable;
interface IEnumMoniker;
interface IEnumString;
interface IEnumSTATDATA;

/* Structure forward declarations.  */
struct _RemotableHandle;
struct _CMINVOKECOMMANDINFO;
struct _BYTE_BLOB;
struct tagFORMATETC;
struct _userCLIPFORMAT;
struct tagDVTARGETDEVICE;
struct _userSTGMEDIUM;
struct _STGMEDIUM_UNION;
struct _userHMETAFILEPICT;
struct _remoteMETAFILEPICT;
struct _userHMETAFILE;
struct _userHENHMETAFILE;
struct _GDI_OBJECT;
struct _userHBITMAP;
struct _userBITMAP;
struct _userHPALETTE;
struct tagLOGPALETTE;
struct tagPALETTEENTRY;
struct _userHGLOBAL;
struct _FLAGGED_BYTE_BLOB;
struct _userFLAG_STGMEDIUM;
struct _LARGE_INTEGER;
struct _ULARGE_INTEGER;
struct tagSTATSTG;
struct _FILETIME;
struct tagBIND_OPTS2;
struct _COSERVERINFO;
struct _COAUTHINFO;
struct _COAUTHIDENTITY;
struct tagSTATDATA;

/* Union record forward declarations.  */
union __MIDL_IWinTypes_0009;
union __MIDL_IWinTypes_0001;
union __MIDL_IAdviseSink_0003;
union __MIDL_IWinTypes_0005;
union __MIDL_IWinTypes_0004;
union __MIDL_IWinTypes_0006;
union __MIDL_IAdviseSink_0002;
union __MIDL_IWinTypes_0007;
union __MIDL_IWinTypes_0008;
union __MIDL_IWinTypes_0003;

/* Union record forward declarations.  */
coclass ContextMenuHandler;
coclass IconOverlayHandler;
coclass AutoplayHandler;
coclass EnhancedStorageFolder;

/* Structure/union declarations.  */
struct _RemotableHandle
{
  long fContext;
  union __MIDL_IWinTypes_0009 u;
};
union __MIDL_IWinTypes_0009
{
  long hInproc;
  long hRemote;
};
struct _CMINVOKECOMMANDINFO
{
  UINT cbSize;
  UINT fMask;
  wireHWND hwnd;
  LPSTR lpVerb;
  LPSTR lpParameters;
  LPSTR lpDirectory;
  int nShow;
  UINT dwHotKey;
  void *hIcon;
};
struct _BYTE_BLOB
{
  UINT clSize;
  UCHAR *abData;
};
struct tagFORMATETC
{
  wireCLIPFORMAT cfFormat;
  struct tagDVTARGETDEVICE *ptd;
  UINT dwAspect;
  long lindex;
  UINT tymed;
};
struct _userCLIPFORMAT
{
  long fContext;
  union __MIDL_IWinTypes_0001 u;
};
union __MIDL_IWinTypes_0001
{
  UINT dwValue;
  LPWSTR pwszName;
};
struct tagDVTARGETDEVICE
{
  UINT tdSize;
  USHORT tdDriverNameOffset;
  USHORT tdDeviceNameOffset;
  USHORT tdPortNameOffset;
  USHORT tdExtDevmodeOffset;
  UCHAR *tdData;
};
struct _userSTGMEDIUM
{
  struct _STGMEDIUM_UNION DUMMYUNIONNAME;
  IUnknown * pUnkForRelease;
};
struct _STGMEDIUM_UNION
{
  UINT tymed;
  union __MIDL_IAdviseSink_0003 u;
};
union __MIDL_IAdviseSink_0003
{
  struct _userHMETAFILEPICT *hMetaFilePict;
  struct _userHENHMETAFILE *hHEnhMetaFile;
  struct _GDI_OBJECT *hGdiHandle;
  struct _userHGLOBAL *hGlobal;
  LPWSTR lpszFileName;
  struct _BYTE_BLOB *pstm;
  struct _BYTE_BLOB *pstg;
};
struct _userHMETAFILEPICT
{
  long fContext;
  union __MIDL_IWinTypes_0005 u;
};
union __MIDL_IWinTypes_0005
{
  long hInproc;
  struct _remoteMETAFILEPICT *hRemote;
  LONGLONG hInproc64;
};
struct _remoteMETAFILEPICT
{
  long mm;
  long xExt;
  long yExt;
  struct _userHMETAFILE *hMF;
};
struct _userHMETAFILE
{
  long fContext;
  union __MIDL_IWinTypes_0004 u;
};
union __MIDL_IWinTypes_0004
{
  long hInproc;
  struct _BYTE_BLOB *hRemote;
  LONGLONG hInproc64;
};
struct _userHENHMETAFILE
{
  long fContext;
  union __MIDL_IWinTypes_0006 u;
};
union __MIDL_IWinTypes_0006
{
  long hInproc;
  struct _BYTE_BLOB *hRemote;
  LONGLONG hInproc64;
};
struct _GDI_OBJECT
{
  UINT ObjectType;
  union __MIDL_IAdviseSink_0002 u;
};
union __MIDL_IAdviseSink_0002
{
  struct _userHBITMAP *hBitmap;
  struct _userHPALETTE *hPalette;
  struct _userHGLOBAL *hGeneric;
};
struct _userHBITMAP
{
  long fContext;
  union __MIDL_IWinTypes_0007 u;
};
union __MIDL_IWinTypes_0007
{
  long hInproc;
  struct _userBITMAP *hRemote;
  LONGLONG hInproc64;
};
struct _userBITMAP
{
  long bmType;
  long bmWidth;
  long bmHeight;
  long bmWidthBytes;
  USHORT bmPlanes;
  USHORT bmBitsPixel;
  UINT cbSize;
  UCHAR *pBuffer;
};
struct _userHPALETTE
{
  long fContext;
  union __MIDL_IWinTypes_0008 u;
};
union __MIDL_IWinTypes_0008
{
  long hInproc;
  struct tagLOGPALETTE *hRemote;
  LONGLONG hInproc64;
};
struct tagLOGPALETTE
{
  USHORT palVersion;
  USHORT palNumEntries;
  struct tagPALETTEENTRY *palPalEntry;
};
struct tagPALETTEENTRY
{
  UCHAR peRed;
  UCHAR peGreen;
  UCHAR peBlue;
  UCHAR peFlags;
};
struct _userHGLOBAL
{
  long fContext;
  union __MIDL_IWinTypes_0003 u;
};
union __MIDL_IWinTypes_0003
{
  long hInproc;
  struct _FLAGGED_BYTE_BLOB *hRemote;
  LONGLONG hInproc64;
};
struct _FLAGGED_BYTE_BLOB
{
  UINT fFlags;
  UINT clSize;
  UCHAR *abData;
};
struct _userFLAG_STGMEDIUM
{
  long ContextFlags;
  long fPassOwnership;
  struct _userSTGMEDIUM Stgmed;
};
struct _LARGE_INTEGER
{
  LONGLONG QuadPart;
};
struct _ULARGE_INTEGER
{
  ULONGLONG QuadPart;
};
struct tagSTATSTG
{
  LPWSTR pwcsName;
  UINT type;
  struct _ULARGE_INTEGER cbSize;
  struct _FILETIME mtime;
  struct _FILETIME ctime;
  struct _FILETIME atime;
  UINT grfMode;
  UINT grfLocksSupported;
  struct GUID clsid;
  UINT grfStateBits;
  UINT reserved;
};
struct _FILETIME
{
  UINT dwLowDateTime;
  UINT dwHighDateTime;
};
struct tagBIND_OPTS2
{
  UINT cbStruct;
  UINT grfFlags;
  UINT grfMode;
  UINT dwTickCountDeadline;
  UINT dwTrackFlags;
  UINT dwClassContext;
  UINT locale;
  struct _COSERVERINFO *pServerInfo;
};
struct _COSERVERINFO
{
  UINT dwReserved1;
  LPWSTR pwszName;
  struct _COAUTHINFO *pAuthInfo;
  UINT dwReserved2;
};
struct _COAUTHINFO
{
  UINT dwAuthnSvc;
  UINT dwAuthzSvc;
  LPWSTR pwszServerPrincName;
  UINT dwAuthnLevel;
  UINT dwImpersonationLevel;
  struct _COAUTHIDENTITY *pAuthIdentityData;
  UINT dwCapabilities;
};
struct _COAUTHIDENTITY
{
  USHORT *User;
  UINT UserLength;
  USHORT *Domain;
  UINT DomainLength;
  USHORT *Password;
  UINT PasswordLength;
  UINT Flags;
};
struct tagSTATDATA
{
  struct tagFORMATETC formatetc;
  UINT advf;
  interface IAdviseSink *pAdvSink;
  UINT dwConnection;
};

/* Type definitions.  */
typedef struct _RemotableHandle * wireHMENU;
typedef struct _RemotableHandle * wireHWND;
typedef ULONGLONG UINT_PTR;
typedef struct _BYTE_BLOB * wirePIDL;
typedef struct _userCLIPFORMAT * wireCLIPFORMAT;
typedef struct _userSTGMEDIUM * wireSTGMEDIUM;
typedef struct _userFLAG_STGMEDIUM * wireFLAG_STGMEDIUM;
typedef struct _userSTGMEDIUM * wireASYNC_STGMEDIUM;

[
  uuid(B3A00612-1423-4072-A4F9-DE2ADCAA7F3C),
  version(1.0),
  helpstring("EnhancedStorageShell 1.0 Type Library")
]
library enhancedstorageshelllib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(2854F705-3548-414C-A113-93E27C808C85),
     helpstring("ContextMenuHandler Class"),
     cancreate
   ]
   coclass ContextMenuHandler
   {
     interface IContextMenu;
     interface IShellExtInit;
   };
   [
     uuid(D9144DCD-E998-4ECA-AB6A-DCD83CCBA16D),
     helpstring("IconOverlayHandler Class"),
     cancreate
   ]
   coclass IconOverlayHandler
   {
     interface IUnknown;
   };
   [
     uuid(36F54939-CD3B-4C73-92D5-F9A389ED631C),
     helpstring("AutoplayHandler Class"),
     cancreate
   ]
   coclass AutoplayHandler
   {
     interface IUnknown;
   };
   [
     uuid(9113A02D-00A3-46B9-BC5F-9C04DADDD5D7),
     helpstring("EnhancedStorageFolder Class"),
     cancreate
   ]
   coclass EnhancedStorageFolder
   {
     interface IUnknown;
   };

};

/* Interface declarations.  */
[
  uuid(000214E4-0000-0000-C000-000000000046)
]
interface IContextMenu : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall QueryContextMenu (
    [in] wireHMENU hmenu,
    [in] unsigned int indexMenu,
    [in] unsigned int idCmdFirst,
    [in] unsigned int idCmdLast,
    [in] unsigned int uFlags
  );
  HRESULT __stdcall InvokeCommand (
    [in] struct _CMINVOKECOMMANDINFO *pici
  );
  HRESULT __stdcall GetCommandString (
    [in] UINT_PTR idCmd,
    [in] unsigned int uType,
    [in] unsigned int *pReserved,
    [out] LPSTR pszName,
    [in] unsigned int cchMax
  );
};
[
  uuid(000214E8-0000-0000-C000-000000000046)
]
interface IShellExtInit : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Initialize (
    [in] wirePIDL pidlFolder,
    [in] interface IDataObject *pdtobj,
    [in] void *hkeyProgID
  );
};
[
  uuid(0000010E-0000-0000-C000-000000000046)
]
interface IDataObject : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteGetData (
    [in] struct tagFORMATETC *pformatetcIn,
    [out] wireSTGMEDIUM *pRemoteMedium
  );
  HRESULT __stdcall RemoteGetDataHere (
    [in] struct tagFORMATETC *pformatetc,
    [in out] wireSTGMEDIUM *pRemoteMedium
  );
  HRESULT __stdcall QueryGetData (
    [in] struct tagFORMATETC *pformatetc
  );
  HRESULT __stdcall GetCanonicalFormatEtc (
    [in] struct tagFORMATETC *pformatectIn,
    [out] struct tagFORMATETC *pformatetcOut
  );
  HRESULT __stdcall RemoteSetData (
    [in] struct tagFORMATETC *pformatetc,
    [in] wireFLAG_STGMEDIUM *pmedium,
    [in] long fRelease
  );
  HRESULT __stdcall EnumFormatEtc (
    [in] UINT dwDirection,
    [out] interface IEnumFORMATETC **ppenumFormatEtc
  );
  HRESULT __stdcall DAdvise (
    [in] struct tagFORMATETC *pformatetc,
    [in] UINT advf,
    [in] interface IAdviseSink *pAdvSink,
    [out] UINT *pdwConnection
  );
  HRESULT __stdcall DUnadvise (
    [in] UINT dwConnection
  );
  HRESULT __stdcall EnumDAdvise (
    [out] interface IEnumSTATDATA **ppenumAdvise
  );
};
[
  uuid(00000103-0000-0000-C000-000000000046)
]
interface IEnumFORMATETC : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] struct tagFORMATETC *rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumFORMATETC **ppenum
  );
};
[
  uuid(0000010F-0000-0000-C000-000000000046)
]
interface IAdviseSink : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteOnDataChange (
    [in] struct tagFORMATETC *pformatetc,
    [in] wireASYNC_STGMEDIUM *pStgmed
  );
  HRESULT __stdcall RemoteOnViewChange (
    [in] UINT dwAspect,
    [in] long lindex
  );
  HRESULT __stdcall RemoteOnRename (
    [in] interface IMoniker *pmk
  );
  HRESULT __stdcall RemoteOnSave (void);
  HRESULT __stdcall RemoteOnClose (void);
};
[
  uuid(0000000F-0000-0000-C000-000000000046)
]
interface IMoniker : IPersistStream
{
  [id(1610809344)]
  HRESULT __stdcall RemoteBindToObject (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] struct GUID *riidResult,
    [out] IUnknown **ppvResult
  );
  HRESULT __stdcall RemoteBindToStorage (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] struct GUID *riid,
    [out] IUnknown **ppvObj
  );
  HRESULT __stdcall Reduce (
    [in] interface IBindCtx *pbc,
    [in] UINT dwReduceHowFar,
    [in out] interface IMoniker **ppmkToLeft,
    [out] interface IMoniker **ppmkReduced
  );
  HRESULT __stdcall ComposeWith (
    [in] interface IMoniker *pmkRight,
    [in] long fOnlyIfNotGeneric,
    [out] interface IMoniker **ppmkComposite
  );
  HRESULT __stdcall Enum (
    [in] long fForward,
    [out] interface IEnumMoniker **ppenumMoniker
  );
  HRESULT __stdcall IsEqual (
    [in] interface IMoniker *pmkOtherMoniker
  );
  HRESULT __stdcall Hash (
    [out] UINT *pdwHash
  );
  HRESULT __stdcall IsRunning (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] interface IMoniker *pmkNewlyRunning
  );
  HRESULT __stdcall GetTimeOfLastChange (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [out] struct _FILETIME *pfiletime
  );
  HRESULT __stdcall Inverse (
    [out] interface IMoniker **ppmk
  );
  HRESULT __stdcall CommonPrefixWith (
    [in] interface IMoniker *pmkOther,
    [out] interface IMoniker **ppmkPrefix
  );
  HRESULT __stdcall RelativePathTo (
    [in] interface IMoniker *pmkOther,
    [out] interface IMoniker **ppmkRelPath
  );
  HRESULT __stdcall GetDisplayName (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [out] LPWSTR ppszDisplayName
  );
  HRESULT __stdcall ParseDisplayName (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] LPWSTR pszDisplayName,
    [out] UINT *pchEaten,
    [out] interface IMoniker **ppmkOut
  );
  HRESULT __stdcall IsSystemMoniker (
    [out] UINT *pdwMksys
  );
};
[
  uuid(00000109-0000-0000-C000-000000000046)
]
interface IPersistStream : IPersist
{
  [id(1610743808)]
  HRESULT __stdcall IsDirty (void);
  HRESULT __stdcall Load (
    [in] interface IStream *pstm
  );
  HRESULT __stdcall Save (
    [in] interface IStream *pstm,
    [in] long fClearDirty
  );
  HRESULT __stdcall GetSizeMax (
    [out] struct _ULARGE_INTEGER *pcbSize
  );
};
[
  uuid(0000010C-0000-0000-C000-000000000046)
]
interface IPersist : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetClassID (
    [out] struct GUID *pClassID
  );
};
[
  uuid(0000000C-0000-0000-C000-000000000046)
]
interface IStream : ISequentialStream
{
  [id(1610743808)]
  HRESULT __stdcall RemoteSeek (
    [in] struct _LARGE_INTEGER dlibMove,
    [in] UINT dwOrigin,
    [out] struct _ULARGE_INTEGER *plibNewPosition
  );
  HRESULT __stdcall SetSize (
    [in] struct _ULARGE_INTEGER libNewSize
  );
  HRESULT __stdcall RemoteCopyTo (
    [in] interface IStream *pstm,
    [in] struct _ULARGE_INTEGER cb,
    [out] struct _ULARGE_INTEGER *pcbRead,
    [out] struct _ULARGE_INTEGER *pcbWritten
  );
  HRESULT __stdcall Commit (
    [in] UINT grfCommitFlags
  );
  HRESULT __stdcall Revert (void);
  HRESULT __stdcall LockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall UnlockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall Stat (
    [out] struct tagSTATSTG *pstatstg,
    [in] UINT grfStatFlag
  );
  HRESULT __stdcall Clone (
    [out] interface IStream **ppstm
  );
};
[
  uuid(0C733A30-2A1C-11CE-ADE5-00AA0044773D)
]
interface ISequentialStream : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteRead (
    [out] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbRead
  );
  HRESULT __stdcall RemoteWrite (
    [in] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbWritten
  );
};
[
  uuid(0000000E-0000-0000-C000-000000000046)
]
interface IBindCtx : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RegisterObjectBound (
    [in] IUnknown * punk
  );
  HRESULT __stdcall RevokeObjectBound (
    [in] IUnknown * punk
  );
  HRESULT __stdcall ReleaseBoundObjects (void);
  HRESULT __stdcall RemoteSetBindOptions (
    [in] struct tagBIND_OPTS2 *pbindopts
  );
  HRESULT __stdcall RemoteGetBindOptions (
    [in out] struct tagBIND_OPTS2 *pbindopts
  );
  HRESULT __stdcall GetRunningObjectTable (
    [out] interface IRunningObjectTable **pprot
  );
  HRESULT __stdcall RegisterObjectParam (
    [in] LPWSTR pszKey,
    [in] IUnknown * punk
  );
  HRESULT __stdcall GetObjectParam (
    [in] LPWSTR pszKey,
    [out] IUnknown **ppunk
  );
  HRESULT __stdcall EnumObjectParam (
    [out] interface IEnumString **ppenum
  );
  HRESULT __stdcall RevokeObjectParam (
    [in] LPWSTR pszKey
  );
};
[
  uuid(00000010-0000-0000-C000-000000000046)
]
interface IRunningObjectTable : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Register (
    [in] UINT grfFlags,
    [in] IUnknown * punkObject,
    [in] interface IMoniker *pmkObjectName,
    [out] UINT *pdwRegister
  );
  HRESULT __stdcall Revoke (
    [in] UINT dwRegister
  );
  HRESULT __stdcall IsRunning (
    [in] interface IMoniker *pmkObjectName
  );
  HRESULT __stdcall GetObject (
    [in] interface IMoniker *pmkObjectName,
    [out] IUnknown **ppunkObject
  );
  HRESULT __stdcall NoteChangeTime (
    [in] UINT dwRegister,
    [in] struct _FILETIME *pfiletime
  );
  HRESULT __stdcall GetTimeOfLastChange (
    [in] interface IMoniker *pmkObjectName,
    [out] struct _FILETIME *pfiletime
  );
  HRESULT __stdcall EnumRunning (
    [out] interface IEnumMoniker **ppenumMoniker
  );
};
[
  uuid(00000102-0000-0000-C000-000000000046)
]
interface IEnumMoniker : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] interface IMoniker **rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumMoniker **ppenum
  );
};
[
  uuid(00000101-0000-0000-C000-000000000046)
]
interface IEnumString : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] LPWSTR rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumString **ppenum
  );
};
[
  uuid(00000105-0000-0000-C000-000000000046)
]
interface IEnumSTATDATA : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] struct tagSTATDATA *rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumSTATDATA **ppenum
  );
};

