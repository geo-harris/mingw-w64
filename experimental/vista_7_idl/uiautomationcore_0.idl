/* Automated generated idl file <uiautomationclient>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface IUIAutomationElement;
interface IUIAutomationCondition;
interface IUIAutomationElementArray;
interface IUIAutomationCacheRequest;
interface IUIAutomationBoolCondition;
interface IUIAutomationPropertyCondition;
interface IUIAutomationAndCondition;
interface IUIAutomationOrCondition;
interface IUIAutomationNotCondition;
interface IUIAutomationTreeWalker;
interface IUIAutomationEventHandler;
interface IUIAutomationPropertyChangedEventHandler;
interface IUIAutomationStructureChangedEventHandler;
interface IUIAutomationFocusChangedEventHandler;
interface IUIAutomationInvokePattern;
interface IUIAutomationDockPattern;
interface IUIAutomationExpandCollapsePattern;
interface IUIAutomationGridPattern;
interface IUIAutomationGridItemPattern;
interface IUIAutomationMultipleViewPattern;
interface IUIAutomationRangeValuePattern;
interface IUIAutomationScrollPattern;
interface IUIAutomationScrollItemPattern;
interface IUIAutomationSelectionPattern;
interface IUIAutomationSelectionItemPattern;
interface IUIAutomationSynchronizedInputPattern;
interface IUIAutomationTablePattern;
interface IUIAutomationTableItemPattern;
interface IUIAutomationTogglePattern;
interface IUIAutomationTransformPattern;
interface IUIAutomationValuePattern;
interface IUIAutomationWindowPattern;
interface IUIAutomationTextRange;
interface IUIAutomationTextRangeArray;
interface IUIAutomationTextPattern;
interface IUIAutomationLegacyIAccessiblePattern;
interface IUIAutomationItemContainerPattern;
interface IUIAutomationVirtualizedItemPattern;
interface IUIAutomationProxyFactory;
interface IRawElementProviderSimple;
interface IUIAutomationProxyFactoryEntry;
interface IUIAutomationProxyFactoryMapping;
interface IUIAutomation;

/* Structure forward declarations.  */
struct tagRECT;
struct tagPOINT;

/* Union record forward declarations.  */
dispinterface IAccessible;

/* Union record forward declarations.  */
coclass CUIAutomation;

/* Enumeration declarations.  */
enum TreeScope
{
  TreeScope_Element = (int) 201326593,
  TreeScope_Children = (int) 201326594,
  TreeScope_Descendants = (int) 201326596,
  TreeScope_Parent = (int) 201326600,
  TreeScope_Ancestors = (int) 201326608,
  TreeScope_Subtree = (int) 201326599
};
enum AutomationElementMode
{
  AutomationElementMode_None = (int) 201326592,
  AutomationElementMode_Full = (int) 201326593
};
enum OrientationType
{
  OrientationType_None = (int) 201326592,
  OrientationType_Horizontal = (int) 201326593,
  OrientationType_Vertical = (int) 201326594
};
enum PropertyConditionFlags
{
  PropertyConditionFlags_None = (int) 201326592,
  PropertyConditionFlags_IgnoreCase = (int) 201326593
};
enum StructureChangeType
{
  StructureChangeType_ChildAdded = (int) 201326592,
  StructureChangeType_ChildRemoved = (int) 201326593,
  StructureChangeType_ChildrenInvalidated = (int) 201326594,
  StructureChangeType_ChildrenBulkAdded = (int) 201326595,
  StructureChangeType_ChildrenBulkRemoved = (int) 201326596,
  StructureChangeType_ChildrenReordered = (int) 201326597
};
enum DockPosition
{
  DockPosition_Top = (int) 201326592,
  DockPosition_Left = (int) 201326593,
  DockPosition_Bottom = (int) 201326594,
  DockPosition_Right = (int) 201326595,
  DockPosition_Fill = (int) 201326596,
  DockPosition_None = (int) 201326597
};
enum ExpandCollapseState
{
  ExpandCollapseState_Collapsed = (int) 201326592,
  ExpandCollapseState_Expanded = (int) 201326593,
  ExpandCollapseState_PartiallyExpanded = (int) 201326594,
  ExpandCollapseState_LeafNode = (int) 201326595
};
enum ScrollAmount
{
  ScrollAmount_LargeDecrement = (int) 201326592,
  ScrollAmount_SmallDecrement = (int) 201326593,
  ScrollAmount_NoAmount = (int) 201326594,
  ScrollAmount_LargeIncrement = (int) 201326595,
  ScrollAmount_SmallIncrement = (int) 201326596
};
enum SynchronizedInputType
{
  SynchronizedInputType_KeyUp = (int) 201326593,
  SynchronizedInputType_KeyDown = (int) 201326594,
  SynchronizedInputType_LeftMouseUp = (int) 201326596,
  SynchronizedInputType_LeftMouseDown = (int) 201326600,
  SynchronizedInputType_RightMouseUp = (int) 201326608,
  SynchronizedInputType_RightMouseDown = (int) 201326624
};
enum RowOrColumnMajor
{
  RowOrColumnMajor_RowMajor = (int) 201326592,
  RowOrColumnMajor_ColumnMajor = (int) 201326593,
  RowOrColumnMajor_Indeterminate = (int) 201326594
};
enum ToggleState
{
  ToggleState_Off = (int) 201326592,
  ToggleState_On = (int) 201326593,
  ToggleState_Indeterminate = (int) 201326594
};
enum WindowVisualState
{
  WindowVisualState_Normal = (int) 201326592,
  WindowVisualState_Maximized = (int) 201326593,
  WindowVisualState_Minimized = (int) 201326594
};
enum WindowInteractionState
{
  WindowInteractionState_Running = (int) 201326592,
  WindowInteractionState_Closing = (int) 201326593,
  WindowInteractionState_ReadyForUserInteraction = (int) 201326594,
  WindowInteractionState_BlockedByModalWindow = (int) 201326595,
  WindowInteractionState_NotResponding = (int) 201326596
};
enum TextPatternRangeEndpoint
{
  TextPatternRangeEndpoint_Start = (int) 201326592,
  TextPatternRangeEndpoint_End = (int) 201326593
};
enum TextUnit
{
  TextUnit_Character = (int) 201326592,
  TextUnit_Format = (int) 201326593,
  TextUnit_Word = (int) 201326594,
  TextUnit_Line = (int) 201326595,
  TextUnit_Paragraph = (int) 201326596,
  TextUnit_Page = (int) 201326597,
  TextUnit_Document = (int) 201326598
};
enum SupportedTextSelection
{
  SupportedTextSelection_None = (int) 201326592,
  SupportedTextSelection_Single = (int) 201326593,
  SupportedTextSelection_Multiple = (int) 201326594
};
enum ProviderOptions
{
  ProviderOptions_ClientSideProvider = (int) 201326593,
  ProviderOptions_ServerSideProvider = (int) 201326594,
  ProviderOptions_NonClientAreaProvider = (int) 201326596,
  ProviderOptions_OverrideProvider = (int) 201326600,
  ProviderOptions_ProviderOwnsSetFocus = (int) 201326608,
  ProviderOptions_UseComThreading = (int) 201326624
};

/* Structure/union declarations.  */
struct tagRECT
{
  long left;
  long top;
  long right;
  long bottom;
};
struct tagPOINT
{
  long x;
  long y;
};

[
  uuid(944DE083-8FB8-45CF-BCB7-C477ACB2F897),
  version(1.0)
]
library uiautomationclient
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(FF48DBA4-60EF-4201-AA87-54103EEF594E),
     version(1.0),
     helpstring("The Central Class for UIAutomation"),
     cancreate
   ]
   coclass CUIAutomation
   {
     interface IUIAutomation;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(618736E0-3C3D-11CF-810C-00AA00389B71),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAccessible : IDispatch
   {
     [id(-5000), propget, hidden]
     HRESULT __stdcall accParent (
       [out retval] IDispatch **ppdispParent
     );
     [id(-5001), propget, hidden]
     HRESULT __stdcall accChildCount (
       [out retval] long *pcountChildren
     );
     [id(-5002), propget, hidden]
     HRESULT __stdcall accChild (
       [in] VARIANT varChild,
       [out retval] IDispatch **ppdispChild
     );
     [id(-5003), propget, hidden]
     HRESULT __stdcall accName (
       [in opt] VARIANT varChild,
       [out retval] BSTR *pszName
     );
     [id(-5004), propget, hidden]
     HRESULT __stdcall accValue (
       [in opt] VARIANT varChild,
       [out retval] BSTR *pszValue
     );
     [id(-5005), propget, hidden]
     HRESULT __stdcall accDescription (
       [in opt] VARIANT varChild,
       [out retval] BSTR *pszDescription
     );
     [id(-5006), propget, hidden]
     HRESULT __stdcall accRole (
       [in opt] VARIANT varChild,
       [out retval] VARIANT *pvarRole
     );
     [id(-5007), propget, hidden]
     HRESULT __stdcall accState (
       [in opt] VARIANT varChild,
       [out retval] VARIANT *pvarState
     );
     [id(-5008), propget, hidden]
     HRESULT __stdcall accHelp (
       [in opt] VARIANT varChild,
       [out retval] BSTR *pszHelp
     );
     [id(-5009), propget, hidden]
     HRESULT __stdcall accHelpTopic (
       [out] BSTR *pszHelpFile,
       [in opt] VARIANT varChild,
       [out retval] long *pidTopic
     );
     [id(-5010), propget, hidden]
     HRESULT __stdcall accKeyboardShortcut (
       [in opt] VARIANT varChild,
       [out retval] BSTR *pszKeyboardShortcut
     );
     [id(-5011), propget, hidden]
     HRESULT __stdcall accFocus (
       [out retval] VARIANT *pvarChild
     );
     [id(-5012), propget, hidden]
     HRESULT __stdcall accSelection (
       [out retval] VARIANT *pvarChildren
     );
     [id(-5013), propget, hidden]
     HRESULT __stdcall accDefaultAction (
       [in opt] VARIANT varChild,
       [out retval] BSTR *pszDefaultAction
     );
     [id(-5014), hidden]
     HRESULT __stdcall accSelect (
       [in] long flagsSelect,
       [in opt] VARIANT varChild
     );
     [id(-5015), hidden]
     HRESULT __stdcall accLocation (
       [out] long *pxLeft,
       [out] long *pyTop,
       [out] long *pcxWidth,
       [out] long *pcyHeight,
       [in opt] VARIANT varChild
     );
     [id(-5016), hidden]
     HRESULT __stdcall accNavigate (
       [in] long navDir,
       [in opt] VARIANT varStart,
       [out retval] VARIANT *pvarEndUpAt
     );
     [id(-5017), hidden]
     HRESULT __stdcall accHitTest (
       [in] long xLeft,
       [in] long yTop,
       [out retval] VARIANT *pvarChild
     );
     [id(-5018), hidden]
     HRESULT __stdcall accDoDefaultAction (
       [in opt] VARIANT varChild
     );
     [id(-5003), propput, hidden]
     HRESULT __stdcall accName (
       [in opt] VARIANT varChild,
       [in] BSTR argNo2
     );
     [id(-5004), propput, hidden]
     HRESULT __stdcall accValue (
       [in opt] VARIANT varChild,
       [in] BSTR argNo2
     );
   };

};

/* Interface declarations.  */
[
  uuid(D22108AA-8AC5-49A5-837B-37BBB3D7591E)
]
interface IUIAutomationElement : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall SetFocus (void);
  HRESULT __stdcall GetRuntimeId (
    [out retval] int runtimeId[]*
  );
  HRESULT __stdcall FindFirst (
    [in] enum TreeScope scope,
    [in] interface IUIAutomationCondition *condition,
    [out retval] interface IUIAutomationElement **found
  );
  HRESULT __stdcall FindAll (
    [in] enum TreeScope scope,
    [in] interface IUIAutomationCondition *condition,
    [out retval] interface IUIAutomationElementArray **found
  );
  HRESULT __stdcall FindFirstBuildCache (
    [in] enum TreeScope scope,
    [in] interface IUIAutomationCondition *condition,
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [out retval] interface IUIAutomationElement **found
  );
  HRESULT __stdcall FindAllBuildCache (
    [in] enum TreeScope scope,
    [in] interface IUIAutomationCondition *condition,
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [out retval] interface IUIAutomationElementArray **found
  );
  HRESULT __stdcall BuildUpdatedCache (
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [out retval] interface IUIAutomationElement **updatedElement
  );
  HRESULT __stdcall GetCurrentPropertyValue (
    [in] int propertyId,
    [out retval] VARIANT *retVal
  );
  HRESULT __stdcall GetCurrentPropertyValueEx (
    [in] int propertyId,
    [in] long ignoreDefaultValue,
    [out retval] VARIANT *retVal
  );
  HRESULT __stdcall GetCachedPropertyValue (
    [in] int propertyId,
    [out retval] VARIANT *retVal
  );
  HRESULT __stdcall GetCachedPropertyValueEx (
    [in] int propertyId,
    [in] long ignoreDefaultValue,
    [out retval] VARIANT *retVal
  );
  HRESULT __stdcall GetCurrentPatternAs (
    [in] int patternId,
    [in] struct GUID *riid,
    [out retval] void *patternObject
  );
  HRESULT __stdcall GetCachedPatternAs (
    [in] int patternId,
    [in] struct GUID *riid,
    [out retval] void *patternObject
  );
  HRESULT __stdcall GetCurrentPattern (
    [in] int patternId,
    [out retval] IUnknown **patternObject
  );
  HRESULT __stdcall GetCachedPattern (
    [in] int patternId,
    [out retval] IUnknown **patternObject
  );
  HRESULT __stdcall GetCachedParent (
    [out retval] interface IUIAutomationElement **parent
  );
  HRESULT __stdcall GetCachedChildren (
    [out retval] interface IUIAutomationElementArray **children
  );
  [propget]
  HRESULT __stdcall CurrentProcessId (
    [out retval] int *retVal
  );
  [propget]
  HRESULT __stdcall CurrentControlType (
    [out retval] int *retVal
  );
  [propget]
  HRESULT __stdcall CurrentLocalizedControlType (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CurrentName (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CurrentAcceleratorKey (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CurrentAccessKey (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CurrentHasKeyboardFocus (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentIsKeyboardFocusable (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentIsEnabled (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentAutomationId (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CurrentClassName (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CurrentHelpText (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CurrentCulture (
    [out retval] int *retVal
  );
  [propget]
  HRESULT __stdcall CurrentIsControlElement (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentIsContentElement (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentIsPassword (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentNativeWindowHandle (
    [out retval] void *retVal
  );
  [propget]
  HRESULT __stdcall CurrentItemType (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CurrentIsOffscreen (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentOrientation (
    [out retval] enum OrientationType *retVal
  );
  [propget]
  HRESULT __stdcall CurrentFrameworkId (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CurrentIsRequiredForForm (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentItemStatus (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CurrentBoundingRectangle (
    [out retval] struct tagRECT *retVal
  );
  [propget]
  HRESULT __stdcall CurrentLabeledBy (
    [out retval] interface IUIAutomationElement **retVal
  );
  [propget]
  HRESULT __stdcall CurrentAriaRole (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CurrentAriaProperties (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CurrentIsDataValidForForm (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentControllerFor (
    [out retval] interface IUIAutomationElementArray **retVal
  );
  [propget]
  HRESULT __stdcall CurrentDescribedBy (
    [out retval] interface IUIAutomationElementArray **retVal
  );
  [propget]
  HRESULT __stdcall CurrentFlowsTo (
    [out retval] interface IUIAutomationElementArray **retVal
  );
  [propget]
  HRESULT __stdcall CurrentProviderDescription (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CachedProcessId (
    [out retval] int *retVal
  );
  [propget]
  HRESULT __stdcall CachedControlType (
    [out retval] int *retVal
  );
  [propget]
  HRESULT __stdcall CachedLocalizedControlType (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CachedName (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CachedAcceleratorKey (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CachedAccessKey (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CachedHasKeyboardFocus (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedIsKeyboardFocusable (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedIsEnabled (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedAutomationId (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CachedClassName (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CachedHelpText (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CachedCulture (
    [out retval] int *retVal
  );
  [propget]
  HRESULT __stdcall CachedIsControlElement (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedIsContentElement (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedIsPassword (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedNativeWindowHandle (
    [out retval] void *retVal
  );
  [propget]
  HRESULT __stdcall CachedItemType (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CachedIsOffscreen (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedOrientation (
    [out retval] enum OrientationType *retVal
  );
  [propget]
  HRESULT __stdcall CachedFrameworkId (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CachedIsRequiredForForm (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedItemStatus (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CachedBoundingRectangle (
    [out retval] struct tagRECT *retVal
  );
  [propget]
  HRESULT __stdcall CachedLabeledBy (
    [out retval] interface IUIAutomationElement **retVal
  );
  [propget]
  HRESULT __stdcall CachedAriaRole (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CachedAriaProperties (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CachedIsDataValidForForm (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedControllerFor (
    [out retval] interface IUIAutomationElementArray **retVal
  );
  [propget]
  HRESULT __stdcall CachedDescribedBy (
    [out retval] interface IUIAutomationElementArray **retVal
  );
  [propget]
  HRESULT __stdcall CachedFlowsTo (
    [out retval] interface IUIAutomationElementArray **retVal
  );
  [propget]
  HRESULT __stdcall CachedProviderDescription (
    [out retval] BSTR *retVal
  );
  HRESULT __stdcall GetClickablePoint (
    [out] struct tagPOINT *clickable,
    [out retval] long *gotClickable
  );
};
[
  uuid(352FFBA8-0973-437C-A61F-F64CAFD81DF9)
]
interface IUIAutomationCondition : IUnknown
{
};
[
  uuid(14314595-B4BC-4055-95F2-58F2E42C9855)
]
interface IUIAutomationElementArray : IUnknown
{
  [id(1610678272), propget]
  HRESULT __stdcall Length (
    [out retval] int *Length
  );
  HRESULT __stdcall GetElement (
    [in] int index,
    [out retval] interface IUIAutomationElement **element
  );
};
[
  uuid(B32A92B5-BC25-4078-9C08-D7EE95C48E03)
]
interface IUIAutomationCacheRequest : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall AddProperty (
    [in] int propertyId
  );
  HRESULT __stdcall AddPattern (
    [in] int patternId
  );
  HRESULT __stdcall Clone (
    [out retval] interface IUIAutomationCacheRequest **clonedRequest
  );
  [propget]
  HRESULT __stdcall TreeScope (
    [out retval] enum TreeScope *scope
  );
  [id(1610678275), propput]
  HRESULT __stdcall TreeScope (
    [in] enum TreeScope argNo1
  );
  [id(1610678277), propget]
  HRESULT __stdcall TreeFilter (
    [out retval] interface IUIAutomationCondition **filter
  );
  [id(1610678277), propput]
  HRESULT __stdcall TreeFilter (
    [in] interface IUIAutomationCondition *argNo1
  );
  [id(1610678279), propget]
  HRESULT __stdcall AutomationElementMode (
    [out retval] enum AutomationElementMode *mode
  );
  [id(1610678279), propput]
  HRESULT __stdcall AutomationElementMode (
    [in] enum AutomationElementMode argNo1
  );
};
[
  uuid(1B4E1F2E-75EB-4D0B-8952-5A69988E2307)
]
interface IUIAutomationBoolCondition : IUIAutomationCondition
{
  [id(1610743808), propget]
  HRESULT __stdcall BooleanValue (
    [out retval] long *boolVal
  );
};
[
  uuid(99EBF2CB-5578-4267-9AD4-AFD6EA77E94B)
]
interface IUIAutomationPropertyCondition : IUIAutomationCondition
{
  [id(1610743808), propget]
  HRESULT __stdcall propertyId (
    [out retval] int *propertyId
  );
  [propget]
  HRESULT __stdcall PropertyValue (
    [out retval] VARIANT *PropertyValue
  );
  [propget]
  HRESULT __stdcall PropertyConditionFlags (
    [out retval] enum PropertyConditionFlags *flags
  );
};
[
  uuid(A7D0AF36-B912-45FE-9855-091DDC174AEC)
]
interface IUIAutomationAndCondition : IUIAutomationCondition
{
  [id(1610743808), propget]
  HRESULT __stdcall ChildCount (
    [out retval] int *ChildCount
  );
  HRESULT __stdcall GetChildrenAsNativeArray (
    [out] interface IUIAutomationCondition ***childArray,
    [out] int *childArrayCount
  );
  HRESULT __stdcall GetChildren (
    [out retval] interface IUIAutomationCondition *childArray[]*
  );
};
[
  uuid(8753F032-3DB1-47B5-A1FC-6E34A266C712)
]
interface IUIAutomationOrCondition : IUIAutomationCondition
{
  [id(1610743808), propget]
  HRESULT __stdcall ChildCount (
    [out retval] int *ChildCount
  );
  HRESULT __stdcall GetChildrenAsNativeArray (
    [out] interface IUIAutomationCondition ***childArray,
    [out] int *childArrayCount
  );
  HRESULT __stdcall GetChildren (
    [out retval] interface IUIAutomationCondition *childArray[]*
  );
};
[
  uuid(F528B657-847B-498C-8896-D52B565407A1)
]
interface IUIAutomationNotCondition : IUIAutomationCondition
{
  [id(1610743808)]
  HRESULT __stdcall GetChild (
    [out retval] interface IUIAutomationCondition **condition
  );
};
[
  uuid(4042C624-389C-4AFC-A630-9DF854A541FC)
]
interface IUIAutomationTreeWalker : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetParentElement (
    [in] interface IUIAutomationElement *element,
    [out retval] interface IUIAutomationElement **parent
  );
  HRESULT __stdcall GetFirstChildElement (
    [in] interface IUIAutomationElement *element,
    [out retval] interface IUIAutomationElement **first
  );
  HRESULT __stdcall GetLastChildElement (
    [in] interface IUIAutomationElement *element,
    [out retval] interface IUIAutomationElement **last
  );
  HRESULT __stdcall GetNextSiblingElement (
    [in] interface IUIAutomationElement *element,
    [out retval] interface IUIAutomationElement **next
  );
  HRESULT __stdcall GetPreviousSiblingElement (
    [in] interface IUIAutomationElement *element,
    [out retval] interface IUIAutomationElement **previous
  );
  HRESULT __stdcall NormalizeElement (
    [in] interface IUIAutomationElement *element,
    [out retval] interface IUIAutomationElement **normalized
  );
  HRESULT __stdcall GetParentElementBuildCache (
    [in] interface IUIAutomationElement *element,
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [out retval] interface IUIAutomationElement **parent
  );
  HRESULT __stdcall GetFirstChildElementBuildCache (
    [in] interface IUIAutomationElement *element,
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [out retval] interface IUIAutomationElement **first
  );
  HRESULT __stdcall GetLastChildElementBuildCache (
    [in] interface IUIAutomationElement *element,
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [out retval] interface IUIAutomationElement **last
  );
  HRESULT __stdcall GetNextSiblingElementBuildCache (
    [in] interface IUIAutomationElement *element,
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [out retval] interface IUIAutomationElement **next
  );
  HRESULT __stdcall GetPreviousSiblingElementBuildCache (
    [in] interface IUIAutomationElement *element,
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [out retval] interface IUIAutomationElement **previous
  );
  HRESULT __stdcall NormalizeElementBuildCache (
    [in] interface IUIAutomationElement *element,
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [out retval] interface IUIAutomationElement **normalized
  );
  [propget]
  HRESULT __stdcall condition (
    [out retval] interface IUIAutomationCondition **condition
  );
};
[
  uuid(146C3C17-F12E-4E22-8C27-F894B9B79C69),
  oleautomation
]
interface IUIAutomationEventHandler : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall HandleAutomationEvent (
    [in] interface IUIAutomationElement *sender,
    [in] int eventId
  );
};
[
  uuid(40CD37D4-C756-4B0C-8C6F-BDDFEEB13B50),
  oleautomation
]
interface IUIAutomationPropertyChangedEventHandler : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall HandlePropertyChangedEvent (
    [in] interface IUIAutomationElement *sender,
    [in] int propertyId,
    [in] VARIANT newValue
  );
};
[
  uuid(E81D1B4E-11C5-42F8-9754-E7036C79F054),
  oleautomation
]
interface IUIAutomationStructureChangedEventHandler : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall HandleStructureChangedEvent (
    [in] interface IUIAutomationElement *sender,
    [in] enum StructureChangeType changeType,
    [in] int runtimeId[]
  );
};
[
  uuid(C270F6B5-5C69-4290-9745-7A7F97169468),
  oleautomation
]
interface IUIAutomationFocusChangedEventHandler : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall HandleFocusChangedEvent (
    [in] interface IUIAutomationElement *sender
  );
};
[
  uuid(FB377FBE-8EA6-46D5-9C73-6499642D3059)
]
interface IUIAutomationInvokePattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Invoke (void);
};
[
  uuid(FDE5EF97-1464-48F6-90BF-43D0948E86EC)
]
interface IUIAutomationDockPattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall SetDockPosition (
    [in] enum DockPosition dockPos
  );
  [propget]
  HRESULT __stdcall CurrentDockPosition (
    [out retval] enum DockPosition *retVal
  );
  [propget]
  HRESULT __stdcall CachedDockPosition (
    [out retval] enum DockPosition *retVal
  );
};
[
  uuid(619BE086-1F4E-4EE4-BAFA-210128738730)
]
interface IUIAutomationExpandCollapsePattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Expand (void);
  HRESULT __stdcall Collapse (void);
  [propget]
  HRESULT __stdcall CurrentExpandCollapseState (
    [out retval] enum ExpandCollapseState *retVal
  );
  [propget]
  HRESULT __stdcall CachedExpandCollapseState (
    [out retval] enum ExpandCollapseState *retVal
  );
};
[
  uuid(414C3CDC-856B-4F5B-8538-3131C6302550)
]
interface IUIAutomationGridPattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetItem (
    [in] int row,
    [in] int column,
    [out retval] interface IUIAutomationElement **element
  );
  [propget]
  HRESULT __stdcall CurrentRowCount (
    [out retval] int *retVal
  );
  [propget]
  HRESULT __stdcall CurrentColumnCount (
    [out retval] int *retVal
  );
  [propget]
  HRESULT __stdcall CachedRowCount (
    [out retval] int *retVal
  );
  [propget]
  HRESULT __stdcall CachedColumnCount (
    [out retval] int *retVal
  );
};
[
  uuid(78F8EF57-66C3-4E09-BD7C-E79B2004894D)
]
interface IUIAutomationGridItemPattern : IUnknown
{
  [id(1610678272), propget]
  HRESULT __stdcall CurrentContainingGrid (
    [out retval] interface IUIAutomationElement **retVal
  );
  [propget]
  HRESULT __stdcall CurrentRow (
    [out retval] int *retVal
  );
  [propget]
  HRESULT __stdcall CurrentColumn (
    [out retval] int *retVal
  );
  [propget]
  HRESULT __stdcall CurrentRowSpan (
    [out retval] int *retVal
  );
  [propget]
  HRESULT __stdcall CurrentColumnSpan (
    [out retval] int *retVal
  );
  [propget]
  HRESULT __stdcall CachedContainingGrid (
    [out retval] interface IUIAutomationElement **retVal
  );
  [propget]
  HRESULT __stdcall CachedRow (
    [out retval] int *retVal
  );
  [propget]
  HRESULT __stdcall CachedColumn (
    [out retval] int *retVal
  );
  [propget]
  HRESULT __stdcall CachedRowSpan (
    [out retval] int *retVal
  );
  [propget]
  HRESULT __stdcall CachedColumnSpan (
    [out retval] int *retVal
  );
};
[
  uuid(8D253C91-1DC5-4BB5-B18F-ADE16FA495E8)
]
interface IUIAutomationMultipleViewPattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetViewName (
    [in] int view,
    [out retval] BSTR *name
  );
  HRESULT __stdcall SetCurrentView (
    [in] int view
  );
  [propget]
  HRESULT __stdcall CurrentCurrentView (
    [out retval] int *retVal
  );
  HRESULT __stdcall GetCurrentSupportedViews (
    [out retval] int retVal[]*
  );
  [propget]
  HRESULT __stdcall CachedCurrentView (
    [out retval] int *retVal
  );
  HRESULT __stdcall GetCachedSupportedViews (
    [out retval] int retVal[]*
  );
};
[
  uuid(59213F4F-7346-49E5-B120-80555987A148)
]
interface IUIAutomationRangeValuePattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall SetValue (
    [in] double val
  );
  [propget]
  HRESULT __stdcall CurrentValue (
    [out retval] double *retVal
  );
  [propget]
  HRESULT __stdcall CurrentIsReadOnly (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentMaximum (
    [out retval] double *retVal
  );
  [propget]
  HRESULT __stdcall CurrentMinimum (
    [out retval] double *retVal
  );
  [propget]
  HRESULT __stdcall CurrentLargeChange (
    [out retval] double *retVal
  );
  [propget]
  HRESULT __stdcall CurrentSmallChange (
    [out retval] double *retVal
  );
  [propget]
  HRESULT __stdcall CachedValue (
    [out retval] double *retVal
  );
  [propget]
  HRESULT __stdcall CachedIsReadOnly (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedMaximum (
    [out retval] double *retVal
  );
  [propget]
  HRESULT __stdcall CachedMinimum (
    [out retval] double *retVal
  );
  [propget]
  HRESULT __stdcall CachedLargeChange (
    [out retval] double *retVal
  );
  [propget]
  HRESULT __stdcall CachedSmallChange (
    [out retval] double *retVal
  );
};
[
  uuid(88F4D42A-E881-459D-A77C-73BBBB7E02DC)
]
interface IUIAutomationScrollPattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Scroll (
    [in] enum ScrollAmount horizontalAmount,
    [in] enum ScrollAmount verticalAmount
  );
  HRESULT __stdcall SetScrollPercent (
    [in] double horizontalPercent,
    [in] double verticalPercent
  );
  [propget]
  HRESULT __stdcall CurrentHorizontalScrollPercent (
    [out retval] double *retVal
  );
  [propget]
  HRESULT __stdcall CurrentVerticalScrollPercent (
    [out retval] double *retVal
  );
  [propget]
  HRESULT __stdcall CurrentHorizontalViewSize (
    [out retval] double *retVal
  );
  [propget]
  HRESULT __stdcall CurrentVerticalViewSize (
    [out retval] double *retVal
  );
  [propget]
  HRESULT __stdcall CurrentHorizontallyScrollable (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentVerticallyScrollable (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedHorizontalScrollPercent (
    [out retval] double *retVal
  );
  [propget]
  HRESULT __stdcall CachedVerticalScrollPercent (
    [out retval] double *retVal
  );
  [propget]
  HRESULT __stdcall CachedHorizontalViewSize (
    [out retval] double *retVal
  );
  [propget]
  HRESULT __stdcall CachedVerticalViewSize (
    [out retval] double *retVal
  );
  [propget]
  HRESULT __stdcall CachedHorizontallyScrollable (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedVerticallyScrollable (
    [out retval] long *retVal
  );
};
[
  uuid(B488300F-D015-4F19-9C29-BB595E3645EF)
]
interface IUIAutomationScrollItemPattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall ScrollIntoView (void);
};
[
  uuid(5ED5202E-B2AC-47A6-B638-4B0BF140D78E)
]
interface IUIAutomationSelectionPattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCurrentSelection (
    [out retval] interface IUIAutomationElementArray **retVal
  );
  [propget]
  HRESULT __stdcall CurrentCanSelectMultiple (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentIsSelectionRequired (
    [out retval] long *retVal
  );
  HRESULT __stdcall GetCachedSelection (
    [out retval] interface IUIAutomationElementArray **retVal
  );
  [propget]
  HRESULT __stdcall CachedCanSelectMultiple (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedIsSelectionRequired (
    [out retval] long *retVal
  );
};
[
  uuid(A8EFA66A-0FDA-421A-9194-38021F3578EA)
]
interface IUIAutomationSelectionItemPattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Select (void);
  HRESULT __stdcall AddToSelection (void);
  HRESULT __stdcall RemoveFromSelection (void);
  [propget]
  HRESULT __stdcall CurrentIsSelected (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentSelectionContainer (
    [out retval] interface IUIAutomationElement **retVal
  );
  [propget]
  HRESULT __stdcall CachedIsSelected (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedSelectionContainer (
    [out retval] interface IUIAutomationElement **retVal
  );
};
[
  uuid(2233BE0B-AFB7-448B-9FDA-3B378AA5EAE1)
]
interface IUIAutomationSynchronizedInputPattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall StartListening (
    [in] enum SynchronizedInputType inputType
  );
  HRESULT __stdcall Cancel (void);
};
[
  uuid(620E691C-EA96-4710-A850-754B24CE2417)
]
interface IUIAutomationTablePattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCurrentRowHeaders (
    [out retval] interface IUIAutomationElementArray **retVal
  );
  HRESULT __stdcall GetCurrentColumnHeaders (
    [out retval] interface IUIAutomationElementArray **retVal
  );
  [propget]
  HRESULT __stdcall CurrentRowOrColumnMajor (
    [out retval] enum RowOrColumnMajor *retVal
  );
  HRESULT __stdcall GetCachedRowHeaders (
    [out retval] interface IUIAutomationElementArray **retVal
  );
  HRESULT __stdcall GetCachedColumnHeaders (
    [out retval] interface IUIAutomationElementArray **retVal
  );
  [propget]
  HRESULT __stdcall CachedRowOrColumnMajor (
    [out retval] enum RowOrColumnMajor *retVal
  );
};
[
  uuid(0B964EB3-EF2E-4464-9C79-61D61737A27E)
]
interface IUIAutomationTableItemPattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCurrentRowHeaderItems (
    [out retval] interface IUIAutomationElementArray **retVal
  );
  HRESULT __stdcall GetCurrentColumnHeaderItems (
    [out retval] interface IUIAutomationElementArray **retVal
  );
  HRESULT __stdcall GetCachedRowHeaderItems (
    [out retval] interface IUIAutomationElementArray **retVal
  );
  HRESULT __stdcall GetCachedColumnHeaderItems (
    [out retval] interface IUIAutomationElementArray **retVal
  );
};
[
  uuid(94CF8058-9B8D-4AB9-8BFD-4CD0A33C8C70)
]
interface IUIAutomationTogglePattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Toggle (void);
  [propget]
  HRESULT __stdcall CurrentToggleState (
    [out retval] enum ToggleState *retVal
  );
  [propget]
  HRESULT __stdcall CachedToggleState (
    [out retval] enum ToggleState *retVal
  );
};
[
  uuid(A9B55844-A55D-4EF0-926D-569C16FF89BB)
]
interface IUIAutomationTransformPattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Move (
    [in] double x,
    [in] double y
  );
  HRESULT __stdcall Resize (
    [in] double width,
    [in] double height
  );
  HRESULT __stdcall Rotate (
    [in] double degrees
  );
  [propget]
  HRESULT __stdcall CurrentCanMove (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentCanResize (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentCanRotate (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedCanMove (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedCanResize (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedCanRotate (
    [out retval] long *retVal
  );
};
[
  uuid(A94CD8B1-0844-4CD6-9D2D-640537AB39E9)
]
interface IUIAutomationValuePattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall SetValue (
    [in] BSTR val
  );
  [propget]
  HRESULT __stdcall CurrentValue (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CurrentIsReadOnly (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedValue (
    [out retval] BSTR *retVal
  );
  [propget]
  HRESULT __stdcall CachedIsReadOnly (
    [out retval] long *retVal
  );
};
[
  uuid(0FAEF453-9208-43EF-BBB2-3B485177864F)
]
interface IUIAutomationWindowPattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Close (void);
  HRESULT __stdcall WaitForInputIdle (
    [in] int milliseconds,
    [out retval] long *success
  );
  HRESULT __stdcall SetWindowVisualState (
    [in] enum WindowVisualState state
  );
  [propget]
  HRESULT __stdcall CurrentCanMaximize (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentCanMinimize (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentIsModal (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentIsTopmost (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CurrentWindowVisualState (
    [out retval] enum WindowVisualState *retVal
  );
  [propget]
  HRESULT __stdcall CurrentWindowInteractionState (
    [out retval] enum WindowInteractionState *retVal
  );
  [propget]
  HRESULT __stdcall CachedCanMaximize (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedCanMinimize (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedIsModal (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedIsTopmost (
    [out retval] long *retVal
  );
  [propget]
  HRESULT __stdcall CachedWindowVisualState (
    [out retval] enum WindowVisualState *retVal
  );
  [propget]
  HRESULT __stdcall CachedWindowInteractionState (
    [out retval] enum WindowInteractionState *retVal
  );
};
[
  uuid(A543CC6A-F4AE-494B-8239-C814481187A8)
]
interface IUIAutomationTextRange : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Clone (
    [out retval] interface IUIAutomationTextRange **clonedRange
  );
  HRESULT __stdcall Compare (
    [in] interface IUIAutomationTextRange *range,
    [out retval] long *areSame
  );
  HRESULT __stdcall CompareEndpoints (
    [in] enum TextPatternRangeEndpoint srcEndPoint,
    [in] interface IUIAutomationTextRange *range,
    [in] enum TextPatternRangeEndpoint targetEndPoint,
    [out retval] int *compValue
  );
  HRESULT __stdcall ExpandToEnclosingUnit (
    [in] enum TextUnit TextUnit
  );
  HRESULT __stdcall FindAttribute (
    [in] int attr,
    [in] VARIANT val,
    [in] long backward,
    [out retval] interface IUIAutomationTextRange **found
  );
  HRESULT __stdcall FindText (
    [in] BSTR text,
    [in] long backward,
    [in] long ignoreCase,
    [out retval] interface IUIAutomationTextRange **found
  );
  HRESULT __stdcall GetAttributeValue (
    [in] int attr,
    [out retval] VARIANT *value
  );
  HRESULT __stdcall GetBoundingRectangles (
    [out retval] double boundingRects[]*
  );
  HRESULT __stdcall GetEnclosingElement (
    [out retval] interface IUIAutomationElement **enclosingElement
  );
  HRESULT __stdcall GetText (
    [in] int maxLength,
    [out retval] BSTR *text
  );
  HRESULT __stdcall Move (
    [in] enum TextUnit unit,
    [in] int count,
    [out retval] int *moved
  );
  HRESULT __stdcall MoveEndpointByUnit (
    [in] enum TextPatternRangeEndpoint endpoint,
    [in] enum TextUnit unit,
    [in] int count,
    [out retval] int *moved
  );
  HRESULT __stdcall MoveEndpointByRange (
    [in] enum TextPatternRangeEndpoint srcEndPoint,
    [in] interface IUIAutomationTextRange *range,
    [in] enum TextPatternRangeEndpoint targetEndPoint
  );
  HRESULT __stdcall Select (void);
  HRESULT __stdcall AddToSelection (void);
  HRESULT __stdcall RemoveFromSelection (void);
  HRESULT __stdcall ScrollIntoView (
    [in] long alignToTop
  );
  HRESULT __stdcall GetChildren (
    [out retval] interface IUIAutomationElementArray **children
  );
};
[
  uuid(CE4AE76A-E717-4C98-81EA-47371D028EB6)
]
interface IUIAutomationTextRangeArray : IUnknown
{
  [id(1610678272), propget]
  HRESULT __stdcall Length (
    [out retval] int *Length
  );
  HRESULT __stdcall GetElement (
    [in] int index,
    [out retval] interface IUIAutomationTextRange **element
  );
};
[
  uuid(32EBA289-3583-42C9-9C59-3B6D9A1E9B6A)
]
interface IUIAutomationTextPattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RangeFromPoint (
    [in] struct tagPOINT pt,
    [out retval] interface IUIAutomationTextRange **range
  );
  HRESULT __stdcall RangeFromChild (
    [in] interface IUIAutomationElement *child,
    [out retval] interface IUIAutomationTextRange **range
  );
  HRESULT __stdcall GetSelection (
    [out retval] interface IUIAutomationTextRangeArray **ranges
  );
  HRESULT __stdcall GetVisibleRanges (
    [out retval] interface IUIAutomationTextRangeArray **ranges
  );
  [propget]
  HRESULT __stdcall DocumentRange (
    [out retval] interface IUIAutomationTextRange **range
  );
  [propget]
  HRESULT __stdcall SupportedTextSelection (
    [out retval] enum SupportedTextSelection *SupportedTextSelection
  );
};
[
  uuid(828055AD-355B-4435-86D5-3B51C14A9B1B)
]
interface IUIAutomationLegacyIAccessiblePattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Select (
    long flagsSelect
  );
  HRESULT __stdcall DoDefaultAction (void);
  HRESULT __stdcall SetValue (
    LPWSTR szValue
  );
  [propget]
  HRESULT __stdcall CurrentChildId (
    [out retval] int *pRetVal
  );
  [propget]
  HRESULT __stdcall CurrentName (
    [out retval] BSTR *pszName
  );
  [propget]
  HRESULT __stdcall CurrentValue (
    [out retval] BSTR *pszValue
  );
  [propget]
  HRESULT __stdcall CurrentDescription (
    [out retval] BSTR *pszDescription
  );
  [propget]
  HRESULT __stdcall CurrentRole (
    [out retval] UINT *pdwRole
  );
  [propget]
  HRESULT __stdcall CurrentState (
    [out retval] UINT *pdwState
  );
  [propget]
  HRESULT __stdcall CurrentHelp (
    [out retval] BSTR *pszHelp
  );
  [propget]
  HRESULT __stdcall CurrentKeyboardShortcut (
    [out retval] BSTR *pszKeyboardShortcut
  );
  HRESULT __stdcall GetCurrentSelection (
    [out retval] interface IUIAutomationElementArray **pvarSelectedChildren
  );
  [propget]
  HRESULT __stdcall CurrentDefaultAction (
    [out retval] BSTR *pszDefaultAction
  );
  [propget]
  HRESULT __stdcall CachedChildId (
    [out retval] int *pRetVal
  );
  [propget]
  HRESULT __stdcall CachedName (
    [out retval] BSTR *pszName
  );
  [propget]
  HRESULT __stdcall CachedValue (
    [out retval] BSTR *pszValue
  );
  [propget]
  HRESULT __stdcall CachedDescription (
    [out retval] BSTR *pszDescription
  );
  [propget]
  HRESULT __stdcall CachedRole (
    [out retval] UINT *pdwRole
  );
  [propget]
  HRESULT __stdcall CachedState (
    [out retval] UINT *pdwState
  );
  [propget]
  HRESULT __stdcall CachedHelp (
    [out retval] BSTR *pszHelp
  );
  [propget]
  HRESULT __stdcall CachedKeyboardShortcut (
    [out retval] BSTR *pszKeyboardShortcut
  );
  HRESULT __stdcall GetCachedSelection (
    [out retval] interface IUIAutomationElementArray **pvarSelectedChildren
  );
  [propget]
  HRESULT __stdcall CachedDefaultAction (
    [out retval] BSTR *pszDefaultAction
  );
  HRESULT __stdcall GetIAccessible (
    [out retval] dispinterface IAccessible **ppAccessible
  );
};
[
  uuid(C690FDB2-27A8-423C-812D-429773C9084E)
]
interface IUIAutomationItemContainerPattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall FindItemByProperty (
    [in] interface IUIAutomationElement *pStartAfter,
    [in] int propertyId,
    [in] VARIANT value,
    [out retval] interface IUIAutomationElement **pFound
  );
};
[
  uuid(6BA3D7A6-04CF-4F11-8793-A8D1CDE9969F)
]
interface IUIAutomationVirtualizedItemPattern : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Realize (void);
};
[
  uuid(85B94ECD-849D-42B6-B94D-D6DB23FDF5A4)
]
interface IUIAutomationProxyFactory : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall CreateProvider (
    [in] void *hwnd,
    [in] long idObject,
    [in] long idChild,
    [out retval] interface IRawElementProviderSimple **provider
  );
  [propget]
  HRESULT __stdcall ProxyFactoryId (
    [out retval] BSTR *factoryId
  );
};
[
  uuid(D6DD68D1-86FD-4332-8666-9ABEDEA2D24C)
]
interface IRawElementProviderSimple : IUnknown
{
  [id(1610678272), propget]
  HRESULT __stdcall ProviderOptions (
    [out retval] enum ProviderOptions *pRetVal
  );
  HRESULT __stdcall GetPatternProvider (
    [in] int patternId,
    [out retval] IUnknown **pRetVal
  );
  HRESULT __stdcall GetPropertyValue (
    [in] int propertyId,
    [out retval] VARIANT *pRetVal
  );
  [propget]
  HRESULT __stdcall HostRawElementProvider (
    [out retval] interface IRawElementProviderSimple **pRetVal
  );
};
[
  uuid(D50E472E-B64B-490C-BCA1-D30696F9F289)
]
interface IUIAutomationProxyFactoryEntry : IUnknown
{
  [id(1610678272), propget]
  HRESULT __stdcall ProxyFactory (
    [out retval] interface IUIAutomationProxyFactory **factory
  );
  [propget]
  HRESULT __stdcall ClassName (
    [out retval] BSTR *ClassName
  );
  [propget]
  HRESULT __stdcall ImageName (
    [out retval] BSTR *ImageName
  );
  [propget]
  HRESULT __stdcall AllowSubstringMatch (
    [out retval] long *AllowSubstringMatch
  );
  [propget]
  HRESULT __stdcall CanCheckBaseClass (
    [out retval] long *CanCheckBaseClass
  );
  [propget]
  HRESULT __stdcall NeedsAdviseEvents (
    [out retval] long *adviseEvents
  );
  [id(1610678273), propput]
  HRESULT __stdcall ClassName (
    [in] LPWSTR argNo1
  );
  [propput]
  HRESULT __stdcall ImageName (
    [in] LPWSTR argNo1
  );
  [propput]
  HRESULT __stdcall AllowSubstringMatch (
    [in] long argNo1
  );
  [propput]
  HRESULT __stdcall CanCheckBaseClass (
    [in] long argNo1
  );
  [propput]
  HRESULT __stdcall NeedsAdviseEvents (
    [in] long argNo1
  );
  [id(1610678283)]
  HRESULT __stdcall SetWinEventsForAutomationEvent (
    [in] int eventId,
    [in] int propertyId,
    [in] unsigned int winEvents[]
  );
  HRESULT __stdcall GetWinEventsForAutomationEvent (
    [in] int eventId,
    [in] int propertyId,
    [out retval] unsigned int winEvents[]*
  );
};
[
  uuid(09E31E18-872D-4873-93D1-1E541EC133FD)
]
interface IUIAutomationProxyFactoryMapping : IUnknown
{
  [id(1610678272), propget]
  HRESULT __stdcall count (
    [out retval] unsigned int *count
  );
  HRESULT __stdcall GetTable (
    [out retval] interface IUIAutomationProxyFactoryEntry *table[]*
  );
  HRESULT __stdcall GetEntry (
    [in] unsigned int index,
    [out retval] interface IUIAutomationProxyFactoryEntry **entry
  );
  HRESULT __stdcall SetTable (
    [in] interface IUIAutomationProxyFactoryEntry *factoryList[]
  );
  HRESULT __stdcall InsertEntries (
    [in] unsigned int before,
    [in] interface IUIAutomationProxyFactoryEntry *factoryList[]
  );
  HRESULT __stdcall InsertEntry (
    [in] unsigned int before,
    [in] interface IUIAutomationProxyFactoryEntry *factory
  );
  HRESULT __stdcall RemoveEntry (
    [in] unsigned int index
  );
  HRESULT __stdcall ClearTable (void);
  HRESULT __stdcall RestoreDefaultTable (void);
};
[
  uuid(30CBE57D-D9D0-452A-AB13-7AC5AC4825EE)
]
interface IUIAutomation : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall CompareElements (
    [in] interface IUIAutomationElement *el1,
    [in] interface IUIAutomationElement *el2,
    [out retval] long *areSame
  );
  HRESULT __stdcall CompareRuntimeIds (
    [in] int runtimeId1[],
    [in] int runtimeId2[],
    [out retval] long *areSame
  );
  HRESULT __stdcall GetRootElement (
    [out retval] interface IUIAutomationElement **root
  );
  HRESULT __stdcall ElementFromHandle (
    [in] void *hwnd,
    [out retval] interface IUIAutomationElement **element
  );
  HRESULT __stdcall ElementFromPoint (
    [in] struct tagPOINT pt,
    [out retval] interface IUIAutomationElement **element
  );
  HRESULT __stdcall GetFocusedElement (
    [out retval] interface IUIAutomationElement **element
  );
  HRESULT __stdcall GetRootElementBuildCache (
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [out retval] interface IUIAutomationElement **root
  );
  HRESULT __stdcall ElementFromHandleBuildCache (
    [in] void *hwnd,
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [out retval] interface IUIAutomationElement **element
  );
  HRESULT __stdcall ElementFromPointBuildCache (
    [in] struct tagPOINT pt,
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [out retval] interface IUIAutomationElement **element
  );
  HRESULT __stdcall GetFocusedElementBuildCache (
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [out retval] interface IUIAutomationElement **element
  );
  HRESULT __stdcall CreateTreeWalker (
    [in] interface IUIAutomationCondition *pCondition,
    [out retval] interface IUIAutomationTreeWalker **walker
  );
  [propget]
  HRESULT __stdcall ControlViewWalker (
    [out retval] interface IUIAutomationTreeWalker **walker
  );
  [propget]
  HRESULT __stdcall ContentViewWalker (
    [out retval] interface IUIAutomationTreeWalker **walker
  );
  [propget]
  HRESULT __stdcall RawViewWalker (
    [out retval] interface IUIAutomationTreeWalker **walker
  );
  [propget]
  HRESULT __stdcall RawViewCondition (
    [out retval] interface IUIAutomationCondition **condition
  );
  [propget]
  HRESULT __stdcall ControlViewCondition (
    [out retval] interface IUIAutomationCondition **condition
  );
  [propget]
  HRESULT __stdcall ContentViewCondition (
    [out retval] interface IUIAutomationCondition **condition
  );
  HRESULT __stdcall CreateCacheRequest (
    [out retval] interface IUIAutomationCacheRequest **cacheRequest
  );
  HRESULT __stdcall CreateTrueCondition (
    [out retval] interface IUIAutomationCondition **newCondition
  );
  HRESULT __stdcall CreateFalseCondition (
    [out retval] interface IUIAutomationCondition **newCondition
  );
  HRESULT __stdcall CreatePropertyCondition (
    [in] int propertyId,
    [in] VARIANT value,
    [out retval] interface IUIAutomationCondition **newCondition
  );
  HRESULT __stdcall CreatePropertyConditionEx (
    [in] int propertyId,
    [in] VARIANT value,
    [in] enum PropertyConditionFlags flags,
    [out retval] interface IUIAutomationCondition **newCondition
  );
  HRESULT __stdcall CreateAndCondition (
    [in] interface IUIAutomationCondition *condition1,
    [in] interface IUIAutomationCondition *condition2,
    [out retval] interface IUIAutomationCondition **newCondition
  );
  HRESULT __stdcall CreateAndConditionFromArray (
    [in] interface IUIAutomationCondition *conditions[],
    [out retval] interface IUIAutomationCondition **newCondition
  );
  HRESULT __stdcall CreateAndConditionFromNativeArray (
    [in] interface IUIAutomationCondition **conditions,
    [in] int conditionCount,
    [out retval] interface IUIAutomationCondition **newCondition
  );
  HRESULT __stdcall CreateOrCondition (
    [in] interface IUIAutomationCondition *condition1,
    [in] interface IUIAutomationCondition *condition2,
    [out retval] interface IUIAutomationCondition **newCondition
  );
  HRESULT __stdcall CreateOrConditionFromArray (
    [in] interface IUIAutomationCondition *conditions[],
    [out retval] interface IUIAutomationCondition **newCondition
  );
  HRESULT __stdcall CreateOrConditionFromNativeArray (
    [in] interface IUIAutomationCondition **conditions,
    [in] int conditionCount,
    [out retval] interface IUIAutomationCondition **newCondition
  );
  HRESULT __stdcall CreateNotCondition (
    [in] interface IUIAutomationCondition *condition,
    [out retval] interface IUIAutomationCondition **newCondition
  );
  HRESULT __stdcall AddAutomationEventHandler (
    [in] int eventId,
    [in] interface IUIAutomationElement *element,
    [in] enum TreeScope scope,
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [in] interface IUIAutomationEventHandler *handler
  );
  HRESULT __stdcall RemoveAutomationEventHandler (
    [in] int eventId,
    [in] interface IUIAutomationElement *element,
    [in] interface IUIAutomationEventHandler *handler
  );
  HRESULT __stdcall AddPropertyChangedEventHandlerNativeArray (
    [in] interface IUIAutomationElement *element,
    [in] enum TreeScope scope,
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [in] interface IUIAutomationPropertyChangedEventHandler *handler,
    [in] int *propertyArray,
    [in] int propertyCount
  );
  HRESULT __stdcall AddPropertyChangedEventHandler (
    [in] interface IUIAutomationElement *element,
    [in] enum TreeScope scope,
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [in] interface IUIAutomationPropertyChangedEventHandler *handler,
    [in] int propertyArray[]
  );
  HRESULT __stdcall RemovePropertyChangedEventHandler (
    [in] interface IUIAutomationElement *element,
    [in] interface IUIAutomationPropertyChangedEventHandler *handler
  );
  HRESULT __stdcall AddStructureChangedEventHandler (
    [in] interface IUIAutomationElement *element,
    [in] enum TreeScope scope,
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [in] interface IUIAutomationStructureChangedEventHandler *handler
  );
  HRESULT __stdcall RemoveStructureChangedEventHandler (
    [in] interface IUIAutomationElement *element,
    [in] interface IUIAutomationStructureChangedEventHandler *handler
  );
  HRESULT __stdcall AddFocusChangedEventHandler (
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [in] interface IUIAutomationFocusChangedEventHandler *handler
  );
  HRESULT __stdcall RemoveFocusChangedEventHandler (
    [in] interface IUIAutomationFocusChangedEventHandler *handler
  );
  HRESULT __stdcall RemoveAllEventHandlers (void);
  HRESULT __stdcall IntNativeArrayToSafeArray (
    [in] int *array,
    [in] int arrayCount,
    [out retval] int safeArray[]*
  );
  HRESULT __stdcall IntSafeArrayToNativeArray (
    [in] int intArray[],
    [out] int *array,
    [out retval] int *arrayCount
  );
  HRESULT __stdcall RectToVariant (
    [in] struct tagRECT rc,
    [out retval] VARIANT *var
  );
  HRESULT __stdcall VariantToRect (
    [in] VARIANT var,
    [out retval] struct tagRECT *rc
  );
  HRESULT __stdcall SafeArrayToRectNativeArray (
    [in] double rects[],
    [out] struct tagRECT **rectArray,
    [out retval] int *rectArrayCount
  );
  HRESULT __stdcall CreateProxyFactoryEntry (
    [in] interface IUIAutomationProxyFactory *factory,
    [out retval] interface IUIAutomationProxyFactoryEntry **factoryEntry
  );
  [propget]
  HRESULT __stdcall ProxyFactoryMapping (
    [out retval] interface IUIAutomationProxyFactoryMapping **factoryMapping
  );
  HRESULT __stdcall GetPropertyProgrammaticName (
    [in] int property,
    [out retval] BSTR *name
  );
  HRESULT __stdcall GetPatternProgrammaticName (
    [in] int pattern,
    [out retval] BSTR *name
  );
  HRESULT __stdcall PollForPotentialSupportedPatterns (
    [in] interface IUIAutomationElement *pElement,
    [out] int patternIds[]*,
    [out] BSTR patternNames[]*
  );
  HRESULT __stdcall PollForPotentialSupportedProperties (
    [in] interface IUIAutomationElement *pElement,
    [out] int propertyIds[]*,
    [out] BSTR propertyNames[]*
  );
  HRESULT __stdcall CheckNotSupported (
    [in] VARIANT value,
    [out retval] long *isNotSupported
  );
  [propget]
  HRESULT __stdcall ReservedNotSupportedValue (
    [out retval] IUnknown **notSupportedValue
  );
  [propget]
  HRESULT __stdcall ReservedMixedAttributeValue (
    [out retval] IUnknown **mixedAttributeValue
  );
  HRESULT __stdcall ElementFromIAccessible (
    [in] dispinterface IAccessible *accessible,
    [in] int childId,
    [out retval] interface IUIAutomationElement **element
  );
  HRESULT __stdcall ElementFromIAccessibleBuildCache (
    [in] dispinterface IAccessible *accessible,
    [in] int childId,
    [in] interface IUIAutomationCacheRequest *cacheRequest,
    [out retval] interface IUIAutomationElement **element
  );
};

/* Module declarations.  */
module UIA_PatternIds
{
  [id(1073741824)]
  CONST long UIA_InvokePatternId = (int) 201336592;
  CONST long UIA_SelectionPatternId = (int) 201336593;
  CONST long UIA_ValuePatternId = (int) 201336594;
  CONST long UIA_RangeValuePatternId = (int) 201336595;
  CONST long UIA_ScrollPatternId = (int) 201336596;
  CONST long UIA_ExpandCollapsePatternId = (int) 201336597;
  CONST long UIA_GridPatternId = (int) 201336598;
  CONST long UIA_GridItemPatternId = (int) 201336599;
  CONST long UIA_MultipleViewPatternId = (int) 201336600;
  CONST long UIA_WindowPatternId = (int) 201336601;
  CONST long UIA_SelectionItemPatternId = (int) 201336602;
  CONST long UIA_DockPatternId = (int) 201336603;
  CONST long UIA_TablePatternId = (int) 201336604;
  CONST long UIA_TableItemPatternId = (int) 201336605;
  CONST long UIA_TextPatternId = (int) 201336606;
  CONST long UIA_TogglePatternId = (int) 201336607;
  CONST long UIA_TransformPatternId = (int) 201336608;
  CONST long UIA_ScrollItemPatternId = (int) 201336609;
  CONST long UIA_LegacyIAccessiblePatternId = (int) 201336610;
  CONST long UIA_ItemContainerPatternId = (int) 201336611;
  CONST long UIA_VirtualizedItemPatternId = (int) 201336612;
  CONST long UIA_SynchronizedInputPatternId = (int) 201336613;
};
module UIA_EventIds
{
  [id(1073741824)]
  CONST long UIA_ToolTipOpenedEventId = (int) 201346592;
  CONST long UIA_ToolTipClosedEventId = (int) 201346593;
  CONST long UIA_StructureChangedEventId = (int) 201346594;
  CONST long UIA_MenuOpenedEventId = (int) 201346595;
  CONST long UIA_AutomationPropertyChangedEventId = (int) 201346596;
  CONST long UIA_AutomationFocusChangedEventId = (int) 201346597;
  CONST long UIA_AsyncContentLoadedEventId = (int) 201346598;
  CONST long UIA_MenuClosedEventId = (int) 201346599;
  CONST long UIA_LayoutInvalidatedEventId = (int) 201346600;
  CONST long UIA_Invoke_InvokedEventId = (int) 201346601;
  CONST long UIA_SelectionItem_ElementAddedToSelectionEventId = (int) 201346602;
  CONST long UIA_SelectionItem_ElementRemovedFromSelectionEventId = (int) 201346603;
  CONST long UIA_SelectionItem_ElementSelectedEventId = (int) 201346604;
  CONST long UIA_Selection_InvalidatedEventId = (int) 201346605;
  CONST long UIA_Text_TextSelectionChangedEventId = (int) 201346606;
  CONST long UIA_Text_TextChangedEventId = (int) 201346607;
  CONST long UIA_Window_WindowOpenedEventId = (int) 201346608;
  CONST long UIA_Window_WindowClosedEventId = (int) 201346609;
  CONST long UIA_MenuModeStartEventId = (int) 201346610;
  CONST long UIA_MenuModeEndEventId = (int) 201346611;
  CONST long UIA_InputReachedTargetEventId = (int) 201346612;
  CONST long UIA_InputReachedOtherElementEventId = (int) 201346613;
  CONST long UIA_InputDiscardedEventId = (int) 201346614;
};
module UIA_PropertyIds
{
  [id(1073741824)]
  CONST long UIA_RuntimeIdPropertyId = (int) 201356592;
  CONST long UIA_BoundingRectanglePropertyId = (int) 201356593;
  CONST long UIA_ProcessIdPropertyId = (int) 201356594;
  CONST long UIA_ControlTypePropertyId = (int) 201356595;
  CONST long UIA_LocalizedControlTypePropertyId = (int) 201356596;
  CONST long UIA_NamePropertyId = (int) 201356597;
  CONST long UIA_AcceleratorKeyPropertyId = (int) 201356598;
  CONST long UIA_AccessKeyPropertyId = (int) 201356599;
  CONST long UIA_HasKeyboardFocusPropertyId = (int) 201356600;
  CONST long UIA_IsKeyboardFocusablePropertyId = (int) 201356601;
  CONST long UIA_IsEnabledPropertyId = (int) 201356602;
  CONST long UIA_AutomationIdPropertyId = (int) 201356603;
  CONST long UIA_ClassNamePropertyId = (int) 201356604;
  CONST long UIA_HelpTextPropertyId = (int) 201356605;
  CONST long UIA_ClickablePointPropertyId = (int) 201356606;
  CONST long UIA_CulturePropertyId = (int) 201356607;
  CONST long UIA_IsControlElementPropertyId = (int) 201356608;
  CONST long UIA_IsContentElementPropertyId = (int) 201356609;
  CONST long UIA_LabeledByPropertyId = (int) 201356610;
  CONST long UIA_IsPasswordPropertyId = (int) 201356611;
  CONST long UIA_NativeWindowHandlePropertyId = (int) 201356612;
  CONST long UIA_ItemTypePropertyId = (int) 201356613;
  CONST long UIA_IsOffscreenPropertyId = (int) 201356614;
  CONST long UIA_OrientationPropertyId = (int) 201356615;
  CONST long UIA_FrameworkIdPropertyId = (int) 201356616;
  CONST long UIA_IsRequiredForFormPropertyId = (int) 201356617;
  CONST long UIA_ItemStatusPropertyId = (int) 201356618;
  CONST long UIA_IsDockPatternAvailablePropertyId = (int) 201356619;
  CONST long UIA_IsExpandCollapsePatternAvailablePropertyId = (int) 201356620;
  CONST long UIA_IsGridItemPatternAvailablePropertyId = (int) 201356621;
  CONST long UIA_IsGridPatternAvailablePropertyId = (int) 201356622;
  CONST long UIA_IsInvokePatternAvailablePropertyId = (int) 201356623;
  CONST long UIA_IsMultipleViewPatternAvailablePropertyId = (int) 201356624;
  CONST long UIA_IsRangeValuePatternAvailablePropertyId = (int) 201356625;
  CONST long UIA_IsScrollPatternAvailablePropertyId = (int) 201356626;
  CONST long UIA_IsScrollItemPatternAvailablePropertyId = (int) 201356627;
  CONST long UIA_IsSelectionItemPatternAvailablePropertyId = (int) 201356628;
  CONST long UIA_IsSelectionPatternAvailablePropertyId = (int) 201356629;
  CONST long UIA_IsTablePatternAvailablePropertyId = (int) 201356630;
  CONST long UIA_IsTableItemPatternAvailablePropertyId = (int) 201356631;
  CONST long UIA_IsTextPatternAvailablePropertyId = (int) 201356632;
  CONST long UIA_IsTogglePatternAvailablePropertyId = (int) 201356633;
  CONST long UIA_IsTransformPatternAvailablePropertyId = (int) 201356634;
  CONST long UIA_IsValuePatternAvailablePropertyId = (int) 201356635;
  CONST long UIA_IsWindowPatternAvailablePropertyId = (int) 201356636;
  CONST long UIA_ValueValuePropertyId = (int) 201356637;
  CONST long UIA_ValueIsReadOnlyPropertyId = (int) 201356638;
  CONST long UIA_RangeValueValuePropertyId = (int) 201356639;
  CONST long UIA_RangeValueIsReadOnlyPropertyId = (int) 201356640;
  CONST long UIA_RangeValueMinimumPropertyId = (int) 201356641;
  CONST long UIA_RangeValueMaximumPropertyId = (int) 201356642;
  CONST long UIA_RangeValueLargeChangePropertyId = (int) 201356643;
  CONST long UIA_RangeValueSmallChangePropertyId = (int) 201356644;
  CONST long UIA_ScrollHorizontalScrollPercentPropertyId = (int) 201356645;
  CONST long UIA_ScrollHorizontalViewSizePropertyId = (int) 201356646;
  CONST long UIA_ScrollVerticalScrollPercentPropertyId = (int) 201356647;
  CONST long UIA_ScrollVerticalViewSizePropertyId = (int) 201356648;
  CONST long UIA_ScrollHorizontallyScrollablePropertyId = (int) 201356649;
  CONST long UIA_ScrollVerticallyScrollablePropertyId = (int) 201356650;
  CONST long UIA_SelectionSelectionPropertyId = (int) 201356651;
  CONST long UIA_SelectionCanSelectMultiplePropertyId = (int) 201356652;
  CONST long UIA_SelectionIsSelectionRequiredPropertyId = (int) 201356653;
  CONST long UIA_GridRowCountPropertyId = (int) 201356654;
  CONST long UIA_GridColumnCountPropertyId = (int) 201356655;
  CONST long UIA_GridItemRowPropertyId = (int) 201356656;
  CONST long UIA_GridItemColumnPropertyId = (int) 201356657;
  CONST long UIA_GridItemRowSpanPropertyId = (int) 201356658;
  CONST long UIA_GridItemColumnSpanPropertyId = (int) 201356659;
  CONST long UIA_GridItemContainingGridPropertyId = (int) 201356660;
  CONST long UIA_DockDockPositionPropertyId = (int) 201356661;
  CONST long UIA_ExpandCollapseExpandCollapseStatePropertyId = (int) 201356662;
  CONST long UIA_MultipleViewCurrentViewPropertyId = (int) 201356663;
  CONST long UIA_MultipleViewSupportedViewsPropertyId = (int) 201356664;
  CONST long UIA_WindowCanMaximizePropertyId = (int) 201356665;
  CONST long UIA_WindowCanMinimizePropertyId = (int) 201356666;
  CONST long UIA_WindowWindowVisualStatePropertyId = (int) 201356667;
  CONST long UIA_WindowWindowInteractionStatePropertyId = (int) 201356668;
  CONST long UIA_WindowIsModalPropertyId = (int) 201356669;
  CONST long UIA_WindowIsTopmostPropertyId = (int) 201356670;
  CONST long UIA_SelectionItemIsSelectedPropertyId = (int) 201356671;
  CONST long UIA_SelectionItemSelectionContainerPropertyId = (int) 201356672;
  CONST long UIA_TableRowHeadersPropertyId = (int) 201356673;
  CONST long UIA_TableColumnHeadersPropertyId = (int) 201356674;
  CONST long UIA_TableRowOrColumnMajorPropertyId = (int) 201356675;
  CONST long UIA_TableItemRowHeaderItemsPropertyId = (int) 201356676;
  CONST long UIA_TableItemColumnHeaderItemsPropertyId = (int) 201356677;
  CONST long UIA_ToggleToggleStatePropertyId = (int) 201356678;
  CONST long UIA_TransformCanMovePropertyId = (int) 201356679;
  CONST long UIA_TransformCanResizePropertyId = (int) 201356680;
  CONST long UIA_TransformCanRotatePropertyId = (int) 201356681;
  CONST long UIA_IsLegacyIAccessiblePatternAvailablePropertyId = (int) 201356682;
  CONST long UIA_LegacyIAccessibleChildIdPropertyId = (int) 201356683;
  CONST long UIA_LegacyIAccessibleNamePropertyId = (int) 201356684;
  CONST long UIA_LegacyIAccessibleValuePropertyId = (int) 201356685;
  CONST long UIA_LegacyIAccessibleDescriptionPropertyId = (int) 201356686;
  CONST long UIA_LegacyIAccessibleRolePropertyId = (int) 201356687;
  CONST long UIA_LegacyIAccessibleStatePropertyId = (int) 201356688;
  CONST long UIA_LegacyIAccessibleHelpPropertyId = (int) 201356689;
  CONST long UIA_LegacyIAccessibleKeyboardShortcutPropertyId = (int) 201356690;
  CONST long UIA_LegacyIAccessibleSelectionPropertyId = (int) 201356691;
  CONST long UIA_LegacyIAccessibleDefaultActionPropertyId = (int) 201356692;
  CONST long UIA_AriaRolePropertyId = (int) 201356693;
  CONST long UIA_AriaPropertiesPropertyId = (int) 201356694;
  CONST long UIA_IsDataValidForFormPropertyId = (int) 201356695;
  CONST long UIA_ControllerForPropertyId = (int) 201356696;
  CONST long UIA_DescribedByPropertyId = (int) 201356697;
  CONST long UIA_FlowsToPropertyId = (int) 201356698;
  CONST long UIA_ProviderDescriptionPropertyId = (int) 201356699;
  CONST long UIA_IsItemContainerPatternAvailablePropertyId = (int) 201356700;
  CONST long UIA_IsVirtualizedItemPatternAvailablePropertyId = (int) 201356701;
  CONST long UIA_IsSynchronizedInputPatternAvailablePropertyId = (int) 201356702;
};
module UIA_TextAttributeIds
{
  [id(1073741824)]
  CONST long UIA_AnimationStyleAttributeId = (int) 201366592;
  CONST long UIA_BackgroundColorAttributeId = (int) 201366593;
  CONST long UIA_BulletStyleAttributeId = (int) 201366594;
  CONST long UIA_CapStyleAttributeId = (int) 201366595;
  CONST long UIA_CultureAttributeId = (int) 201366596;
  CONST long UIA_FontNameAttributeId = (int) 201366597;
  CONST long UIA_FontSizeAttributeId = (int) 201366598;
  CONST long UIA_FontWeightAttributeId = (int) 201366599;
  CONST long UIA_ForegroundColorAttributeId = (int) 201366600;
  CONST long UIA_HorizontalTextAlignmentAttributeId = (int) 201366601;
  CONST long UIA_IndentationFirstLineAttributeId = (int) 201366602;
  CONST long UIA_IndentationLeadingAttributeId = (int) 201366603;
  CONST long UIA_IndentationTrailingAttributeId = (int) 201366604;
  CONST long UIA_IsHiddenAttributeId = (int) 201366605;
  CONST long UIA_IsItalicAttributeId = (int) 201366606;
  CONST long UIA_IsReadOnlyAttributeId = (int) 201366607;
  CONST long UIA_IsSubscriptAttributeId = (int) 201366608;
  CONST long UIA_IsSuperscriptAttributeId = (int) 201366609;
  CONST long UIA_MarginBottomAttributeId = (int) 201366610;
  CONST long UIA_MarginLeadingAttributeId = (int) 201366611;
  CONST long UIA_MarginTopAttributeId = (int) 201366612;
  CONST long UIA_MarginTrailingAttributeId = (int) 201366613;
  CONST long UIA_OutlineStylesAttributeId = (int) 201366614;
  CONST long UIA_OverlineColorAttributeId = (int) 201366615;
  CONST long UIA_OverlineStyleAttributeId = (int) 201366616;
  CONST long UIA_StrikethroughColorAttributeId = (int) 201366617;
  CONST long UIA_StrikethroughStyleAttributeId = (int) 201366618;
  CONST long UIA_TabsAttributeId = (int) 201366619;
  CONST long UIA_TextFlowDirectionsAttributeId = (int) 201366620;
  CONST long UIA_UnderlineColorAttributeId = (int) 201366621;
  CONST long UIA_UnderlineStyleAttributeId = (int) 201366622;
};
module UIA_ControlTypeIds
{
  [id(1073741824)]
  CONST long UIA_ButtonControlTypeId = (int) 201376592;
  CONST long UIA_CalendarControlTypeId = (int) 201376593;
  CONST long UIA_CheckBoxControlTypeId = (int) 201376594;
  CONST long UIA_ComboBoxControlTypeId = (int) 201376595;
  CONST long UIA_EditControlTypeId = (int) 201376596;
  CONST long UIA_HyperlinkControlTypeId = (int) 201376597;
  CONST long UIA_ImageControlTypeId = (int) 201376598;
  CONST long UIA_ListItemControlTypeId = (int) 201376599;
  CONST long UIA_ListControlTypeId = (int) 201376600;
  CONST long UIA_MenuControlTypeId = (int) 201376601;
  CONST long UIA_MenuBarControlTypeId = (int) 201376602;
  CONST long UIA_MenuItemControlTypeId = (int) 201376603;
  CONST long UIA_ProgressBarControlTypeId = (int) 201376604;
  CONST long UIA_RadioButtonControlTypeId = (int) 201376605;
  CONST long UIA_ScrollBarControlTypeId = (int) 201376606;
  CONST long UIA_SliderControlTypeId = (int) 201376607;
  CONST long UIA_SpinnerControlTypeId = (int) 201376608;
  CONST long UIA_StatusBarControlTypeId = (int) 201376609;
  CONST long UIA_TabControlTypeId = (int) 201376610;
  CONST long UIA_TabItemControlTypeId = (int) 201376611;
  CONST long UIA_TextControlTypeId = (int) 201376612;
  CONST long UIA_ToolBarControlTypeId = (int) 201376613;
  CONST long UIA_ToolTipControlTypeId = (int) 201376614;
  CONST long UIA_TreeControlTypeId = (int) 201376615;
  CONST long UIA_TreeItemControlTypeId = (int) 201376616;
  CONST long UIA_CustomControlTypeId = (int) 201376617;
  CONST long UIA_GroupControlTypeId = (int) 201376618;
  CONST long UIA_ThumbControlTypeId = (int) 201376619;
  CONST long UIA_DataGridControlTypeId = (int) 201376620;
  CONST long UIA_DataItemControlTypeId = (int) 201376621;
  CONST long UIA_DocumentControlTypeId = (int) 201376622;
  CONST long UIA_SplitButtonControlTypeId = (int) 201376623;
  CONST long UIA_WindowControlTypeId = (int) 201376624;
  CONST long UIA_PaneControlTypeId = (int) 201376625;
  CONST long UIA_HeaderControlTypeId = (int) 201376626;
  CONST long UIA_HeaderItemControlTypeId = (int) 201376627;
  CONST long UIA_TableControlTypeId = (int) 201376628;
  CONST long UIA_TitleBarControlTypeId = (int) 201376629;
  CONST long UIA_SeparatorControlTypeId = (int) 201376630;
};

