/* Automated generated idl file <mstime>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface IAnimationComposer;
interface IAnimationComposer2;
interface IAnimationComposerSiteSink;
interface IAnimationRoot;
interface IFilterAnimationInfo;
interface ITIMEFactory;
interface IAnimationComposerFactory;
interface ITIMEMediaPlayerSite;
interface ITIMEMediaPlayer;
interface ITIMEMediaPlayerAudio;
interface ITIMEMediaPlayerNetwork;
interface ITIMEMediaPlayerControl;

/* Union record forward declarations.  */
dispinterface ITIMEActiveElementCollection;
dispinterface ITIMEElement;
dispinterface ITIMEState;
dispinterface ITIMEElementCollection;
dispinterface ITIMEBodyElement;
dispinterface ITIMEMediaElement;
dispinterface ITIMEPlayList;
dispinterface ITIMEPlayItem;
dispinterface ITIMEMediaElement2;
dispinterface ITIMETransitionElement;
dispinterface ITIMEAnimationElement;
dispinterface ITIMEAnimationElement2;
dispinterface IAnimationComposerSite;
dispinterface IAnimationFragment;
dispinterface ITIMEPlayItem2;
dispinterface ITIMEDVDPlayerObject;
dispinterface ITIMEDMusicPlayerObject;
dispinterface IAnimationComposerSiteFactory;

/* Union record forward declarations.  */
coclass TIMEFactory;

/* Enumeration declarations.  */
enum _TimeState
{
  TS_Inactive = (int) 201326592,
  TS_Active = (int) 201326593,
  TS_Cueing = (int) 201326594,
  TS_Seeking = (int) 201326595,
  TS_Holding = (int) 201326596
};

[
  uuid(87C96271-ADDB-4745-B2E8-DF88A8472FD1),
  version(1.0)
]
library mstime
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(17237A20-3ADB-48EC-B182-35291F115790),
     cancreate
   ]
   coclass TIMEFactory
   {
     interface ITIMEFactory;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(403E2540-4520-11D3-93AB-00A0C967A438),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ITIMEActiveElementCollection : IDispatch
   {
     [id(1500), propget]
     HRESULT __stdcall length (
       [out retval] long *p
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _newEnum (
       [out retval] IUnknown **p
     );
     [id(0)]
     HRESULT __stdcall item (
       [in opt] VARIANT varIndex = (double) 0,
       [out retval] VARIANT *pvarResult
     );
   };
   [
     uuid(1C2EF64E-F07D-4338-9771-9154491CD8B9),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ITIMEElement : IDispatch
   {
     [id(257), propget]
     HRESULT __stdcall accelerate (
       [out retval] VARIANT *__MIDL__ITIMEElement0000
     );
     [id(257), propput]
     HRESULT __stdcall accelerate (
       [in] VARIANT argNo1
     );
     [id(259), propget]
     HRESULT __stdcall autoReverse (
       [out retval] VARIANT *__MIDL__ITIMEElement0002
     );
     [id(259), propput]
     HRESULT __stdcall autoReverse (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall begin (
       [out retval] VARIANT *time
     );
     [id(260), propput]
     HRESULT __stdcall begin (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall decelerate (
       [out retval] VARIANT *__MIDL__ITIMEElement0004
     );
     [id(261), propput]
     HRESULT __stdcall decelerate (
       [in] VARIANT argNo1
     );
     [id(263), propget]
     HRESULT __stdcall dur (
       [out retval] VARIANT *time
     );
     [id(263), propput]
     HRESULT __stdcall dur (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall end (
       [out retval] VARIANT *time
     );
     [id(264), propput]
     HRESULT __stdcall end (
       [in] VARIANT argNo1
     );
     [id(266), propget]
     HRESULT __stdcall fill (
       [out retval] BSTR *f
     );
     [id(266), propput]
     HRESULT __stdcall fill (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall mute (
       [out retval] VARIANT *b
     );
     [id(267), propput]
     HRESULT __stdcall mute (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall repeatCount (
       [out retval] VARIANT *c
     );
     [id(268), propput]
     HRESULT __stdcall repeatCount (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall repeatDur (
       [out retval] VARIANT *time
     );
     [id(269), propput]
     HRESULT __stdcall repeatDur (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall restart (
       [out retval] BSTR *__MIDL__ITIMEElement0006
     );
     [id(270), propput]
     HRESULT __stdcall restart (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall speed (
       [out retval] VARIANT *speed
     );
     [id(271), propput]
     HRESULT __stdcall speed (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall syncBehavior (
       [out retval] BSTR *sync
     );
     [id(272), propput]
     HRESULT __stdcall syncBehavior (
       [in] BSTR argNo1
     );
     [id(274), propget]
     HRESULT __stdcall syncTolerance (
       [out retval] VARIANT *tol
     );
     [id(274), propput]
     HRESULT __stdcall syncTolerance (
       [in] VARIANT argNo1
     );
     [id(273), propget]
     HRESULT __stdcall syncMaster (
       [out retval] VARIANT *b
     );
     [id(273), propput]
     HRESULT __stdcall syncMaster (
       [in] VARIANT argNo1
     );
     [id(275), propget]
     HRESULT __stdcall timeAction (
       [out retval] BSTR *time
     );
     [id(275), propput]
     HRESULT __stdcall timeAction (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall timeContainer (
       [out retval] BSTR *__MIDL__ITIMEElement0008
     );
     [id(278), propget]
     HRESULT __stdcall volume (
       [out retval] VARIANT *val
     );
     [id(278), propput]
     HRESULT __stdcall volume (
       [in] VARIANT argNo1
     );
     [id(288), propget]
     HRESULT __stdcall currTimeState (
       [out retval] dispinterface ITIMEState **timeState
     );
     [propget]
     HRESULT __stdcall timeAll (
       [out retval] dispinterface ITIMEElementCollection **allColl
     );
     [propget]
     HRESULT __stdcall timeChildren (
       [out retval] dispinterface ITIMEElementCollection **childColl
     );
     [propget]
     HRESULT __stdcall timeParent (
       [out retval] dispinterface ITIMEElement **parent
     );
     [propget]
     HRESULT __stdcall isPaused (
       [out retval] WINBOOL *b
     );
     [id(304)]
     HRESULT __stdcall beginElement (void);
     HRESULT __stdcall beginElementAt (
       [in] double parentTime
     );
     HRESULT __stdcall endElement (void);
     HRESULT __stdcall endElementAt (
       [in] double parentTime
     );
     HRESULT __stdcall pauseElement (void);
     HRESULT __stdcall resetElement (void);
     HRESULT __stdcall resumeElement (void);
     HRESULT __stdcall seekActiveTime (
       [in] double activeTime
     );
     HRESULT __stdcall seekSegmentTime (
       [in] double segmentTime
     );
     HRESULT __stdcall seekTo (
       [in] long repeatCount,
       [in] double segmentTime
     );
     [id(315)]
     HRESULT __stdcall documentTimeToParentTime (
       [in] double documentTime,
       [out retval] double *parentTime
     );
     HRESULT __stdcall parentTimeToDocumentTime (
       [in] double parentTime,
       [out retval] double *documentTime
     );
     HRESULT __stdcall parentTimeToActiveTime (
       [in] double parentTime,
       [out retval] double *activeTime
     );
     HRESULT __stdcall activeTimeToParentTime (
       [in] double activeTime,
       [out retval] double *parentTime
     );
     HRESULT __stdcall activeTimeToSegmentTime (
       [in] double activeTime,
       [out retval] double *segmentTime
     );
     HRESULT __stdcall segmentTimeToActiveTime (
       [in] double segmentTime,
       [out retval] double *activeTime
     );
     HRESULT __stdcall segmentTimeToSimpleTime (
       [in] double segmentTime,
       [out retval] double *simpleTime
     );
     HRESULT __stdcall simpleTimeToSegmentTime (
       [in] double simpleTime,
       [out retval] double *segmentTime
     );
     [id(336), propget]
     HRESULT __stdcall endSync (
       [out retval] BSTR *es
     );
     [id(336), propput]
     HRESULT __stdcall endSync (
       [in] BSTR argNo1
     );
     [id(352), propget]
     HRESULT __stdcall activeElements (
       [out retval] dispinterface ITIMEActiveElementCollection **activeColl
     );
     [propget]
     HRESULT __stdcall hasMedia (
       [out retval] WINBOOL *flag
     );
     [id(368)]
     HRESULT __stdcall nextElement (void);
     HRESULT __stdcall prevElement (void);
     [id(277), propget]
     HRESULT __stdcall updateMode (
       [out retval] BSTR *updateMode
     );
     [id(277), propput]
     HRESULT __stdcall updateMode (
       [in] BSTR argNo1
     );
   };
   [
     uuid(DD5EC62A-9D77-4573-80A8-758594E69CEA),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ITIMEState : IDispatch
   {
     [id(4097), propget]
     HRESULT __stdcall activeDur (
       [out retval] double *dur
     );
     [propget]
     HRESULT __stdcall activeTime (
       [out retval] double *time
     );
     [propget]
     HRESULT __stdcall isActive (
       [out retval] WINBOOL *active
     );
     [propget]
     HRESULT __stdcall isOn (
       [out retval] WINBOOL *on
     );
     [propget]
     HRESULT __stdcall isPaused (
       [out retval] WINBOOL *paused
     );
     [propget]
     HRESULT __stdcall isMuted (
       [out retval] WINBOOL *muted
     );
     [propget]
     HRESULT __stdcall parentTimeBegin (
       [out retval] double *time
     );
     [propget]
     HRESULT __stdcall parentTimeEnd (
       [out retval] double *time
     );
     [propget]
     HRESULT __stdcall progress (
       [out retval] double *progress
     );
     [propget]
     HRESULT __stdcall repeatCount (
       [out retval] long *count
     );
     [propget]
     HRESULT __stdcall segmentDur (
       [out retval] double *dur
     );
     [propget]
     HRESULT __stdcall segmentTime (
       [out retval] double *time
     );
     [propget]
     HRESULT __stdcall simpleDur (
       [out retval] double *dur
     );
     [propget]
     HRESULT __stdcall simpleTime (
       [out retval] double *time
     );
     [propget]
     HRESULT __stdcall speed (
       [out retval] float *speed
     );
     [propget]
     HRESULT __stdcall state (
       [out retval] enum _TimeState *timeState
     );
     [propget]
     HRESULT __stdcall stateString (
       [out retval] BSTR *state
     );
     [propget]
     HRESULT __stdcall volume (
       [out retval] float *vol
     );
   };
   [
     uuid(50ABC224-6D53-4F83-9135-2440A41B7BC8),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ITIMEElementCollection : IDispatch
   {
     [id(1537), propput]
     HRESULT __stdcall length (
       [in] long argNo1
     );
     [id(1537), propget]
     HRESULT __stdcall length (
       [out retval] long *p
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _newEnum (
       [out retval] IUnknown **ppIUnknown
     );
     [id(0)]
     HRESULT __stdcall item (
       [in opt] VARIANT varName,
       [in opt] VARIANT varIndex,
       [out retval] IDispatch **ppDisp
     );
     [id(1538)]
     HRESULT __stdcall tags (
       [in] VARIANT varName,
       [out retval] IDispatch **ppDisp
     );
   };
   [
     uuid(8C90E348-EC0A-4229-90B0-E57D2CA45CCB),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ITIMEBodyElement : ITIMEElement
   {
   };
   [
     uuid(47A6972F-AE65-4A6B-AE63-D0C1D5307B58),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ITIMEMediaElement : ITIMEElement
   {
     [id(1025), propget]
     HRESULT __stdcall clipBegin (
       [out retval] VARIANT *time
     );
     [id(1025), propput]
     HRESULT __stdcall clipBegin (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall clipEnd (
       [out retval] VARIANT *time
     );
     [id(1026), propput]
     HRESULT __stdcall clipEnd (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall player (
       [out retval] VARIANT *id
     );
     [id(1027), propput]
     HRESULT __stdcall player (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall src (
       [out retval] VARIANT *url
     );
     [id(1028), propput]
     HRESULT __stdcall src (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall type (
       [out retval] VARIANT *mimetype
     );
     [id(1029), propput]
     HRESULT __stdcall type (
       [in] VARIANT argNo1
     );
     [id(1040), propget]
     HRESULT __stdcall abstract (
       [out retval] BSTR *abs
     );
     [propget]
     HRESULT __stdcall author (
       [out retval] BSTR *auth
     );
     [propget]
     HRESULT __stdcall copyright (
       [out retval] BSTR *cpyrght
     );
     [propget]
     HRESULT __stdcall hasAudio (
       [out retval] WINBOOL *b
     );
     [propget]
     HRESULT __stdcall hasVisual (
       [out retval] WINBOOL *b
     );
     [id(1046), propget]
     HRESULT __stdcall mediaDur (
       [out retval] double *dur
     );
     [propget]
     HRESULT __stdcall mediaHeight (
       [out retval] long *height
     );
     [propget]
     HRESULT __stdcall mediaWidth (
       [out retval] long *width
     );
     [propget]
     HRESULT __stdcall playerObject (
       [out retval] IDispatch **ppDisp
     );
     [propget]
     HRESULT __stdcall playList (
       [out retval] dispinterface ITIMEPlayList **pPlayList
     );
     [propget]
     HRESULT __stdcall rating (
       [out retval] BSTR *rate
     );
     [propget]
     HRESULT __stdcall title (
       [out retval] BSTR *name
     );
     [propget]
     HRESULT __stdcall hasPlayList (
       [out retval] WINBOOL *b
     );
     [id(1072), propget]
     HRESULT __stdcall canPause (
       [out retval] WINBOOL *b
     );
     [id(1074), propget]
     HRESULT __stdcall canSeek (
       [out retval] WINBOOL *b
     );
   };
   [
     uuid(E9B75B62-DD97-4B19-8FD9-9646292952E0),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ITIMEPlayList : IDispatch
   {
     [id(2817), propput]
     HRESULT __stdcall activeTrack (
       [in] VARIANT argNo1
     );
     [id(2817), propget]
     HRESULT __stdcall activeTrack (
       [out retval] dispinterface ITIMEPlayItem **pPlayItem
     );
     [propget]
     HRESULT __stdcall dur (
       double *dur
     );
     [id(0)]
     HRESULT __stdcall item (
       [in opt] VARIANT varIndex = (double) 0,
       [out retval] dispinterface ITIMEPlayItem **pPlayItem
     );
     [id(1500), propget]
     HRESULT __stdcall length (
       [out retval] long *p
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _newEnum (
       [out retval] IUnknown **p
     );
     [id(2819)]
     HRESULT __stdcall nextTrack (void);
     HRESULT __stdcall prevTrack (void);
   };
   [
     uuid(2A6096D9-2CE0-47DC-A813-9099A2466309),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ITIMEPlayItem : IDispatch
   {
     [id(3073), propget]
     HRESULT __stdcall abstract (
       [out retval] BSTR *abs
     );
     [propget]
     HRESULT __stdcall author (
       [out retval] BSTR *auth
     );
     [propget]
     HRESULT __stdcall copyright (
       [out retval] BSTR *cpyrght
     );
     [propget]
     HRESULT __stdcall dur (
       [out retval] double *dur
     );
     [propget]
     HRESULT __stdcall index (
       [out retval] long *index
     );
     [propget]
     HRESULT __stdcall rating (
       [out retval] BSTR *rate
     );
     [propget]
     HRESULT __stdcall src (
       [out retval] BSTR *src
     );
     [propget]
     HRESULT __stdcall title (
       [out retval] BSTR *title
     );
     [id(3082)]
     HRESULT __stdcall setActive (void);
   };
   [
     uuid(9EE29400-7EE6-453A-85B3-4EC28E0305B4),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ITIMEMediaElement2 : ITIMEMediaElement
   {
     [id(5123), propget]
     HRESULT __stdcall earliestMediaTime (
       [out retval] VARIANT *earliestMediaTime
     );
     [propget]
     HRESULT __stdcall latestMediaTime (
       [out retval] VARIANT *latestMediaTime
     );
     [propget]
     HRESULT __stdcall minBufferedMediaDur (
       [out retval] VARIANT *minBufferedMediaDur
     );
     [id(5125), propput]
     HRESULT __stdcall minBufferedMediaDur (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall downloadTotal (
       [out retval] VARIANT *downloadTotal
     );
     [propget]
     HRESULT __stdcall downloadCurrent (
       [out retval] VARIANT *downloadCurrent
     );
     [propget]
     HRESULT __stdcall isStreamed (
       [out retval] WINBOOL *b
     );
     [propget]
     HRESULT __stdcall bufferingProgress (
       [out retval] VARIANT *bufferingProgress
     );
     [propget]
     HRESULT __stdcall hasDownloadProgress (
       [out retval] WINBOOL *b
     );
     [id(5135), propget]
     HRESULT __stdcall downloadProgress (
       [out retval] VARIANT *downloadProgress
     );
     [id(5131), propget]
     HRESULT __stdcall mimetype (
       [out retval] BSTR *mimetype
     );
     HRESULT __stdcall seekToFrame (
       [in] long frameNr
     );
     HRESULT __stdcall decodeMimeType (
       [in] USHORT *header,
       [in] long headerSize,
       [out] BSTR *mimetype
     );
     [propget]
     HRESULT __stdcall currentFrame (
       [out retval] long *currFrame
     );
   };
   [
     uuid(F383D66F-5E68-4FC2-B641-03672B543A49),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ITIMETransitionElement : IDispatch
   {
     [id(5377), propget]
     HRESULT __stdcall type (
       [out retval] VARIANT *type
     );
     [id(5377), propput]
     HRESULT __stdcall type (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall subType (
       [out retval] VARIANT *subType
     );
     [id(5378), propput]
     HRESULT __stdcall subType (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall dur (
       [out retval] VARIANT *dur
     );
     [id(5379), propput]
     HRESULT __stdcall dur (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall startProgress (
       [out retval] VARIANT *startProgress
     );
     [id(5380), propput]
     HRESULT __stdcall startProgress (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall endProgress (
       [out retval] VARIANT *endProgress
     );
     [id(5381), propput]
     HRESULT __stdcall endProgress (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall direction (
       [out retval] VARIANT *direction
     );
     [id(5382), propput]
     HRESULT __stdcall direction (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall repeatCount (
       [out retval] VARIANT *repeatCount
     );
     [id(5383), propput]
     HRESULT __stdcall repeatCount (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall begin (
       [out retval] VARIANT *begin
     );
     [id(5384), propput]
     HRESULT __stdcall begin (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall end (
       [out retval] VARIANT *end
     );
     [id(5385), propput]
     HRESULT __stdcall end (
       [in] VARIANT argNo1
     );
   };
   [
     uuid(A74F14B1-B6A2-430A-A5E8-1F4E53F710FE),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ITIMEAnimationElement : ITIMEElement
   {
     [id(769), propget]
     HRESULT __stdcall attributeName (
       [out retval] BSTR *attrib
     );
     [id(769), propput]
     HRESULT __stdcall attributeName (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall by (
       [out retval] VARIANT *val
     );
     [id(770), propput]
     HRESULT __stdcall by (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall calcMode (
       [out retval] BSTR *calcMode
     );
     [id(771), propput]
     HRESULT __stdcall calcMode (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall from (
       [out retval] VARIANT *val
     );
     [id(772), propput]
     HRESULT __stdcall from (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall keySplines (
       [out retval] BSTR *val
     );
     [id(773), propput]
     HRESULT __stdcall keySplines (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall keyTimes (
       [out retval] BSTR *val
     );
     [id(774), propput]
     HRESULT __stdcall keyTimes (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall targetElement (
       [out retval] BSTR *target
     );
     [id(775), propput]
     HRESULT __stdcall targetElement (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall to (
       [out retval] VARIANT *val
     );
     [id(776), propput]
     HRESULT __stdcall to (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall values (
       [out retval] VARIANT *val
     );
     [id(777), propput]
     HRESULT __stdcall values (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall origin (
       [out retval] BSTR *val
     );
     [id(778), propput]
     HRESULT __stdcall origin (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall path (
       [out retval] VARIANT *val
     );
     [id(779), propput]
     HRESULT __stdcall path (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall additive (
       [out retval] BSTR *val
     );
     [id(780), propput]
     HRESULT __stdcall additive (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall accumulate (
       [out retval] BSTR *val
     );
     [id(781), propput]
     HRESULT __stdcall accumulate (
       [in] BSTR argNo1
     );
   };
   [
     uuid(29CE8661-BD43-421A-B616-E9B31F33A572),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ITIMEAnimationElement2 : ITIMEAnimationElement
   {
     [id(782), propget]
     HRESULT __stdcall type (
       [out retval] BSTR *val
     );
     [id(782), propput]
     HRESULT __stdcall type (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall subType (
       [out retval] BSTR *val
     );
     [id(783), propput]
     HRESULT __stdcall subType (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall mode (
       [out retval] BSTR *val
     );
     [id(784), propput]
     HRESULT __stdcall mode (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall fadeColor (
       [out retval] BSTR *val
     );
     [id(785), propput]
     HRESULT __stdcall fadeColor (
       [in] BSTR argNo1
     );
   };
   [
     uuid(488FCB56-8FD6-4CDA-A06A-5BB232930ECA),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAnimationComposerSite : IDispatch
   {
     [id(3585)]
     HRESULT __stdcall AddFragment (
       BSTR attributeName,
       IDispatch * fragment
     );
     HRESULT __stdcall RemoveFragment (
       BSTR attributeName,
       IDispatch * fragment
     );
     HRESULT __stdcall InsertFragment (
       BSTR attributeName,
       IDispatch * fragment,
       VARIANT index
     );
     HRESULT __stdcall EnumerateFragments (
       BSTR attributeName,
       interface IEnumVARIANT **fragments
     );
     HRESULT __stdcall RegisterComposerFactory (
       VARIANT *factory
     );
     HRESULT __stdcall UnregisterComposerFactory (
       VARIANT *factory
     );
   };
   [
     uuid(319DFD88-0AC6-4AB1-A19F-90223BA2DA16),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAnimationFragment : IDispatch
   {
     [id(3841), propget]
     HRESULT __stdcall element (
       [out retval] IDispatch **htmlElement
     );
     HRESULT __stdcall get_value (
       [in] BSTR attributeName,
       [in] VARIANT origvalue,
       [in] VARIANT currentvalue,
       [out retval] VARIANT *newvalue
     );
     HRESULT __stdcall DetachFromComposer (void);
   };
   [
     uuid(4262CD38-6BDC-40A4-BC50-4CC50366E702),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ITIMEPlayItem2 : ITIMEPlayItem
   {
     [id(3088), propget]
     HRESULT __stdcall banner (
       [out retval] BSTR *banner
     );
     [propget]
     HRESULT __stdcall bannerAbstract (
       [out retval] BSTR *abstract
     );
     [propget]
     HRESULT __stdcall bannerMoreInfo (
       [out retval] BSTR *moreInfo
     );
   };
   [
     uuid(3AF7AB68-4F29-462C-AA6E-5872448899E3),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ITIMEDVDPlayerObject : IDispatch
   {
     [id(3329)]
     HRESULT __stdcall upperButtonSelect (void);
     HRESULT __stdcall lowerButtonSelect (void);
     HRESULT __stdcall leftButtonSelect (void);
     HRESULT __stdcall rightButtonSelect (void);
     HRESULT __stdcall buttonActivate (void);
     HRESULT __stdcall gotoMenu (void);
   };
   [
     uuid(407954F5-2BAB-4CFA-954D-249F9FCE43A1),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ITIMEDMusicPlayerObject : IDispatch
   {
     [id(4353), propget]
     HRESULT __stdcall isDirectMusicInstalled (
       [out retval] WINBOOL *hasDM
     );
   };
   [
     uuid(B4EA5681-ED72-4EFE-BBD7-7C47D1325696),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAnimationComposerSiteFactory : IDispatch
   {
   };

};

/* Interface declarations.  */
[
  uuid(5459C83D-322B-44B3-8DAA-24C947E7B275)
]
interface IAnimationComposer : IUnknown
{
  [id(1610678272), propget]
  HRESULT __stdcall attribute (
    [out retval] BSTR *attributeName
  );
  HRESULT __stdcall ComposerInit (
    IDispatch * composerSite,
    BSTR attributeName
  );
  HRESULT __stdcall ComposerDetach (void);
  HRESULT __stdcall UpdateFragments (void);
  HRESULT __stdcall AddFragment (
    IDispatch * newAnimationFragment
  );
  HRESULT __stdcall InsertFragment (
    IDispatch * newAnimationFragment,
    VARIANT index
  );
  HRESULT __stdcall RemoveFragment (
    IDispatch * oldAnimationFragment
  );
  HRESULT __stdcall EnumerateFragments (
    interface IEnumVARIANT **fragments
  );
  HRESULT __stdcall GetNumFragments (
    long *fragmentCount
  );
};
[
  uuid(1A4F0E79-09CD-47F3-AFF1-483BF3A222DC)
]
interface IAnimationComposer2 : IAnimationComposer
{
  [id(1610743808)]
  HRESULT __stdcall ComposerInitFromFragment (
    IDispatch * composerSite,
    BSTR attributeName,
    IDispatch * oneFragment
  );
};
[
  uuid(8EF76C64-71CD-480F-96FC-BA2696E659BE)
]
interface IAnimationComposerSiteSink : IUnknown
{
  [id(1610678272)]
  void __stdcall UpdateAnimations (void);
  void __stdcall ComposerSiteDetach (void);
};
[
  uuid(29DF6387-30B4-4A62-891B-A9C5BE37BE88)
]
interface IAnimationRoot : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RegisterComposerSite (
    IUnknown * composerSite
  );
  HRESULT __stdcall UnregisterComposerSite (
    IUnknown * composerSite
  );
};
[
  uuid(02E29300-C758-49B4-9E11-C58BFE90558B)
]
interface IFilterAnimationInfo : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetParameters (
    VARIANT *params
  );
};
[
  uuid(CD51E446-3006-434F-90E2-E37E8FB8CA8F),
  hidden
]
interface ITIMEFactory : IUnknown
{
};
[
  uuid(BEEB3233-F71F-4683-8B05-9A5314C97DBC)
]
interface IAnimationComposerFactory : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall FindComposer (
    [in] IDispatch * targetElement,
    [in] BSTR attributeName,
    [out retval] interface IAnimationComposer **animationComposer
  );
};
[
  uuid(BF0571ED-344F-4F58-82C7-7431ED0FD834)
]
interface ITIMEMediaPlayerSite : IUnknown
{
  [id(4609), propget]
  HRESULT __stdcall timeElement (
    [out retval] dispinterface ITIMEElement **pElm
  );
  [propget]
  HRESULT __stdcall timeState (
    [out retval] dispinterface ITIMEState **pState
  );
  HRESULT __stdcall reportError (
    [in] HRESULT hr,
    [in] BSTR errorString
  );
};
[
  uuid(EA4A95BE-ACC9-4BF0-85A4-1BF3C51E431C)
]
interface ITIMEMediaPlayer : IUnknown
{
  [id(2049)]
  HRESULT __stdcall Init (
    interface ITIMEMediaPlayerSite *mpsite
  );
  HRESULT __stdcall Detach (void);
  [id(2064)]
  HRESULT __stdcall begin (void);
  HRESULT __stdcall end (void);
  HRESULT __stdcall resume (void);
  HRESULT __stdcall pause (void);
  HRESULT __stdcall repeat (void);
  HRESULT __stdcall reset (void);
  HRESULT __stdcall seek (
    [in] double time
  );
  [id(2080), propput]
  HRESULT __stdcall src (
    [in] BSTR argNo1
  );
  [propput]
  HRESULT __stdcall clipBegin (
    [in] VARIANT argNo1
  );
  [propput]
  HRESULT __stdcall clipEnd (
    [in] VARIANT argNo1
  );
  [id(2096), propget]
  HRESULT __stdcall abstract (
    [out retval] BSTR *abs
  );
  [propget]
  HRESULT __stdcall author (
    [out retval] BSTR *auth
  );
  [propget]
  HRESULT __stdcall canPause (
    [out retval] WINBOOL *b
  );
  [id(2100), propget]
  HRESULT __stdcall canSeek (
    [out retval] WINBOOL *b
  );
  [propget]
  HRESULT __stdcall clipDur (
    [out retval] double *dur
  );
  [propget]
  HRESULT __stdcall copyright (
    [out retval] BSTR *cpyrght
  );
  [propget]
  HRESULT __stdcall currTime (
    [out retval] double *time
  );
  [propget]
  HRESULT __stdcall customObject (
    [out retval] IDispatch **disp
  );
  [propget]
  HRESULT __stdcall hasAudio (
    [out retval] WINBOOL *b
  );
  [propget]
  HRESULT __stdcall hasVisual (
    [out retval] WINBOOL *b
  );
  [propget]
  HRESULT __stdcall mediaDur (
    [out retval] double *dur
  );
  [propget]
  HRESULT __stdcall mediaHeight (
    [out retval] long *height
  );
  [propget]
  HRESULT __stdcall mediaWidth (
    [out retval] long *width
  );
  [propget]
  HRESULT __stdcall playList (
    [out retval] dispinterface ITIMEPlayList **pPlayList
  );
  [propget]
  HRESULT __stdcall rating (
    [out retval] BSTR *rate
  );
  [propget]
  HRESULT __stdcall state (
    [out retval] enum _TimeState *ts
  );
  [propget]
  HRESULT __stdcall title (
    [out retval] BSTR *name
  );
};
[
  uuid(FFAACFDA-B374-4F22-AC9A-C5BB9437CB56)
]
interface ITIMEMediaPlayerAudio : IUnknown
{
  [id(2305), propput]
  HRESULT __stdcall volume (
    [in] float argNo1
  );
  [propput]
  HRESULT __stdcall mute (
    [in] WINBOOL argNo1
  );
};
[
  uuid(B9987FCA-7FBB-4015-BD3D-7418605514DA)
]
interface ITIMEMediaPlayerNetwork : IUnknown
{
  [id(5633), propget]
  HRESULT __stdcall hasDownloadProgress (
    [out retval] WINBOOL *b
  );
  [propget]
  HRESULT __stdcall downloadProgress (
    [out retval] long *l
  );
  [propget]
  HRESULT __stdcall isBuffered (
    [out retval] WINBOOL *b
  );
  [propget]
  HRESULT __stdcall bufferingProgress (
    [out retval] long *l
  );
};
[
  uuid(897A99E7-F386-45C8-B51B-3A25BBCBBA69)
]
interface ITIMEMediaPlayerControl : IUnknown
{
  [id(4865)]
  HRESULT __stdcall getControl (
    IUnknown **control
  );
};

