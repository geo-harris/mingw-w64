/* Automated generated idl file <shdocvw>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Union record forward declarations.  */
dispinterface IWebBrowser;
dispinterface DWebBrowserEvents;
dispinterface IWebBrowserApp;
dispinterface IWebBrowser2;
dispinterface DWebBrowserEvents2;
dispinterface DShellWindowsEvents;
dispinterface IShellWindows;
dispinterface IShellUIHelper;
dispinterface IShellUIHelper2;
dispinterface IShellUIHelper3;
dispinterface DShellNameSpaceEvents;
dispinterface IShellFavoritesNameSpace;
dispinterface IShellNameSpace;
dispinterface IScriptErrorList;

/* Union record forward declarations.  */
coclass WebBrowser_V1;
coclass WebBrowser;
coclass InternetExplorer;
coclass InternetExplorerMedium;
coclass ShellBrowserWindow;
coclass ShellWindows;
coclass ShellUIHelper;
coclass ShellNameSpace;
coclass CScriptErrorList;

/* Enumeration declarations.  */
[
  uuid(34A226E0-DF30-11CF-89A9-00A0C9054129),
  helpstring("Constants for WebBrowser CommandStateChange")
]
enum CommandStateChangeConstants
{
  CSC_UPDATECOMMANDS = (int) -1,
  CSC_NAVIGATEFORWARD = (int) 201326593,
  CSC_NAVIGATEBACK = (int) 201326594
};
enum OLECMDID
{
  OLECMDID_OPEN = (int) 201326593,
  OLECMDID_NEW = (int) 201326594,
  OLECMDID_SAVE = (int) 201326595,
  OLECMDID_SAVEAS = (int) 201326596,
  OLECMDID_SAVECOPYAS = (int) 201326597,
  OLECMDID_PRINT = (int) 201326598,
  OLECMDID_PRINTPREVIEW = (int) 201326599,
  OLECMDID_PAGESETUP = (int) 201326600,
  OLECMDID_SPELL = (int) 201326601,
  OLECMDID_PROPERTIES = (int) 201326602,
  OLECMDID_CUT = (int) 201326603,
  OLECMDID_COPY = (int) 201326604,
  OLECMDID_PASTE = (int) 201326605,
  OLECMDID_PASTESPECIAL = (int) 201326606,
  OLECMDID_UNDO = (int) 201326607,
  OLECMDID_REDO = (int) 201326608,
  OLECMDID_SELECTALL = (int) 201326609,
  OLECMDID_CLEARSELECTION = (int) 201326610,
  OLECMDID_ZOOM = (int) 201326611,
  OLECMDID_GETZOOMRANGE = (int) 201326612,
  OLECMDID_UPDATECOMMANDS = (int) 201326613,
  OLECMDID_REFRESH = (int) 201326614,
  OLECMDID_STOP = (int) 201326615,
  OLECMDID_HIDETOOLBARS = (int) 201326616,
  OLECMDID_SETPROGRESSMAX = (int) 201326617,
  OLECMDID_SETPROGRESSPOS = (int) 201326618,
  OLECMDID_SETPROGRESSTEXT = (int) 201326619,
  OLECMDID_SETTITLE = (int) 201326620,
  OLECMDID_SETDOWNLOADSTATE = (int) 201326621,
  OLECMDID_STOPDOWNLOAD = (int) 201326622,
  OLECMDID_ONTOOLBARACTIVATED = (int) 201326623,
  OLECMDID_FIND = (int) 201326624,
  OLECMDID_DELETE = (int) 201326625,
  OLECMDID_HTTPEQUIV = (int) 201326626,
  OLECMDID_HTTPEQUIV_DONE = (int) 201326627,
  OLECMDID_ENABLE_INTERACTION = (int) 201326628,
  OLECMDID_ONUNLOAD = (int) 201326629,
  OLECMDID_PROPERTYBAG2 = (int) 201326630,
  OLECMDID_PREREFRESH = (int) 201326631,
  OLECMDID_SHOWSCRIPTERROR = (int) 201326632,
  OLECMDID_SHOWMESSAGE = (int) 201326633,
  OLECMDID_SHOWFIND = (int) 201326634,
  OLECMDID_SHOWPAGESETUP = (int) 201326635,
  OLECMDID_SHOWPRINT = (int) 201326636,
  OLECMDID_CLOSE = (int) 201326637,
  OLECMDID_ALLOWUILESSSAVEAS = (int) 201326638,
  OLECMDID_DONTDOWNLOADCSS = (int) 201326639,
  OLECMDID_UPDATEPAGESTATUS = (int) 201326640,
  OLECMDID_PRINT2 = (int) 201326641,
  OLECMDID_PRINTPREVIEW2 = (int) 201326642,
  OLECMDID_SETPRINTTEMPLATE = (int) 201326643,
  OLECMDID_GETPRINTTEMPLATE = (int) 201326644,
  OLECMDID_PAGEACTIONBLOCKED = (int) 201326647,
  OLECMDID_PAGEACTIONUIQUERY = (int) 201326648,
  OLECMDID_FOCUSVIEWCONTROLS = (int) 201326649,
  OLECMDID_FOCUSVIEWCONTROLSQUERY = (int) 201326650,
  OLECMDID_SHOWPAGEACTIONMENU = (int) 201326651,
  OLECMDID_ADDTRAVELENTRY = (int) 201326652,
  OLECMDID_UPDATETRAVELENTRY = (int) 201326653,
  OLECMDID_UPDATEBACKFORWARDSTATE = (int) 201326654,
  OLECMDID_OPTICAL_ZOOM = (int) 201326655,
  OLECMDID_OPTICAL_GETZOOMRANGE = (int) 201326656,
  OLECMDID_WINDOWSTATECHANGED = (int) 201326657,
  OLECMDID_ACTIVEXINSTALLSCOPE = (int) 201326658,
  OLECMDID_UPDATETRAVELENTRY_DATARECOVERY = (int) 201326659
};
enum OLECMDF
{
  OLECMDF_SUPPORTED = (int) 201326593,
  OLECMDF_ENABLED = (int) 201326594,
  OLECMDF_LATCHED = (int) 201326596,
  OLECMDF_NINCHED = (int) 201326600,
  OLECMDF_INVISIBLE = (int) 201326608,
  OLECMDF_DEFHIDEONCTXTMENU = (int) 201326624
};
enum OLECMDEXECOPT
{
  OLECMDEXECOPT_DODEFAULT = (int) 201326592,
  OLECMDEXECOPT_PROMPTUSER = (int) 201326593,
  OLECMDEXECOPT_DONTPROMPTUSER = (int) 201326594,
  OLECMDEXECOPT_SHOWHELP = (int) 201326595
};
enum tagREADYSTATE
{
  READYSTATE_UNINITIALIZED = (int) 201326592,
  READYSTATE_LOADING = (int) 201326593,
  READYSTATE_LOADED = (int) 201326594,
  READYSTATE_INTERACTIVE = (int) 201326595,
  READYSTATE_COMPLETE = (int) 201326596
};
[
  uuid(65507BE0-91A8-11D3-A845-009027220E6D),
  helpstring("Constants for WebBrowser security icon notification")
]
enum SecureLockIconConstants
{
  secureLockIconUnsecure = (int) 201326592,
  secureLockIconMixed = (int) 201326593,
  secureLockIconSecureUnknownBits = (int) 201326594,
  secureLockIconSecure40Bit = (int) 201326595,
  secureLockIconSecure56Bit = (int) 201326596,
  secureLockIconSecureFortezza = (int) 201326597,
  secureLockIconSecure128Bit = (int) 201326598
};
[
  uuid(A8317D46-03CB-4975-AE94-85E9F2E1D020),
  helpstring("Constants for WebBrowser NewProcess notification")
]
enum NewProcessCauseConstants
{
  ProtectedModeRedirect = (int) 201326593
};
[
  uuid(F41E6981-28E5-11D0-82B4-00A0C90C29C5),
  helpstring("Constants for ShellWindows registration")
]
enum ShellWindowTypeConstants
{
  SWC_EXPLORER = (int) 201326592,
  SWC_BROWSER = (int) 201326593,
  SWC_3RDPARTY = (int) 201326594,
  SWC_CALLBACK = (int) 201326596,
  SWC_DESKTOP = (int) 201326600
};
[
  uuid(7716A370-38CA-11D0-A48B-00A0C90A8F39),
  helpstring("Options for ShellWindows FindWindow"),
  hidden
]
enum ShellWindowFindWindowOptions
{
  SWFO_NEEDDISPATCH = (int) 201326593,
  SWFO_INCLUDEPENDING = (int) 201326594,
  SWFO_COOKIEPASSED = (int) 201326596
};

[
  uuid(EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B),
  version(1.1),
  helpstring("Microsoft Internet Controls")
]
library shdocvw
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(EAB22AC3-30C1-11CF-A7EB-0000C05BAE0B),
     helpstring("WebBrowser Control"),
     cancreate,
     control
   ]
   coclass WebBrowser_V1
   {
     dispinterface IWebBrowser2;
     dispinterface IWebBrowser;
     dispinterface DWebBrowserEvents2;
     dispinterface DWebBrowserEvents;
   };
   [
     uuid(8856F961-340A-11D0-A96B-00C04FD705A2),
     helpstring("WebBrowser Control"),
     cancreate,
     control
   ]
   coclass WebBrowser
   {
     dispinterface IWebBrowser2;
     dispinterface IWebBrowser;
     dispinterface DWebBrowserEvents2;
     dispinterface DWebBrowserEvents;
   };
   [
     uuid(0002DF01-0000-0000-C000-000000000046),
     helpstring("Internet Explorer Application."),
     cancreate
   ]
   coclass InternetExplorer
   {
     dispinterface IWebBrowser2;
     dispinterface IWebBrowserApp;
     dispinterface DWebBrowserEvents2;
     dispinterface DWebBrowserEvents;
   };
   [
     uuid(D5E8041D-920F-45E9-B8FB-B1DEB82C6E5E),
     helpstring("Internet Explorer Application with default integrity of Medium"),
     cancreate
   ]
   coclass InternetExplorerMedium
   {
     dispinterface IWebBrowser2;
     dispinterface IWebBrowserApp;
     dispinterface DWebBrowserEvents2;
     dispinterface DWebBrowserEvents;
   };
   [
     uuid(C08AFD90-F2A1-11D1-8455-00A0C91F3880),
     helpstring("Shell Browser Window."),
     hidden
   ]
   coclass ShellBrowserWindow
   {
     dispinterface IWebBrowser2;
     dispinterface IWebBrowserApp;
     dispinterface DWebBrowserEvents2;
     dispinterface DWebBrowserEvents;
   };
   [
     uuid(9BA05972-F6A8-11CF-A442-00A0C90A8F39),
     helpstring("ShellDispatch Load in Shell Context"),
     cancreate
   ]
   coclass ShellWindows
   {
     dispinterface IShellWindows;
     dispinterface DShellWindowsEvents;
   };
   [
     uuid(64AB4BB7-111E-11D1-8F79-00C04FC2FBE1),
     cancreate
   ]
   coclass ShellUIHelper
   {
     dispinterface IShellUIHelper3;
   };
   [
     uuid(55136805-B2DE-11D1-B9F2-00A0C98BC547),
     cancreate
   ]
   coclass ShellNameSpace
   {
     dispinterface IShellNameSpace;
     dispinterface DShellNameSpaceEvents;
   };
   [
     uuid(EFD01300-160F-11D2-BB2E-00805FF7EFCA),
     hidden
   ]
   coclass CScriptErrorList
   {
     dispinterface IScriptErrorList;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(EAB22AC1-30C1-11CF-A7EB-0000C05BAE0B),
     helpstring("Web Browser interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IWebBrowser : IDispatch
   {
     [id(100)]
     HRESULT __stdcall GoBack (void);
     HRESULT __stdcall GoForward (void);
     HRESULT __stdcall GoHome (void);
     HRESULT __stdcall GoSearch (void);
     HRESULT __stdcall Navigate (
       [in] BSTR URL,
       [in opt] VARIANT *Flags,
       [in opt] VARIANT *TargetFrameName,
       [in opt] VARIANT *PostData,
       [in opt] VARIANT *Headers
     );
     [id(-550)]
     HRESULT __stdcall Refresh (void);
     [id(105)]
     HRESULT __stdcall Refresh2 (
       [in opt] VARIANT *Level
     );
     HRESULT __stdcall Stop (void);
     [id(200), propget]
     HRESULT __stdcall Application (
       [out retval] IDispatch **ppDisp
     );
     [propget]
     HRESULT __stdcall Parent (
       [out retval] IDispatch **ppDisp
     );
     [propget]
     HRESULT __stdcall Container (
       [out retval] IDispatch **ppDisp
     );
     [propget]
     HRESULT __stdcall Document (
       [out retval] IDispatch **ppDisp
     );
     [propget]
     HRESULT __stdcall TopLevelContainer (
       [out retval] WINBOOL *pBool
     );
     [propget]
     HRESULT __stdcall Type (
       [out retval] BSTR *Type
     );
     [propget]
     HRESULT __stdcall Left (
       [out retval] long *pl
     );
     [id(206), propput]
     HRESULT __stdcall Left (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall Top (
       [out retval] long *pl
     );
     [id(207), propput]
     HRESULT __stdcall Top (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall Width (
       [out retval] long *pl
     );
     [id(208), propput]
     HRESULT __stdcall Width (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall Height (
       [out retval] long *pl
     );
     [id(209), propput]
     HRESULT __stdcall Height (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall LocationName (
       [out retval] BSTR *LocationName
     );
     [propget]
     HRESULT __stdcall LocationURL (
       [out retval] BSTR *LocationURL
     );
     [propget]
     HRESULT __stdcall Busy (
       [out retval] WINBOOL *pBool
     );
   };
   [
     uuid(EAB22AC2-30C1-11CF-A7EB-0000C05BAE0B),
     helpstring("Web Browser Control Events (old)"),
     hidden,
     dispatchable
   ]
   dispinterface DWebBrowserEvents
   {
     [id(100)]
     void __stdcall BeforeNavigate (
       [in] BSTR URL,
       long Flags,
       BSTR TargetFrameName,
       VARIANT *PostData,
       BSTR Headers,
       [in out] WINBOOL *Cancel
     );
     void __stdcall NavigateComplete (
       [in] BSTR URL
     );
     void __stdcall StatusTextChange (
       [in] BSTR Text
     );
     [id(108)]
     void __stdcall ProgressChange (
       [in] long Progress,
       [in] long ProgressMax
     );
     [id(104)]
     void __stdcall DownloadComplete (void);
     void __stdcall CommandStateChange (
       [in] long Command,
       [in] WINBOOL Enable
     );
     void __stdcall DownloadBegin (void);
     void __stdcall NewWindow (
       [in] BSTR URL,
       [in] long Flags,
       [in] BSTR TargetFrameName,
       [in] VARIANT *PostData,
       [in] BSTR Headers,
       [in out] WINBOOL *Processed
     );
     [id(113)]
     void __stdcall TitleChange (
       [in] BSTR Text
     );
     [id(200)]
     void __stdcall FrameBeforeNavigate (
       [in] BSTR URL,
       long Flags,
       BSTR TargetFrameName,
       VARIANT *PostData,
       BSTR Headers,
       [in out] WINBOOL *Cancel
     );
     void __stdcall FrameNavigateComplete (
       [in] BSTR URL
     );
     [id(204)]
     void __stdcall FrameNewWindow (
       [in] BSTR URL,
       [in] long Flags,
       [in] BSTR TargetFrameName,
       [in] VARIANT *PostData,
       [in] BSTR Headers,
       [in out] WINBOOL *Processed
     );
     [id(103)]
     void __stdcall Quit (
       [in out] WINBOOL *Cancel
     );
     [id(109)]
     void __stdcall WindowMove (void);
     void __stdcall WindowResize (void);
     void __stdcall WindowActivate (void);
     void __stdcall PropertyChange (
       [in] BSTR Property
     );
   };
   [
     uuid(0002DF05-0000-0000-C000-000000000046),
     helpstring("Web Browser Application Interface."),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IWebBrowserApp : IWebBrowser
   {
     [id(300)]
     HRESULT __stdcall Quit (void);
     HRESULT __stdcall ClientToWindow (
       [in out] int *pcx,
       [in out] int *pcy
     );
     HRESULT __stdcall PutProperty (
       [in] BSTR Property,
       [in] VARIANT vtValue
     );
     HRESULT __stdcall GetProperty (
       [in] BSTR Property,
       [out retval] VARIANT *pvtValue
     );
     [id(0), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *Name
     );
     [id(-515), propget]
     HRESULT __stdcall HWND (
       [out retval] LONGLONG *pHWND
     );
     [id(400), propget]
     HRESULT __stdcall FullName (
       [out retval] BSTR *FullName
     );
     [propget]
     HRESULT __stdcall Path (
       [out retval] BSTR *Path
     );
     [propget]
     HRESULT __stdcall Visible (
       [out retval] WINBOOL *pBool
     );
     [id(402), propput]
     HRESULT __stdcall Visible (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall StatusBar (
       [out retval] WINBOOL *pBool
     );
     [id(403), propput]
     HRESULT __stdcall StatusBar (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall StatusText (
       [out retval] BSTR *StatusText
     );
     [id(404), propput]
     HRESULT __stdcall StatusText (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall ToolBar (
       [out retval] int *Value
     );
     [id(405), propput]
     HRESULT __stdcall ToolBar (
       [in] int argNo1
     );
     [propget]
     HRESULT __stdcall MenuBar (
       [out retval] WINBOOL *Value
     );
     [id(406), propput]
     HRESULT __stdcall MenuBar (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall FullScreen (
       [out retval] WINBOOL *pbFullScreen
     );
     [id(407), propput]
     HRESULT __stdcall FullScreen (
       [in] WINBOOL argNo1
     );
   };
   [
     uuid(D30C1661-CDAF-11D0-8A3E-00C04FC9E26E),
     helpstring("Web Browser Interface for IE4."),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IWebBrowser2 : IWebBrowserApp
   {
     [id(500)]
     HRESULT __stdcall Navigate2 (
       [in] VARIANT *URL,
       [in opt] VARIANT *Flags,
       [in opt] VARIANT *TargetFrameName,
       [in opt] VARIANT *PostData,
       [in opt] VARIANT *Headers
     );
     HRESULT __stdcall QueryStatusWB (
       [in] enum OLECMDID cmdID,
       [out retval] enum OLECMDF *pcmdf
     );
     HRESULT __stdcall ExecWB (
       [in] enum OLECMDID cmdID,
       [in] enum OLECMDEXECOPT cmdexecopt,
       [in opt] VARIANT *pvaIn,
       [in out opt] VARIANT *pvaOut
     );
     HRESULT __stdcall ShowBrowserBar (
       [in] VARIANT *pvaClsid,
       [in opt] VARIANT *pvarShow,
       [in opt] VARIANT *pvarSize
     );
     [id(-525), propget, bindable]
     HRESULT __stdcall ReadyState (
       [out retval] enum tagREADYSTATE *plReadyState
     );
     [id(550), propget]
     HRESULT __stdcall Offline (
       [out retval] WINBOOL *pbOffline
     );
     [id(550), propput]
     HRESULT __stdcall Offline (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall Silent (
       [out retval] WINBOOL *pbSilent
     );
     [id(551), propput]
     HRESULT __stdcall Silent (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall RegisterAsBrowser (
       [out retval] WINBOOL *pbRegister
     );
     [id(552), propput]
     HRESULT __stdcall RegisterAsBrowser (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall RegisterAsDropTarget (
       [out retval] WINBOOL *pbRegister
     );
     [id(553), propput]
     HRESULT __stdcall RegisterAsDropTarget (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall TheaterMode (
       [out retval] WINBOOL *pbRegister
     );
     [id(554), propput]
     HRESULT __stdcall TheaterMode (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AddressBar (
       [out retval] WINBOOL *Value
     );
     [id(555), propput]
     HRESULT __stdcall AddressBar (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall Resizable (
       [out retval] WINBOOL *Value
     );
     [id(556), propput]
     HRESULT __stdcall Resizable (
       [in] WINBOOL argNo1
     );
   };
   [
     uuid(34A715A0-6587-11D0-924A-0020AFC7AC4D),
     helpstring("Web Browser Control events interface"),
     hidden,
     dispatchable
   ]
   dispinterface DWebBrowserEvents2
   {
     [id(102)]
     void __stdcall StatusTextChange (
       [in] BSTR Text
     );
     [id(108)]
     void __stdcall ProgressChange (
       [in] long Progress,
       [in] long ProgressMax
     );
     [id(105)]
     void __stdcall CommandStateChange (
       [in] long Command,
       [in] WINBOOL Enable
     );
     void __stdcall DownloadBegin (void);
     [id(104)]
     void __stdcall DownloadComplete (void);
     [id(113)]
     void __stdcall TitleChange (
       [in] BSTR Text
     );
     [id(112)]
     void __stdcall PropertyChange (
       [in] BSTR szProperty
     );
     [id(250)]
     void __stdcall BeforeNavigate2 (
       [in] IDispatch * pDisp,
       [in] VARIANT *URL,
       [in] VARIANT *Flags,
       [in] VARIANT *TargetFrameName,
       [in] VARIANT *PostData,
       [in] VARIANT *Headers,
       [in out] WINBOOL *Cancel
     );
     void __stdcall NewWindow2 (
       [in out] IDispatch **ppDisp,
       [in out] WINBOOL *Cancel
     );
     void __stdcall NavigateComplete2 (
       [in] IDispatch * pDisp,
       [in] VARIANT *URL
     );
     [id(259)]
     void __stdcall DocumentComplete (
       [in] IDispatch * pDisp,
       [in] VARIANT *URL
     );
     [id(253)]
     void __stdcall OnQuit (void);
     void __stdcall OnVisible (
       [in] WINBOOL Visible
     );
     void __stdcall OnToolBar (
       [in] WINBOOL ToolBar
     );
     void __stdcall OnMenuBar (
       [in] WINBOOL MenuBar
     );
     void __stdcall OnStatusBar (
       [in] WINBOOL StatusBar
     );
     void __stdcall OnFullScreen (
       [in] WINBOOL FullScreen
     );
     [id(260)]
     void __stdcall OnTheaterMode (
       [in] WINBOOL TheaterMode
     );
     [id(262)]
     void __stdcall WindowSetResizable (
       [in] WINBOOL Resizable
     );
     [id(264)]
     void __stdcall WindowSetLeft (
       [in] long Left
     );
     void __stdcall WindowSetTop (
       [in] long Top
     );
     void __stdcall WindowSetWidth (
       [in] long Width
     );
     void __stdcall WindowSetHeight (
       [in] long Height
     );
     [id(263)]
     void __stdcall WindowClosing (
       [in] WINBOOL IsChildWindow,
       [in out] WINBOOL *Cancel
     );
     [id(268)]
     void __stdcall ClientToHostWindow (
       [in out] long *CX,
       [in out] long *CY
     );
     void __stdcall SetSecureLockIcon (
       [in] long SecureLockIcon
     );
     void __stdcall FileDownload (
       [in] WINBOOL ActiveDocument,
       [in out] WINBOOL *Cancel
     );
     void __stdcall NavigateError (
       [in] IDispatch * pDisp,
       [in] VARIANT *URL,
       [in] VARIANT *Frame,
       [in] VARIANT *StatusCode,
       [in out] WINBOOL *Cancel
     );
     [id(225)]
     void __stdcall PrintTemplateInstantiation (
       [in] IDispatch * pDisp
     );
     void __stdcall PrintTemplateTeardown (
       [in] IDispatch * pDisp
     );
     void __stdcall UpdatePageStatus (
       [in] IDispatch * pDisp,
       [in] VARIANT *nPage,
       [in] VARIANT *fDone
     );
     [id(272)]
     void __stdcall PrivacyImpactedStateChange (
       [in] WINBOOL bImpacted
     );
     void __stdcall NewWindow3 (
       [in out] IDispatch **ppDisp,
       [in out] WINBOOL *Cancel,
       [in] UINT dwFlags,
       [in] BSTR bstrUrlContext,
       [in] BSTR bstrUrl
     );
     [id(282)]
     void __stdcall SetPhishingFilterStatus (
       [in] long PhishingFilterStatus
     );
     void __stdcall WindowStateChanged (
       [in] UINT dwWindowStateFlags,
       [in] UINT dwValidFlagsMask
     );
     void __stdcall NewProcess (
       [in] long lCauseFlag,
       [in] IDispatch * pWB2,
       [in out] WINBOOL *Cancel
     );
     void __stdcall ThirdPartyUrlBlocked (
       [in] VARIANT *URL,
       [in] UINT dwCount
     );
     void __stdcall RedirectXDomainBlocked (
       [in] IDispatch * pDisp,
       [in] VARIANT *StartURL,
       [in] VARIANT *RedirectURL,
       [in] VARIANT *Frame,
       [in] VARIANT *StatusCode
     );
   };
   [
     uuid(FE4106E0-399A-11D0-A48C-00A0C90A8F39),
     helpstring("Event interface for IShellWindows"),
     dispatchable
   ]
   dispinterface DShellWindowsEvents
   {
     [id(200)]
     void __stdcall WindowRegistered (
       [in] long lCookie
     );
     void __stdcall WindowRevoked (
       [in] long lCookie
     );
   };
   [
     uuid(85CB6900-4D95-11CF-960C-0080C7F4EE85),
     helpstring("Definition of interface IShellWindows"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IShellWindows : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Count (
       [out retval] long *Count
     );
     [id(0)]
     HRESULT __stdcall Item (
       [in opt] VARIANT index,
       [out retval] IDispatch **Folder
     );
     [id(-4)]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppunk
     );
     [id(1610743811), hidden]
     HRESULT __stdcall Register (
       [in] IDispatch * pid,
       [in] long HWND,
       [in] int swClass,
       [out] long *plCookie
     );
     [hidden]
     HRESULT __stdcall RegisterPending (
       [in] long lThreadId,
       [in] VARIANT *pvarloc,
       [in] VARIANT *pvarlocRoot,
       [in] int swClass,
       [out] long *plCookie
     );
     [hidden]
     HRESULT __stdcall Revoke (
       [in] long lCookie
     );
     [hidden]
     HRESULT __stdcall OnNavigate (
       [in] long lCookie,
       [in] VARIANT *pvarloc
     );
     [hidden]
     HRESULT __stdcall OnActivated (
       [in] long lCookie,
       [in] WINBOOL fActive
     );
     [hidden]
     HRESULT __stdcall FindWindowSW (
       [in] VARIANT *pvarloc,
       [in] VARIANT *pvarlocRoot,
       [in] int swClass,
       [out] long *pHWND,
       [in] int swfwOptions,
       [out retval] IDispatch **ppdispOut
     );
     [hidden]
     HRESULT __stdcall OnCreated (
       [in] long lCookie,
       [in] IUnknown * punk
     );
     [hidden]
     HRESULT __stdcall ProcessAttachDetach (
       [in] WINBOOL fAttach
     );
   };
   [
     uuid(729FE2F8-1EA8-11D1-8F85-00C04FC2FBE1),
     helpstring("Shell UI Helper Control Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IShellUIHelper : IDispatch
   {
     [id(1), hidden]
     HRESULT __stdcall ResetFirstBootMode (void);
     [hidden]
     HRESULT __stdcall ResetSafeMode (void);
     [hidden]
     HRESULT __stdcall RefreshOfflineDesktop (void);
     HRESULT __stdcall AddFavorite (
       [in] BSTR URL,
       [in opt] VARIANT *Title
     );
     HRESULT __stdcall AddChannel (
       [in] BSTR URL
     );
     HRESULT __stdcall AddDesktopComponent (
       [in] BSTR URL,
       [in] BSTR Type,
       [in opt] VARIANT *Left,
       [in opt] VARIANT *Top,
       [in opt] VARIANT *Width,
       [in opt] VARIANT *Height
     );
     HRESULT __stdcall IsSubscribed (
       [in] BSTR URL,
       [out retval] WINBOOL *pBool
     );
     HRESULT __stdcall NavigateAndFind (
       [in] BSTR URL,
       [in] BSTR strQuery,
       [in] VARIANT *varTargetFrame
     );
     HRESULT __stdcall ImportExportFavorites (
       [in] WINBOOL fImport,
       [in] BSTR strImpExpPath
     );
     HRESULT __stdcall AutoCompleteSaveForm (
       [in opt] VARIANT *Form
     );
     HRESULT __stdcall AutoScan (
       [in] BSTR strSearch,
       [in] BSTR strFailureUrl,
       [in opt] VARIANT *pvarTargetFrame
     );
     [hidden]
     HRESULT __stdcall AutoCompleteAttach (
       [in opt] VARIANT *Reserved
     );
     HRESULT __stdcall ShowBrowserUI (
       [in] BSTR bstrName,
       [in] VARIANT *pvarIn,
       [out retval] VARIANT *pvarOut
     );
   };
   [
     uuid(A7FE6EDA-1932-4281-B881-87B31B8BC52C),
     helpstring("Shell UI Helper Control Interface 2"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IShellUIHelper2 : IShellUIHelper
   {
     [id(14)]
     HRESULT __stdcall AddSearchProvider (
       [in] BSTR URL
     );
     HRESULT __stdcall RunOnceShown (void);
     HRESULT __stdcall SkipRunOnce (void);
     HRESULT __stdcall CustomizeSettings (
       [in] WINBOOL fSQM,
       [in] WINBOOL fPhishing,
       [in] BSTR bstrLocale
     );
     HRESULT __stdcall SqmEnabled (
       [out retval] WINBOOL *pfEnabled
     );
     HRESULT __stdcall PhishingEnabled (
       [out retval] WINBOOL *pfEnabled
     );
     HRESULT __stdcall BrandImageUri (
       [out retval] BSTR *pbstrUri
     );
     HRESULT __stdcall SkipTabsWelcome (void);
     HRESULT __stdcall DiagnoseConnection (void);
     HRESULT __stdcall CustomizeClearType (
       [in] WINBOOL fSet
     );
     HRESULT __stdcall IsSearchProviderInstalled (
       [in] BSTR URL,
       [out retval] UINT *pdwResult
     );
     HRESULT __stdcall IsSearchMigrated (
       [out retval] WINBOOL *pfMigrated
     );
     HRESULT __stdcall DefaultSearchProvider (
       [out retval] BSTR *pbstrName
     );
     HRESULT __stdcall RunOnceRequiredSettingsComplete (
       [in] WINBOOL fComplete
     );
     HRESULT __stdcall RunOnceHasShown (
       [out retval] WINBOOL *pfShown
     );
     HRESULT __stdcall SearchGuideUrl (
       [out retval] BSTR *pbstrUrl
     );
   };
   [
     uuid(528DF2EC-D419-40BC-9B6D-DCDBF9C1B25D),
     helpstring("Shell UI Helper Control Interface 3"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IShellUIHelper3 : IShellUIHelper2
   {
     [id(30)]
     HRESULT __stdcall AddService (
       [in] BSTR URL
     );
     HRESULT __stdcall IsServiceInstalled (
       [in] BSTR URL,
       [in] BSTR Verb,
       [out retval] UINT *pdwResult
     );
     [id(37)]
     HRESULT __stdcall InPrivateFilteringEnabled (
       [out retval] WINBOOL *pfEnabled
     );
     [id(32)]
     HRESULT __stdcall AddToFavoritesBar (
       [in] BSTR URL,
       [in] BSTR Title,
       [in opt] VARIANT *Type
     );
     HRESULT __stdcall BuildNewTabPage (void);
     HRESULT __stdcall SetRecentlyClosedVisible (
       [in] WINBOOL fVisible
     );
     HRESULT __stdcall SetActivitiesVisible (
       [in] WINBOOL fVisible
     );
     HRESULT __stdcall ContentDiscoveryReset (void);
     [id(38)]
     HRESULT __stdcall IsSuggestedSitesEnabled (
       [out retval] WINBOOL *pfEnabled
     );
     HRESULT __stdcall EnableSuggestedSites (
       [in] WINBOOL fEnable
     );
     HRESULT __stdcall NavigateToSuggestedSites (
       [in] BSTR bstrRelativeUrl
     );
     HRESULT __stdcall ShowTabsHelp (void);
     HRESULT __stdcall ShowInPrivateHelp (void);
   };
   [
     uuid(55136806-B2DE-11D1-B9F2-00A0C98BC547),
     dispatchable
   ]
   dispinterface DShellNameSpaceEvents
   {
     [id(1)]
     void __stdcall FavoritesSelectionChange (
       [in] long cItems,
       [in] long hItem,
       [in] BSTR strName,
       [in] BSTR strUrl,
       [in] long cVisits,
       [in] BSTR strDate,
       [in] long fAvailableOffline
     );
     void __stdcall SelectionChange (void);
     void __stdcall DoubleClick (void);
     void __stdcall Initialized (void);
   };
   [
     uuid(55136804-B2DE-11D1-B9F2-00A0C98BC547),
     helpstring("IShellFavoritesNameSpace Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IShellFavoritesNameSpace : IDispatch
   {
     [id(1)]
     HRESULT __stdcall MoveSelectionUp (void);
     HRESULT __stdcall MoveSelectionDown (void);
     HRESULT __stdcall ResetSort (void);
     HRESULT __stdcall NewFolder (void);
     HRESULT __stdcall Synchronize (void);
     HRESULT __stdcall Import (void);
     HRESULT __stdcall Export (void);
     HRESULT __stdcall InvokeContextMenuCommand (
       [in] BSTR strCommand
     );
     HRESULT __stdcall MoveSelectionTo (void);
     [propget]
     HRESULT __stdcall SubscriptionsEnabled (
       [out retval] WINBOOL *pBool
     );
     HRESULT __stdcall CreateSubscriptionForSelection (
       [out retval] WINBOOL *pBool
     );
     HRESULT __stdcall DeleteSubscriptionForSelection (
       [out retval] WINBOOL *pBool
     );
     HRESULT __stdcall SetRoot (
       [in] BSTR bstrFullPath
     );
   };
   [
     uuid(E572D3C9-37BE-4AE2-825D-D521763E3108),
     helpstring("IShellNameSpace Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IShellNameSpace : IShellFavoritesNameSpace
   {
     [id(14), propget]
     HRESULT __stdcall EnumOptions (
       [out retval] long *pgrfEnumFlags
     );
     [id(14), propput]
     HRESULT __stdcall EnumOptions (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall SelectedItem (
       [out retval] IDispatch **pItem
     );
     [id(15), propput]
     HRESULT __stdcall SelectedItem (
       [in] IDispatch * argNo1
     );
     [propget]
     HRESULT __stdcall Root (
       [out retval] VARIANT *pvar
     );
     [id(16), propput]
     HRESULT __stdcall Root (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall Depth (
       [out retval] int *piDepth
     );
     [id(17), propput]
     HRESULT __stdcall Depth (
       [in] int argNo1
     );
     [propget]
     HRESULT __stdcall Mode (
       [out retval] unsigned int *puMode
     );
     [id(18), propput]
     HRESULT __stdcall Mode (
       [in] unsigned int argNo1
     );
     [propget]
     HRESULT __stdcall Flags (
       [out retval] UINT *pdwFlags
     );
     [id(19), propput]
     HRESULT __stdcall Flags (
       [in] UINT argNo1
     );
     [propput]
     HRESULT __stdcall TVFlags (
       [in] UINT argNo1
     );
     [id(20), propget]
     HRESULT __stdcall TVFlags (
       [out retval] UINT *dwFlags
     );
     [propget]
     HRESULT __stdcall Columns (
       [out retval] BSTR *bstrColumns
     );
     [id(21), propput]
     HRESULT __stdcall Columns (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall CountViewTypes (
       [out retval] int *piTypes
     );
     HRESULT __stdcall SetViewType (
       [in] int iType
     );
     HRESULT __stdcall SelectedItems (
       [out retval] IDispatch **ppid
     );
     HRESULT __stdcall Expand (
       [in] VARIANT var,
       int iDepth
     );
     HRESULT __stdcall UnselectAll (void);
   };
   [
     uuid(F3470F24-15FD-11D2-BB2E-00805FF7EFCA),
     helpstring("Script Error List Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IScriptErrorList : IDispatch
   {
     [id(10)]
     HRESULT __stdcall advanceError (void);
     HRESULT __stdcall retreatError (void);
     HRESULT __stdcall canAdvanceError (
       [out retval] long *pfCanAdvance
     );
     HRESULT __stdcall canRetreatError (
       [out retval] long *pfCanRetreat
     );
     HRESULT __stdcall getErrorLine (
       [out retval] long *plLine
     );
     HRESULT __stdcall getErrorChar (
       [out retval] long *plChar
     );
     HRESULT __stdcall getErrorCode (
       [out retval] long *plCode
     );
     HRESULT __stdcall getErrorMsg (
       [out retval] BSTR *pstr
     );
     HRESULT __stdcall getErrorUrl (
       [out retval] BSTR *pstr
     );
     [id(23)]
     HRESULT __stdcall getAlwaysShowLockState (
       [out retval] long *pfAlwaysShowLocked
     );
     [id(19)]
     HRESULT __stdcall getDetailsPaneOpen (
       [out retval] long *pfDetailsPaneOpen
     );
     HRESULT __stdcall setDetailsPaneOpen (
       long fDetailsPaneOpen
     );
     HRESULT __stdcall getPerErrorDisplay (
       [out retval] long *pfPerErrorDisplay
     );
     HRESULT __stdcall setPerErrorDisplay (
       long fPerErrorDisplay
     );
   };

};

