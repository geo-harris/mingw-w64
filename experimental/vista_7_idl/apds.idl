/* Automated generated idl file <mshelpservices>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface IStream;
interface ISequentialStream;

/* Structure forward declarations.  */
struct _LARGE_INTEGER;
struct _ULARGE_INTEGER;
struct tagSTATSTG;
struct _FILETIME;

/* Union record forward declarations.  */
dispinterface IHxIndex;
dispinterface IHxDataSource;
dispinterface IHxContent;
dispinterface IHxResultSet;
dispinterface IHxTopicList;
dispinterface IHxTopic;
dispinterface IHxAttributeList;
dispinterface IHxAttribute;
dispinterface IHxAssetList;
dispinterface IHxAsset;
dispinterface IHxBehaviorLoader;
dispinterface IHxSession;
dispinterface IHxQuery;
dispinterface IHxCollection;
dispinterface IHxLogger;
dispinterface IHxHelpBehavior;
dispinterface IHxReusableText;
dispinterface IHxAdaptableText;
dispinterface IHxPopup;
dispinterface IHxExpandCollapse;
dispinterface IHxHelpUtil;
dispinterface IHxContentTransformEngine;
dispinterface IHxInitialize;
dispinterface IHxInitializeEx;
dispinterface IHxCancel;
dispinterface IHxSessionEvents;
dispinterface IHxRegisterSessionEvents;

/* Union record forward declarations.  */
coclass HxSession;
coclass HxContentTransformEngine;

/* Enumeration declarations.  */
[
  uuid(8CEC5955-07A1-11D9-B15E-000D56BFE6EE),
  version(1.0)
]
enum HxDataServicesMode
{
  HxBWCMode = (int) 201326593,
  HxBWCUseCacheMode = (int) 201326594,
  HxOfflineMode = (int) 201326595
};
[
  uuid(8CEC58E4-07A1-11D9-B15E-000D56BFE6EE),
  version(1.0)
]
enum HxAssetType
{
  HxAsset_Unknown = (int) 201326592,
  HxAsset_Category = (int) 201326593,
  HxAsset_NormalTopic = (int) 201326594,
  HxAsset_LargeTopic = (int) 201326595
};
[
  uuid(8CEC591D-07A1-11D9-B15E-000D56BFE6EE),
  version(1.0)
]
enum HxTopicGetTitleType
{
  HxTopicGetTOCTitle = (int) 201326592,
  HxTopicGetRLTitle = (int) 201326593,
  HxTopicGetHTMTitle = (int) 201326594
};
[
  uuid(8CEC5934-07A1-11D9-B15E-000D56BFE6EE),
  version(1.0)
]
enum HxTopicGetTitleDefVal
{
  HxTopicGetTitleFullURL = (int) 201326592,
  HxTopicGetTitleFileName = (int) 201326593,
  HxTopicGetTitleNoDefault = (int) 201326594
};
[
  uuid(8CEC5905-07A1-11D9-B15E-000D56BFE6EE),
  version(1.0)
]
enum HxQueryPropId
{
  HxPropIdQueryFirst = (int) 201326592
};
[
  uuid(8CEC586F-07A1-11D9-B15E-000D56BFE6EE),
  version(1.0)
]
enum HxTopicPropId
{
  HxTopicPropIdFirst = (int) 201326592
};
[
  uuid(8CEC582F-07A1-11D9-B15E-000D56BFE6EE),
  version(1.0)
]
enum HxQuery_Options
{
  HxQuery_No_Option = (int) 201326592,
  HxQuery_FullTextSearch_Title_Only = (int) 201326593,
  HxQuery_FullTextSearch_Enable_Stemming = (int) 201326594,
  HxQuery_FullTextSearch_SearchPrevious = (int) 201326596,
  HxQuery_KeywordSearch_CaseSensitive = (int) 201326608,
  HxQuery_FullTextSearch_Wildcard_Preserve = (int) 201326720,
  HxQuery_FullTextSearch_ReturnRanking = (int) 201326848
};
[
  uuid(8CEC58D3-07A1-11D9-B15E-000D56BFE6EE),
  version(1.0)
]
enum HxCollectionPropId
{
  HxCollectionProp_NamespaceName = (int) 201326593,
  HxCollectionProp_Font = (int) 201326594,
  HxCollectionProp_FontSize = (int) 201326595,
  HxCollectionProp_LangId = (int) 201326596,
  HxCollectionProp_CharSet = (int) 201326597,
  HxCollectionProp_Id = (int) 201326598,
  HxCollectionProp_FileVer = (int) 201326599,
  HxCollectionProp_CopyRight = (int) 201326600
};
[
  uuid(8CEC5957-07A1-11D9-B15E-000D56BFE6EE),
  version(1.0)
]
enum HxMergeIndexOptions
{
  HxMergeIndexOptions_Keyword = (int) 201326593,
  HxMergeIndexOptions_TOC = (int) 201326594,
  HxMergeIndexOptions_FullTextIndex = (int) 201326596
};
[
  uuid(8CEC5861-07A1-11D9-B15E-000D56BFE6EE),
  version(1.0)
]
enum HxCancelStatus
{
  HxCancelStatus_Continue = (int) 201326592,
  HxCancelStatus_Cancel = (int) 201326593
};

/* Structure/union declarations.  */
struct _LARGE_INTEGER
{
  LONGLONG QuadPart;
};
struct _ULARGE_INTEGER
{
  ULONGLONG QuadPart;
};
struct tagSTATSTG
{
  LPWSTR pwcsName;
  UINT type;
  struct _ULARGE_INTEGER cbSize;
  struct _FILETIME mtime;
  struct _FILETIME ctime;
  struct _FILETIME atime;
  UINT grfMode;
  UINT grfLocksSupported;
  struct GUID clsid;
  UINT grfStateBits;
  UINT reserved;
};
struct _FILETIME
{
  UINT dwLowDateTime;
  UINT dwHighDateTime;
};

[
  uuid(8CEC5899-07A1-11D9-B15E-000D56BFE6EE),
  version(1.0),
  helpstring("Assistance Platform Client 1.0 Data Services Type Library")
]
library mshelpservices
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(8CEC58B4-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("HxSession Class"),
     cancreate
   ]
   coclass HxSession
   {
     dispinterface IHxSession;
     dispinterface IHxSessionEvents;
   };
   [
     uuid(8CEC5833-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("HxContentTransformEngine Class"),
     cancreate
   ]
   coclass HxContentTransformEngine
   {
     dispinterface IHxContentTransformEngine;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(8CEC585C-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxIndex Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxIndex : IDispatch
   {
   };
   [
     uuid(8CEC592C-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxDataSource Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxDataSource : IDispatch
   {
     [id(77824)]
     HRESULT __stdcall GetContent (
       [in] BSTR url,
       [in] enum HxDataServicesMode mode,
       [out retval] dispinterface IHxContent **ppContent
     );
     HRESULT __stdcall OBSOLETE (void);
     HRESULT __stdcall DoSearch (
       [in] BSTR query,
       [in] long numberOfResultsPerPage,
       [out retval] dispinterface IHxResultSet **ppResultSet
     );
     HRESULT __stdcall GetTOCData (
       [in] BSTR namespaceName,
       [in] BSTR nodeID,
       [out] dispinterface IHxAssetList **ppChildren,
       [out] dispinterface IHxAssetList **ppPrimaryAncestors
     );
   };
   [
     uuid(8CEC5893-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxContent Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxContent : IDispatch
   {
     [id(80128)]
     HRESULT __stdcall GetURL (
       [out retval] BSTR *pbstrContentUrl
     );
     HRESULT __stdcall SetURL (
       [in] BSTR contentUrl
     );
     [id(80145)]
     HRESULT __stdcall GetCSS (
       [out retval] BSTR *pbstrContentCSS
     );
     HRESULT __stdcall SetCSS (
       [in] BSTR contentCSS
     );
     [id(80130)]
     HRESULT __stdcall GetContentStream (
       [out retval] interface IStream **ppContentStream
     );
     HRESULT __stdcall SetContentStream (
       [in] interface IStream *pContentStream
     );
     HRESULT __stdcall GetSize (
       [out retval] long *pSize
     );
     HRESULT __stdcall GetMimeType (
       [out retval] BSTR *pbstrMimeType
     );
     HRESULT __stdcall SetMimeType (
       [in] BSTR mimeType
     );
     HRESULT __stdcall IsOnline (
       [out retval] WINBOOL *pIsOnline
     );
     HRESULT __stdcall SetOnline (
       [in] WINBOOL IsOnline
     );
     HRESULT __stdcall IsTrusted (
       [out retval] WINBOOL *pIsTrusted
     );
     HRESULT __stdcall SetTrusted (
       [in] WINBOOL IsTrusted
     );
     [id(80147)]
     HRESULT __stdcall ShowRatingsAndFeedback (
       [out retval] WINBOOL *pShowRatingsAndFeedback
     );
     HRESULT __stdcall SetShowRatingsAndFeedback (
       [in] WINBOOL ShowRatingsAndFeedback
     );
     [id(80139)]
     HRESULT __stdcall ResolveResourceToRuntimeURL (
       [in] BSTR resourceUrl,
       [out retval] BSTR *pbstrRuntimeUrl
     );
     HRESULT __stdcall GetTopicType (
       [out retval] enum HxAssetType *pTopicType
     );
     HRESULT __stdcall SetTopicType (
       [in] enum HxAssetType TopicType
     );
     HRESULT __stdcall GetServer (
       [out retval] BSTR *pbstrServer
     );
     HRESULT __stdcall SetServer (
       [in] BSTR server
     );
   };
   [
     uuid(8CEC5926-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxResultSet Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxResultSet : IDispatch
   {
     [id(78085)]
     HRESULT __stdcall GetPage (
       [in] UINT pageNumber,
       [out retval] dispinterface IHxTopicList **ppTopicList
     );
     [id(78080)]
     HRESULT __stdcall GetNextPage (
       [out retval] dispinterface IHxTopicList **ppTopicList
     );
     HRESULT __stdcall GetNumberOfResults (
       [out retval] long *pNumberOfResults
     );
     HRESULT __stdcall GetNumberOfPages (
       [out retval] long *pNumberOfPages
     );
     HRESULT __stdcall GetNumberOfResultsPerPage (
       [out retval] long *pNumberOfResultsPerPage
     );
     HRESULT __stdcall GetCurrentPageIndex (
       [out retval] long *pCurrentPageIndex
     );
   };
   [
     uuid(8CEC590F-07A1-11D9-B15E-000D56BFE6EE),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxTopicList : IDispatch
   {
     [id(67584)]
     HRESULT __stdcall ItemAt (
       [in] long index,
       [out retval] dispinterface IHxTopic **pIHxTopic
     );
     [id(67586), propget]
     HRESULT __stdcall Count (
       [out retval] long *pReturn
     );
   };
   [
     uuid(8CEC5903-07A1-11D9-B15E-000D56BFE6EE),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxTopic : IDispatch
   {
     [id(68097), propget]
     HRESULT __stdcall Title (
       [in] enum HxTopicGetTitleType optType,
       [in] enum HxTopicGetTitleDefVal optDef,
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall url (
       [out retval] BSTR *pVal
     );
     [id(68108), propget]
     HRESULT __stdcall Namespace (
       [out retval] BSTR *pVal
     );
     [id(68099), propget]
     HRESULT __stdcall Location (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall Rank (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall Attributes (
       [out retval] dispinterface IHxAttributeList **ppVal
     );
     HRESULT __stdcall GetInfo (
       [out] BSTR *pTitle,
       [out] BSTR *pURL,
       [out] BSTR *pNamespace,
       [out] BSTR *pLocation,
       [out] long *pRank
     );
     HRESULT __stdcall GetProperty (
       [in] enum HxTopicPropId propid,
       [out retval] VARIANT *pvar
     );
     HRESULT __stdcall SetProperty (
       [in] enum HxTopicPropId propid,
       [in] VARIANT var
     );
     HRESULT __stdcall HasAttribute (
       [in] BSTR Name,
       [in] BSTR Value,
       [out retval] WINBOOL *pfHasAttribute
     );
     HRESULT __stdcall HasAttrName (
       [in] BSTR Name,
       [out retval] WINBOOL *pfHasAttrName
     );
     HRESULT __stdcall HighlightDocument (
       [in] IDispatch * pIDispatch
     );
   };
   [
     uuid(8CEC5914-07A1-11D9-B15E-000D56BFE6EE),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxAttributeList : IDispatch
   {
     [id(70400), propget]
     HRESULT __stdcall Count (
       [out retval] long *pReturn
     );
     HRESULT __stdcall ItemAt (
       [in] long index,
       [out retval] dispinterface IHxAttribute **ppIHxAttribute
     );
   };
   [
     uuid(8CEC583E-07A1-11D9-B15E-000D56BFE6EE),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxAttribute : IDispatch
   {
     [id(69888)]
     HRESULT __stdcall GetProperty (
       [in] enum HxQueryPropId propid,
       [out retval] VARIANT *pvar
     );
     HRESULT __stdcall SetProperty (
       [in] enum HxQueryPropId propid,
       [in] VARIANT var
     );
     [propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall Value (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall DisplayName (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall DisplayValue (
       [out retval] BSTR *pVal
     );
   };
   [
     uuid(8CEC5878-07A1-11D9-B15E-000D56BFE6EE),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxAssetList : IDispatch
   {
     [id(80640)]
     HRESULT __stdcall ItemAt (
       [in] long index,
       [out retval] dispinterface IHxAsset **ppIHxAsset
     );
     [propget]
     HRESULT __stdcall Length (
       [out retval] long *pNumberOfItems
     );
   };
   [
     uuid(8CEC5852-07A1-11D9-B15E-000D56BFE6EE),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxAsset : IDispatch
   {
     [id(80896), propget]
     HRESULT __stdcall Title (
       [out retval] BSTR *pTitle
     );
     [propget]
     HRESULT __stdcall url (
       [out retval] BSTR *pURL
     );
     [propget]
     HRESULT __stdcall type (
       [out retval] enum HxAssetType *pType
     );
     [propget]
     HRESULT __stdcall Namespace (
       [out retval] BSTR *pNamespace
     );
     [propget]
     HRESULT __stdcall Location (
       [out retval] BSTR *pLocation
     );
     [propget]
     HRESULT __stdcall Rank (
       [out retval] long *pRank
     );
   };
   [
     uuid(8CEC5842-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxBehaviorLoader Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxBehaviorLoader : IDispatch
   {
     [id(78336)]
     HRESULT __stdcall ExecuteBehavior (
       [in] BSTR bstrBehaviorUrn,
       [in] BSTR bstrMethodName,
       [in] VARIANT vArgs,
       [out retval] VARIANT *pvRet
     );
     HRESULT __stdcall SetSession (
       [in] dispinterface IHxSession *pSession
     );
   };
   [
     uuid(8CEC5908-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxSession Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxSession : IDispatch
   {
     [id(65792)]
     HRESULT __stdcall Initialize (
       [in] BSTR Namespace,
       [in] long options
     );
     HRESULT __stdcall query (
       [in] BSTR keywords,
       [in] BSTR NavDataMoniker,
       [in] long options,
       [in] BSTR FilterMoniker,
       [out retval] dispinterface IHxTopicList **ppIHxTopicList
     );
     HRESULT __stdcall QueryForTopic (
       [in] BSTR keywords,
       [in] BSTR NavDataMoniker,
       [in] long options,
       [in] BSTR FilterMoniker,
       [out retval] dispinterface IHxTopic **ppIHxTopic
     );
     HRESULT __stdcall QueryForUrl (
       [in] BSTR keywords,
       [in] BSTR NavDataMoniker,
       [in] long options,
       [in] BSTR FilterMoniker,
       [out retval] BSTR *pURL
     );
     HRESULT __stdcall GetNavigationInterface (
       [in] BSTR NavDataMoniker,
       [in] BSTR FilterMoniker,
       [in] struct GUID *refiid,
       [out retval] IDispatch **ppIDispatch
     );
     HRESULT __stdcall GetNavigationObject (
       [in] BSTR NavDataMoniker,
       [in] BSTR FilterMoniker,
       [out retval] IDispatch **pIDispatch
     );
     HRESULT __stdcall GetQueryObject (
       [in] BSTR NavDataMoniker,
       [in] BSTR FilterMoniker,
       [out retval] dispinterface IHxQuery **pIHxQuery
     );
     [propget]
     HRESULT __stdcall Collection (
       [out retval] dispinterface IHxCollection **ppIHxCollection
     );
     [id(65803), propget]
     HRESULT __stdcall LangId (
       [out retval] short *piHelpLangId
     );
     [id(65803), propput]
     HRESULT __stdcall LangId (
       [in] short argNo1
     );
     [id(65806)]
     HRESULT __stdcall FreeSearchResources (void);
   };
   [
     uuid(8CEC5858-07A1-11D9-B15E-000D56BFE6EE),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxQuery : IDispatch
   {
     [id(67328)]
     HRESULT __stdcall query (
       [in] BSTR keywords,
       [in] enum HxQuery_Options options,
       [out retval] dispinterface IHxTopicList **ppIHxTopicList
     );
     HRESULT __stdcall QueryForTopic (
       [in] BSTR keywords,
       [in] enum HxQuery_Options options,
       [out retval] dispinterface IHxTopic **ppIHxTopic
     );
     HRESULT __stdcall QueryForUrl (
       [in] BSTR keywords,
       [in] enum HxQuery_Options options,
       [out retval] BSTR *pbstrUrl
     );
   };
   [
     uuid(8CEC58FF-07A1-11D9-B15E-000D56BFE6EE),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxCollection : IDispatch
   {
     [id(68352)]
     HRESULT __stdcall GetProperty (
       [in] enum HxCollectionPropId propid,
       [out retval] VARIANT *pvar
     );
     HRESULT __stdcall SetProperty (
       [in] enum HxCollectionPropId propid,
       [in] VARIANT var
     );
     [propget]
     HRESULT __stdcall url (
       [out retval] BSTR *pVal
     );
     [id(68359), propget]
     HRESULT __stdcall Title (
       [out retval] BSTR *pTitle
     );
     HRESULT __stdcall MergeIndex (
       [in] dispinterface IHxLogger *pHxLogger
     );
     [id(68362)]
     HRESULT __stdcall MergeIndexEx (
       [in] dispinterface IHxLogger *pHxLogger,
       [in] enum HxMergeIndexOptions options
     );
     HRESULT __stdcall FreeSearchResources (void);
   };
   [
     uuid(8CEC595A-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxLogger Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxLogger : IDispatch
   {
     [id(81920)]
     HRESULT __stdcall LogMessage (
       [in] BSTR bstrMessage
     );
   };
   [
     uuid(8CEC58CF-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxHelpBehavior Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxHelpBehavior : IDispatch
   {
     [id(79872)]
     HRESULT __stdcall Initialize (void);
     HRESULT __stdcall Uninitialize (void);
     HRESULT __stdcall SetSession (
       [in] dispinterface IHxSession *pSession
     );
   };
   [
     uuid(8CEC5841-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxReusableText Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxReusableText : IHxHelpBehavior
   {
     [id(78592)]
     HRESULT __stdcall Include (
       [in] BSTR bstrUri,
       [out retval] VARIANT *pvRet
     );
     HRESULT __stdcall SetHelpUtil (
       [in] VARIANT vHelpUtilDisp
     );
   };
   [
     uuid(8CEC58D8-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxAdaptableText Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxAdaptableText : IHxHelpBehavior
   {
     [id(78848)]
     HRESULT __stdcall CheckState (
       [in] BSTR bstrParam,
       [out retval] BSTR *pbstrReturn
     );
   };
   [
     uuid(8CEC5851-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxPopup Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxPopup : IHxHelpBehavior
   {
     [id(79104)]
     HRESULT __stdcall RuntimeHandler (
       [in] VARIANT vSrcElementDisp,
       [in] VARIANT vEventSinkDisp,
       [in] VARIANT vMouseX
     );
     HRESULT __stdcall OpenPopupFromUri (
       [in] BSTR vUri,
       [in] VARIANT vSrcElementDisp,
       [in] VARIANT vEventSinkDisp
     );
     HRESULT __stdcall GetPopupString (
       [in] BSTR bstrUri,
       [out retval] BSTR *pbstrDHTML
     );
     HRESULT __stdcall Reset (void);
     HRESULT __stdcall GetPopupAnchor (
       [in] BSTR bstrNOTUSED,
       [out retval] BSTR *pbstrPopupAnchor
     );
   };
   [
     uuid(8CEC5960-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxExpandCollapse Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxExpandCollapse : IHxHelpBehavior
   {
     [id(79360)]
     HRESULT __stdcall RuntimeHandler (
       [in] VARIANT vSrcElementDisp
     );
     HRESULT __stdcall GetInitialVisibilityStateFromStore (
       [in] BSTR bstrElementId,
       [out retval] BSTR *pbstrVisibilityState
     );
     HRESULT __stdcall SetVisibilityState (
       [in] BSTR bstrElementIdColonVisiblityState
     );
     HRESULT __stdcall SetHelpUtil (
       [in] VARIANT vHelpUtilDisp
     );
     HRESULT __stdcall GetExpandStateOfElement (
       [in] BSTR bstrNodeIdColonDefaultState,
       [out retval] BSTR *pbstrExpandState
     );
   };
   [
     uuid(8CEC5866-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxHelpUtil Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxHelpUtil : IHxHelpBehavior
   {
     [id(79616)]
     HRESULT __stdcall GetPersistentPageId (
       [out retval] BSTR *pbstrPersistentPageId
     );
     HRESULT __stdcall GetPersistentNodeId (
       [in] VARIANT vXmlNodeListContainingOneContextNode,
       [out retval] BSTR *pbstrPersistentNodeId
     );
     HRESULT __stdcall SetCurrentUrl (
       [in] BSTR bstrUrl
     );
     HRESULT __stdcall GetCurrentUrl (
       [out retval] BSTR *pbstrUrl
     );
     HRESULT __stdcall InvalidateCurrentUrl (void);
     HRESULT __stdcall IsActiveHelpDisabled (
       [out retval] WINBOOL *pbIsActiveHelpDisabled
     );
     HRESULT __stdcall IsAllowedUrlForReplaceWithAttribute (
       [in] BSTR bstrUrl,
       [out retval] WINBOOL *pbAllowed
     );
     HRESULT __stdcall IsAllowedUrlForNavigationLink (
       [in] BSTR bstrUrl,
       [out retval] WINBOOL *pbAllowed
     );
     HRESULT __stdcall IsAllowedUrlForEmbedObject (
       [in] BSTR bstrUrl,
       [out retval] WINBOOL *pbAllowed
     );
     HRESULT __stdcall IsAllowedUrlForGlossaryEntryLink (
       [in] BSTR bstrUrl,
       [out retval] WINBOOL *pbAllowed
     );
     HRESULT __stdcall MapMsHelpUrlToHttpUrl (
       [in] BSTR bstrMsHelpUrl,
       [out retval] BSTR *pbstrHttpUrl
     );
     HRESULT __stdcall GetResourceString (
       [in] long lResId,
       [out retval] BSTR *pbstr
     );
     HRESULT __stdcall SetTopicType (
       [in] BSTR bstr,
       [out retval] BSTR *pbstr
     );
     HRESULT __stdcall GetTopicSource (
       [out retval] BSTR *pbstr
     );
     HRESULT __stdcall GetReadingOrder (
       [in] BSTR locale,
       [out retval] BSTR *pReadingOrder
     );
   };
   [
     uuid(8CEC587D-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxContentTransformEngine Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxContentTransformEngine : IDispatch
   {
     [id(80384)]
     HRESULT __stdcall ApplyMAMLToDHTMLTransform (
       [in] dispinterface IHxContent *pTopic
     );
     HRESULT __stdcall ApplyStructuralTransform (
       [in] dispinterface IHxContent *pTopic
     );
     HRESULT __stdcall ApplyPresentationTransform (
       [in] dispinterface IHxContent *pTopic
     );
     HRESULT __stdcall GetBehaviorLoader (
       [out retval] dispinterface IHxBehaviorLoader **ppBehaviorLoader
     );
     HRESULT __stdcall SetSession (
       [in] dispinterface IHxSession *pSession
     );
   };
   [
     uuid(8CEC58C1-07A1-11D9-B15E-000D56BFE6EE),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxInitialize : IDispatch
   {
     [id(72192)]
     HRESULT __stdcall Initialize (
       [in] BSTR InitString,
       [in] long options
     );
     [propget]
     HRESULT __stdcall Filter (
       [out retval] BSTR *pFilterMoniker
     );
     [id(72193), propput]
     HRESULT __stdcall Filter (
       [in] BSTR argNo1
     );
   };
   [
     uuid(8CEC5856-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxInitializeEx Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxInitializeEx : IHxInitialize
   {
     [id(81408), propget]
     HRESULT __stdcall Session (
       [out retval] dispinterface IHxSession **ppSession
     );
     [id(81408), propput]
     HRESULT __stdcall Session (
       [in] dispinterface IHxSession *argNo1
     );
   };
   [
     uuid(8CEC5868-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxCancel Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IHxCancel : IDispatch
   {
     [id(76032), propget]
     HRESULT __stdcall Cancel (
       [out retval] enum HxCancelStatus *pbCancel
     );
     [id(76032), propput]
     HRESULT __stdcall Cancel (
       [in] enum HxCancelStatus argNo1
     );
   };
   [
     uuid(8CEC587E-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxSessionEvents Interface"),
     dispatchable
   ]
   dispinterface IHxSessionEvents
   {
     [id(65800)]
     void __stdcall QueryCancel (
       [in] IDispatch * pSession,
       [in] IDispatch * pCancel,
       [in] long status
     );
     void __stdcall IndexMergeStatus (
       [in] IDispatch * pSession,
       [in] IDispatch * pCancel,
       [in] long status
     );
     void __stdcall PrintMergeStatus (
       [in] IDispatch * pSession,
       [in] IDispatch * pCancel,
       [in] long status
     );
     [id(65804)]
     void __stdcall MergeIndexFileName (
       [in] IDispatch * pDisp,
       [in] BSTR bstrFile
     );
   };
   [
     uuid(8CEC5888-07A1-11D9-B15E-000D56BFE6EE),
     helpstring("IHxRegisterSessionEvents Interface"),
     dispatchable
   ]
   dispinterface IHxRegisterSessionEvents
   {
     [id(75271)]
     void __stdcall FiltersChanged (
       [in] IDispatch * pDisp,
       [in] VARIANT *pvar
     );
   };

};

/* Interface declarations.  */
[
  uuid(0000000C-0000-0000-C000-000000000046)
]
interface IStream : ISequentialStream
{
  [id(1610743808)]
  HRESULT __stdcall RemoteSeek (
    [in] struct _LARGE_INTEGER dlibMove,
    [in] UINT dwOrigin,
    [out] struct _ULARGE_INTEGER *plibNewPosition
  );
  HRESULT __stdcall SetSize (
    [in] struct _ULARGE_INTEGER libNewSize
  );
  HRESULT __stdcall RemoteCopyTo (
    [in] interface IStream *pstm,
    [in] struct _ULARGE_INTEGER cb,
    [out] struct _ULARGE_INTEGER *pcbRead,
    [out] struct _ULARGE_INTEGER *pcbWritten
  );
  HRESULT __stdcall Commit (
    [in] UINT grfCommitFlags
  );
  HRESULT __stdcall Revert (void);
  HRESULT __stdcall LockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall UnlockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall Stat (
    [out] struct tagSTATSTG *pstatstg,
    [in] UINT grfStatFlag
  );
  HRESULT __stdcall Clone (
    [out] interface IStream **ppstm
  );
};
[
  uuid(0C733A30-2A1C-11CE-ADE5-00AA0044773D)
]
interface ISequentialStream : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteRead (
    [out] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbRead
  );
  HRESULT __stdcall RemoteWrite (
    [in] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbWritten
  );
};

/* Module declarations.  */
[
  uuid(8CEC58A1-07A1-11D9-B15E-000D56BFE6EE),
  helpstring("HxDs Search MetaData String Constant")
]
module HxSearchMeta
{
  [id(1073741824)]
  CONST USHORT *HxSearchMetaBegin = L"[SrchMeta[";
  CONST USHORT *HxSearchMetaEnd = L"]SrchMeta]";
  CONST USHORT *HxSearchTocBegin = L"[Toc[";
  CONST USHORT *HxSearchTocEnd = L"]Toc]";
  CONST USHORT *HxSearchInclBegin = L"[Incl[";
  CONST USHORT *HxSearchInclEnd = L"]Incl]";
  CONST USHORT *HxSearchExclBegin = L"[Excl[";
  CONST USHORT *HxSearchExclEnd = L"]Excl]";
};

