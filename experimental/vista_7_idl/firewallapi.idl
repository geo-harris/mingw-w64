/* Automated generated idl file <netfwtypelib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Union record forward declarations.  */
dispinterface INetFwRemoteAdminSettings;
dispinterface INetFwIcmpSettings;
dispinterface INetFwOpenPort;
dispinterface INetFwOpenPorts;
dispinterface INetFwService;
dispinterface INetFwServices;
dispinterface INetFwAuthorizedApplication;
dispinterface INetFwAuthorizedApplications;
dispinterface INetFwServiceRestriction;
dispinterface INetFwRules;
dispinterface INetFwRule;
dispinterface INetFwRule2;
dispinterface INetFwProfile;
dispinterface INetFwPolicy;
dispinterface INetFwPolicy2;
dispinterface INetFwMgr;
dispinterface INetFwProduct;
dispinterface INetFwProducts;

/* Enumeration declarations.  */
enum NET_FW_IP_VERSION_
{
  NET_FW_IP_VERSION_V4 = (int) 201326592,
  NET_FW_IP_VERSION_V6 = (int) 201326593,
  NET_FW_IP_VERSION_ANY = (int) 201326594,
  NET_FW_IP_VERSION_MAX = (int) 201326595
};
enum NET_FW_SCOPE_
{
  NET_FW_SCOPE_ALL = (int) 201326592,
  NET_FW_SCOPE_LOCAL_SUBNET = (int) 201326593,
  NET_FW_SCOPE_CUSTOM = (int) 201326594,
  NET_FW_SCOPE_MAX = (int) 201326595
};
enum NET_FW_IP_PROTOCOL_
{
  NET_FW_IP_PROTOCOL_TCP = (int) 201326598,
  NET_FW_IP_PROTOCOL_UDP = (int) 201326609,
  NET_FW_IP_PROTOCOL_ANY = (int) 201326848
};
enum NET_FW_SERVICE_TYPE_
{
  NET_FW_SERVICE_FILE_AND_PRINT = (int) 201326592,
  NET_FW_SERVICE_UPNP = (int) 201326593,
  NET_FW_SERVICE_REMOTE_DESKTOP = (int) 201326594,
  NET_FW_SERVICE_NONE = (int) 201326595,
  NET_FW_SERVICE_TYPE_MAX = (int) 201326596
};
enum NET_FW_RULE_DIRECTION_
{
  NET_FW_RULE_DIR_IN = (int) 201326593,
  NET_FW_RULE_DIR_OUT = (int) 201326594,
  NET_FW_RULE_DIR_MAX = (int) 201326595
};
enum NET_FW_ACTION_
{
  NET_FW_ACTION_BLOCK = (int) 201326592,
  NET_FW_ACTION_ALLOW = (int) 201326593,
  NET_FW_ACTION_MAX = (int) 201326594
};
enum NET_FW_PROFILE_TYPE_
{
  NET_FW_PROFILE_DOMAIN = (int) 201326592,
  NET_FW_PROFILE_STANDARD = (int) 201326593,
  NET_FW_PROFILE_CURRENT = (int) 201326594,
  NET_FW_PROFILE_TYPE_MAX = (int) 201326595
};
enum NET_FW_PROFILE_TYPE2_
{
  NET_FW_PROFILE2_DOMAIN = (int) 201326593,
  NET_FW_PROFILE2_PRIVATE = (int) 201326594,
  NET_FW_PROFILE2_PUBLIC = (int) 201326596,
  NET_FW_PROFILE2_ALL = (int) 2147483647
};
enum NET_FW_MODIFY_STATE_
{
  NET_FW_MODIFY_STATE_OK = (int) 201326592,
  NET_FW_MODIFY_STATE_GP_OVERRIDE = (int) 201326593,
  NET_FW_MODIFY_STATE_INBOUND_BLOCKED = (int) 201326594
};

[
  uuid(58FBCF7C-E7A9-467C-80B3-FC65E8FCCA08),
  version(1.0)
]
library netfwtypelib
{
  importlib("stdole2.tlb");

   /* Dispatch interface declarations.  */
   [
     uuid(D4BECDDF-6F73-4A83-B832-9C66874CD20E),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwRemoteAdminSettings : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall IpVersion (
       [out retval] enum NET_FW_IP_VERSION_ *IpVersion
     );
     [id(1), propput]
     HRESULT __stdcall IpVersion (
       [in] enum NET_FW_IP_VERSION_ argNo1
     );
     [propget]
     HRESULT __stdcall Scope (
       [out retval] enum NET_FW_SCOPE_ *Scope
     );
     [id(2), propput]
     HRESULT __stdcall Scope (
       [in] enum NET_FW_SCOPE_ argNo1
     );
     [propget]
     HRESULT __stdcall RemoteAddresses (
       [out retval] BSTR *remoteAddrs
     );
     [id(3), propput]
     HRESULT __stdcall RemoteAddresses (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Enabled (
       [out retval] WINBOOL *Enabled
     );
     [id(4), propput]
     HRESULT __stdcall Enabled (
       [in] WINBOOL argNo1
     );
   };
   [
     uuid(A6207B2E-7CDD-426A-951E-5E1CBC5AFEAD),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwIcmpSettings : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall AllowOutboundDestinationUnreachable (
       [out retval] WINBOOL *allow
     );
     [id(1), propput]
     HRESULT __stdcall AllowOutboundDestinationUnreachable (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AllowRedirect (
       [out retval] WINBOOL *allow
     );
     [id(2), propput]
     HRESULT __stdcall AllowRedirect (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AllowInboundEchoRequest (
       [out retval] WINBOOL *allow
     );
     [id(3), propput]
     HRESULT __stdcall AllowInboundEchoRequest (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AllowOutboundTimeExceeded (
       [out retval] WINBOOL *allow
     );
     [id(4), propput]
     HRESULT __stdcall AllowOutboundTimeExceeded (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AllowOutboundParameterProblem (
       [out retval] WINBOOL *allow
     );
     [id(5), propput]
     HRESULT __stdcall AllowOutboundParameterProblem (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AllowOutboundSourceQuench (
       [out retval] WINBOOL *allow
     );
     [id(6), propput]
     HRESULT __stdcall AllowOutboundSourceQuench (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AllowInboundRouterRequest (
       [out retval] WINBOOL *allow
     );
     [id(7), propput]
     HRESULT __stdcall AllowInboundRouterRequest (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AllowInboundTimestampRequest (
       [out retval] WINBOOL *allow
     );
     [id(8), propput]
     HRESULT __stdcall AllowInboundTimestampRequest (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AllowInboundMaskRequest (
       [out retval] WINBOOL *allow
     );
     [id(9), propput]
     HRESULT __stdcall AllowInboundMaskRequest (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AllowOutboundPacketTooBig (
       [out retval] WINBOOL *allow
     );
     [id(10), propput]
     HRESULT __stdcall AllowOutboundPacketTooBig (
       [in] WINBOOL argNo1
     );
   };
   [
     uuid(E0483BA0-47FF-4D9C-A6D6-7741D0B195F7),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwOpenPort : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *Name
     );
     [id(1), propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall IpVersion (
       [out retval] enum NET_FW_IP_VERSION_ *IpVersion
     );
     [id(2), propput]
     HRESULT __stdcall IpVersion (
       [in] enum NET_FW_IP_VERSION_ argNo1
     );
     [propget]
     HRESULT __stdcall Protocol (
       [out retval] enum NET_FW_IP_PROTOCOL_ *ipProtocol
     );
     [id(3), propput]
     HRESULT __stdcall Protocol (
       [in] enum NET_FW_IP_PROTOCOL_ argNo1
     );
     [propget]
     HRESULT __stdcall Port (
       [out retval] long *portNumber
     );
     [id(4), propput]
     HRESULT __stdcall Port (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall Scope (
       [out retval] enum NET_FW_SCOPE_ *Scope
     );
     [id(5), propput]
     HRESULT __stdcall Scope (
       [in] enum NET_FW_SCOPE_ argNo1
     );
     [propget]
     HRESULT __stdcall RemoteAddresses (
       [out retval] BSTR *remoteAddrs
     );
     [id(6), propput]
     HRESULT __stdcall RemoteAddresses (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Enabled (
       [out retval] WINBOOL *Enabled
     );
     [id(7), propput]
     HRESULT __stdcall Enabled (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall BuiltIn (
       [out retval] WINBOOL *BuiltIn
     );
   };
   [
     uuid(C0E9D7FA-E07E-430A-B19A-090CE82D92E2),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwOpenPorts : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Count (
       [out retval] long *Count
     );
     HRESULT __stdcall Add (
       [in] dispinterface INetFwOpenPort *Port
     );
     HRESULT __stdcall Remove (
       [in] long portNumber,
       [in] enum NET_FW_IP_PROTOCOL_ ipProtocol
     );
     HRESULT __stdcall Item (
       [in] long portNumber,
       [in] enum NET_FW_IP_PROTOCOL_ ipProtocol,
       [out retval] dispinterface INetFwOpenPort **openPort
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **newEnum
     );
   };
   [
     uuid(79FD57C8-908E-4A36-9888-D5B3F0A444CF),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwService : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *Name
     );
     [propget]
     HRESULT __stdcall Type (
       [out retval] enum NET_FW_SERVICE_TYPE_ *Type
     );
     [propget]
     HRESULT __stdcall Customized (
       [out retval] WINBOOL *Customized
     );
     [propget]
     HRESULT __stdcall IpVersion (
       [out retval] enum NET_FW_IP_VERSION_ *IpVersion
     );
     [id(4), propput]
     HRESULT __stdcall IpVersion (
       [in] enum NET_FW_IP_VERSION_ argNo1
     );
     [propget]
     HRESULT __stdcall Scope (
       [out retval] enum NET_FW_SCOPE_ *Scope
     );
     [id(5), propput]
     HRESULT __stdcall Scope (
       [in] enum NET_FW_SCOPE_ argNo1
     );
     [propget]
     HRESULT __stdcall RemoteAddresses (
       [out retval] BSTR *remoteAddrs
     );
     [id(6), propput]
     HRESULT __stdcall RemoteAddresses (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Enabled (
       [out retval] WINBOOL *Enabled
     );
     [id(7), propput]
     HRESULT __stdcall Enabled (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall GloballyOpenPorts (
       [out retval] dispinterface INetFwOpenPorts **openPorts
     );
   };
   [
     uuid(79649BB4-903E-421B-94C9-79848E79F6EE),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwServices : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Count (
       [out retval] long *Count
     );
     HRESULT __stdcall Item (
       [in] enum NET_FW_SERVICE_TYPE_ svcType,
       [out retval] dispinterface INetFwService **service
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **newEnum
     );
   };
   [
     uuid(B5E64FFA-C2C5-444E-A301-FB5E00018050),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwAuthorizedApplication : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *Name
     );
     [id(1), propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall ProcessImageFileName (
       [out retval] BSTR *imageFileName
     );
     [id(2), propput]
     HRESULT __stdcall ProcessImageFileName (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall IpVersion (
       [out retval] enum NET_FW_IP_VERSION_ *IpVersion
     );
     [id(3), propput]
     HRESULT __stdcall IpVersion (
       [in] enum NET_FW_IP_VERSION_ argNo1
     );
     [propget]
     HRESULT __stdcall Scope (
       [out retval] enum NET_FW_SCOPE_ *Scope
     );
     [id(4), propput]
     HRESULT __stdcall Scope (
       [in] enum NET_FW_SCOPE_ argNo1
     );
     [propget]
     HRESULT __stdcall RemoteAddresses (
       [out retval] BSTR *remoteAddrs
     );
     [id(5), propput]
     HRESULT __stdcall RemoteAddresses (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Enabled (
       [out retval] WINBOOL *Enabled
     );
     [id(6), propput]
     HRESULT __stdcall Enabled (
       [in] WINBOOL argNo1
     );
   };
   [
     uuid(644EFD52-CCF9-486C-97A2-39F352570B30),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwAuthorizedApplications : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Count (
       [out retval] long *Count
     );
     HRESULT __stdcall Add (
       [in] dispinterface INetFwAuthorizedApplication *app
     );
     HRESULT __stdcall Remove (
       [in] BSTR imageFileName
     );
     HRESULT __stdcall Item (
       [in] BSTR imageFileName,
       [out retval] dispinterface INetFwAuthorizedApplication **app
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **newEnum
     );
   };
   [
     uuid(8267BBE3-F890-491C-B7B6-2DB1EF0E5D2B),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwServiceRestriction : IDispatch
   {
     [id(1)]
     HRESULT __stdcall RestrictService (
       [in] BSTR serviceName,
       [in] BSTR appName,
       [in] WINBOOL RestrictService,
       [in] WINBOOL serviceSidRestricted
     );
     HRESULT __stdcall ServiceRestricted (
       [in] BSTR serviceName,
       [in] BSTR appName,
       [out retval] WINBOOL *ServiceRestricted
     );
     [propget]
     HRESULT __stdcall Rules (
       [out retval] dispinterface INetFwRules **Rules
     );
   };
   [
     uuid(9C4C6277-5027-441E-AFAE-CA1F542DA009),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwRules : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Count (
       [out retval] long *Count
     );
     HRESULT __stdcall Add (
       [in] dispinterface INetFwRule *rule
     );
     HRESULT __stdcall Remove (
       [in] BSTR Name
     );
     HRESULT __stdcall Item (
       [in] BSTR Name,
       [out retval] dispinterface INetFwRule **rule
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **newEnum
     );
   };
   [
     uuid(AF230D27-BABA-4E42-ACED-F524F22CFCE2),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwRule : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *Name
     );
     [id(1), propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *desc
     );
     [id(2), propput]
     HRESULT __stdcall Description (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall ApplicationName (
       [out retval] BSTR *imageFileName
     );
     [id(3), propput]
     HRESULT __stdcall ApplicationName (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall serviceName (
       [out retval] BSTR *serviceName
     );
     [id(4), propput]
     HRESULT __stdcall serviceName (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Protocol (
       [out retval] long *Protocol
     );
     [id(5), propput]
     HRESULT __stdcall Protocol (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall LocalPorts (
       [out retval] BSTR *portNumbers
     );
     [id(6), propput]
     HRESULT __stdcall LocalPorts (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall RemotePorts (
       [out retval] BSTR *portNumbers
     );
     [id(7), propput]
     HRESULT __stdcall RemotePorts (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall LocalAddresses (
       [out retval] BSTR *localAddrs
     );
     [id(8), propput]
     HRESULT __stdcall LocalAddresses (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall RemoteAddresses (
       [out retval] BSTR *remoteAddrs
     );
     [id(9), propput]
     HRESULT __stdcall RemoteAddresses (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall IcmpTypesAndCodes (
       [out retval] BSTR *IcmpTypesAndCodes
     );
     [id(10), propput]
     HRESULT __stdcall IcmpTypesAndCodes (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Direction (
       [out retval] enum NET_FW_RULE_DIRECTION_ *dir
     );
     [id(11), propput]
     HRESULT __stdcall Direction (
       [in] enum NET_FW_RULE_DIRECTION_ argNo1
     );
     [propget]
     HRESULT __stdcall Interfaces (
       [out retval] VARIANT *Interfaces
     );
     [id(12), propput]
     HRESULT __stdcall Interfaces (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall InterfaceTypes (
       [out retval] BSTR *InterfaceTypes
     );
     [id(13), propput]
     HRESULT __stdcall InterfaceTypes (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Enabled (
       [out retval] WINBOOL *Enabled
     );
     [id(14), propput]
     HRESULT __stdcall Enabled (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall Grouping (
       [out retval] BSTR *context
     );
     [id(15), propput]
     HRESULT __stdcall Grouping (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Profiles (
       [out retval] long *profileTypesBitmask
     );
     [id(16), propput]
     HRESULT __stdcall Profiles (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall EdgeTraversal (
       [out retval] WINBOOL *Enabled
     );
     [id(17), propput]
     HRESULT __stdcall EdgeTraversal (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall Action (
       [out retval] enum NET_FW_ACTION_ *Action
     );
     [id(18), propput]
     HRESULT __stdcall Action (
       [in] enum NET_FW_ACTION_ argNo1
     );
   };
   [
     uuid(9C27C8DA-189B-4DDE-89F7-8B39A316782C),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwRule2 : INetFwRule
   {
     [id(19), propget]
     HRESULT __stdcall EdgeTraversalOptions (
       [out retval] long *lOptions
     );
     [id(19), propput]
     HRESULT __stdcall EdgeTraversalOptions (
       [in] long argNo1
     );
   };
   [
     uuid(174A0DDA-E9F9-449D-993B-21AB667CA456),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwProfile : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Type (
       [out retval] enum NET_FW_PROFILE_TYPE_ *Type
     );
     [propget]
     HRESULT __stdcall FirewallEnabled (
       [out retval] WINBOOL *Enabled
     );
     [id(2), propput]
     HRESULT __stdcall FirewallEnabled (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall ExceptionsNotAllowed (
       [out retval] WINBOOL *notAllowed
     );
     [id(3), propput]
     HRESULT __stdcall ExceptionsNotAllowed (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall NotificationsDisabled (
       [out retval] WINBOOL *disabled
     );
     [id(4), propput]
     HRESULT __stdcall NotificationsDisabled (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall UnicastResponsesToMulticastBroadcastDisabled (
       [out retval] WINBOOL *disabled
     );
     [id(5), propput]
     HRESULT __stdcall UnicastResponsesToMulticastBroadcastDisabled (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall RemoteAdminSettings (
       [out retval] dispinterface INetFwRemoteAdminSettings **RemoteAdminSettings
     );
     [propget]
     HRESULT __stdcall IcmpSettings (
       [out retval] dispinterface INetFwIcmpSettings **IcmpSettings
     );
     [propget]
     HRESULT __stdcall GloballyOpenPorts (
       [out retval] dispinterface INetFwOpenPorts **openPorts
     );
     [propget]
     HRESULT __stdcall Services (
       [out retval] dispinterface INetFwServices **Services
     );
     [propget]
     HRESULT __stdcall AuthorizedApplications (
       [out retval] dispinterface INetFwAuthorizedApplications **apps
     );
   };
   [
     uuid(D46D2478-9AC9-4008-9DC7-5563CE5536CC),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwPolicy : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall CurrentProfile (
       [out retval] dispinterface INetFwProfile **profile
     );
     HRESULT __stdcall GetProfileByType (
       [in] enum NET_FW_PROFILE_TYPE_ profileType,
       [out retval] dispinterface INetFwProfile **profile
     );
   };
   [
     uuid(98325047-C671-4174-8D81-DEFCD3F03186),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwPolicy2 : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall CurrentProfileTypes (
       [out retval] long *profileTypesBitmask
     );
     [propget]
     HRESULT __stdcall FirewallEnabled (
       [in] enum NET_FW_PROFILE_TYPE2_ profileType,
       [out retval] WINBOOL *Enabled
     );
     [id(2), propput]
     HRESULT __stdcall FirewallEnabled (
       [in] enum NET_FW_PROFILE_TYPE2_ profileType,
       [in] WINBOOL argNo2
     );
     [propget]
     HRESULT __stdcall ExcludedInterfaces (
       [in] enum NET_FW_PROFILE_TYPE2_ profileType,
       [out retval] VARIANT *Interfaces
     );
     [id(3), propput]
     HRESULT __stdcall ExcludedInterfaces (
       [in] enum NET_FW_PROFILE_TYPE2_ profileType,
       [in] VARIANT argNo2
     );
     [propget]
     HRESULT __stdcall BlockAllInboundTraffic (
       [in] enum NET_FW_PROFILE_TYPE2_ profileType,
       [out retval] WINBOOL *Block
     );
     [id(4), propput]
     HRESULT __stdcall BlockAllInboundTraffic (
       [in] enum NET_FW_PROFILE_TYPE2_ profileType,
       [in] WINBOOL argNo2
     );
     [propget]
     HRESULT __stdcall NotificationsDisabled (
       [in] enum NET_FW_PROFILE_TYPE2_ profileType,
       [out retval] WINBOOL *disabled
     );
     [id(5), propput]
     HRESULT __stdcall NotificationsDisabled (
       [in] enum NET_FW_PROFILE_TYPE2_ profileType,
       [in] WINBOOL argNo2
     );
     [propget]
     HRESULT __stdcall UnicastResponsesToMulticastBroadcastDisabled (
       [in] enum NET_FW_PROFILE_TYPE2_ profileType,
       [out retval] WINBOOL *disabled
     );
     [id(6), propput]
     HRESULT __stdcall UnicastResponsesToMulticastBroadcastDisabled (
       [in] enum NET_FW_PROFILE_TYPE2_ profileType,
       [in] WINBOOL argNo2
     );
     [propget]
     HRESULT __stdcall Rules (
       [out retval] dispinterface INetFwRules **Rules
     );
     [propget]
     HRESULT __stdcall ServiceRestriction (
       [out retval] dispinterface INetFwServiceRestriction **ServiceRestriction
     );
     HRESULT __stdcall EnableRuleGroup (
       [in] long profileTypesBitmask,
       [in] BSTR group,
       [in] WINBOOL enable
     );
     HRESULT __stdcall IsRuleGroupEnabled (
       [in] long profileTypesBitmask,
       [in] BSTR group,
       [out retval] WINBOOL *Enabled
     );
     HRESULT __stdcall RestoreLocalFirewallDefaults (void);
     [propget]
     HRESULT __stdcall DefaultInboundAction (
       [in] enum NET_FW_PROFILE_TYPE2_ profileType,
       [out retval] enum NET_FW_ACTION_ *Action
     );
     [id(12), propput]
     HRESULT __stdcall DefaultInboundAction (
       [in] enum NET_FW_PROFILE_TYPE2_ profileType,
       [in] enum NET_FW_ACTION_ argNo2
     );
     [propget]
     HRESULT __stdcall DefaultOutboundAction (
       [in] enum NET_FW_PROFILE_TYPE2_ profileType,
       [out retval] enum NET_FW_ACTION_ *Action
     );
     [id(13), propput]
     HRESULT __stdcall DefaultOutboundAction (
       [in] enum NET_FW_PROFILE_TYPE2_ profileType,
       [in] enum NET_FW_ACTION_ argNo2
     );
     [propget]
     HRESULT __stdcall IsRuleGroupCurrentlyEnabled (
       [in] BSTR group,
       [out retval] WINBOOL *Enabled
     );
     [propget]
     HRESULT __stdcall LocalPolicyModifyState (
       [out retval] enum NET_FW_MODIFY_STATE_ *modifyState
     );
   };
   [
     uuid(F7898AF5-CAC4-4632-A2EC-DA06E5111AF2),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwMgr : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall LocalPolicy (
       [out retval] dispinterface INetFwPolicy **LocalPolicy
     );
     [propget]
     HRESULT __stdcall CurrentProfileType (
       [out retval] enum NET_FW_PROFILE_TYPE_ *profileType
     );
     HRESULT __stdcall RestoreDefaults (void);
     HRESULT __stdcall IsPortAllowed (
       [in] BSTR imageFileName,
       [in] enum NET_FW_IP_VERSION_ IpVersion,
       [in] long portNumber,
       [in] BSTR localAddress,
       [in] enum NET_FW_IP_PROTOCOL_ ipProtocol,
       [out] VARIANT *allowed,
       [out] VARIANT *restricted
     );
     HRESULT __stdcall IsIcmpTypeAllowed (
       [in] enum NET_FW_IP_VERSION_ IpVersion,
       [in] BSTR localAddress,
       [in] UCHAR Type,
       [out] VARIANT *allowed,
       [out] VARIANT *restricted
     );
   };
   [
     uuid(71881699-18F4-458B-B892-3FFCE5E07F75),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwProduct : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall RuleCategories (
       [out retval] VARIANT *RuleCategories
     );
     [id(1), propput]
     HRESULT __stdcall RuleCategories (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall DisplayName (
       [out retval] BSTR *DisplayName
     );
     [id(2), propput]
     HRESULT __stdcall DisplayName (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall PathToSignedProductExe (
       [out retval] BSTR *path
     );
   };
   [
     uuid(39EB36E0-2097-40BD-8AF2-63A13B525362),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetFwProducts : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Count (
       [out retval] long *Count
     );
     HRESULT __stdcall Register (
       [in] dispinterface INetFwProduct *product,
       [out retval] IUnknown **registration
     );
     HRESULT __stdcall Item (
       [in] long index,
       [out retval] dispinterface INetFwProduct **product
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **newEnum
     );
   };

};

