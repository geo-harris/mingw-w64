/* Automated generated idl file <upnplib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface IUPnPAddressFamilyControl;
interface IUPnPHttpHeaderControl;
interface IUPnPDeviceDocumentAccess;
interface IUPnPDeviceDocumentAccessEx;
interface IUPnPDeviceFinderCallback;
interface IUPnPDeviceFinderAddCallbackWithInterface;
interface IUPnPServiceCallback;

/* Union record forward declarations.  */
dispinterface IUPnPDeviceFinder;
dispinterface IUPnPDevices;
dispinterface IUPnPDevice;
dispinterface IUPnPServices;
dispinterface IUPnPService;
dispinterface IUPnPDescriptionDocument;

/* Union record forward declarations.  */
coclass UPnPDeviceFinder;
coclass UPnPDevices;
coclass UPnPDevice;
coclass UPnPServices;
coclass UPnPService;
coclass UPnPDescriptionDocument;

[
  uuid(DB3442A7-A2E9-4A59-9CB5-F5C1A5D901E5),
  version(1.0),
  helpstring("UPnP 1.0 Type Library (Control Point)")
]
library upnplib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(E2085F28-FEB7-404A-B8E7-E659BDEAAA02),
     helpstring("UPnPDeviceFinder Class"),
     cancreate
   ]
   coclass UPnPDeviceFinder
   {
     dispinterface IUPnPDeviceFinder;
     interface IUPnPAddressFamilyControl;
     interface IUPnPHttpHeaderControl;
   };
   [
     uuid(B9E84FFD-AD3C-40A4-B835-0882EBCBAAA8),
     helpstring("UPnPDevices Class"),
     cancreate
   ]
   coclass UPnPDevices
   {
     dispinterface IUPnPDevices;
   };
   [
     uuid(A32552C5-BA61-457A-B59A-A2561E125E33),
     helpstring("UPnPDevice Class"),
     cancreate
   ]
   coclass UPnPDevice
   {
     dispinterface IUPnPDevice;
   };
   [
     uuid(C0BC4B4A-A406-4EFC-932F-B8546B8100CC),
     helpstring("UPnPServices Class"),
     cancreate
   ]
   coclass UPnPServices
   {
     dispinterface IUPnPServices;
   };
   [
     uuid(C624BA95-FBCB-4409-8C03-8CCEEC533EF1),
     helpstring("UPnPService Class"),
     cancreate
   ]
   coclass UPnPService
   {
     dispinterface IUPnPService;
   };
   [
     uuid(1D8A9B47-3A28-4CE2-8A4B-BD34E45BCEEB),
     helpstring("UPnPDescriptionDocument Class"),
     cancreate
   ]
   coclass UPnPDescriptionDocument
   {
     dispinterface IUPnPDescriptionDocument;
     interface IUPnPHttpHeaderControl;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(ADDA3D55-6F72-4319-BFF9-18600A539B10),
     helpstring("IUPnPDeviceFinder Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUPnPDeviceFinder : IDispatch
   {
     [id(1610744809)]
     HRESULT __stdcall FindByType (
       [in] BSTR bstrTypeURI,
       [in] UINT dwFlags,
       [out retval] dispinterface IUPnPDevices **pDevices
     );
     [id(1610744812)]
     HRESULT __stdcall CreateAsyncFind (
       [in] BSTR bstrTypeURI,
       [in] UINT dwFlags,
       [in] IUnknown * punkDeviceFinderCallback,
       [out retval] long *plFindData
     );
     HRESULT __stdcall StartAsyncFind (
       [in] long lFindData
     );
     HRESULT __stdcall CancelAsyncFind (
       [in] long lFindData
     );
     [id(1610744811)]
     HRESULT __stdcall FindByUDN (
       [in] BSTR bstrUDN,
       [out retval] dispinterface IUPnPDevice **pDevice
     );
   };
   [
     uuid(FDBC0C73-BDA3-4C66-AC4F-F2D96FDAD68C),
     helpstring("IUPnPDevices Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUPnPDevices : IDispatch
   {
     [id(1610747309), propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppunk
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] BSTR bstrUDN,
       [out retval] dispinterface IUPnPDevice **ppDevice
     );
   };
   [
     uuid(3D44D0D1-98C9-4889-ACD1-F9D674BF2221),
     helpstring("IUPnPDevice Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUPnPDevice : IDispatch
   {
     [id(1610747809), propget]
     HRESULT __stdcall IsRootDevice (
       [out retval] WINBOOL *pvarb
     );
     [propget]
     HRESULT __stdcall RootDevice (
       [out retval] dispinterface IUPnPDevice **ppudRootDevice
     );
     [propget]
     HRESULT __stdcall ParentDevice (
       [out retval] dispinterface IUPnPDevice **ppudDeviceParent
     );
     [propget]
     HRESULT __stdcall HasChildren (
       [out retval] WINBOOL *pvarb
     );
     [propget]
     HRESULT __stdcall Children (
       [out retval] dispinterface IUPnPDevices **ppudChildren
     );
     [propget]
     HRESULT __stdcall UniqueDeviceName (
       [out retval] BSTR *pbstr
     );
     [propget]
     HRESULT __stdcall FriendlyName (
       [out retval] BSTR *pbstr
     );
     [propget]
     HRESULT __stdcall Type (
       [out retval] BSTR *pbstr
     );
     [propget]
     HRESULT __stdcall PresentationURL (
       [out retval] BSTR *pbstr
     );
     [propget]
     HRESULT __stdcall ManufacturerName (
       [out retval] BSTR *pbstr
     );
     [propget]
     HRESULT __stdcall ManufacturerURL (
       [out retval] BSTR *pbstr
     );
     [propget]
     HRESULT __stdcall ModelName (
       [out retval] BSTR *pbstr
     );
     [propget]
     HRESULT __stdcall ModelNumber (
       [out retval] BSTR *pbstr
     );
     [propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *pbstr
     );
     [propget]
     HRESULT __stdcall ModelURL (
       [out retval] BSTR *pbstr
     );
     [propget]
     HRESULT __stdcall UPC (
       [out retval] BSTR *pbstr
     );
     [propget]
     HRESULT __stdcall SerialNumber (
       [out retval] BSTR *pbstr
     );
     [id(1610747827)]
     HRESULT __stdcall IconURL (
       [in] BSTR bstrEncodingFormat,
       [in] long lSizeX,
       [in] long lSizeY,
       [in] long lBitDepth,
       [out retval] BSTR *pbstrIconURL
     );
     [propget]
     HRESULT __stdcall Services (
       [out retval] dispinterface IUPnPServices **ppusServices
     );
   };
   [
     uuid(3F8C8E9E-9A7A-4DC8-BC41-FF31FA374956),
     helpstring("IUPnPServices Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUPnPServices : IDispatch
   {
     [id(1610745809), propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppunk
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] BSTR bstrServiceId,
       [out retval] dispinterface IUPnPService **ppService
     );
   };
   [
     uuid(A295019C-DC65-47DD-90DC-7FE918A1AB44),
     helpstring("IUPnPService Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUPnPService : IDispatch
   {
     [id(1610746309)]
     HRESULT __stdcall QueryStateVariable (
       [in] BSTR bstrVariableName,
       [out retval] VARIANT *pValue
     );
     HRESULT __stdcall InvokeAction (
       [in] BSTR bstrActionName,
       [in] VARIANT vInActionArgs,
       [in out] VARIANT *pvOutActionArgs,
       [out retval] VARIANT *pvRetVal
     );
     [propget]
     HRESULT __stdcall ServiceTypeIdentifier (
       [out retval] BSTR *pVal
     );
     HRESULT __stdcall AddCallback (
       [in] IUnknown * pUnkCallback
     );
     [propget]
     HRESULT __stdcall Id (
       [out retval] BSTR *pbstrId
     );
     [propget]
     HRESULT __stdcall LastTransportStatus (
       [out retval] long *plValue
     );
   };
   [
     uuid(11D1C1B2-7DAA-4C9E-9595-7F82ED206D1E),
     helpstring("IUPnPDescriptionDocument Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUPnPDescriptionDocument : IDispatch
   {
     [id(-525), propget]
     HRESULT __stdcall ReadyState (
       [out retval] long *plReadyState
     );
     [id(1610748309)]
     HRESULT __stdcall Load (
       [in] BSTR bstrUrl
     );
     HRESULT __stdcall LoadAsync (
       [in] BSTR bstrUrl,
       [in] IUnknown * pUnkCallback
     );
     [propget]
     HRESULT __stdcall LoadResult (
       [out retval] long *phrError
     );
     HRESULT __stdcall Abort (void);
     HRESULT __stdcall RootDevice (
       [out retval] dispinterface IUPnPDevice **ppudRootDevice
     );
     HRESULT __stdcall DeviceByUDN (
       [in] BSTR bstrUDN,
       [out retval] dispinterface IUPnPDevice **ppudDevice
     );
   };

};

/* Interface declarations.  */
[
  uuid(E3BF6178-694E-459F-A5A6-191EA0FFA1C7),
  oleautomation
]
interface IUPnPAddressFamilyControl : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall SetAddressFamily (
    [in] long dwFlags
  );
  HRESULT __stdcall GetAddressFamily (
    [out] long *pdwFlags
  );
};
[
  uuid(0405AF4F-8B5C-447C-80F2-B75984A31F3C),
  oleautomation
]
interface IUPnPHttpHeaderControl : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall AddRequestHeaders (
    [in] BSTR bstrHttpHeaders
  );
};
[
  uuid(E7772804-3287-418E-9072-CF2B47238981)
]
interface IUPnPDeviceDocumentAccess : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetDocumentURL (
    [out retval] BSTR *pbstrDocument
  );
};
[
  uuid(C4BC4050-6178-4BD1-A4B8-6398321F3247)
]
interface IUPnPDeviceDocumentAccessEx : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetDocument (
    [out retval] BSTR *pbstrDocument
  );
};
[
  uuid(415A984A-88B3-49F3-92AF-0508BEDF0D6C)
]
interface IUPnPDeviceFinderCallback : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall DeviceAdded (
    [in] long lFindData,
    [in] dispinterface IUPnPDevice *pDevice
  );
  HRESULT __stdcall DeviceRemoved (
    [in] long lFindData,
    [in] BSTR bstrUDN
  );
  HRESULT __stdcall SearchComplete (
    [in] long lFindData
  );
};
[
  uuid(983DFC0B-1796-44DF-8975-CA545B620EE5)
]
interface IUPnPDeviceFinderAddCallbackWithInterface : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall DeviceAddedWithInterface (
    [in] long lFindData,
    [in] dispinterface IUPnPDevice *pDevice,
    [in] struct GUID *pguidInterface
  );
};
[
  uuid(31FADCA9-AB73-464B-B67D-5C1D0F83C8B8)
]
interface IUPnPServiceCallback : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall StateVariableChanged (
    [in] dispinterface IUPnPService *pus,
    [in] LPWSTR pcwszStateVarName,
    [in] VARIANT vaValue
  );
  HRESULT __stdcall ServiceInstanceDied (
    [in] dispinterface IUPnPService *pus
  );
};

