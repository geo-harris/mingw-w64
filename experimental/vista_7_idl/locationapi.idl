/* Automated generated idl file <locationapilib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface ILocation;
interface ILocationEvents;
interface ILocationReport;
interface IStream;
interface ISequentialStream;
interface IStorage;
interface IEnumSTATSTG;
interface IRecordInfo;
interface ITypeInfo;
interface ITypeComp;
interface ITypeLib;
interface IDefaultLocation;
interface ILatLongReport;
interface ICivicAddressReport;

/* Structure forward declarations.  */
struct _SYSTEMTIME;
struct _tagpropertykey;
struct tag_inner_PROPVARIANT;
struct _LARGE_INTEGER;
struct _ULARGE_INTEGER;
struct _FILETIME;
struct tagCLIPDATA;
struct tagBSTRBLOB;
struct tagBLOB;
struct tagSTATSTG;
struct tagRemSNB;
struct tagVersionedStream;
struct _wireSAFEARRAY;
struct _wireSAFEARRAY_UNION;
struct _wireSAFEARR_BSTR;
struct _FLAGGED_WORD_BLOB;
struct _wireSAFEARR_UNKNOWN;
struct _wireSAFEARR_DISPATCH;
struct _wireSAFEARR_VARIANT;
struct _wireVARIANT;
struct _wireBRECORD;
struct tagTYPEATTR;
struct tagTYPEDESC;
struct tagARRAYDESC;
struct tagSAFEARRAYBOUND;
struct tagIDLDESC;
struct tagFUNCDESC;
struct tagELEMDESC;
struct tagPARAMDESC;
struct tagPARAMDESCEX;
struct tagVARDESC;
struct tagTLIBATTR;
struct _wireSAFEARR_BRECORD;
struct _wireSAFEARR_HAVEIID;
struct _BYTE_SIZEDARR;
struct _SHORT_SIZEDARR;
struct _LONG_SIZEDARR;
struct _HYPER_SIZEDARR;
struct tagCAC;
struct tagCAUB;
struct tagCAI;
struct tagCAUI;
struct tagCAL;
struct tagCAUL;
struct tagCAH;
struct tagCAUH;
struct tagCAFLT;
struct tagCADBL;
struct tagCABOOL;
struct tagCASCODE;
struct tagCACY;
struct tagCADATE;
struct tagCAFILETIME;
struct tagCACLSID;
struct tagCACLIPDATA;
struct tagCABSTR;
struct tagCABSTRBLOB;
struct tagCALPSTR;
struct tagCALPWSTR;
struct tagCAPROPVARIANT;
struct _RemotableHandle;

/* Union record forward declarations.  */
union __MIDL___MIDL_itf_locationapi_0004_0039_0001;
union __MIDL_IOleAutomationTypes_0001;
union __MIDL_IOleAutomationTypes_0004;
union __MIDL_IOleAutomationTypes_0005;
union __MIDL_IOleAutomationTypes_0006;
union __MIDL_IWinTypes_0009;

/* Union record forward declarations.  */
dispinterface _ILatLongReportFactoryEvents;
dispinterface IDispLatLongReport;
dispinterface _ICivicAddressReportFactoryEvents;
dispinterface IDispCivicAddressReport;
dispinterface ILatLongReportFactory;
dispinterface ILocationReportFactory;
dispinterface ICivicAddressReportFactory;

/* Union record forward declarations.  */
coclass Location;
coclass DefaultLocation;
coclass LatLongReport;
coclass CivicAddressReport;
coclass LatLongReportFactory;
coclass CivicAddressReportFactory;
coclass DispLatLongReport;
coclass DispCivicAddressReport;

/* Enumeration declarations.  */
enum tagTYPEKIND
{
  TKIND_ENUM = (int) 201326592,
  TKIND_RECORD = (int) 201326593,
  TKIND_MODULE = (int) 201326594,
  TKIND_INTERFACE = (int) 201326595,
  TKIND_DISPATCH = (int) 201326596,
  TKIND_COCLASS = (int) 201326597,
  TKIND_ALIAS = (int) 201326598,
  TKIND_UNION = (int) 201326599,
  TKIND_MAX = (int) 201326600
};
enum tagDESCKIND
{
  DESCKIND_NONE = (int) 201326592,
  DESCKIND_FUNCDESC = (int) 201326593,
  DESCKIND_VARDESC = (int) 201326594,
  DESCKIND_TYPECOMP = (int) 201326595,
  DESCKIND_IMPLICITAPPOBJ = (int) 201326596,
  DESCKIND_MAX = (int) 201326597
};
enum tagFUNCKIND
{
  FUNC_VIRTUAL = (int) 201326592,
  FUNC_PUREVIRTUAL = (int) 201326593,
  FUNC_NONVIRTUAL = (int) 201326594,
  FUNC_STATIC = (int) 201326595,
  FUNC_DISPATCH = (int) 201326596
};
enum tagINVOKEKIND
{
  INVOKE_FUNC = (int) 201326593,
  INVOKE_PROPERTYGET = (int) 201326594,
  INVOKE_PROPERTYPUT = (int) 201326596,
  INVOKE_PROPERTYPUTREF = (int) 201326600
};
enum tagCALLCONV
{
  CC_FASTCALL = (int) 201326592,
  CC_CDECL = (int) 201326593,
  CC_MSCPASCAL = (int) 201326594,
  CC_PASCAL = (int) 201326594,
  CC_MACPASCAL = (int) 201326595,
  CC_STDCALL = (int) 201326596,
  CC_FPFASTCALL = (int) 201326597,
  CC_SYSCALL = (int) 201326598,
  CC_MPWCDECL = (int) 201326599,
  CC_MPWPASCAL = (int) 201326600,
  CC_MAX = (int) 201326601
};
enum tagVARKIND
{
  VAR_PERINSTANCE = (int) 201326592,
  VAR_STATIC = (int) 201326593,
  VAR_CONST = (int) 201326594,
  VAR_DISPATCH = (int) 201326595
};
enum tagSYSKIND
{
  SYS_WIN16 = (int) 201326592,
  SYS_WIN32 = (int) 201326593,
  SYS_MAC = (int) 201326594,
  SYS_WIN64 = (int) 201326595
};
enum LOCATION_REPORT_STATUS
{
  REPORT_NOT_SUPPORTED = (int) 201326592,
  REPORT_ERROR = (int) 201326593,
  REPORT_ACCESS_DENIED = (int) 201326594,
  REPORT_INITIALIZING = (int) 201326595,
  REPORT_RUNNING = (int) 201326596
};
enum LOCATION_DESIRED_ACCURACY
{
  LOCATION_DESIRED_ACCURACY_DEFAULT = (int) 201326592,
  LOCATION_DESIRED_ACCURACY_HIGH = (int) 201326593
};

/* Structure/union declarations.  */
struct _SYSTEMTIME
{
  USHORT wYear;
  USHORT wMonth;
  USHORT wDayOfWeek;
  USHORT wDay;
  USHORT wHour;
  USHORT wMinute;
  USHORT wSecond;
  USHORT wMilliseconds;
};
struct _tagpropertykey
{
  struct GUID fmtid;
  UINT pid;
};
struct tag_inner_PROPVARIANT
{
  USHORT vt;
  UCHAR wReserved1;
  UCHAR wReserved2;
  UINT wReserved3;
  union __MIDL___MIDL_itf_locationapi_0004_0039_0001 __MIDL____MIDL_itf_locationapi_0004_00390001;
};
union __MIDL___MIDL_itf_locationapi_0004_0039_0001
{
  UCHAR cVal;
  UCHAR bVal;
  short iVal;
  USHORT uiVal;
  long lVal;
  UINT ulVal;
  int intVal;
  unsigned int uintVal;
  struct _LARGE_INTEGER hVal;
  struct _ULARGE_INTEGER uhVal;
  float fltVal;
  double dblVal;
  WINBOOL boolVal;
  WINBOOL bool;
  SCODE scode;
  CY cyVal;
  DATE date;
  struct _FILETIME filetime;
  struct GUID *puuid;
  struct tagCLIPDATA *pClipData;
  BSTR bstrVal;
  struct tagBSTRBLOB bstrblobVal;
  struct tagBLOB blob;
  LPSTR pszVal;
  LPWSTR pwszVal;
  IUnknown * punkVal;
  IDispatch * pdispVal;
  interface IStream *pStream;
  interface IStorage *pStorage;
  struct tagVersionedStream *pVersionedStream;
  wirePSAFEARRAY parray;
  struct tagCAC cac;
  struct tagCAUB caub;
  struct tagCAI cai;
  struct tagCAUI caui;
  struct tagCAL cal;
  struct tagCAUL caul;
  struct tagCAH cah;
  struct tagCAUH cauh;
  struct tagCAFLT caflt;
  struct tagCADBL cadbl;
  struct tagCABOOL cabool;
  struct tagCASCODE cascode;
  struct tagCACY cacy;
  struct tagCADATE cadate;
  struct tagCAFILETIME cafiletime;
  struct tagCACLSID cauuid;
  struct tagCACLIPDATA caclipdata;
  struct tagCABSTR cabstr;
  struct tagCABSTRBLOB cabstrblob;
  struct tagCALPSTR calpstr;
  struct tagCALPWSTR calpwstr;
  struct tagCAPROPVARIANT capropvar;
  UCHAR *pcVal;
  UCHAR *pbVal;
  short *piVal;
  USHORT *puiVal;
  long *plVal;
  UINT *pulVal;
  int *pintVal;
  unsigned int *puintVal;
  float *pfltVal;
  double *pdblVal;
  WINBOOL *pboolVal;
  DECIMAL *pdecVal;
  SCODE *pscode;
  CY *pcyVal;
  DATE *pdate;
  BSTR *pbstrVal;
  IUnknown **ppunkVal;
  IDispatch **ppdispVal;
  wirePSAFEARRAY *pparray;
  struct tag_inner_PROPVARIANT *pvarVal;
};
struct _LARGE_INTEGER
{
  LONGLONG QuadPart;
};
struct _ULARGE_INTEGER
{
  ULONGLONG QuadPart;
};
struct _FILETIME
{
  UINT dwLowDateTime;
  UINT dwHighDateTime;
};
struct tagCLIPDATA
{
  UINT cbSize;
  long ulClipFmt;
  UCHAR *pClipData;
};
struct tagBSTRBLOB
{
  UINT cbSize;
  UCHAR *pData;
};
struct tagBLOB
{
  UINT cbSize;
  UCHAR *pBlobData;
};
struct tagSTATSTG
{
  LPWSTR pwcsName;
  UINT type;
  struct _ULARGE_INTEGER cbSize;
  struct _FILETIME mtime;
  struct _FILETIME ctime;
  struct _FILETIME atime;
  UINT grfMode;
  UINT grfLocksSupported;
  struct GUID clsid;
  UINT grfStateBits;
  UINT reserved;
};
struct tagRemSNB
{
  UINT ulCntStr;
  UINT ulCntChar;
  USHORT *rgString;
};
struct tagVersionedStream
{
  struct GUID guidVersion;
  interface IStream *pStream;
};
struct _wireSAFEARRAY
{
  USHORT cDims;
  USHORT fFeatures;
  UINT cbElements;
  UINT cLocks;
  struct _wireSAFEARRAY_UNION uArrayStructs;
  struct tagSAFEARRAYBOUND *rgsabound;
};
struct _wireSAFEARRAY_UNION
{
  UINT sfType;
  union __MIDL_IOleAutomationTypes_0001 u;
};
union __MIDL_IOleAutomationTypes_0001
{
  struct _wireSAFEARR_BSTR BstrStr;
  struct _wireSAFEARR_UNKNOWN UnknownStr;
  struct _wireSAFEARR_DISPATCH DispatchStr;
  struct _wireSAFEARR_VARIANT VariantStr;
  struct _wireSAFEARR_BRECORD RecordStr;
  struct _wireSAFEARR_HAVEIID HaveIidStr;
  struct _BYTE_SIZEDARR ByteStr;
  struct _SHORT_SIZEDARR WordStr;
  struct _LONG_SIZEDARR LongStr;
  struct _HYPER_SIZEDARR HyperStr;
};
struct _wireSAFEARR_BSTR
{
  UINT Size;
  struct _FLAGGED_WORD_BLOB **aBstr;
};
struct _FLAGGED_WORD_BLOB
{
  UINT fFlags;
  UINT clSize;
  USHORT *asData;
};
struct _wireSAFEARR_UNKNOWN
{
  UINT Size;
  IUnknown **apUnknown;
};
struct _wireSAFEARR_DISPATCH
{
  UINT Size;
  IDispatch **apDispatch;
};
struct _wireSAFEARR_VARIANT
{
  UINT Size;
  struct _wireVARIANT **aVariant;
};
struct _wireVARIANT
{
  UINT clSize;
  UINT rpcReserved;
  USHORT vt;
  USHORT wReserved1;
  USHORT wReserved2;
  USHORT wReserved3;
  union __MIDL_IOleAutomationTypes_0004 DUMMYUNIONNAME;
};
union __MIDL_IOleAutomationTypes_0004
{
  LONGLONG llVal;
  long lVal;
  UCHAR bVal;
  short iVal;
  float fltVal;
  double dblVal;
  WINBOOL boolVal;
  SCODE scode;
  CY cyVal;
  DATE date;
  struct _FLAGGED_WORD_BLOB *bstrVal;
  IUnknown * punkVal;
  IDispatch * pdispVal;
  struct _wireSAFEARRAY **parray;
  struct _wireBRECORD *brecVal;
  UCHAR *pbVal;
  short *piVal;
  long *plVal;
  LONGLONG *pllVal;
  float *pfltVal;
  double *pdblVal;
  WINBOOL *pboolVal;
  SCODE *pscode;
  CY *pcyVal;
  DATE *pdate;
  struct _FLAGGED_WORD_BLOB **pbstrVal;
  IUnknown **ppunkVal;
  IDispatch **ppdispVal;
  struct _wireSAFEARRAY ***pparray;
  struct _wireVARIANT **pvarVal;
  UCHAR cVal;
  USHORT uiVal;
  UINT ulVal;
  ULONGLONG ullVal;
  int intVal;
  unsigned int uintVal;
  DECIMAL decVal;
  DECIMAL *pdecVal;
  UCHAR *pcVal;
  USHORT *puiVal;
  UINT *pulVal;
  ULONGLONG *pullVal;
  int *pintVal;
  unsigned int *puintVal;
};
struct _wireBRECORD
{
  UINT fFlags;
  UINT clSize;
  interface IRecordInfo *pRecInfo;
  UCHAR *pRecord;
};
struct tagTYPEATTR
{
  struct GUID guid;
  UINT lcid;
  UINT dwReserved;
  long memidConstructor;
  long memidDestructor;
  LPWSTR lpstrSchema;
  UINT cbSizeInstance;
  enum tagTYPEKIND typekind;
  USHORT cFuncs;
  USHORT cVars;
  USHORT cImplTypes;
  USHORT cbSizeVft;
  USHORT cbAlignment;
  USHORT wTypeFlags;
  USHORT wMajorVerNum;
  USHORT wMinorVerNum;
  struct tagTYPEDESC tdescAlias;
  struct tagIDLDESC idldescType;
};
struct tagTYPEDESC
{
  union __MIDL_IOleAutomationTypes_0005 DUMMYUNIONNAME;
  USHORT vt;
};
union __MIDL_IOleAutomationTypes_0005
{
  struct tagTYPEDESC *lptdesc;
  struct tagARRAYDESC *lpadesc;
  UINT hreftype;
};
struct tagARRAYDESC
{
  struct tagTYPEDESC tdescElem;
  USHORT cDims;
  struct tagSAFEARRAYBOUND *rgbounds;
};
struct tagSAFEARRAYBOUND
{
  UINT cElements;
  long lLbound;
};
struct tagIDLDESC
{
  ULONG_PTR dwReserved;
  USHORT wIDLFlags;
};
struct tagFUNCDESC
{
  long memid;
  SCODE *lprgscode;
  struct tagELEMDESC *lprgelemdescParam;
  enum tagFUNCKIND funckind;
  enum tagINVOKEKIND invkind;
  enum tagCALLCONV callconv;
  short cParams;
  short cParamsOpt;
  short oVft;
  short cScodes;
  struct tagELEMDESC elemdescFunc;
  USHORT wFuncFlags;
};
struct tagELEMDESC
{
  struct tagTYPEDESC tdesc;
  struct tagPARAMDESC paramdesc;
};
struct tagPARAMDESC
{
  struct tagPARAMDESCEX *pparamdescex;
  USHORT wParamFlags;
};
struct tagPARAMDESCEX
{
  UINT cBytes;
  VARIANT varDefaultValue;
};
struct tagVARDESC
{
  long memid;
  LPWSTR lpstrSchema;
  union __MIDL_IOleAutomationTypes_0006 DUMMYUNIONNAME;
  struct tagELEMDESC elemdescVar;
  USHORT wVarFlags;
  enum tagVARKIND varkind;
};
union __MIDL_IOleAutomationTypes_0006
{
  UINT oInst;
  VARIANT *lpvarValue;
};
struct tagTLIBATTR
{
  struct GUID guid;
  UINT lcid;
  enum tagSYSKIND syskind;
  USHORT wMajorVerNum;
  USHORT wMinorVerNum;
  USHORT wLibFlags;
};
struct _wireSAFEARR_BRECORD
{
  UINT Size;
  struct _wireBRECORD **aRecord;
};
struct _wireSAFEARR_HAVEIID
{
  UINT Size;
  IUnknown **apUnknown;
  struct GUID iid;
};
struct _BYTE_SIZEDARR
{
  UINT clSize;
  UCHAR *pData;
};
struct _SHORT_SIZEDARR
{
  UINT clSize;
  USHORT *pData;
};
struct _LONG_SIZEDARR
{
  UINT clSize;
  UINT *pData;
};
struct _HYPER_SIZEDARR
{
  UINT clSize;
  LONGLONG *pData;
};
struct tagCAC
{
  UINT cElems;
  UCHAR *pElems;
};
struct tagCAUB
{
  UINT cElems;
  UCHAR *pElems;
};
struct tagCAI
{
  UINT cElems;
  short *pElems;
};
struct tagCAUI
{
  UINT cElems;
  USHORT *pElems;
};
struct tagCAL
{
  UINT cElems;
  long *pElems;
};
struct tagCAUL
{
  UINT cElems;
  UINT *pElems;
};
struct tagCAH
{
  UINT cElems;
  struct _LARGE_INTEGER *pElems;
};
struct tagCAUH
{
  UINT cElems;
  struct _ULARGE_INTEGER *pElems;
};
struct tagCAFLT
{
  UINT cElems;
  float *pElems;
};
struct tagCADBL
{
  UINT cElems;
  double *pElems;
};
struct tagCABOOL
{
  UINT cElems;
  WINBOOL *pElems;
};
struct tagCASCODE
{
  UINT cElems;
  SCODE *pElems;
};
struct tagCACY
{
  UINT cElems;
  CY *pElems;
};
struct tagCADATE
{
  UINT cElems;
  DATE *pElems;
};
struct tagCAFILETIME
{
  UINT cElems;
  struct _FILETIME *pElems;
};
struct tagCACLSID
{
  UINT cElems;
  struct GUID *pElems;
};
struct tagCACLIPDATA
{
  UINT cElems;
  struct tagCLIPDATA *pElems;
};
struct tagCABSTR
{
  UINT cElems;
  BSTR *pElems;
};
struct tagCABSTRBLOB
{
  UINT cElems;
  struct tagBSTRBLOB *pElems;
};
struct tagCALPSTR
{
  UINT cElems;
  LPSTR pElems;
};
struct tagCALPWSTR
{
  UINT cElems;
  LPWSTR pElems;
};
struct tagCAPROPVARIANT
{
  UINT cElems;
  struct tag_inner_PROPVARIANT *pElems;
};
struct _RemotableHandle
{
  long fContext;
  union __MIDL_IWinTypes_0009 u;
};
union __MIDL_IWinTypes_0009
{
  long hInproc;
  long hRemote;
};

/* Type definitions.  */
typedef struct tagRemSNB * wireSNB;
typedef struct _wireSAFEARRAY ** wirePSAFEARRAY;
typedef ULONGLONG ULONG_PTR;
typedef UINT DWORD;
typedef struct _RemotableHandle * wireHWND;

[
  uuid(4486DF98-22A5-4F6B-BD5C-8CADCEC0A6DE),
  version(1.0),
  helpstring("LocationApi 1.0 Type Library")
]
library locationapilib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(E5B8E079-EE6D-4E33-A438-C87F2E959254),
     helpstring("Location Class"),
     cancreate
   ]
   coclass Location
   {
     interface ILocation;
   };
   [
     uuid(8B7FBFE0-5CD7-494A-AF8C-283A65707506),
     helpstring("DefaultLocation Class"),
     cancreate
   ]
   coclass DefaultLocation
   {
     interface IDefaultLocation;
   };
   [
     uuid(ED81C073-1F84-4CA8-A161-183C776BC651),
     helpstring("LatLongReport Class")
   ]
   coclass LatLongReport
   {
     interface ILatLongReport;
   };
   [
     uuid(D39E7BDD-7D05-46B8-8721-80CF035F57D7),
     helpstring("CivicAddressReport Class")
   ]
   coclass CivicAddressReport
   {
     interface ICivicAddressReport;
   };
   [
     uuid(9DCC3CC8-8609-4863-BAD4-03601F4C65E8),
     helpstring("LatLongReportFactory Class"),
     cancreate
   ]
   coclass LatLongReportFactory
   {
     dispinterface ILatLongReportFactory;
     dispinterface _ILatLongReportFactoryEvents;
   };
   [
     uuid(2A11F42C-3E81-4AD4-9CBE-45579D89671A),
     helpstring("CivicAddressReportFactory Class"),
     cancreate
   ]
   coclass CivicAddressReportFactory
   {
     dispinterface ICivicAddressReportFactory;
     dispinterface _ICivicAddressReportFactoryEvents;
   };
   [
     uuid(7A7C3277-8F84-4636-95B2-EBB5507FF77E),
     helpstring("LatLongReport Class"),
     cancreate
   ]
   coclass DispLatLongReport
   {
     dispinterface IDispLatLongReport;
   };
   [
     uuid(4C596AEC-8544-4082-BA9F-EB0A7D8E65C6),
     helpstring("CivicAddressReport Class"),
     cancreate
   ]
   coclass DispCivicAddressReport
   {
     dispinterface IDispCivicAddressReport;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(16EE6CB7-AB3C-424B-849F-269BE551FCBC),
     helpstring("_ILatLongReportFactoryEvents Interface"),
     dispatchable
   ]
   dispinterface _ILatLongReportFactoryEvents
   {
     [id(1)]
     void __stdcall NewLatLongReport (
       [in] dispinterface IDispLatLongReport *newReport
     );
     void __stdcall StatusChanged (
       [in] UINT status
     );
   };
   [
     uuid(8AE32723-389B-4A11-9957-5BDD48FC9617),
     helpstring("IDispLatLongReport Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDispLatLongReport : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Latitude (
       [out retval] double *pVal
     );
     [propget]
     HRESULT __stdcall Longitude (
       [out retval] double *pVal
     );
     [propget]
     HRESULT __stdcall ErrorRadius (
       [out retval] double *pVal
     );
     [propget]
     HRESULT __stdcall Altitude (
       [out retval] double *pVal
     );
     [propget]
     HRESULT __stdcall AltitudeError (
       [out retval] double *pVal
     );
     [propget]
     HRESULT __stdcall Timestamp (
       [out retval] DATE *pVal
     );
   };
   [
     uuid(C96039FF-72EC-4617-89BD-84D88BEDC722),
     helpstring("_ICivicAddressReportFactoryEvents Interface"),
     dispatchable
   ]
   dispinterface _ICivicAddressReportFactoryEvents
   {
     [id(1)]
     void __stdcall NewCivicAddressReport (
       [in] dispinterface IDispCivicAddressReport *newReport
     );
     void __stdcall StatusChanged (
       [in] UINT status
     );
   };
   [
     uuid(16FF1A34-9E30-42C3-B44D-E22513B5767A),
     helpstring("IDispCivicAddressReport Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDispCivicAddressReport : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall AddressLine1 (
       [out retval] BSTR *pAddress1
     );
     [propget]
     HRESULT __stdcall AddressLine2 (
       [out retval] BSTR *pAddress2
     );
     [propget]
     HRESULT __stdcall City (
       [out retval] BSTR *pCity
     );
     [propget]
     HRESULT __stdcall StateProvince (
       [out retval] BSTR *pStateProvince
     );
     [propget]
     HRESULT __stdcall PostalCode (
       [out retval] BSTR *pPostalCode
     );
     [propget]
     HRESULT __stdcall CountryRegion (
       [out retval] BSTR *pCountryRegion
     );
     [propget]
     HRESULT __stdcall DetailLevel (
       [out retval] UINT *pDetailLevel
     );
     [propget]
     HRESULT __stdcall Timestamp (
       [out retval] DATE *pVal
     );
   };
   [
     uuid(3F0804CB-B114-447D-83DD-390174EBB082),
     helpstring("ILatLongReportFactory Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ILatLongReportFactory : ILocationReportFactory
   {
     [id(7), propget]
     HRESULT __stdcall LatLongReport (
       [out retval] dispinterface IDispLatLongReport **pVal
     );
   };
   [
     uuid(2DAEC322-90B2-47E4-BB08-0DA841935A6B),
     helpstring("ILocationReportFactory Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ILocationReportFactory : IDispatch
   {
     [id(1)]
     HRESULT __stdcall ListenForReports (
       [in opt] UINT requestedReportInterval = (UINT) 201326592
     );
     HRESULT __stdcall StopListeningForReports (void);
     [propget]
     HRESULT __stdcall status (
       [out retval] UINT *pVal
     );
     [propget]
     HRESULT __stdcall ReportInterval (
       [out retval] UINT *pMilliseconds
     );
     [id(4), propput]
     HRESULT __stdcall ReportInterval (
       [in] UINT argNo1
     );
     [propget]
     HRESULT __stdcall desiredAccuracy (
       [out retval] UINT *pDesiredAccuracy
     );
     [id(5), propput]
     HRESULT __stdcall desiredAccuracy (
       [in] UINT argNo1
     );
     HRESULT __stdcall RequestPermissions (
       [in] UINT *hWnd
     );
   };
   [
     uuid(BF773B93-C64F-4BEE-BEB2-67C0B8DF66E0),
     helpstring("ICivicAddressReportFactory Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ICivicAddressReportFactory : ILocationReportFactory
   {
     [id(7), propget]
     HRESULT __stdcall CivicAddressReport (
       [out retval] dispinterface IDispCivicAddressReport **pVal
     );
   };

};

/* Interface declarations.  */
[
  uuid(AB2ECE69-56D9-4F28-B525-DE1B0EE44237),
  helpstring("ILocation Interface")
]
interface ILocation : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RegisterForReport (
    [in] interface ILocationEvents *pEvents,
    [in] struct GUID *reportType,
    [in] UINT dwRequestedReportInterval
  );
  HRESULT __stdcall UnregisterForReport (
    [in] struct GUID *reportType
  );
  HRESULT __stdcall GetReport (
    [in] struct GUID *reportType,
    [out retval] interface ILocationReport **ppLocationReport
  );
  HRESULT __stdcall GetReportStatus (
    [in] struct GUID *reportType,
    [out retval] enum LOCATION_REPORT_STATUS *pStatus
  );
  HRESULT __stdcall GetReportInterval (
    [in] struct GUID *reportType,
    [out retval] UINT *pMilliseconds
  );
  HRESULT __stdcall SetReportInterval (
    [in] struct GUID *reportType,
    [in] UINT millisecondsRequested
  );
  HRESULT __stdcall GetDesiredAccuracy (
    [in] struct GUID *reportType,
    [out retval] enum LOCATION_DESIRED_ACCURACY *pDesiredAccuracy
  );
  HRESULT __stdcall SetDesiredAccuracy (
    [in] struct GUID *reportType,
    [in] enum LOCATION_DESIRED_ACCURACY desiredAccuracy
  );
  HRESULT __stdcall RequestPermissions (
    [in] wireHWND hParent,
    [in] struct GUID *pReportTypes,
    [in] UINT count,
    [in] long fModal
  );
};
[
  uuid(CAE02BBF-798B-4508-A207-35A7906DC73D),
  helpstring("ILocationEvents Interface")
]
interface ILocationEvents : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall OnLocationChanged (
    [in] struct GUID *reportType,
    [in] interface ILocationReport *pLocationReport
  );
  HRESULT __stdcall OnStatusChanged (
    [in] struct GUID *reportType,
    [in] enum LOCATION_REPORT_STATUS newStatus
  );
};
[
  uuid(C8B7F7EE-75D0-4DB9-B62D-7A0F369CA456),
  helpstring("ILocationReport Interface")
]
interface ILocationReport : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetSensorID (
    [out retval] struct GUID *pSensorID
  );
  HRESULT __stdcall GetTimestamp (
    [out retval] struct _SYSTEMTIME *pCreationTime
  );
  HRESULT __stdcall GetValue (
    [in] struct _tagpropertykey *pKey,
    [out retval] struct tag_inner_PROPVARIANT *pValue
  );
};
[
  uuid(0000000C-0000-0000-C000-000000000046)
]
interface IStream : ISequentialStream
{
  [id(1610743808)]
  HRESULT __stdcall RemoteSeek (
    [in] struct _LARGE_INTEGER dlibMove,
    [in] UINT dwOrigin,
    [out] struct _ULARGE_INTEGER *plibNewPosition
  );
  HRESULT __stdcall SetSize (
    [in] struct _ULARGE_INTEGER libNewSize
  );
  HRESULT __stdcall RemoteCopyTo (
    [in] interface IStream *pstm,
    [in] struct _ULARGE_INTEGER cb,
    [out] struct _ULARGE_INTEGER *pcbRead,
    [out] struct _ULARGE_INTEGER *pcbWritten
  );
  HRESULT __stdcall Commit (
    [in] UINT grfCommitFlags
  );
  HRESULT __stdcall Revert (void);
  HRESULT __stdcall LockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall UnlockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall Stat (
    [out] struct tagSTATSTG *pstatstg,
    [in] UINT grfStatFlag
  );
  HRESULT __stdcall Clone (
    [out] interface IStream **ppstm
  );
};
[
  uuid(0C733A30-2A1C-11CE-ADE5-00AA0044773D)
]
interface ISequentialStream : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteRead (
    [out] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbRead
  );
  HRESULT __stdcall RemoteWrite (
    [in] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbWritten
  );
};
[
  uuid(0000000B-0000-0000-C000-000000000046)
]
interface IStorage : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall CreateStream (
    [in] LPWSTR pwcsName,
    [in] UINT grfMode,
    [in] UINT reserved1,
    [in] UINT reserved2,
    [out] interface IStream **ppstm
  );
  HRESULT __stdcall RemoteOpenStream (
    [in] LPWSTR pwcsName,
    [in] UINT cbReserved1,
    [in] UCHAR *reserved1,
    [in] UINT grfMode,
    [in] UINT reserved2,
    [out] interface IStream **ppstm
  );
  HRESULT __stdcall CreateStorage (
    [in] LPWSTR pwcsName,
    [in] UINT grfMode,
    [in] UINT reserved1,
    [in] UINT reserved2,
    [out] interface IStorage **ppstg
  );
  HRESULT __stdcall OpenStorage (
    [in] LPWSTR pwcsName,
    [in] interface IStorage *pstgPriority,
    [in] UINT grfMode,
    [in] wireSNB snbExclude,
    [in] UINT reserved,
    [out] interface IStorage **ppstg
  );
  HRESULT __stdcall RemoteCopyTo (
    [in] UINT ciidExclude,
    [in] struct GUID *rgiidExclude,
    [in] wireSNB snbExclude,
    [in] interface IStorage *pstgDest
  );
  HRESULT __stdcall MoveElementTo (
    [in] LPWSTR pwcsName,
    [in] interface IStorage *pstgDest,
    [in] LPWSTR pwcsNewName,
    [in] UINT grfFlags
  );
  HRESULT __stdcall Commit (
    [in] UINT grfCommitFlags
  );
  HRESULT __stdcall Revert (void);
  HRESULT __stdcall RemoteEnumElements (
    [in] UINT reserved1,
    [in] UINT cbReserved2,
    [in] UCHAR *reserved2,
    [in] UINT reserved3,
    [out] interface IEnumSTATSTG **ppenum
  );
  HRESULT __stdcall DestroyElement (
    [in] LPWSTR pwcsName
  );
  HRESULT __stdcall RenameElement (
    [in] LPWSTR pwcsOldName,
    [in] LPWSTR pwcsNewName
  );
  HRESULT __stdcall SetElementTimes (
    [in] LPWSTR pwcsName,
    [in] struct _FILETIME *pctime,
    [in] struct _FILETIME *patime,
    [in] struct _FILETIME *pmtime
  );
  HRESULT __stdcall SetClass (
    [in] struct GUID *clsid
  );
  HRESULT __stdcall SetStateBits (
    [in] UINT grfStateBits,
    [in] UINT grfMask
  );
  HRESULT __stdcall Stat (
    [out] struct tagSTATSTG *pstatstg,
    [in] UINT grfStatFlag
  );
};
[
  uuid(0000000D-0000-0000-C000-000000000046)
]
interface IEnumSTATSTG : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] struct tagSTATSTG *rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumSTATSTG **ppenum
  );
};
[
  uuid(0000002F-0000-0000-C000-000000000046)
]
interface IRecordInfo : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RecordInit (
    [out] void *pvNew
  );
  HRESULT __stdcall RecordClear (
    [in] void *pvExisting
  );
  HRESULT __stdcall RecordCopy (
    [in] void *pvExisting,
    [out] void *pvNew
  );
  HRESULT __stdcall GetGuid (
    [out] struct GUID *pguid
  );
  HRESULT __stdcall GetName (
    [out] BSTR *pbstrName
  );
  HRESULT __stdcall GetSize (
    [out] UINT *pcbSize
  );
  HRESULT __stdcall GetTypeInfo (
    [out] interface ITypeInfo **ppTypeInfo
  );
  HRESULT __stdcall GetField (
    [in] void *pvData,
    [in] LPWSTR szFieldName,
    [out] VARIANT *pvarField
  );
  HRESULT __stdcall GetFieldNoCopy (
    [in] void *pvData,
    [in] LPWSTR szFieldName,
    [out] VARIANT *pvarField,
    [out] void *ppvDataCArray
  );
  HRESULT __stdcall PutField (
    [in] UINT wFlags,
    [in out] void *pvData,
    [in] LPWSTR szFieldName,
    [in] VARIANT *pvarField
  );
  HRESULT __stdcall PutFieldNoCopy (
    [in] UINT wFlags,
    [in out] void *pvData,
    [in] LPWSTR szFieldName,
    [in] VARIANT *pvarField
  );
  HRESULT __stdcall GetFieldNames (
    [in out] UINT *pcNames,
    [out] BSTR *rgBstrNames
  );
  long __stdcall IsMatchingType (
    [in] interface IRecordInfo *pRecordInfo
  );
  void * __stdcall RecordCreate (void);
  HRESULT __stdcall RecordCreateCopy (
    [in] void *pvSource,
    [out] void *ppvDest
  );
  HRESULT __stdcall RecordDestroy (
    [in] void *pvRecord
  );
};
[
  uuid(00020401-0000-0000-C000-000000000046)
]
interface ITypeInfo : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteGetTypeAttr (
    [out] struct tagTYPEATTR **ppTypeAttr,
    [out] DWORD *pDummy
  );
  HRESULT __stdcall GetTypeComp (
    [out] interface ITypeComp **ppTComp
  );
  HRESULT __stdcall RemoteGetFuncDesc (
    [in] unsigned int index,
    [out] struct tagFUNCDESC **ppFuncDesc,
    [out] DWORD *pDummy
  );
  HRESULT __stdcall RemoteGetVarDesc (
    [in] unsigned int index,
    [out] struct tagVARDESC **ppVarDesc,
    [out] DWORD *pDummy
  );
  HRESULT __stdcall RemoteGetNames (
    [in] long memid,
    [out] BSTR *rgBstrNames,
    [in] unsigned int cMaxNames,
    [out] unsigned int *pcNames
  );
  HRESULT __stdcall GetRefTypeOfImplType (
    [in] unsigned int index,
    [out] UINT *pRefType
  );
  HRESULT __stdcall GetImplTypeFlags (
    [in] unsigned int index,
    [out] int *pImplTypeFlags
  );
  HRESULT __stdcall LocalGetIDsOfNames (void);
  HRESULT __stdcall LocalInvoke (void);
  HRESULT __stdcall RemoteGetDocumentation (
    [in] long memid,
    [in] UINT refPtrFlags,
    [out] BSTR *pbstrName,
    [out] BSTR *pBstrDocString,
    [out] UINT *pdwHelpContext,
    [out] BSTR *pBstrHelpFile
  );
  HRESULT __stdcall RemoteGetDllEntry (
    [in] long memid,
    [in] enum tagINVOKEKIND invkind,
    [in] UINT refPtrFlags,
    [out] BSTR *pBstrDllName,
    [out] BSTR *pbstrName,
    [out] USHORT *pwOrdinal
  );
  HRESULT __stdcall GetRefTypeInfo (
    [in] UINT hreftype,
    [out] interface ITypeInfo **ppTInfo
  );
  HRESULT __stdcall LocalAddressOfMember (void);
  HRESULT __stdcall RemoteCreateInstance (
    [in] struct GUID *riid,
    [out] IUnknown **ppvObj
  );
  HRESULT __stdcall GetMops (
    [in] long memid,
    [out] BSTR *pBstrMops
  );
  HRESULT __stdcall RemoteGetContainingTypeLib (
    [out] interface ITypeLib **ppTLib,
    [out] unsigned int *pIndex
  );
  HRESULT __stdcall LocalReleaseTypeAttr (void);
  HRESULT __stdcall LocalReleaseFuncDesc (void);
  HRESULT __stdcall LocalReleaseVarDesc (void);
};
[
  uuid(00020403-0000-0000-C000-000000000046)
]
interface ITypeComp : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteBind (
    [in] LPWSTR szName,
    [in] UINT lHashVal,
    [in] USHORT wFlags,
    [out] interface ITypeInfo **ppTInfo,
    [out] enum tagDESCKIND *pDescKind,
    [out] struct tagFUNCDESC **ppFuncDesc,
    [out] struct tagVARDESC **ppVarDesc,
    [out] interface ITypeComp **ppTypeComp,
    [out] DWORD *pDummy
  );
  HRESULT __stdcall RemoteBindType (
    [in] LPWSTR szName,
    [in] UINT lHashVal,
    [out] interface ITypeInfo **ppTInfo
  );
};
[
  uuid(00020402-0000-0000-C000-000000000046)
]
interface ITypeLib : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteGetTypeInfoCount (
    [out] unsigned int *pcTInfo
  );
  HRESULT __stdcall GetTypeInfo (
    [in] unsigned int index,
    [out] interface ITypeInfo **ppTInfo
  );
  HRESULT __stdcall GetTypeInfoType (
    [in] unsigned int index,
    [out] enum tagTYPEKIND *pTKind
  );
  HRESULT __stdcall GetTypeInfoOfGuid (
    [in] struct GUID *guid,
    [out] interface ITypeInfo **ppTInfo
  );
  HRESULT __stdcall RemoteGetLibAttr (
    [out] struct tagTLIBATTR **ppTLibAttr,
    [out] DWORD *pDummy
  );
  HRESULT __stdcall GetTypeComp (
    [out] interface ITypeComp **ppTComp
  );
  HRESULT __stdcall RemoteGetDocumentation (
    [in] int index,
    [in] UINT refPtrFlags,
    [out] BSTR *pbstrName,
    [out] BSTR *pBstrDocString,
    [out] UINT *pdwHelpContext,
    [out] BSTR *pBstrHelpFile
  );
  HRESULT __stdcall RemoteIsName (
    [in] LPWSTR szNameBuf,
    [in] UINT lHashVal,
    [out] long *pfName,
    [out] BSTR *pBstrLibName
  );
  HRESULT __stdcall RemoteFindName (
    [in] LPWSTR szNameBuf,
    [in] UINT lHashVal,
    [out] interface ITypeInfo **ppTInfo,
    [out] long *rgMemId,
    [in out] USHORT *pcFound,
    [out] BSTR *pBstrLibName
  );
  HRESULT __stdcall LocalReleaseTLibAttr (void);
};
[
  uuid(A65AF77E-969A-4A2E-8ACA-33BB7CBB1235),
  helpstring("IDefaultLocation Interface")
]
interface IDefaultLocation : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall SetReport (
    [in] struct GUID *reportType,
    [in] interface ILocationReport *pLocationReport
  );
  HRESULT __stdcall GetReport (
    [in] struct GUID *reportType,
    [out retval] interface ILocationReport **ppLocationReport
  );
};
[
  uuid(7FED806D-0EF8-4F07-80AC-36A0BEAE3134),
  helpstring("ILatLongReport Interface")
]
interface ILatLongReport : ILocationReport
{
  [id(1610743808)]
  HRESULT __stdcall GetLatitude (
    [out retval] double *pLatitude
  );
  HRESULT __stdcall GetLongitude (
    [out retval] double *pLongitude
  );
  HRESULT __stdcall GetErrorRadius (
    [out retval] double *pErrorRadius
  );
  HRESULT __stdcall GetAltitude (
    [out retval] double *pAltitude
  );
  HRESULT __stdcall GetAltitudeError (
    [out retval] double *pAltitudeError
  );
};
[
  uuid(C0B19F70-4ADF-445D-87F2-CAD8FD711792),
  helpstring("ICivicAddressReport Interface")
]
interface ICivicAddressReport : ILocationReport
{
  [id(1610743808)]
  HRESULT __stdcall GetAddressLine1 (
    [out retval] BSTR *pbstrAddress1
  );
  HRESULT __stdcall GetAddressLine2 (
    [out retval] BSTR *pbstrAddress2
  );
  HRESULT __stdcall GetCity (
    [out retval] BSTR *pbstrCity
  );
  HRESULT __stdcall GetStateProvince (
    [out retval] BSTR *pbstrStateProvince
  );
  HRESULT __stdcall GetPostalCode (
    [out retval] BSTR *pbstrPostalCode
  );
  HRESULT __stdcall GetCountryRegion (
    [out retval] BSTR *pbstrCountryRegion
  );
  HRESULT __stdcall GetDetailLevel (
    [out retval] UINT *pDetailLevel
  );
};

