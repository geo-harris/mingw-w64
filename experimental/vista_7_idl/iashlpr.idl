/* Automated generated idl file <iashelperlib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface IRequestSource;
interface IRequest;
interface IRecvRequest;

/* Structure forward declarations.  */
struct _IASATTRIBUTE;
struct _IASVALUE;
struct _IAS_INET_ADDR;
struct sockaddr_storage;
struct _IAS_STRING;
struct _IAS_OCTET_STRING;
struct _FILETIME;

/* Union record forward declarations.  */
union __MIDL___MIDL_itf_iashlpr_0001_0064_0002;

/* Union record forward declarations.  */
dispinterface IIasComponent;

/* Union record forward declarations.  */
coclass IasHelper;

/* Enumeration declarations.  */
enum _IASPROTOCOL
{
  IAS_PROTOCOL_INVALID = (int) 201326592,
  IAS_PROTOCOL_NONE = (int) 201326593,
  IAS_PROTOCOL_RADIUS = (int) 201326594,
  IAS_PROTOCOL_TACACSPLUS = (int) 201326595,
  IAS_PROTOCOL_LDAP = (int) 201326596,
  IAS_PROTOCOL_RAS = (int) 201326597
};
enum _IASRESPONSE
{
  IAS_RESPONSE_INVALID = (int) 201326592,
  IAS_RESPONSE_ACCESS_ACCEPT = (int) 201326593,
  IAS_RESPONSE_ACCESS_REJECT = (int) 201326594,
  IAS_RESPONSE_ACCESS_CHALLENGE = (int) 201326595,
  IAS_RESPONSE_ACCOUNTING = (int) 201326596,
  IAS_RESPONSE_DISCARD_PACKET = (int) 201326597,
  IAS_RESPONSE_FORWARD_PACKET = (int) 201327591,
  IAS_RESPONSE_RAS = (int) 201327592,
  IAS_RESPONSE_MAX = (int) 201328640
};
enum _IASREQUESTSTATUS
{
  IAS_REQUEST_STATUS_ABORT = (int) 201326592,
  IAS_REQUEST_STATUS_CONTINUE = (int) 201326593,
  IAS_REQUEST_STATUS_HANDLED = (int) 201326594,
  IAS_REQUEST_STATUS_INVALID = (int) 201326595
};
enum IASTYPEENUM
{
  IASTYPE_INVALID = (int) 201326592,
  IASTYPE_BOOLEAN = (int) 201326593,
  IASTYPE_INTEGER = (int) 201326594,
  IASTYPE_ENUM = (int) 201326595,
  IASTYPE_INET_ADDR = (int) 201326596,
  IASTYPE_STRING = (int) 201326597,
  IASTYPE_OCTET_STRING = (int) 201326598,
  IASTYPE_UTC_TIME = (int) 201326599,
  IASTYPE_PROV_SPECIFIC = (int) 201326600,
  IASTYPE_UNSIGNEDINTEGER = (int) 201326601,
  IASTYPE_INET6_ADDR = (int) 201326602
};

/* Structure/union declarations.  */
struct _IASATTRIBUTE
{
  UINT dwReserved;
  UINT dwFlags;
  UINT dwId;
  struct _IASVALUE Value;
};
struct _IASVALUE
{
  enum IASTYPEENUM itType;
  union __MIDL___MIDL_itf_iashlpr_0001_0064_0002 __MIDL____MIDL_itf_iashlpr_0001_00640000;
};
union __MIDL___MIDL_itf_iashlpr_0001_0064_0002
{
  UINT Boolean;
  UINT Integer;
  UINT Enumerator;
  struct _IAS_INET_ADDR InetAddr;
  struct _IAS_STRING String;
  struct _IAS_OCTET_STRING OctetString;
  struct _FILETIME UTCTime;
  struct _IAS_OCTET_STRING ProviderSpecific;
};
struct _IAS_INET_ADDR
{
  struct sockaddr_storage *pAddr;
};
struct sockaddr_storage
{
  short ss_family;
  UCHAR __ss_pad1[6];
  LONGLONG __ss_align;
  UCHAR __ss_pad2[112];
};
struct _IAS_STRING
{
  LPSTR pszAnsi;
  LPWSTR pszWide;
};
struct _IAS_OCTET_STRING
{
  UINT dwLength;
  UCHAR *lpValue;
};
struct _FILETIME
{
  UINT dwLowDateTime;
  UINT dwHighDateTime;
};

/* Type definitions.  */
typedef enum _IASREQUESTSTATUS IASREQUESTSTATUS;

[
  uuid(6BC096BB-0CE6-11D1-BAAE-00C04FC2E20D),
  version(1.0),
  helpstring("IAS Helper COM Component 1.0 Type Library")
]
library iashelperlib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(6BC096BC-0CE6-11D1-BAAE-00C04FC2E20D),
     helpstring("IAS Helper COM Component class"),
     cancreate
   ]
   coclass IasHelper
   {
     dispinterface IIasComponent;
     interface IRequestSource;
     interface IRecvRequest;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(6BC096B4-0CE6-11D1-BAAE-00C04FC2E20D),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IIasComponent : IDispatch
   {
     [id(1)]
     HRESULT __stdcall Initialize (void);
     HRESULT __stdcall Shutdown (void);
     HRESULT __stdcall GetProperty (
       long Id,
       VARIANT *pValue
     );
     HRESULT __stdcall PutProperty (
       long Id,
       VARIANT *pValue
     );
     HRESULT __stdcall InitNew (void);
     HRESULT __stdcall Suspend (void);
     HRESULT __stdcall Resume (void);
     HRESULT __stdcall ReInitialize (void);
   };

};

/* Interface declarations.  */
[
  uuid(6BC096A9-0CE6-11D1-BAAE-00C04FC2E20D),
  oleautomation
]
interface IRequestSource : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall OnRequestComplete (
    interface IRequest *pRequest,
    IASREQUESTSTATUS eStatus
  );
};
[
  uuid(6BC096A7-0CE6-11D1-BAAE-00C04FC2E20D)
]
interface IRequest : IUnknown
{
  [id(1), propget]
  HRESULT __stdcall Request (
    [out retval] long *pVal
  );
  [id(1), propput]
  HRESULT __stdcall Request (
    [in] long argNo1
  );
  [propget]
  HRESULT __stdcall Response (
    [out retval] long *pVal
  );
  [propget]
  HRESULT __stdcall Reason (
    [out retval] long *pVal
  );
  [propget]
  HRESULT __stdcall Protocol (
    [out retval] enum _IASPROTOCOL *pVal
  );
  [id(4), propput]
  HRESULT __stdcall Protocol (
    [in] enum _IASPROTOCOL argNo1
  );
  [propget]
  HRESULT __stdcall Source (
    [out retval] interface IRequestSource **pVal
  );
  [id(5), propput]
  HRESULT __stdcall Source (
    [in] interface IRequestSource *argNo1
  );
  [propget]
  HRESULT __stdcall RoutingType (
    [out retval] long *pVal
  );
  [id(6), propput]
  HRESULT __stdcall RoutingType (
    [in] long argNo1
  );
  HRESULT __stdcall SetResponse (
    [in] enum _IASRESPONSE eResponse,
    [in] long lReason
  );
  HRESULT __stdcall ReturnToSource (
    [in] IASREQUESTSTATUS eStatus
  );
  [id(10), propget]
  HRESULT __stdcall ErrorCode (
    [out retval] HRESULT *pVal
  );
  [id(10), propput]
  HRESULT __stdcall ErrorCode (
    [in] HRESULT argNo1
  );
};
[
  uuid(6BC096BD-0CE6-11D1-BAAE-00C04FC2E20D),
  helpstring("IRecvRequest Interface")
]
interface IRecvRequest : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Process (
    [in] UINT dwInAttributeCount,
    [in] struct _IASATTRIBUTE **ppInIasAttribute,
    [out] UINT *pdwOutAttributeCount,
    [out] struct _IASATTRIBUTE ***pppOutIasAttribute,
    [in] long IasRequest,
    [in out] long *pIasResponse,
    [in] enum _IASPROTOCOL IasProtocol,
    [out] long *plReason,
    [in] long bProcessVSA
  );
};

