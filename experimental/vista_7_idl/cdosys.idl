/* Automated generated idl file <cdo>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Union record forward declarations.  */
dispinterface IBodyParts;
dispinterface IBodyPart;
dispinterface IDataSource;
dispinterface IMessages;
dispinterface IMessage;
dispinterface IConfiguration;
dispinterface IDropDirectory;
dispinterface ISMTPScriptConnector;
dispinterface ISMTPOnArrival;
dispinterface INNTPEarlyScriptConnector;
dispinterface INNTPOnPostEarly;
dispinterface INNTPPostScriptConnector;
dispinterface INNTPOnPost;
dispinterface INNTPFinalScriptConnector;
dispinterface INNTPOnPostFinal;

/* Union record forward declarations.  */
coclass Message;
coclass Configuration;
coclass DropDirectory;
coclass SMTPConnector;
coclass NNTPEarlyConnector;
coclass NNTPPostConnector;
coclass NNTPFinalConnector;

/* Enumeration declarations.  */
enum CdoConfigSource
{
  cdoDefaults = (int) -1,
  cdoIIS = (int) 201326593,
  cdoOutlookExpress = (int) 201326594
};
enum CdoDSNOptions
{
  cdoDSNDefault = (int) 201326592,
  cdoDSNNever = (int) 201326593,
  cdoDSNFailure = (int) 201326594,
  cdoDSNSuccess = (int) 201326596,
  cdoDSNDelay = (int) 201326600,
  cdoDSNSuccessFailOrDelay = (int) 201326606
};
enum CdoEventStatus
{
  cdoRunNextSink = (int) 201326592,
  cdoSkipRemainingSinks = (int) 201326593
};
enum cdoImportanceValues
{
  cdoLow = (int) 201326592,
  cdoNormal = (int) 201326593,
  cdoHigh = (int) 201326594
};
enum CdoMessageStat
{
  cdoStatSuccess = (int) 201326592,
  cdoStatAbortDelivery = (int) 201326594,
  cdoStatBadMail = (int) 201326595
};
enum CdoMHTMLFlags
{
  cdoSuppressNone = (int) 201326592,
  cdoSuppressImages = (int) 201326593,
  cdoSuppressBGSounds = (int) 201326594,
  cdoSuppressFrames = (int) 201326596,
  cdoSuppressObjects = (int) 201326600,
  cdoSuppressStyleSheets = (int) 201326608,
  cdoSuppressAll = (int) 201326623
};
enum CdoNNTPProcessingField
{
  cdoPostMessage = (int) 201326593,
  cdoProcessControl = (int) 201326594,
  cdoProcessModerator = (int) 201326596
};
enum CdoPostUsing
{
  cdoPostUsingPickup = (int) 201326593,
  cdoPostUsingPort = (int) 201326594
};
enum cdoPriorityValues
{
  cdoPriorityNonUrgent = (int) -1,
  cdoPriorityNormal = (int) 201326592,
  cdoPriorityUrgent = (int) 201326593
};
enum CdoProtocolsAuthentication
{
  cdoAnonymous = (int) 201326592,
  cdoBasic = (int) 201326593,
  cdoNTLM = (int) 201326594
};
enum CdoReferenceType
{
  cdoRefTypeId = (int) 201326592,
  cdoRefTypeLocation = (int) 201326593
};
enum CdoSendUsing
{
  cdoSendUsingPickup = (int) 201326593,
  cdoSendUsingPort = (int) 201326594
};
enum cdoSensitivityValues
{
  cdoSensitivityNone = (int) 201326592,
  cdoPersonal = (int) 201326593,
  cdoPrivate = (int) 201326594,
  cdoCompanyConfidential = (int) 201326595
};
enum CdoTimeZoneId
{
  cdoUTC = (int) 201326592,
  cdoGMT = (int) 201326593,
  cdoSarajevo = (int) 201326594,
  cdoParis = (int) 201326595,
  cdoBerlin = (int) 201326596,
  cdoEasternEurope = (int) 201326597,
  cdoPrague = (int) 201326598,
  cdoAthens = (int) 201326599,
  cdoBrasilia = (int) 201326600,
  cdoAtlanticCanada = (int) 201326601,
  cdoEastern = (int) 201326602,
  cdoCentral = (int) 201326603,
  cdoMountain = (int) 201326604,
  cdoPacific = (int) 201326605,
  cdoAlaska = (int) 201326606,
  cdoHawaii = (int) 201326607,
  cdoMidwayIsland = (int) 201326608,
  cdoWellington = (int) 201326609,
  cdoBrisbane = (int) 201326610,
  cdoAdelaide = (int) 201326611,
  cdoTokyo = (int) 201326612,
  cdoSingapore = (int) 201326613,
  cdoBangkok = (int) 201326614,
  cdoBombay = (int) 201326615,
  cdoAbuDhabi = (int) 201326616,
  cdoTehran = (int) 201326617,
  cdoBaghdad = (int) 201326618,
  cdoIsrael = (int) 201326619,
  cdoNewfoundland = (int) 201326620,
  cdoAzores = (int) 201326621,
  cdoMidAtlantic = (int) 201326622,
  cdoMonrovia = (int) 201326623,
  cdoBuenosAires = (int) 201326624,
  cdoCaracas = (int) 201326625,
  cdoIndiana = (int) 201326626,
  cdoBogota = (int) 201326627,
  cdoSaskatchewan = (int) 201326628,
  cdoMexicoCity = (int) 201326629,
  cdoArizona = (int) 201326630,
  cdoEniwetok = (int) 201326631,
  cdoFiji = (int) 201326632,
  cdoMagadan = (int) 201326633,
  cdoHobart = (int) 201326634,
  cdoGuam = (int) 201326635,
  cdoDarwin = (int) 201326636,
  cdoBeijing = (int) 201326637,
  cdoAlmaty = (int) 201326638,
  cdoIslamabad = (int) 201326639,
  cdoKabul = (int) 201326640,
  cdoCairo = (int) 201326641,
  cdoHarare = (int) 201326642,
  cdoMoscow = (int) 201326643,
  cdoFloating = (int) 201326644,
  cdoCapeVerde = (int) 201326645,
  cdoCaucasus = (int) 201326646,
  cdoCentralAmerica = (int) 201326647,
  cdoEastAfrica = (int) 201326648,
  cdoMelbourne = (int) 201326649,
  cdoEkaterinburg = (int) 201326650,
  cdoHelsinki = (int) 201326651,
  cdoGreenland = (int) 201326652,
  cdoRangoon = (int) 201326653,
  cdoNepal = (int) 201326654,
  cdoIrkutsk = (int) 201326655,
  cdoKrasnoyarsk = (int) 201326656,
  cdoSantiago = (int) 201326657,
  cdoSriLanka = (int) 201326658,
  cdoTonga = (int) 201326659,
  cdoVladivostok = (int) 201326660,
  cdoWestCentralAfrica = (int) 201326661,
  cdoYakutsk = (int) 201326662,
  cdoDhaka = (int) 201326663,
  cdoSeoul = (int) 201326664,
  cdoPerth = (int) 201326665,
  cdoArab = (int) 201326666,
  cdoTaipei = (int) 201326667,
  cdoSydney2000 = (int) 201326668,
  cdoChihuahua = (int) 201326669,
  cdoCanberraCommonwealthGames2006 = (int) 201326670,
  cdoAdelaideCommonwealthGames2006 = (int) 201326671,
  cdoHobartCommonwealthGames2006 = (int) 201326672,
  cdoTijuana = (int) 201326673,
  cdoInvalidTimeZone = (int) 201326674
};

[
  uuid(CD000000-8B95-11D1-82DB-00C04FB1625D),
  version(1.0),
  helpstring("Microsoft CDO for Windows 2000 Library"),
  helpfile("cdosys.chm")
]
library cdo
{
  importlib("stdole2.tlb");
  importlib("msado15.tlb");

   /* CoClass declarations.  */
   [
     uuid(CD000001-8B95-11D1-82DB-00C04FB1625D),
     helpstring("Defines an object used to manage a message."),
     cancreate
   ]
   coclass Message
   {
     dispinterface IMessage;
     dispinterface IDataSource;
     dispinterface IBodyPart;
   };
   [
     uuid(CD000002-8B95-11D1-82DB-00C04FB1625D),
     helpstring("Defines an object used to store configuration information for CDO objects."),
     cancreate
   ]
   coclass Configuration
   {
     dispinterface IConfiguration;
   };
   [
     uuid(CD000004-8B95-11D1-82DB-00C04FB1625D),
     helpstring("Defines an object used to access messages located on the file system."),
     cancreate
   ]
   coclass DropDirectory
   {
     dispinterface IDropDirectory;
   };
   [
     uuid(CD000008-8B95-11D1-82DB-00C04FB1625D),
     helpstring("SMTPConnector Class"),
     cancreate,
     hidden
   ]
   coclass SMTPConnector
   {
     dispinterface ISMTPScriptConnector;
     dispinterface ISMTPOnArrival;
   };
   [
     uuid(CD000011-8B95-11D1-82DB-00C04FB1625D),
     helpstring("NNTPEarlyConnector Class"),
     cancreate,
     hidden
   ]
   coclass NNTPEarlyConnector
   {
     dispinterface INNTPEarlyScriptConnector;
     dispinterface INNTPOnPostEarly;
   };
   [
     uuid(CD000009-8B95-11D1-82DB-00C04FB1625D),
     helpstring("NNTPPostConnector Class"),
     cancreate,
     hidden
   ]
   coclass NNTPPostConnector
   {
     dispinterface INNTPPostScriptConnector;
     dispinterface INNTPOnPost;
   };
   [
     uuid(CD000010-8B95-11D1-82DB-00C04FB1625D),
     helpstring("NNTPFinalConnector Class"),
     cancreate,
     hidden
   ]
   coclass NNTPFinalConnector
   {
     dispinterface INNTPFinalScriptConnector;
     dispinterface INNTPOnPostFinal;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(CD000023-8B95-11D1-82DB-00C04FB1625D),
     helpstring("Defines methods and properties used to manage a collection of BodyPart objects."),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IBodyParts : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Count (
       [out retval] long *varCount
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long Index,
       [out retval] dispinterface IBodyPart **ppBody
     );
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **retval
     );
     [id(2)]
     HRESULT __stdcall Delete (
       [in] VARIANT varBP
     );
     HRESULT __stdcall DeleteAll (void);
     HRESULT __stdcall Add (
       [in opt] long Index = (int) -1,
       [out retval] dispinterface IBodyPart **ppPart
     );
   };
   [
     uuid(CD000021-8B95-11D1-82DB-00C04FB1625D),
     helpstring("Defines methods, properties, and collections used to manage a message body part."),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IBodyPart : IDispatch
   {
     [id(200), propget]
     HRESULT __stdcall BodyParts (
       [out retval] dispinterface IBodyParts **varBodyParts
     );
     [propget]
     HRESULT __stdcall ContentTransferEncoding (
       [out retval] BSTR *pContentTransferEncoding
     );
     [id(201), propput]
     HRESULT __stdcall ContentTransferEncoding (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall ContentMediaType (
       [out retval] BSTR *pContentMediaType
     );
     [id(202), propput]
     HRESULT __stdcall ContentMediaType (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Fields (
       [out retval] dispinterface Fields **varFields
     );
     [propget]
     HRESULT __stdcall Charset (
       [out retval] BSTR *pCharset
     );
     [id(204), propput]
     HRESULT __stdcall Charset (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall FileName (
       [out retval] BSTR *varFileName
     );
     [id(207), propget]
     HRESULT __stdcall DataSource (
       [out retval] dispinterface IDataSource **varDataSource
     );
     [propget]
     HRESULT __stdcall ContentClass (
       [out retval] BSTR *pContentClass
     );
     [id(208), propput]
     HRESULT __stdcall ContentClass (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall ContentClassName (
       [out retval] BSTR *pContentClassName
     );
     [id(209), propput]
     HRESULT __stdcall ContentClassName (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface IBodyPart **varParent
     );
     [id(250)]
     HRESULT __stdcall AddBodyPart (
       [in opt] long Index = (int) -1,
       [out retval] dispinterface IBodyPart **ppPart
     );
     HRESULT __stdcall SaveToFile (
       [in] BSTR FileName
     );
     HRESULT __stdcall GetEncodedContentStream (
       [out retval] dispinterface _Stream **ppStream
     );
     HRESULT __stdcall GetDecodedContentStream (
       [out retval] dispinterface _Stream **ppStream
     );
     HRESULT __stdcall GetStream (
       [out retval] dispinterface _Stream **ppStream
     );
     HRESULT __stdcall GetFieldParameter (
       [in] BSTR FieldName,
       [in] BSTR Parameter,
       [out retval] BSTR *pbstrValue
     );
     [id(160)]
     HRESULT __stdcall GetInterface (
       [in] BSTR Interface,
       [out retval] IDispatch **ppUnknown
     );
   };
   [
     uuid(CD000029-8B95-11D1-82DB-00C04FB1625D),
     helpstring("Defines methods, properties, and collections used to extract messages from or embed messages into other CDO message body parts."),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDataSource : IDispatch
   {
     [id(207), propget]
     HRESULT __stdcall SourceClass (
       [out retval] BSTR *varSourceClass
     );
     [propget]
     HRESULT __stdcall Source (
       [out retval] IUnknown **varSource
     );
     [propget]
     HRESULT __stdcall IsDirty (
       [out retval] WINBOOL *pIsDirty
     );
     [id(209), propput]
     HRESULT __stdcall IsDirty (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall SourceURL (
       [out retval] BSTR *varSourceURL
     );
     [propget]
     HRESULT __stdcall ActiveConnection (
       [out retval] dispinterface _Connection **varActiveConnection
     );
     [id(251)]
     HRESULT __stdcall SaveToObject (
       [in] IUnknown * Source,
       [in] BSTR InterfaceName
     );
     HRESULT __stdcall OpenObject (
       [in] IUnknown * Source,
       [in] BSTR InterfaceName
     );
     HRESULT __stdcall SaveTo (
       [in] BSTR SourceURL,
       [in opt] IDispatch * ActiveConnection = (IDispatch *) 0x24000000,
       [in opt] enum ConnectModeEnum Mode,
       [in opt] enum RecordCreateOptionsEnum CreateOptions,
       [in opt] enum RecordOpenOptionsEnum Options,
       [in opt] BSTR UserName,
       [in opt] BSTR Password
     );
     HRESULT __stdcall Open (
       [in] BSTR SourceURL,
       [in opt] IDispatch * ActiveConnection = (IDispatch *) 0x24000000,
       [in opt] enum ConnectModeEnum Mode,
       [in opt] enum RecordCreateOptionsEnum CreateOptions = (int) -1,
       [in opt] enum RecordOpenOptionsEnum Options,
       [in opt] BSTR UserName,
       [in opt] BSTR Password
     );
     HRESULT __stdcall Save (void);
     HRESULT __stdcall SaveToContainer (
       [in] BSTR ContainerURL,
       [in opt] IDispatch * ActiveConnection = (IDispatch *) 0x24000000,
       [in opt] enum ConnectModeEnum Mode,
       [in opt] enum RecordCreateOptionsEnum CreateOptions,
       [in opt] enum RecordOpenOptionsEnum Options,
       [in opt] BSTR UserName,
       [in opt] BSTR Password
     );
   };
   [
     uuid(CD000025-8B95-11D1-82DB-00C04FB1625D),
     helpstring("Defines methods and properties used to manage a collection of Message objects on the file system. Returned by IDropDirectory.GetMessages."),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IMessages : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       long Index,
       [out retval] dispinterface IMessage **ppMessage
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *varCount
     );
     HRESULT __stdcall Delete (
       [in] long Index
     );
     HRESULT __stdcall DeleteAll (void);
     [id(-4), propget, restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **retval
     );
     [id(5), propget]
     HRESULT __stdcall FileName (
       VARIANT var,
       [out retval] BSTR *FileName
     );
   };
   [
     uuid(CD000020-8B95-11D1-82DB-00C04FB1625D),
     helpstring("Defines methods, properties, and collections used to manage a message."),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IMessage : IDispatch
   {
     [id(101), propget]
     HRESULT __stdcall BCC (
       [out retval] BSTR *pBCC
     );
     [id(101), propput]
     HRESULT __stdcall BCC (
       [in] BSTR argNo1
     );
     [id(103), propget]
     HRESULT __stdcall CC (
       [out retval] BSTR *pCC
     );
     [id(103), propput]
     HRESULT __stdcall CC (
       [in] BSTR argNo1
     );
     [id(105), propget]
     HRESULT __stdcall FollowUpTo (
       [out retval] BSTR *pFollowUpTo
     );
     [id(105), propput]
     HRESULT __stdcall FollowUpTo (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall From (
       [out retval] BSTR *pFrom
     );
     [id(106), propput]
     HRESULT __stdcall From (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Keywords (
       [out retval] BSTR *pKeywords
     );
     [id(107), propput]
     HRESULT __stdcall Keywords (
       [in] BSTR argNo1
     );
     [id(110), propget]
     HRESULT __stdcall MimeFormatted (
       [out retval] WINBOOL *pMimeFormatted
     );
     [id(110), propput]
     HRESULT __stdcall MimeFormatted (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall Newsgroups (
       [out retval] BSTR *pNewsgroups
     );
     [id(111), propput]
     HRESULT __stdcall Newsgroups (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Organization (
       [out retval] BSTR *pOrganization
     );
     [id(112), propput]
     HRESULT __stdcall Organization (
       [in] BSTR argNo1
     );
     [id(114), propget]
     HRESULT __stdcall ReceivedTime (
       [out retval] DATE *varReceivedTime
     );
     [propget]
     HRESULT __stdcall ReplyTo (
       [out retval] BSTR *pReplyTo
     );
     [id(115), propput]
     HRESULT __stdcall ReplyTo (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall DSNOptions (
       [out retval] enum CdoDSNOptions *pDSNOptions
     );
     [id(116), propput]
     HRESULT __stdcall DSNOptions (
       [in] enum CdoDSNOptions argNo1
     );
     [id(119), propget]
     HRESULT __stdcall SentOn (
       [out retval] DATE *varSentOn
     );
     [propget]
     HRESULT __stdcall Subject (
       [out retval] BSTR *pSubject
     );
     [id(120), propput]
     HRESULT __stdcall Subject (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall To (
       [out retval] BSTR *pTo
     );
     [id(121), propput]
     HRESULT __stdcall To (
       [in] BSTR argNo1
     );
     [id(123), propget]
     HRESULT __stdcall TextBody (
       [out retval] BSTR *pTextBody
     );
     [id(123), propput]
     HRESULT __stdcall TextBody (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall HTMLBody (
       [out retval] BSTR *pHTMLBody
     );
     [id(124), propput]
     HRESULT __stdcall HTMLBody (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Attachments (
       [out retval] dispinterface IBodyParts **varAttachments
     );
     [propget]
     HRESULT __stdcall Sender (
       [out retval] BSTR *pSender
     );
     [id(126), propput]
     HRESULT __stdcall Sender (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Configuration (
       [out retval] dispinterface IConfiguration **pConfiguration
     );
     [id(127), propput]
     HRESULT __stdcall Configuration (
       [in] dispinterface IConfiguration *argNo1
     );
     [id(127), propputref]
     HRESULT __stdcall Configuration (
       [in] dispinterface IConfiguration *argNo1
     );
     [propget]
     HRESULT __stdcall AutoGenerateTextBody (
       [out retval] WINBOOL *pAutoGenerateTextBody
     );
     [id(128), propput]
     HRESULT __stdcall AutoGenerateTextBody (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall EnvelopeFields (
       [out retval] dispinterface Fields **varEnvelopeFields
     );
     [propget]
     HRESULT __stdcall TextBodyPart (
       [out retval] dispinterface IBodyPart **varTextBodyPart
     );
     [propget]
     HRESULT __stdcall HTMLBodyPart (
       [out retval] dispinterface IBodyPart **varHTMLBodyPart
     );
     [propget]
     HRESULT __stdcall BodyPart (
       [out retval] dispinterface IBodyPart **varBodyPart
     );
     [propget]
     HRESULT __stdcall DataSource (
       [out retval] dispinterface IDataSource **varDataSource
     );
     [propget]
     HRESULT __stdcall Fields (
       [out retval] dispinterface Fields **varFields
     );
     [propget]
     HRESULT __stdcall MDNRequested (
       [out retval] WINBOOL *pMDNRequested
     );
     [id(135), propput]
     HRESULT __stdcall MDNRequested (
       [in] WINBOOL argNo1
     );
     [id(150)]
     HRESULT __stdcall AddRelatedBodyPart (
       [in] BSTR URL,
       [in] BSTR Reference,
       [in] enum CdoReferenceType ReferenceType,
       [in opt] BSTR UserName,
       [in opt] BSTR Password,
       [out retval] dispinterface IBodyPart **ppBody
     );
     HRESULT __stdcall AddAttachment (
       [in] BSTR URL,
       [in opt] BSTR UserName,
       [in opt] BSTR Password,
       [out retval] dispinterface IBodyPart **ppBody
     );
     HRESULT __stdcall CreateMHTMLBody (
       [in] BSTR URL,
       [in opt] enum CdoMHTMLFlags Flags = (int) 201326592,
       [in opt] BSTR UserName,
       [in opt] BSTR Password
     );
     HRESULT __stdcall Forward (
       [out retval] dispinterface IMessage **ppMsg
     );
     HRESULT __stdcall Post (void);
     HRESULT __stdcall PostReply (
       [out retval] dispinterface IMessage **ppMsg
     );
     HRESULT __stdcall Reply (
       [out retval] dispinterface IMessage **ppMsg
     );
     HRESULT __stdcall ReplyAll (
       [out retval] dispinterface IMessage **ppMsg
     );
     HRESULT __stdcall Send (void);
     HRESULT __stdcall GetStream (
       [out retval] dispinterface _Stream **ppStream
     );
     HRESULT __stdcall GetInterface (
       [in] BSTR Interface,
       [out retval] IDispatch **ppUnknown
     );
   };
   [
     uuid(CD000022-8B95-11D1-82DB-00C04FB1625D),
     helpstring("Defines methods, properties, and collections used to manage configuration information for CDO objects."),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IConfiguration : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Fields (
       [out retval] dispinterface Fields **varFields
     );
     [id(50)]
     HRESULT __stdcall Load (
       [in] enum CdoConfigSource LoadFrom,
       [in opt] BSTR URL
     );
     [id(160)]
     HRESULT __stdcall GetInterface (
       [in] BSTR Interface,
       [out retval] IDispatch **ppUnknown
     );
   };
   [
     uuid(CD000024-8B95-11D1-82DB-00C04FB1625D),
     helpstring("Defines methods, properties, and collections used to manage a collection of messages on the file system."),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDropDirectory : IDispatch
   {
     [id(200)]
     HRESULT __stdcall GetMessages (
       [in opt] BSTR DirName,
       [out retval] dispinterface IMessages **Msgs
     );
   };
   [
     uuid(CD000030-8B95-11D1-82DB-00C04FB1625D),
     helpstring("ISMTPScriptConnector interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ISMTPScriptConnector : IDispatch
   {
   };
   [
     uuid(CD000026-8B95-11D1-82DB-00C04FB1625D),
     helpstring("Implement when creating SMTP OnArrival event sinks."),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ISMTPOnArrival : IDispatch
   {
     [id(256)]
     HRESULT __stdcall OnArrival (
       [in] dispinterface IMessage *Msg,
       [in out] enum CdoEventStatus *EventStatus
     );
   };
   [
     uuid(CD000034-8B95-11D1-82DB-00C04FB1625D),
     helpstring("INNTPFinalScriptConnector interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface INNTPEarlyScriptConnector : IDispatch
   {
   };
   [
     uuid(CD000033-8B95-11D1-82DB-00C04FB1625D),
     helpstring("Implement when creating NNTP OnPostEarly event sinks."),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface INNTPOnPostEarly : IDispatch
   {
     [id(256)]
     HRESULT __stdcall OnPostEarly (
       [in] dispinterface IMessage *Msg,
       [in out] enum CdoEventStatus *EventStatus
     );
   };
   [
     uuid(CD000031-8B95-11D1-82DB-00C04FB1625D),
     helpstring("INNTPPostScriptConnector interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface INNTPPostScriptConnector : IDispatch
   {
   };
   [
     uuid(CD000027-8B95-11D1-82DB-00C04FB1625D),
     helpstring("Implement when creating NNTP OnPost event sinks."),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface INNTPOnPost : IDispatch
   {
     [id(256)]
     HRESULT __stdcall OnPost (
       [in] dispinterface IMessage *Msg,
       [in out] enum CdoEventStatus *EventStatus
     );
   };
   [
     uuid(CD000032-8B95-11D1-82DB-00C04FB1625D),
     helpstring("INNTPFinalScriptConnector interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface INNTPFinalScriptConnector : IDispatch
   {
   };
   [
     uuid(CD000028-8B95-11D1-82DB-00C04FB1625D),
     helpstring("Implement when creating NNTP OnPostFinal event sinks."),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface INNTPOnPostFinal : IDispatch
   {
     [id(256)]
     HRESULT __stdcall OnPostFinal (
       [in] dispinterface IMessage *Msg,
       [in out] enum CdoEventStatus *EventStatus
     );
   };

};

/* Module declarations.  */
module CdoCalendar
{
  [id(1073741824)]
  CONST BSTR cdoTimeZoneIDURN = L"urn:schemas:calendar:timezoneid";
};
module CdoCharset
{
  [id(1073741824)]
  CONST BSTR cdoBIG5 = L"big5";
  CONST BSTR cdoEUC_JP = L"euc-jp";
  CONST BSTR cdoEUC_KR = L"euc-kr";
  CONST BSTR cdoGB2312 = L"gb2312";
  CONST BSTR cdoISO_2022_JP = L"iso-2022-jp";
  CONST BSTR cdoISO_2022_KR = L"iso-2022-kr";
  CONST BSTR cdoISO_8859_1 = L"iso-8859-1";
  CONST BSTR cdoISO_8859_2 = L"iso-8859-2";
  CONST BSTR cdoISO_8859_3 = L"iso-8859-3";
  CONST BSTR cdoISO_8859_4 = L"iso-8859-4";
  CONST BSTR cdoISO_8859_5 = L"iso-8859-5";
  CONST BSTR cdoISO_8859_6 = L"iso-8859-6";
  CONST BSTR cdoISO_8859_7 = L"iso-8859-7";
  CONST BSTR cdoISO_8859_8 = L"iso-8859-8";
  CONST BSTR cdoISO_8859_9 = L"iso-8859-9";
  CONST BSTR cdoKOI8_R = L"koi8-r";
  CONST BSTR cdoShift_JIS = L"shift-jis";
  CONST BSTR cdoUS_ASCII = L"us-ascii";
  CONST BSTR cdoUTF_7 = L"utf-7";
  CONST BSTR cdoUTF_8 = L"utf-8";
  CONST BSTR cdoISO_8859_15 = L"iso-8859-15";
};
module CdoConfiguration
{
  [id(1073741824)]
  CONST BSTR cdoAutoPromoteBodyParts = L"http://schemas.microsoft.com/cdo/configuration/autopromotebodyparts";
  CONST BSTR cdoFlushBuffersOnWrite = L"http://schemas.microsoft.com/cdo/configuration/flushbuffersonwrite";
  CONST BSTR cdoHTTPCookies = L"http://schemas.microsoft.com/cdo/configuration/httpcookies";
  CONST BSTR cdoLanguageCode = L"http://schemas.microsoft.com/cdo/configuration/languagecode";
  CONST BSTR cdoNNTPAccountName = L"http://schemas.microsoft.com/cdo/configuration/nntpaccountname";
  CONST BSTR cdoNNTPAuthenticate = L"http://schemas.microsoft.com/cdo/configuration/nntpauthenticate";
  CONST BSTR cdoNNTPConnectionTimeout = L"http://schemas.microsoft.com/cdo/configuration/nntpconnectiontimeout";
  CONST BSTR cdoNNTPServer = L"http://schemas.microsoft.com/cdo/configuration/nntpserver";
  CONST BSTR cdoNNTPServerPickupDirectory = L"http://schemas.microsoft.com/cdo/configuration/nntpserverpickupdirectory";
  CONST BSTR cdoNNTPServerPort = L"http://schemas.microsoft.com/cdo/configuration/nntpserverport";
  CONST BSTR cdoNNTPUseSSL = L"http://schemas.microsoft.com/cdo/configuration/nntpusessl";
  CONST BSTR cdoPostEmailAddress = L"http://schemas.microsoft.com/cdo/configuration/postemailaddress";
  CONST BSTR cdoPostPassword = L"http://schemas.microsoft.com/cdo/configuration/postpassword";
  CONST BSTR cdoPostUserName = L"http://schemas.microsoft.com/cdo/configuration/postusername";
  CONST BSTR cdoPostUserReplyEmailAddress = L"http://schemas.microsoft.com/cdo/configuration/postuserreplyemailaddress";
  CONST BSTR cdoPostUsingMethod = L"http://schemas.microsoft.com/cdo/configuration/postusing";
  CONST BSTR cdoSaveSentItems = L"http://schemas.microsoft.com/cdo/configuration/savesentitems";
  CONST BSTR cdoSendEmailAddress = L"http://schemas.microsoft.com/cdo/configuration/sendemailaddress";
  CONST BSTR cdoSendPassword = L"http://schemas.microsoft.com/cdo/configuration/sendpassword";
  CONST BSTR cdoSendUserName = L"http://schemas.microsoft.com/cdo/configuration/sendusername";
  CONST BSTR cdoSendUserReplyEmailAddress = L"http://schemas.microsoft.com/cdo/configuration/senduserreplyemailaddress";
  CONST BSTR cdoSendUsingMethod = L"http://schemas.microsoft.com/cdo/configuration/sendusing";
  CONST BSTR cdoSMTPAccountName = L"http://schemas.microsoft.com/cdo/configuration/smtpaccountname";
  CONST BSTR cdoSMTPAuthenticate = L"http://schemas.microsoft.com/cdo/configuration/smtpauthenticate";
  CONST BSTR cdoSMTPConnectionTimeout = L"http://schemas.microsoft.com/cdo/configuration/smtpconnectiontimeout";
  CONST BSTR cdoSMTPServer = L"http://schemas.microsoft.com/cdo/configuration/smtpserver";
  CONST BSTR cdoSMTPServerPickupDirectory = L"http://schemas.microsoft.com/cdo/configuration/smtpserverpickupdirectory";
  CONST BSTR cdoSMTPServerPort = L"http://schemas.microsoft.com/cdo/configuration/smtpserverport";
  CONST BSTR cdoSMTPUseSSL = L"http://schemas.microsoft.com/cdo/configuration/smtpusessl";
  CONST BSTR cdoURLGetLatestVersion = L"http://schemas.microsoft.com/cdo/configuration/urlgetlatestversion";
  CONST BSTR cdoURLProxyBypass = L"http://schemas.microsoft.com/cdo/configuration/urlproxybypass";
  CONST BSTR cdoURLProxyServer = L"http://schemas.microsoft.com/cdo/configuration/urlproxyserver";
  CONST BSTR cdoUseMessageResponseText = L"http://schemas.microsoft.com/cdo/configuration/usemessageresponsetext";
};
module CdoContentTypeValues
{
  [id(1073741824)]
  CONST BSTR cdoGif = L"image/gif";
  CONST BSTR cdoJpeg = L"image/jpeg";
  CONST BSTR cdoMessageExternalBody = L"message/external-body";
  CONST BSTR cdoMessagePartial = L"message/partial";
  CONST BSTR cdoMessageRFC822 = L"message/rfc822";
  CONST BSTR cdoMultipartAlternative = L"multipart/alternative";
  CONST BSTR cdoMultipartDigest = L"multipart/digest";
  CONST BSTR cdoMultipartMixed = L"multipart/mixed";
  CONST BSTR cdoMultipartRelated = L"multipart/related";
  CONST BSTR cdoTextHTML = L"text/html";
  CONST BSTR cdoTextPlain = L"text/plain";
};
module CdoDAV
{
  [id(1073741824)]
  CONST BSTR cdoContentClass = L"DAV:contentclass";
  CONST BSTR cdoGetContentType = L"DAV:getcontenttype";
};
module CdoEncodingType
{
  [id(1073741824)]
  CONST BSTR cdo7bit = L"7bit";
  CONST BSTR cdo8bit = L"8bit";
  CONST BSTR cdoBase64 = L"base64";
  CONST BSTR cdoBinary = L"binary";
  CONST BSTR cdoMacBinHex40 = L"mac-binhex40";
  CONST BSTR cdoQuotedPrintable = L"quoted-printable";
  CONST BSTR cdoUuencode = L"uuencode";
};
module CdoExchange
{
  [id(1073741824)]
  CONST BSTR cdoSensitivity = L"http://schemas.microsoft.com/exchange/sensitivity";
};
module CdoHTTPMail
{
  [id(1073741824)]
  CONST BSTR cdoAttachmentFilename = L"urn:schemas:httpmail:attachmentfilename";
  CONST BSTR cdoBcc = L"urn:schemas:httpmail:bcc";
  CONST BSTR cdoCc = L"urn:schemas:httpmail:cc";
  CONST BSTR cdoContentDispositionType = L"urn:schemas:httpmail:content-disposition-type";
  CONST BSTR cdoContentMediaType = L"urn:schemas:httpmail:content-media-type";
  CONST BSTR cdoDate = L"urn:schemas:httpmail:date";
  CONST BSTR cdoDateReceived = L"urn:schemas:httpmail:datereceived";
  CONST BSTR cdoFrom = L"urn:schemas:httpmail:from";
  CONST BSTR cdoHasAttachment = L"urn:schemas:httpmail:hasattachment";
  CONST BSTR cdoHTMLDescription = L"urn:schemas:httpmail:htmldescription";
  CONST BSTR cdoImportance = L"urn:schemas:httpmail:importance";
  CONST BSTR cdoNormalizedSubject = L"urn:schemas:httpmail:normalizedsubject";
  CONST BSTR cdoPriority = L"urn:schemas:httpmail:priority";
  CONST BSTR cdoReplyTo = L"urn:schemas:httpmail:reply-to";
  CONST BSTR cdoSender = L"urn:schemas:httpmail:sender";
  CONST BSTR cdoSubject = L"urn:schemas:httpmail:subject";
  CONST BSTR cdoTextDescription = L"urn:schemas:httpmail:textdescription";
  CONST BSTR cdoThreadTopic = L"urn:schemas:httpmail:thread-topic";
  CONST BSTR cdoTo = L"urn:schemas:httpmail:to";
};
module CdoInterfaces
{
  [id(1073741824)]
  CONST BSTR cdoAdoStream = L"_Stream";
  CONST BSTR cdoIBodyPart = L"IBodyPart";
  CONST BSTR cdoIConfiguration = L"IConfiguration";
  CONST BSTR cdoIDataSource = L"IDataSource";
  CONST BSTR cdoIMessage = L"IMessage";
  CONST BSTR cdoIStream = L"IStream";
};
module CdoMailHeader
{
  [id(1073741824)]
  CONST BSTR cdoApproved = L"urn:schemas:mailheader:approved";
  CONST BSTR cdoComment = L"urn:schemas:mailheader:comment";
  CONST BSTR cdoContentBase = L"urn:schemas:mailheader:content-base";
  CONST BSTR cdoContentDescription = L"urn:schemas:mailheader:content-description";
  CONST BSTR cdoContentDisposition = L"urn:schemas:mailheader:content-disposition";
  CONST BSTR cdoContentId = L"urn:schemas:mailheader:content-id";
  CONST BSTR cdoContentLanguage = L"urn:schemas:mailheader:content-language";
  CONST BSTR cdoContentLocation = L"urn:schemas:mailheader:content-location";
  CONST BSTR cdoContentTransferEncoding = L"urn:schemas:mailheader:content-transfer-encoding";
  CONST BSTR cdoContentType = L"urn:schemas:mailheader:content-type";
  CONST BSTR cdoControl = L"urn:schemas:mailheader:control";
  CONST BSTR cdoDisposition = L"urn:schemas:mailheader:disposition";
  CONST BSTR cdoDispositionNotificationTo = L"urn:schemas:mailheader:disposition-notification-to";
  CONST BSTR cdoDistribution = L"urn:schemas:mailheader:distribution";
  CONST BSTR cdoExpires = L"urn:schemas:mailheader:expires";
  CONST BSTR cdoFollowupTo = L"urn:schemas:mailheader:followup-to";
  CONST BSTR cdoInReplyTo = L"urn:schemas:mailheader:in-reply-to";
  CONST BSTR cdoLines = L"urn:schemas:mailheader:lines";
  CONST BSTR cdoMessageId = L"urn:schemas:mailheader:message-id";
  CONST BSTR cdoMIMEVersion = L"urn:schemas:mailheader:mime-version";
  CONST BSTR cdoNewsgroups = L"urn:schemas:mailheader:newsgroups";
  CONST BSTR cdoOrganization = L"urn:schemas:mailheader:organization";
  CONST BSTR cdoOriginalRecipient = L"urn:schemas:mailheader:original-recipient";
  CONST BSTR cdoPath = L"urn:schemas:mailheader:path";
  CONST BSTR cdoPostingVersion = L"urn:schemas:mailheader:posting-version";
  CONST BSTR cdoReceived = L"urn:schemas:mailheader:received";
  CONST BSTR cdoReferences = L"urn:schemas:mailheader:references";
  CONST BSTR cdoRelayVersion = L"urn:schemas:mailheader:relay-version";
  CONST BSTR cdoReturnPath = L"urn:schemas:mailheader:return-path";
  CONST BSTR cdoReturnReceiptTo = L"urn:schemas:mailheader:return-receipt-to";
  CONST BSTR cdoSummary = L"urn:schemas:mailheader:summary";
  CONST BSTR cdoThreadIndex = L"urn:schemas:mailheader:thread-index";
  CONST BSTR cdoXMailer = L"urn:schemas:mailheader:x-mailer";
  CONST BSTR cdoXref = L"urn:schemas:mailheader:xref";
  CONST BSTR cdoXUnsent = L"urn:schemas:mailheader:x-unsent";
  CONST BSTR cdoXFidelity = L"urn:schemas:mailheader:x-cdostreamhighfidelity";
};
module CdoNamespace
{
  [id(1073741824)]
  CONST BSTR cdoNSConfiguration = L"http://schemas.microsoft.com/cdo/configuration/";
  CONST BSTR cdoNSContacts = L"urn:schemas:contacts:";
  CONST BSTR cdoNSHTTPMail = L"urn:schemas:httpmail:";
  CONST BSTR cdoNSMailHeader = L"urn:schemas:mailheader:";
  CONST BSTR cdoNSNNTPEnvelope = L"http://schemas.microsoft.com/cdo/nntpenvelope/";
  CONST BSTR cdoNSSMTPEnvelope = L"http://schemas.microsoft.com/cdo/smtpenvelope/";
};
module CdoNNTPEnvelope
{
  [id(1073741824)]
  CONST BSTR cdoNewsgroupList = L"http://schemas.microsoft.com/cdo/nntpenvelope/newsgrouplist";
  CONST BSTR cdoNNTPProcessing = L"http://schemas.microsoft.com/cdo/nntpenvelope/nntpprocessing";
};
module CdoOffice
{
  [id(1073741824)]
  CONST BSTR cdoKeywords = L"urn:schemas-microsoft-com:office:office#Keywords";
};
module CdoSMTPEnvelope
{
  [id(1073741824)]
  CONST BSTR cdoArrivalTime = L"http://schemas.microsoft.com/cdo/smtpenvelope/arrivaltime";
  CONST BSTR cdoClientIPAddress = L"http://schemas.microsoft.com/cdo/smtpenvelope/clientipaddress";
  CONST BSTR cdoMessageStatus = L"http://schemas.microsoft.com/cdo/smtpenvelope/messagestatus";
  CONST BSTR cdoPickupFileName = L"http://schemas.microsoft.com/cdo/smtpenvelope/pickupfilename";
  CONST BSTR cdoRecipientList = L"http://schemas.microsoft.com/cdo/smtpenvelope/recipientlist";
  CONST BSTR cdoSenderEmailAddress = L"http://schemas.microsoft.com/cdo/smtpenvelope/senderemailaddress";
};
module CdoErrors
{
  [id(1073741824)]
  CONST long CDO_E_UNCAUGHT_EXCEPTION = (int) -2147220991;
  CONST long CDO_E_NOT_OPENED = (int) -2147220990;
  CONST long CDO_E_UNSUPPORTED_DATASOURCE = (int) -2147220989;
  CONST long CDO_E_INVALID_PROPERTYNAME = (int) -2147220988;
  CONST long CDO_E_PROP_UNSUPPORTED = (int) -2147220987;
  CONST long CDO_E_INACTIVE = (int) -2147220986;
  CONST long CDO_E_NO_SUPPORT_FOR_OBJECTS = (int) -2147220985;
  CONST long CDO_E_NOT_AVAILABLE = (int) -2147220984;
  CONST long CDO_E_NO_DEFAULT_DROP_DIR = (int) -2147220983;
  CONST long CDO_E_SMTP_SERVER_REQUIRED = (int) -2147220982;
  CONST long CDO_E_NNTP_SERVER_REQUIRED = (int) -2147220981;
  CONST long CDO_E_RECIPIENT_MISSING = (int) -2147220980;
  CONST long CDO_E_FROM_MISSING = (int) -2147220979;
  CONST long CDO_E_SENDER_REJECTED = (int) -2147220978;
  CONST long CDO_E_RECIPIENTS_REJECTED = (int) -2147220977;
  CONST long CDO_E_NNTP_POST_FAILED = (int) -2147220976;
  CONST long CDO_E_SMTP_SEND_FAILED = (int) -2147220975;
  CONST long CDO_E_CONNECTION_DROPPED = (int) -2147220974;
  CONST long CDO_E_FAILED_TO_CONNECT = (int) -2147220973;
  CONST long CDO_E_INVALID_POST = (int) -2147220972;
  CONST long CDO_E_AUTHENTICATION_FAILURE = (int) -2147220971;
  CONST long CDO_E_INVALID_CONTENT_TYPE = (int) -2147220970;
  CONST long CDO_E_LOGON_FAILURE = (int) -2147220969;
  CONST long CDO_E_HTTP_NOT_FOUND = (int) -2147220968;
  CONST long CDO_E_HTTP_FORBIDDEN = (int) -2147220967;
  CONST long CDO_E_HTTP_FAILED = (int) -2147220966;
  CONST long CDO_E_MULTIPART_NO_DATA = (int) -2147220965;
  CONST long CDO_E_INVALID_ENCODING_FOR_MULTIPART = (int) -2147220964;
  CONST long CDO_E_UNSAFE_OPERATION = (int) -2147220963;
  CONST long CDO_E_PROP_NOT_FOUND = (int) -2147220962;
  CONST long CDO_E_INVALID_SEND_OPTION = (int) -2147220960;
  CONST long CDO_E_INVALID_POST_OPTION = (int) -2147220959;
  CONST long CDO_E_NO_PICKUP_DIR = (int) -2147220958;
  CONST long CDO_E_NOT_ALL_DELETED = (int) -2147220957;
  CONST long CDO_E_NO_METHOD = (int) -2147220956;
  CONST long CDO_E_PROP_READONLY = (int) -2147220953;
  CONST long CDO_E_PROP_CANNOT_DELETE = (int) -2147220952;
  CONST long CDO_E_BAD_DATA = (int) -2147220951;
  CONST long CDO_E_PROP_NONHEADER = (int) -2147220950;
  CONST long CDO_E_INVALID_CHARSET = (int) -2147220949;
  CONST long CDO_E_ADOSTREAM_NOT_BOUND = (int) -2147220948;
  CONST long CDO_E_CONTENTPROPXML_NOT_FOUND = (int) -2147220947;
  CONST long CDO_E_CONTENTPROPXML_WRONG_CHARSET = (int) -2147220946;
  CONST long CDO_E_CONTENTPROPXML_PARSE_FAILED = (int) -2147220945;
  CONST long CDO_E_CONTENTPROPXML_CONVERT_FAILED = (int) -2147220944;
  CONST long CDO_E_NO_DIRECTORIES_SPECIFIED = (int) -2147220943;
  CONST long CDO_E_DIRECTORIES_UNREACHABLE = (int) -2147220942;
  CONST long CDO_E_BAD_SENDER = (int) -2147220941;
  CONST long CDO_E_SELF_BINDING = (int) -2147220940;
  CONST long CDO_E_BAD_ATTENDEE_DATA = (int) -2147220939;
  CONST long CDO_E_ROLE_NOMORE_AVAILABLE = (int) -2147220938;
  CONST long CDO_E_BAD_TASKTYPE_ONASSIGN = (int) -2147220937;
  CONST long CDO_E_NOT_ASSIGNEDTO_USER = (int) -2147220936;
  CONST long CDO_E_OUTOFDATE = (int) -2147220935;
  CONST long CDO_E_ARGUMENT1 = (int) -2147205120;
  CONST long CDO_E_ARGUMENT2 = (int) -2147205119;
  CONST long CDO_E_ARGUMENT3 = (int) -2147205118;
  CONST long CDO_E_ARGUMENT4 = (int) -2147205117;
  CONST long CDO_E_ARGUMENT5 = (int) -2147205116;
  CONST long CDO_E_NOT_FOUND = (int) -2146644475;
  CONST long CDO_E_INVALID_ENCODING_TYPE = (int) -2146644451;
};

