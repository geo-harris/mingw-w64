/* Automated generated idl file <icachemanagerlib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface ICacheManager;
interface ICacheTicket;
interface ICacheEntry;
interface IEnumAttribute;
interface IEnumCache;

/* Union record forward declarations.  */
coclass CacheManager;

[
  uuid(052A1799-2BD5-4ED6-A254-8E850C48F41A),
  version(1.0),
  helpstring("csrspl 1.0 Cache Manager Type Library")
]
library icachemanagerlib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(36DC67DC-D792-49B7-BC53-BE67D4D86493),
     helpstring("Cache Manager Class"),
     cancreate
   ]
   coclass CacheManager
   {
     interface ICacheManager;
   };

};

/* Interface declarations.  */
[
  uuid(3B545432-9923-4229-B68B-896A756B85FD),
  helpstring("Cache Manager Interface"),
  dispatchable
]
interface ICacheManager : IDispatch
{
  [id(1610743808)]
  HRESULT __stdcall Register (
    [in] BSTR pRegistrationName,
    [out retval] interface ICacheTicket **ppCacheTicket
  );
  HRESULT __stdcall Create (
    [in] BSTR pPath,
    [in] unsigned int uFlags,
    [in] interface ICacheTicket *pITicket,
    [out retval] interface ICacheEntry **ppCacheEntry
  );
  HRESULT __stdcall Delete (
    [in] BSTR pPath,
    [in] unsigned int uFlags,
    [in] interface ICacheTicket *pITicket
  );
  HRESULT __stdcall CrackNames (
    [in] unsigned int InputFormat,
    [in] unsigned int OutputFormat,
    [in] BSTR pInputName,
    [out retval] BSTR *ppOutputName
  );
};
[
  uuid(108A83D5-6DC9-4DFD-9635-96C94407CAD0),
  helpstring("Cache Ticket Interface"),
  dispatchable
]
interface ICacheTicket : IDispatch
{
  [id(1610743808)]
  HRESULT __stdcall Token (
    [out retval] VARIANT *pToken
  );
};
[
  uuid(E0D0262E-0A30-460D-A8E5-120E2F638442),
  helpstring("Cache Entry Interface"),
  dispatchable
]
interface ICacheEntry : IDispatch
{
  [id(1610743808)]
  HRESULT __stdcall Get (
    [in] unsigned int ControlCode,
    [in] BSTR pKey,
    [out retval] VARIANT *pVar
  );
  HRESULT __stdcall Set (
    [in] unsigned int ControlCode,
    [in] BSTR pKey,
    [in] VARIANT pVar
  );
  HRESULT __stdcall RemoveAttribute (
    [in] BSTR pKey,
    [out retval] IUnknown **ppAttribute
  );
  HRESULT __stdcall Delete (void);
  HRESULT __stdcall NewAttributeEnum (
    [out retval] interface IEnumAttribute **ppEnumAttribute
  );
  HRESULT __stdcall NewChildEnum (
    [out retval] interface IEnumCache **ppEnumCache
  );
  HRESULT __stdcall Display (
    [in] UINT dwLevel,
    [in] UCHAR *hFile
  );
};
[
  uuid(2B8FB644-8073-455C-B0C6-92E5D4BC5FA2),
  helpstring("Cache Attribute Enumerator Interface"),
  dispatchable
]
interface IEnumAttribute : IDispatch
{
  [id(1610743808)]
  HRESULT __stdcall Next (
    [in] UINT cElements,
    [out] BSTR *ppStrings,
    [out] UINT *pcFetched
  );
  HRESULT __stdcall NextAttribute (
    [out] IUnknown **ppAttribute
  );
  HRESULT __stdcall Skip (
    [in] UINT cEntries
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumAttribute **ppEnum
  );
  [id(-4), propget, restricted]
  HRESULT __stdcall _NewEnum (
    [out retval] IUnknown **ppIUnknown
  );
};
[
  uuid(D786CDEB-91C8-4E89-B070-2A5ADE2949AD),
  helpstring("Cache Entry Enumerator Interface"),
  dispatchable
]
interface IEnumCache : IDispatch
{
  [id(1610743808)]
  HRESULT __stdcall Next (
    [in] UINT cElements,
    [out] interface ICacheEntry **ppCacheEntries,
    [out] UINT *pcFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT cEntries
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumCache **ppEnum
  );
  [id(-4), propget, restricted]
  HRESULT __stdcall _NewEnum (
    [out retval] IUnknown **ppIUnknown
  );
};

