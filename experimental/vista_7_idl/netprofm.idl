/* Automated generated idl file <networklist>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface INetworkEvents;
interface INetworkConnectionEvents;
interface INetworkListManagerEvents;
interface IPropertyBag;
interface IErrorLog;

/* Union record forward declarations.  */
dispinterface INetworkListManager;
dispinterface IEnumNetworks;
dispinterface INetwork;
dispinterface IEnumNetworkConnections;
dispinterface INetworkConnection;

/* Union record forward declarations.  */
coclass NetworkListManager;

/* Enumeration declarations.  */
enum NLM_ENUM_NETWORK
{
  NLM_ENUM_NETWORK_CONNECTED = (int) 201326593,
  NLM_ENUM_NETWORK_DISCONNECTED = (int) 201326594,
  NLM_ENUM_NETWORK_ALL = (int) 201326595
};
enum NLM_DOMAIN_TYPE
{
  NLM_DOMAIN_TYPE_NON_DOMAIN_NETWORK = (int) 201326592,
  NLM_DOMAIN_TYPE_DOMAIN_NETWORK = (int) 201326593,
  NLM_DOMAIN_TYPE_DOMAIN_AUTHENTICATED = (int) 201326594
};
enum NLM_CONNECTIVITY
{
  NLM_CONNECTIVITY_DISCONNECTED = (int) 201326592,
  NLM_CONNECTIVITY_IPV4_NOTRAFFIC = (int) 201326593,
  NLM_CONNECTIVITY_IPV6_NOTRAFFIC = (int) 201326594,
  NLM_CONNECTIVITY_IPV4_SUBNET = (int) 201326608,
  NLM_CONNECTIVITY_IPV4_LOCALNETWORK = (int) 201326624,
  NLM_CONNECTIVITY_IPV4_INTERNET = (int) 201326656,
  NLM_CONNECTIVITY_IPV6_SUBNET = (int) 201326848,
  NLM_CONNECTIVITY_IPV6_LOCALNETWORK = (int) 201327104,
  NLM_CONNECTIVITY_IPV6_INTERNET = (int) 201327616
};
enum NLM_NETWORK_CATEGORY
{
  NLM_NETWORK_CATEGORY_PUBLIC = (int) 201326592,
  NLM_NETWORK_CATEGORY_PRIVATE = (int) 201326593,
  NLM_NETWORK_CATEGORY_DOMAIN_AUTHENTICATED = (int) 201326594
};
enum NLM_NETWORK_PROPERTY_CHANGE
{
  NLM_NETWORK_PROPERTY_CHANGE_CONNECTION = (int) 201326593,
  NLM_NETWORK_PROPERTY_CHANGE_DESCRIPTION = (int) 201326594,
  NLM_NETWORK_PROPERTY_CHANGE_NAME = (int) 201326596,
  NLM_NETWORK_PROPERTY_CHANGE_ICON = (int) 201326600,
  NLM_NETWORK_PROPERTY_CHANGE_CATEGORY_VALUE = (int) 201326608
};
enum NLM_CONNECTION_PROPERTY_CHANGE
{
  NLM_CONNECTION_PROPERTY_CHANGE_AUTHENTICATION = (int) 201326593
};

[
  uuid(DCB00D01-570F-4A9B-8D69-199FDBA5723B),
  version(1.0),
  helpstring("Network List 1.0 Type Library")
]
library networklist
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(DCB00C01-570F-4A9B-8D69-199FDBA5723B),
     helpstring("Network List Manager"),
     cancreate
   ]
   coclass NetworkListManager
   {
     dispinterface INetworkListManager;
     interface INetworkEvents;
     interface INetworkConnectionEvents;
     interface INetworkListManagerEvents;
     interface IPropertyBag;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(DCB00000-570F-4A9B-8D69-199FDBA5723B),
     helpstring("Network List Manager"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetworkListManager : IDispatch
   {
     [id(1)]
     HRESULT __stdcall GetNetworks (
       [in] enum NLM_ENUM_NETWORK Flags,
       [out retval] dispinterface IEnumNetworks **ppEnumNetwork
     );
     HRESULT __stdcall GetNetwork (
       [in] struct GUID gdNetworkId,
       [out retval] dispinterface INetwork **ppNetwork
     );
     HRESULT __stdcall GetNetworkConnections (
       [out retval] dispinterface IEnumNetworkConnections **ppEnum
     );
     HRESULT __stdcall GetNetworkConnection (
       [in] struct GUID gdNetworkConnectionId,
       [out retval] dispinterface INetworkConnection **ppNetworkConnection
     );
     [propget]
     HRESULT __stdcall IsConnectedToInternet (
       [out retval] WINBOOL *pbIsConnected
     );
     [propget]
     HRESULT __stdcall IsConnected (
       [out retval] WINBOOL *pbIsConnected
     );
     HRESULT __stdcall GetConnectivity (
       [out retval] enum NLM_CONNECTIVITY *pConnectivity
     );
   };
   [
     uuid(DCB00003-570F-4A9B-8D69-199FDBA5723B),
     helpstring("Network Enumerator"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IEnumNetworks : IDispatch
   {
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] interface IEnumVARIANT **ppEnumVar
     );
     [id(1)]
     HRESULT __stdcall Next (
       [in] UINT celt,
       [out] dispinterface INetwork **rgelt,
       [in out] UINT *pceltFetched
     );
     HRESULT __stdcall Skip (
       [in] UINT celt
     );
     HRESULT __stdcall Reset (void);
     HRESULT __stdcall Clone (
       [out retval] dispinterface IEnumNetworks **ppEnumNetwork
     );
   };
   [
     uuid(DCB00002-570F-4A9B-8D69-199FDBA5723B),
     helpstring("Network"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetwork : IDispatch
   {
     [id(1)]
     HRESULT __stdcall GetName (
       [out retval] BSTR *pszNetworkName
     );
     HRESULT __stdcall SetName (
       [in] BSTR szNetworkNewName
     );
     HRESULT __stdcall GetDescription (
       [out retval] BSTR *pszDescription
     );
     HRESULT __stdcall SetDescription (
       [in] BSTR szDescription
     );
     HRESULT __stdcall GetNetworkId (
       [out retval] struct GUID *pgdGuidNetworkId
     );
     HRESULT __stdcall GetDomainType (
       [out retval] enum NLM_DOMAIN_TYPE *pNetworkType
     );
     HRESULT __stdcall GetNetworkConnections (
       [out retval] dispinterface IEnumNetworkConnections **ppEnumNetworkConnection
     );
     HRESULT __stdcall GetTimeCreatedAndConnected (
       [out] UINT *pdwLowDateTimeCreated,
       [out] UINT *pdwHighDateTimeCreated,
       [out] UINT *pdwLowDateTimeConnected,
       [out] UINT *pdwHighDateTimeConnected
     );
     [propget]
     HRESULT __stdcall IsConnectedToInternet (
       [out retval] WINBOOL *pbIsConnected
     );
     [propget]
     HRESULT __stdcall IsConnected (
       [out retval] WINBOOL *pbIsConnected
     );
     HRESULT __stdcall GetConnectivity (
       [out retval] enum NLM_CONNECTIVITY *pConnectivity
     );
     HRESULT __stdcall GetCategory (
       [out retval] enum NLM_NETWORK_CATEGORY *pCategory
     );
     HRESULT __stdcall SetCategory (
       [in] enum NLM_NETWORK_CATEGORY NewCategory
     );
   };
   [
     uuid(DCB00006-570F-4A9B-8D69-199FDBA5723B),
     helpstring("Network Connection Enumerator"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IEnumNetworkConnections : IDispatch
   {
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] interface IEnumVARIANT **ppEnumVar
     );
     [id(1)]
     HRESULT __stdcall Next (
       [in] UINT celt,
       [out] dispinterface INetworkConnection **rgelt,
       [in out] UINT *pceltFetched
     );
     HRESULT __stdcall Skip (
       [in] UINT celt
     );
     HRESULT __stdcall Reset (void);
     HRESULT __stdcall Clone (
       [out retval] dispinterface IEnumNetworkConnections **ppEnumNetwork
     );
   };
   [
     uuid(DCB00005-570F-4A9B-8D69-199FDBA5723B),
     helpstring("Network Connection"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetworkConnection : IDispatch
   {
     [id(1)]
     HRESULT __stdcall GetNetwork (
       [out retval] dispinterface INetwork **ppNetwork
     );
     [propget]
     HRESULT __stdcall IsConnectedToInternet (
       [out retval] WINBOOL *pbIsConnected
     );
     [propget]
     HRESULT __stdcall IsConnected (
       [out retval] WINBOOL *pbIsConnected
     );
     HRESULT __stdcall GetConnectivity (
       [out retval] enum NLM_CONNECTIVITY *pConnectivity
     );
     HRESULT __stdcall GetConnectionId (
       [out retval] struct GUID *pgdConnectionId
     );
     HRESULT __stdcall GetAdapterId (
       [out retval] struct GUID *pgdAdapterId
     );
     HRESULT __stdcall GetDomainType (
       [out retval] enum NLM_DOMAIN_TYPE *pDomainType
     );
   };

};

/* Interface declarations.  */
[
  uuid(DCB00004-570F-4A9B-8D69-199FDBA5723B),
  helpstring("Network Event Sink"),
  oleautomation
]
interface INetworkEvents : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall NetworkAdded (
    [in] struct GUID networkId
  );
  HRESULT __stdcall NetworkDeleted (
    [in] struct GUID networkId
  );
  HRESULT __stdcall NetworkConnectivityChanged (
    [in] struct GUID networkId,
    [in] enum NLM_CONNECTIVITY newConnectivity
  );
  HRESULT __stdcall NetworkPropertyChanged (
    [in] struct GUID networkId,
    [in] enum NLM_NETWORK_PROPERTY_CHANGE Flags
  );
};
[
  uuid(DCB00007-570F-4A9B-8D69-199FDBA5723B),
  helpstring("Network Connection Event Sink")
]
interface INetworkConnectionEvents : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall NetworkConnectionConnectivityChanged (
    [in] struct GUID connectionId,
    [in] enum NLM_CONNECTIVITY newConnectivity
  );
  HRESULT __stdcall NetworkConnectionPropertyChanged (
    [in] struct GUID connectionId,
    [in] enum NLM_CONNECTION_PROPERTY_CHANGE Flags
  );
};
[
  uuid(DCB00001-570F-4A9B-8D69-199FDBA5723B),
  helpstring("Network List Manager Event Sink"),
  oleautomation
]
interface INetworkListManagerEvents : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall ConnectivityChanged (
    [in] enum NLM_CONNECTIVITY newConnectivity
  );
};
[
  uuid(55272A00-42CB-11CE-8135-00AA004BB851)
]
interface IPropertyBag : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteRead (
    [in] LPWSTR pszPropName,
    [out] VARIANT *pVar,
    [in] interface IErrorLog *pErrorLog,
    [in] UINT varType,
    [in] IUnknown * pUnkObj
  );
  HRESULT __stdcall Write (
    [in] LPWSTR pszPropName,
    [in] VARIANT *pVar
  );
};
[
  uuid(3127CA40-446E-11CE-8135-00AA004BB851)
]
interface IErrorLog : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall AddError (
    [in] LPWSTR pszPropName,
    [in] struct EXCEPINFO *pExcepInfo
  );
};

