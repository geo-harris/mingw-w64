/* Automated generated idl file <optsholdlib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Union record forward declarations.  */
dispinterface IHtmlDlgHelper2;
dispinterface IHtmlDlgHelper;
dispinterface IHtmlFontNamesCollection;

/* Union record forward declarations.  */
coclass HtmlDlgHelper;

[
  uuid(3050F4E0-98B5-11CF-BB82-00AA00BDCE0B),
  version(1.0),
  helpstring("OptsHold 1.0 Type Library")
]
library optsholdlib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(3050F4E1-98B5-11CF-BB82-00AA00BDCE0B),
     helpstring("HtmlDlgHelper Class"),
     cancreate
   ]
   coclass HtmlDlgHelper
   {
     dispinterface IHtmlDlgHelper2;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(30510409-98B5-11CF-BB82-00AA00BDCE0B),
     helpstring("IHtmlDlgHelper2 Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IHtmlDlgHelper2 : IHtmlDlgHelper
   {
     [id(7), hidden]
     HRESULT __stdcall openfiledlgex (
       [in opt] VARIANT initFile,
       [in opt] VARIANT initDir,
       [in opt] VARIANT filter,
       [in opt] VARIANT initFilterIndex,
       [in opt] VARIANT title,
       [out retval] BSTR *pathName
     );
   };
   [
     uuid(3050F4DF-98B5-11CF-BB82-00AA00BDCE0B),
     helpstring("IHtmlDlgHelper Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IHtmlDlgHelper : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall document (
       [out retval] IDispatch **pVal
     );
     HRESULT __stdcall openfiledlg (
       [in opt] VARIANT initFile,
       [in opt] VARIANT initDir,
       [in opt] VARIANT filter,
       [in opt] VARIANT title,
       [out retval] BSTR *pathName
     );
     HRESULT __stdcall savefiledlg (
       [in opt] VARIANT initFile,
       [in opt] VARIANT initDir,
       [in opt] VARIANT filter,
       [in opt] VARIANT title,
       [out retval] BSTR *pathName
     );
     HRESULT __stdcall choosecolordlg (
       [in opt] VARIANT initColor,
       [out retval] long *rgbColor
     );
     HRESULT __stdcall getCharset (
       [in] BSTR fontName,
       [out retval] long *charset
     );
     [propget, hidden]
     HRESULT __stdcall fonts (
       [out retval] dispinterface IHtmlFontNamesCollection **p
     );
   };
   [
     uuid(3050F4EB-98B5-11CF-BB82-00AA00BDCE0B),
     helpstring("IHtmlFontNamesCollection Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IHtmlFontNamesCollection : IDispatch
   {
     [id(1), propget, hidden]
     HRESULT __stdcall length (
       [out retval] long *p
     );
     HRESULT __stdcall item (
       [in] long index,
       [out retval] BSTR *pBstr
     );
   };

};

