/* Automated generated idl file <clbcatqlib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface IComCatalogInternal;
interface IUserToken;
interface IComCatalog2Internal;
interface IPartitionLookup;
interface IPartitionProperty;

/* Union record forward declarations.  */
coclass ComCLBCatalog;

[
  uuid(8CFA6C81-B2EF-11D1-8B7E-00C04FD7A924),
  version(1.0),
  helpstring("CLBCatQ 1.0 Type Library")
]
library clbcatqlib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(A55B16FF-AFF8-11D1-8B7E-00C04FD7A924),
     helpstring("ComCLBCatalog Class"),
     cancreate
   ]
   coclass ComCLBCatalog
   {
     interface IComCatalogInternal;
     interface IComCatalog2Internal;
     interface IPartitionLookup;
   };

};

/* Interface declarations.  */
[
  uuid(A6304910-4115-11D2-8133-0060089F5FED)
]
interface IComCatalogInternal : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetClassInfo (
    [in] UINT dwFlags,
    [in] interface IUserToken *pUserToken,
    [in] struct GUID *guidConfiguredClsid,
    [in] struct GUID *riid,
    [out] void *ppv,
    [in] void *pvReserved
  );
  HRESULT __stdcall GetApplicationInfo (
    [in] interface IUserToken *pUserToken,
    [in] struct GUID *guidApplId,
    [in] struct GUID *riid,
    [out] void *ppv,
    [in] void *pvReserved
  );
  HRESULT __stdcall GetProcessInfo (
    [in] interface IUserToken *pUserToken,
    [in] struct GUID *guidProcess,
    [in] struct GUID *riid,
    [out] void *ppv,
    [in] void *pvReserved
  );
  HRESULT __stdcall GetServerGroupInfo (
    [in] interface IUserToken *pUserToken,
    [in] struct GUID *guidServerGroup,
    [in] struct GUID *riid,
    [out] void *ppv,
    [in] void *pvReserved
  );
  HRESULT __stdcall GetRetQueueInfo (
    [in] interface IUserToken *pUserToken,
    [in] LPWSTR wszFormatName,
    [in] struct GUID *riid,
    [out] void *ppv,
    [in] void *pvReserved
  );
  HRESULT __stdcall GetApplicationInfoForExe (
    [in] interface IUserToken *pUserToken,
    [in] LPWSTR pwszExeName,
    [in] struct GUID *riid,
    [out] void *ppv,
    [in] void *pvReserved
  );
  HRESULT __stdcall GetTypeLibrary (
    [in] interface IUserToken *pUserToken,
    [in] struct GUID *guidTypeLib,
    [in] struct GUID *riid,
    [out] void *ppv,
    [in] void *pvReserved
  );
  HRESULT __stdcall GetInterfaceInfo (
    [in] interface IUserToken *pUserToken,
    [in] struct GUID *iidInterface,
    [in] struct GUID *riid,
    [out] void *ppv,
    [in] void *pComCatalog
  );
  HRESULT __stdcall FlushCache (void);
  HRESULT __stdcall GetClassInfoFromProgId (
    [in] interface IUserToken *pUserToken,
    [in] LPWSTR pwszProgID,
    [in] struct GUID *riid,
    [out] void *ppv,
    [in] void *pComCatalog
  );
};
[
  uuid(000001FC-0000-0000-C000-000000000046)
]
interface IUserToken : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetUserClassesRootKey (
    [out] void *phKey
  );
  HRESULT __stdcall ReleaseUserClassesRootKey (void);
  HRESULT __stdcall GetUserSid (
    [out] UCHAR *ppSid,
    [out] USHORT *pcbSid
  );
  HRESULT __stdcall GetUserToken (
    [out] void *phToken
  );
  HRESULT __stdcall GetIntegritySID (
    [out] UCHAR *ppBuff,
    [out] USHORT *pCb
  );
};
[
  uuid(3310DAB4-EDC0-4CE9-8A9C-8FEA2980FD89)
]
interface IComCatalog2Internal : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetClassInfoByPartition (
    [in] UINT dwFlags,
    [in] interface IUserToken *pUserToken,
    [in] struct GUID *guidConfiguredClsid,
    [in] struct GUID *guidPartitionId,
    [in] struct GUID *riid,
    [out] void *ppv,
    [in] void *pComCatalog
  );
  HRESULT __stdcall GetClassInfoByApplication (
    [in] UINT dwFlags,
    [in] interface IUserToken *pUserToken,
    [in] struct GUID *guidConfiguredClsid,
    [in] struct GUID *guidPartitionId,
    [in] struct GUID *guidApplId,
    [in] struct GUID *riid,
    [out] void *ppv,
    [in] void *pComCatalog
  );
};
[
  uuid(000001F8-0000-0000-C000-000000000046)
]
interface IPartitionLookup : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetDefaultPartitionForUser (
    [out] interface IPartitionProperty **ppPartitionProperty
  );
  HRESULT __stdcall IsPartitionValidForUser (
    [in] struct GUID *pguidPartitionId,
    [out] long *pfIsPartitionValid
  );
  HRESULT __stdcall GetDefaultPartitionForUserByToken (
    [in] interface IUserToken *pUserToken,
    [out] interface IPartitionProperty **ppPartitionProperty
  );
  HRESULT __stdcall IsPartitionValidForUserByToken (
    [in] interface IUserToken *pUserToken,
    [in] struct GUID *pguidPartitionId,
    [out] long *pfIsPartitionValid
  );
  HRESULT __stdcall IsLocalStoreEnabled (
    [out] long *pfEnabled
  );
  HRESULT __stdcall IsDSLookupEnabled (
    [out] long *pfEnabled
  );
};
[
  uuid(000001F2-0000-0000-C000-000000000046)
]
interface IPartitionProperty : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetPartitionID (
    [out] struct GUID *pGuid
  );
  HRESULT __stdcall SetPartitionID (
    [in] struct GUID *pGuid
  );
};

