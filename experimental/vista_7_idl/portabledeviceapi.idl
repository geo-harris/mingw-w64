/* Automated generated idl file <portabledeviceapilib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface IPortableDevice;
interface IPortableDeviceValues;
interface IStream;
interface ISequentialStream;
interface IStorage;
interface IEnumSTATSTG;
interface IRecordInfo;
interface ITypeInfo;
interface ITypeComp;
interface ITypeLib;
interface IPortableDevicePropVariantCollection;
interface IPortableDeviceKeyCollection;
interface IPortableDeviceValuesCollection;
interface IPropertyStore;
interface IPortableDeviceContent;
interface IEnumPortableDeviceObjectIDs;
interface IPortableDeviceProperties;
interface IPortableDeviceResources;
interface IPortableDeviceCapabilities;
interface IPortableDeviceEventCallback;
interface IPortableDeviceManager;
interface IPortableDeviceService;
interface IPortableDeviceServiceCapabilities;
interface IPortableDeviceContent2;
interface IPortableDeviceServiceMethods;
interface IPortableDeviceServiceMethodCallback;
interface IPortableDeviceDispatchFactory;

/* Structure forward declarations.  */
struct _tagpropertykey;
struct tag_inner_PROPVARIANT;
struct _LARGE_INTEGER;
struct _ULARGE_INTEGER;
struct _FILETIME;
struct tagCLIPDATA;
struct tagBSTRBLOB;
struct tagBLOB;
struct tagSTATSTG;
struct tagRemSNB;
struct tagVersionedStream;
struct _wireSAFEARRAY;
struct _wireSAFEARRAY_UNION;
struct _wireSAFEARR_BSTR;
struct _FLAGGED_WORD_BLOB;
struct _wireSAFEARR_UNKNOWN;
struct _wireSAFEARR_DISPATCH;
struct _wireSAFEARR_VARIANT;
struct _wireVARIANT;
struct _wireBRECORD;
struct tagTYPEATTR;
struct tagTYPEDESC;
struct tagARRAYDESC;
struct tagSAFEARRAYBOUND;
struct tagIDLDESC;
struct tagFUNCDESC;
struct tagELEMDESC;
struct tagPARAMDESC;
struct tagPARAMDESCEX;
struct tagVARDESC;
struct tagTLIBATTR;
struct _wireSAFEARR_BRECORD;
struct _wireSAFEARR_HAVEIID;
struct _BYTE_SIZEDARR;
struct _SHORT_SIZEDARR;
struct _LONG_SIZEDARR;
struct _HYPER_SIZEDARR;
struct tagCAC;
struct tagCAUB;
struct tagCAI;
struct tagCAUI;
struct tagCAL;
struct tagCAUL;
struct tagCAH;
struct tagCAUH;
struct tagCAFLT;
struct tagCADBL;
struct tagCABOOL;
struct tagCASCODE;
struct tagCACY;
struct tagCADATE;
struct tagCAFILETIME;
struct tagCACLSID;
struct tagCACLIPDATA;
struct tagCABSTR;
struct tagCABSTRBLOB;
struct tagCALPSTR;
struct tagCALPWSTR;
struct tagCAPROPVARIANT;

/* Union record forward declarations.  */
union __MIDL___MIDL_itf_PortableDeviceApi_0001_0000_0001;
union __MIDL_IOleAutomationTypes_0001;
union __MIDL_IOleAutomationTypes_0004;
union __MIDL_IOleAutomationTypes_0005;
union __MIDL_IOleAutomationTypes_0006;

/* Union record forward declarations.  */
coclass PortableDevice;
coclass PortableDeviceManager;
coclass PortableDeviceService;
coclass PortableDeviceDispatchFactory;
coclass PortableDeviceFTM;
coclass PortableDeviceServiceFTM;

/* Enumeration declarations.  */
enum tagTYPEKIND
{
  TKIND_ENUM = (int) 201326592,
  TKIND_RECORD = (int) 201326593,
  TKIND_MODULE = (int) 201326594,
  TKIND_INTERFACE = (int) 201326595,
  TKIND_DISPATCH = (int) 201326596,
  TKIND_COCLASS = (int) 201326597,
  TKIND_ALIAS = (int) 201326598,
  TKIND_UNION = (int) 201326599,
  TKIND_MAX = (int) 201326600
};
enum tagDESCKIND
{
  DESCKIND_NONE = (int) 201326592,
  DESCKIND_FUNCDESC = (int) 201326593,
  DESCKIND_VARDESC = (int) 201326594,
  DESCKIND_TYPECOMP = (int) 201326595,
  DESCKIND_IMPLICITAPPOBJ = (int) 201326596,
  DESCKIND_MAX = (int) 201326597
};
enum tagFUNCKIND
{
  FUNC_VIRTUAL = (int) 201326592,
  FUNC_PUREVIRTUAL = (int) 201326593,
  FUNC_NONVIRTUAL = (int) 201326594,
  FUNC_STATIC = (int) 201326595,
  FUNC_DISPATCH = (int) 201326596
};
enum tagINVOKEKIND
{
  INVOKE_FUNC = (int) 201326593,
  INVOKE_PROPERTYGET = (int) 201326594,
  INVOKE_PROPERTYPUT = (int) 201326596,
  INVOKE_PROPERTYPUTREF = (int) 201326600
};
enum tagCALLCONV
{
  CC_FASTCALL = (int) 201326592,
  CC_CDECL = (int) 201326593,
  CC_MSCPASCAL = (int) 201326594,
  CC_PASCAL = (int) 201326594,
  CC_MACPASCAL = (int) 201326595,
  CC_STDCALL = (int) 201326596,
  CC_FPFASTCALL = (int) 201326597,
  CC_SYSCALL = (int) 201326598,
  CC_MPWCDECL = (int) 201326599,
  CC_MPWPASCAL = (int) 201326600,
  CC_MAX = (int) 201326601
};
enum tagVARKIND
{
  VAR_PERINSTANCE = (int) 201326592,
  VAR_STATIC = (int) 201326593,
  VAR_CONST = (int) 201326594,
  VAR_DISPATCH = (int) 201326595
};
enum tagSYSKIND
{
  SYS_WIN16 = (int) 201326592,
  SYS_WIN32 = (int) 201326593,
  SYS_MAC = (int) 201326594,
  SYS_WIN64 = (int) 201326595
};

/* Structure/union declarations.  */
struct _tagpropertykey
{
  struct GUID fmtid;
  UINT pid;
};
struct tag_inner_PROPVARIANT
{
  USHORT vt;
  UCHAR wReserved1;
  UCHAR wReserved2;
  UINT wReserved3;
  union __MIDL___MIDL_itf_PortableDeviceApi_0001_0000_0001 __MIDL____MIDL_itf_PortableDeviceApi_0001_00000001;
};
union __MIDL___MIDL_itf_PortableDeviceApi_0001_0000_0001
{
  CHAR cVal;
  UCHAR bVal;
  short iVal;
  USHORT uiVal;
  long lVal;
  UINT ulVal;
  int intVal;
  unsigned int uintVal;
  struct _LARGE_INTEGER hVal;
  struct _ULARGE_INTEGER uhVal;
  float fltVal;
  double dblVal;
  WINBOOL boolVal;
  WINBOOL bool;
  SCODE scode;
  CY cyVal;
  DATE date;
  struct _FILETIME filetime;
  struct GUID *puuid;
  struct tagCLIPDATA *pClipData;
  BSTR bstrVal;
  struct tagBSTRBLOB bstrblobVal;
  struct tagBLOB blob;
  LPSTR pszVal;
  LPWSTR pwszVal;
  IUnknown * punkVal;
  IDispatch * pdispVal;
  interface IStream *pStream;
  interface IStorage *pStorage;
  struct tagVersionedStream *pVersionedStream;
  wirePSAFEARRAY parray;
  struct tagCAC cac;
  struct tagCAUB caub;
  struct tagCAI cai;
  struct tagCAUI caui;
  struct tagCAL cal;
  struct tagCAUL caul;
  struct tagCAH cah;
  struct tagCAUH cauh;
  struct tagCAFLT caflt;
  struct tagCADBL cadbl;
  struct tagCABOOL cabool;
  struct tagCASCODE cascode;
  struct tagCACY cacy;
  struct tagCADATE cadate;
  struct tagCAFILETIME cafiletime;
  struct tagCACLSID cauuid;
  struct tagCACLIPDATA caclipdata;
  struct tagCABSTR cabstr;
  struct tagCABSTRBLOB cabstrblob;
  struct tagCALPSTR calpstr;
  struct tagCALPWSTR calpwstr;
  struct tagCAPROPVARIANT capropvar;
  CHAR *pcVal;
  UCHAR *pbVal;
  short *piVal;
  USHORT *puiVal;
  long *plVal;
  UINT *pulVal;
  int *pintVal;
  unsigned int *puintVal;
  float *pfltVal;
  double *pdblVal;
  WINBOOL *pboolVal;
  DECIMAL *pdecVal;
  SCODE *pscode;
  CY *pcyVal;
  DATE *pdate;
  BSTR *pbstrVal;
  IUnknown **ppunkVal;
  IDispatch **ppdispVal;
  wirePSAFEARRAY *pparray;
  struct tag_inner_PROPVARIANT *pvarVal;
};
struct _LARGE_INTEGER
{
  LONGLONG QuadPart;
};
struct _ULARGE_INTEGER
{
  ULONGLONG QuadPart;
};
struct _FILETIME
{
  UINT dwLowDateTime;
  UINT dwHighDateTime;
};
struct tagCLIPDATA
{
  UINT cbSize;
  long ulClipFmt;
  UCHAR *pClipData;
};
struct tagBSTRBLOB
{
  UINT cbSize;
  UCHAR *pData;
};
struct tagBLOB
{
  UINT cbSize;
  UCHAR *pBlobData;
};
struct tagSTATSTG
{
  LPWSTR pwcsName;
  UINT type;
  struct _ULARGE_INTEGER cbSize;
  struct _FILETIME mtime;
  struct _FILETIME ctime;
  struct _FILETIME atime;
  UINT grfMode;
  UINT grfLocksSupported;
  struct GUID clsid;
  UINT grfStateBits;
  UINT reserved;
};
struct tagRemSNB
{
  UINT ulCntStr;
  UINT ulCntChar;
  USHORT *rgString;
};
struct tagVersionedStream
{
  struct GUID guidVersion;
  interface IStream *pStream;
};
struct _wireSAFEARRAY
{
  USHORT cDims;
  USHORT fFeatures;
  UINT cbElements;
  UINT cLocks;
  struct _wireSAFEARRAY_UNION uArrayStructs;
  struct tagSAFEARRAYBOUND *rgsabound;
};
struct _wireSAFEARRAY_UNION
{
  UINT sfType;
  union __MIDL_IOleAutomationTypes_0001 u;
};
union __MIDL_IOleAutomationTypes_0001
{
  struct _wireSAFEARR_BSTR BstrStr;
  struct _wireSAFEARR_UNKNOWN UnknownStr;
  struct _wireSAFEARR_DISPATCH DispatchStr;
  struct _wireSAFEARR_VARIANT VariantStr;
  struct _wireSAFEARR_BRECORD RecordStr;
  struct _wireSAFEARR_HAVEIID HaveIidStr;
  struct _BYTE_SIZEDARR ByteStr;
  struct _SHORT_SIZEDARR WordStr;
  struct _LONG_SIZEDARR LongStr;
  struct _HYPER_SIZEDARR HyperStr;
};
struct _wireSAFEARR_BSTR
{
  UINT Size;
  struct _FLAGGED_WORD_BLOB **aBstr;
};
struct _FLAGGED_WORD_BLOB
{
  UINT fFlags;
  UINT clSize;
  USHORT *asData;
};
struct _wireSAFEARR_UNKNOWN
{
  UINT Size;
  IUnknown **apUnknown;
};
struct _wireSAFEARR_DISPATCH
{
  UINT Size;
  IDispatch **apDispatch;
};
struct _wireSAFEARR_VARIANT
{
  UINT Size;
  struct _wireVARIANT **aVariant;
};
struct _wireVARIANT
{
  UINT clSize;
  UINT rpcReserved;
  USHORT vt;
  USHORT wReserved1;
  USHORT wReserved2;
  USHORT wReserved3;
  union __MIDL_IOleAutomationTypes_0004 DUMMYUNIONNAME;
};
union __MIDL_IOleAutomationTypes_0004
{
  LONGLONG llVal;
  long lVal;
  UCHAR bVal;
  short iVal;
  float fltVal;
  double dblVal;
  WINBOOL boolVal;
  SCODE scode;
  CY cyVal;
  DATE date;
  struct _FLAGGED_WORD_BLOB *bstrVal;
  IUnknown * punkVal;
  IDispatch * pdispVal;
  struct _wireSAFEARRAY **parray;
  struct _wireBRECORD *brecVal;
  UCHAR *pbVal;
  short *piVal;
  long *plVal;
  LONGLONG *pllVal;
  float *pfltVal;
  double *pdblVal;
  WINBOOL *pboolVal;
  SCODE *pscode;
  CY *pcyVal;
  DATE *pdate;
  struct _FLAGGED_WORD_BLOB **pbstrVal;
  IUnknown **ppunkVal;
  IDispatch **ppdispVal;
  struct _wireSAFEARRAY ***pparray;
  struct _wireVARIANT **pvarVal;
  CHAR cVal;
  USHORT uiVal;
  UINT ulVal;
  ULONGLONG ullVal;
  int intVal;
  unsigned int uintVal;
  DECIMAL decVal;
  DECIMAL *pdecVal;
  CHAR *pcVal;
  USHORT *puiVal;
  UINT *pulVal;
  ULONGLONG *pullVal;
  int *pintVal;
  unsigned int *puintVal;
};
struct _wireBRECORD
{
  UINT fFlags;
  UINT clSize;
  interface IRecordInfo *pRecInfo;
  UCHAR *pRecord;
};
struct tagTYPEATTR
{
  struct GUID guid;
  UINT lcid;
  UINT dwReserved;
  long memidConstructor;
  long memidDestructor;
  LPWSTR lpstrSchema;
  UINT cbSizeInstance;
  enum tagTYPEKIND typekind;
  USHORT cFuncs;
  USHORT cVars;
  USHORT cImplTypes;
  USHORT cbSizeVft;
  USHORT cbAlignment;
  USHORT wTypeFlags;
  USHORT wMajorVerNum;
  USHORT wMinorVerNum;
  struct tagTYPEDESC tdescAlias;
  struct tagIDLDESC idldescType;
};
struct tagTYPEDESC
{
  union __MIDL_IOleAutomationTypes_0005 DUMMYUNIONNAME;
  USHORT vt;
};
union __MIDL_IOleAutomationTypes_0005
{
  struct tagTYPEDESC *lptdesc;
  struct tagARRAYDESC *lpadesc;
  UINT hreftype;
};
struct tagARRAYDESC
{
  struct tagTYPEDESC tdescElem;
  USHORT cDims;
  struct tagSAFEARRAYBOUND *rgbounds;
};
struct tagSAFEARRAYBOUND
{
  UINT cElements;
  long lLbound;
};
struct tagIDLDESC
{
  ULONG_PTR dwReserved;
  USHORT wIDLFlags;
};
struct tagFUNCDESC
{
  long memid;
  SCODE *lprgscode;
  struct tagELEMDESC *lprgelemdescParam;
  enum tagFUNCKIND funckind;
  enum tagINVOKEKIND invkind;
  enum tagCALLCONV callconv;
  short cParams;
  short cParamsOpt;
  short oVft;
  short cScodes;
  struct tagELEMDESC elemdescFunc;
  USHORT wFuncFlags;
};
struct tagELEMDESC
{
  struct tagTYPEDESC tdesc;
  struct tagPARAMDESC paramdesc;
};
struct tagPARAMDESC
{
  struct tagPARAMDESCEX *pparamdescex;
  USHORT wParamFlags;
};
struct tagPARAMDESCEX
{
  UINT cBytes;
  VARIANT varDefaultValue;
};
struct tagVARDESC
{
  long memid;
  LPWSTR lpstrSchema;
  union __MIDL_IOleAutomationTypes_0006 DUMMYUNIONNAME;
  struct tagELEMDESC elemdescVar;
  USHORT wVarFlags;
  enum tagVARKIND varkind;
};
union __MIDL_IOleAutomationTypes_0006
{
  UINT oInst;
  VARIANT *lpvarValue;
};
struct tagTLIBATTR
{
  struct GUID guid;
  UINT lcid;
  enum tagSYSKIND syskind;
  USHORT wMajorVerNum;
  USHORT wMinorVerNum;
  USHORT wLibFlags;
};
struct _wireSAFEARR_BRECORD
{
  UINT Size;
  struct _wireBRECORD **aRecord;
};
struct _wireSAFEARR_HAVEIID
{
  UINT Size;
  IUnknown **apUnknown;
  struct GUID iid;
};
struct _BYTE_SIZEDARR
{
  UINT clSize;
  UCHAR *pData;
};
struct _SHORT_SIZEDARR
{
  UINT clSize;
  USHORT *pData;
};
struct _LONG_SIZEDARR
{
  UINT clSize;
  UINT *pData;
};
struct _HYPER_SIZEDARR
{
  UINT clSize;
  LONGLONG *pData;
};
struct tagCAC
{
  UINT cElems;
  CHAR *pElems;
};
struct tagCAUB
{
  UINT cElems;
  UCHAR *pElems;
};
struct tagCAI
{
  UINT cElems;
  short *pElems;
};
struct tagCAUI
{
  UINT cElems;
  USHORT *pElems;
};
struct tagCAL
{
  UINT cElems;
  long *pElems;
};
struct tagCAUL
{
  UINT cElems;
  UINT *pElems;
};
struct tagCAH
{
  UINT cElems;
  struct _LARGE_INTEGER *pElems;
};
struct tagCAUH
{
  UINT cElems;
  struct _ULARGE_INTEGER *pElems;
};
struct tagCAFLT
{
  UINT cElems;
  float *pElems;
};
struct tagCADBL
{
  UINT cElems;
  double *pElems;
};
struct tagCABOOL
{
  UINT cElems;
  WINBOOL *pElems;
};
struct tagCASCODE
{
  UINT cElems;
  SCODE *pElems;
};
struct tagCACY
{
  UINT cElems;
  CY *pElems;
};
struct tagCADATE
{
  UINT cElems;
  DATE *pElems;
};
struct tagCAFILETIME
{
  UINT cElems;
  struct _FILETIME *pElems;
};
struct tagCACLSID
{
  UINT cElems;
  struct GUID *pElems;
};
struct tagCACLIPDATA
{
  UINT cElems;
  struct tagCLIPDATA *pElems;
};
struct tagCABSTR
{
  UINT cElems;
  BSTR *pElems;
};
struct tagCABSTRBLOB
{
  UINT cElems;
  struct tagBSTRBLOB *pElems;
};
struct tagCALPSTR
{
  UINT cElems;
  LPSTR pElems;
};
struct tagCALPWSTR
{
  UINT cElems;
  LPWSTR pElems;
};
struct tagCAPROPVARIANT
{
  UINT cElems;
  struct tag_inner_PROPVARIANT *pElems;
};

/* Type definitions.  */
typedef struct tagRemSNB * wireSNB;
typedef struct _wireSAFEARRAY ** wirePSAFEARRAY;
typedef ULONGLONG ULONG_PTR;
typedef UINT DWORD;

[
  uuid(1F001332-1A57-4934-BE31-AFFC99F4EE0A),
  version(1.0),
  helpstring("PortableDeviceApi 1.0 Type Library")
]
library portabledeviceapilib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(728A21C5-3D9E-48D7-9810-864848F0F404),
     helpstring("PortableDevice Class"),
     cancreate
   ]
   coclass PortableDevice
   {
     interface IPortableDevice;
   };
   [
     uuid(0AF10CEC-2ECD-4B92-9581-34F6AE0637F3),
     helpstring("PortableDeviceManager Class"),
     cancreate
   ]
   coclass PortableDeviceManager
   {
     interface IPortableDeviceManager;
   };
   [
     uuid(EF5DB4C2-9312-422C-9152-411CD9C4DD84),
     helpstring("PortableDeviceService Class"),
     cancreate
   ]
   coclass PortableDeviceService
   {
     interface IPortableDeviceService;
   };
   [
     uuid(43232233-8338-4658-AE01-0B4AE830B6B0),
     helpstring("PortableDeviceDispatchFactory Class"),
     cancreate
   ]
   coclass PortableDeviceDispatchFactory
   {
     interface IPortableDeviceDispatchFactory;
   };
   [
     uuid(F7C0039A-4762-488A-B4B3-760EF9A1BA9B),
     helpstring("PortableDeviceFTM Class"),
     cancreate
   ]
   coclass PortableDeviceFTM
   {
     interface IPortableDevice;
   };
   [
     uuid(1649B154-C794-497A-9B03-F3F0121302F3),
     helpstring("PortableDeviceServiceFTM Class"),
     cancreate
   ]
   coclass PortableDeviceServiceFTM
   {
     interface IPortableDeviceService;
   };

};

/* Interface declarations.  */
[
  uuid(625E2DF8-6392-4CF0-9AD1-3CFA5F17775C),
  helpstring("IPortableDevice Interface")
]
interface IPortableDevice : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Open (
    [in] LPWSTR pszPnPDeviceID,
    [in] interface IPortableDeviceValues *pClientInfo
  );
  HRESULT __stdcall SendCommand (
    [in] UINT dwFlags,
    [in] interface IPortableDeviceValues *pParameters,
    [out] interface IPortableDeviceValues **ppResults
  );
  HRESULT __stdcall Content (
    [out] interface IPortableDeviceContent **ppContent
  );
  HRESULT __stdcall Capabilities (
    [out] interface IPortableDeviceCapabilities **ppCapabilities
  );
  HRESULT __stdcall Cancel (void);
  HRESULT __stdcall Close (void);
  HRESULT __stdcall Advise (
    [in] UINT dwFlags,
    [in] interface IPortableDeviceEventCallback *pCallback,
    [in] interface IPortableDeviceValues *pParameters,
    [out] LPWSTR ppszCookie
  );
  HRESULT __stdcall Unadvise (
    [in] LPWSTR pszCookie
  );
  HRESULT __stdcall GetPnPDeviceID (
    [out] LPWSTR ppszPnPDeviceID
  );
};
[
  uuid(6848F6F2-3155-4F86-B6F5-263EEEAB3143),
  helpstring("IPortableDeviceValues Interface")
]
interface IPortableDeviceValues : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCount (
    [in] UINT *pcelt
  );
  HRESULT __stdcall GetAt (
    [in] UINT index,
    [in out] struct _tagpropertykey *pKey,
    [in out] struct tag_inner_PROPVARIANT *pValue
  );
  HRESULT __stdcall SetValue (
    [in] struct _tagpropertykey *key,
    [in] struct tag_inner_PROPVARIANT *pValue
  );
  HRESULT __stdcall GetValue (
    [in] struct _tagpropertykey *key,
    [out] struct tag_inner_PROPVARIANT *pValue
  );
  HRESULT __stdcall SetStringValue (
    [in] struct _tagpropertykey *key,
    [in] LPWSTR Value
  );
  HRESULT __stdcall GetStringValue (
    [in] struct _tagpropertykey *key,
    [out] LPWSTR pValue
  );
  HRESULT __stdcall SetUnsignedIntegerValue (
    [in] struct _tagpropertykey *key,
    [in] UINT Value
  );
  HRESULT __stdcall GetUnsignedIntegerValue (
    [in] struct _tagpropertykey *key,
    [out] UINT *pValue
  );
  HRESULT __stdcall SetSignedIntegerValue (
    [in] struct _tagpropertykey *key,
    [in] long Value
  );
  HRESULT __stdcall GetSignedIntegerValue (
    [in] struct _tagpropertykey *key,
    [out] long *pValue
  );
  HRESULT __stdcall SetUnsignedLargeIntegerValue (
    [in] struct _tagpropertykey *key,
    [in] ULONGLONG Value
  );
  HRESULT __stdcall GetUnsignedLargeIntegerValue (
    [in] struct _tagpropertykey *key,
    [out] ULONGLONG *pValue
  );
  HRESULT __stdcall SetSignedLargeIntegerValue (
    [in] struct _tagpropertykey *key,
    [in] LONGLONG Value
  );
  HRESULT __stdcall GetSignedLargeIntegerValue (
    [in] struct _tagpropertykey *key,
    [out] LONGLONG *pValue
  );
  HRESULT __stdcall SetFloatValue (
    [in] struct _tagpropertykey *key,
    [in] float Value
  );
  HRESULT __stdcall GetFloatValue (
    [in] struct _tagpropertykey *key,
    [out] float *pValue
  );
  HRESULT __stdcall SetErrorValue (
    [in] struct _tagpropertykey *key,
    [in] HRESULT Value
  );
  HRESULT __stdcall GetErrorValue (
    [in] struct _tagpropertykey *key,
    [out] HRESULT *pValue
  );
  HRESULT __stdcall SetKeyValue (
    [in] struct _tagpropertykey *key,
    [in] struct _tagpropertykey *Value
  );
  HRESULT __stdcall GetKeyValue (
    [in] struct _tagpropertykey *key,
    [out] struct _tagpropertykey *pValue
  );
  HRESULT __stdcall SetBoolValue (
    [in] struct _tagpropertykey *key,
    [in] long Value
  );
  HRESULT __stdcall GetBoolValue (
    [in] struct _tagpropertykey *key,
    [out] long *pValue
  );
  HRESULT __stdcall SetIUnknownValue (
    [in] struct _tagpropertykey *key,
    [in] IUnknown * pValue
  );
  HRESULT __stdcall GetIUnknownValue (
    [in] struct _tagpropertykey *key,
    [out] IUnknown **ppValue
  );
  HRESULT __stdcall SetGuidValue (
    [in] struct _tagpropertykey *key,
    [in] struct GUID *Value
  );
  HRESULT __stdcall GetGuidValue (
    [in] struct _tagpropertykey *key,
    [out] struct GUID *pValue
  );
  HRESULT __stdcall SetBufferValue (
    [in] struct _tagpropertykey *key,
    [in] UCHAR *pValue,
    [in] UINT cbValue
  );
  HRESULT __stdcall GetBufferValue (
    [in] struct _tagpropertykey *key,
    [out] UCHAR *ppValue,
    [out] UINT *pcbValue
  );
  HRESULT __stdcall SetIPortableDeviceValuesValue (
    [in] struct _tagpropertykey *key,
    [in] interface IPortableDeviceValues *pValue
  );
  HRESULT __stdcall GetIPortableDeviceValuesValue (
    [in] struct _tagpropertykey *key,
    [out] interface IPortableDeviceValues **ppValue
  );
  HRESULT __stdcall SetIPortableDevicePropVariantCollectionValue (
    [in] struct _tagpropertykey *key,
    [in] interface IPortableDevicePropVariantCollection *pValue
  );
  HRESULT __stdcall GetIPortableDevicePropVariantCollectionValue (
    [in] struct _tagpropertykey *key,
    [out] interface IPortableDevicePropVariantCollection **ppValue
  );
  HRESULT __stdcall SetIPortableDeviceKeyCollectionValue (
    [in] struct _tagpropertykey *key,
    [in] interface IPortableDeviceKeyCollection *pValue
  );
  HRESULT __stdcall GetIPortableDeviceKeyCollectionValue (
    [in] struct _tagpropertykey *key,
    [out] interface IPortableDeviceKeyCollection **ppValue
  );
  HRESULT __stdcall SetIPortableDeviceValuesCollectionValue (
    [in] struct _tagpropertykey *key,
    [in] interface IPortableDeviceValuesCollection *pValue
  );
  HRESULT __stdcall GetIPortableDeviceValuesCollectionValue (
    [in] struct _tagpropertykey *key,
    [out] interface IPortableDeviceValuesCollection **ppValue
  );
  HRESULT __stdcall RemoveValue (
    [in] struct _tagpropertykey *key
  );
  HRESULT __stdcall CopyValuesFromPropertyStore (
    [in] interface IPropertyStore *pStore
  );
  HRESULT __stdcall CopyValuesToPropertyStore (
    [in] interface IPropertyStore *pStore
  );
  HRESULT __stdcall Clear (void);
};
[
  uuid(0000000C-0000-0000-C000-000000000046)
]
interface IStream : ISequentialStream
{
  [id(1610743808)]
  HRESULT __stdcall RemoteSeek (
    [in] struct _LARGE_INTEGER dlibMove,
    [in] UINT dwOrigin,
    [out] struct _ULARGE_INTEGER *plibNewPosition
  );
  HRESULT __stdcall SetSize (
    [in] struct _ULARGE_INTEGER libNewSize
  );
  HRESULT __stdcall RemoteCopyTo (
    [in] interface IStream *pstm,
    [in] struct _ULARGE_INTEGER cb,
    [out] struct _ULARGE_INTEGER *pcbRead,
    [out] struct _ULARGE_INTEGER *pcbWritten
  );
  HRESULT __stdcall Commit (
    [in] UINT grfCommitFlags
  );
  HRESULT __stdcall Revert (void);
  HRESULT __stdcall LockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall UnlockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall Stat (
    [out] struct tagSTATSTG *pstatstg,
    [in] UINT grfStatFlag
  );
  HRESULT __stdcall Clone (
    [out] interface IStream **ppstm
  );
};
[
  uuid(0C733A30-2A1C-11CE-ADE5-00AA0044773D)
]
interface ISequentialStream : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteRead (
    [out] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbRead
  );
  HRESULT __stdcall RemoteWrite (
    [in] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbWritten
  );
};
[
  uuid(0000000B-0000-0000-C000-000000000046)
]
interface IStorage : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall CreateStream (
    [in] LPWSTR pwcsName,
    [in] UINT grfMode,
    [in] UINT reserved1,
    [in] UINT reserved2,
    [out] interface IStream **ppstm
  );
  HRESULT __stdcall RemoteOpenStream (
    [in] LPWSTR pwcsName,
    [in] UINT cbReserved1,
    [in] UCHAR *reserved1,
    [in] UINT grfMode,
    [in] UINT reserved2,
    [out] interface IStream **ppstm
  );
  HRESULT __stdcall CreateStorage (
    [in] LPWSTR pwcsName,
    [in] UINT grfMode,
    [in] UINT reserved1,
    [in] UINT reserved2,
    [out] interface IStorage **ppstg
  );
  HRESULT __stdcall OpenStorage (
    [in] LPWSTR pwcsName,
    [in] interface IStorage *pstgPriority,
    [in] UINT grfMode,
    [in] wireSNB snbExclude,
    [in] UINT reserved,
    [out] interface IStorage **ppstg
  );
  HRESULT __stdcall RemoteCopyTo (
    [in] UINT ciidExclude,
    [in] struct GUID *rgiidExclude,
    [in] wireSNB snbExclude,
    [in] interface IStorage *pstgDest
  );
  HRESULT __stdcall MoveElementTo (
    [in] LPWSTR pwcsName,
    [in] interface IStorage *pstgDest,
    [in] LPWSTR pwcsNewName,
    [in] UINT grfFlags
  );
  HRESULT __stdcall Commit (
    [in] UINT grfCommitFlags
  );
  HRESULT __stdcall Revert (void);
  HRESULT __stdcall RemoteEnumElements (
    [in] UINT reserved1,
    [in] UINT cbReserved2,
    [in] UCHAR *reserved2,
    [in] UINT reserved3,
    [out] interface IEnumSTATSTG **ppenum
  );
  HRESULT __stdcall DestroyElement (
    [in] LPWSTR pwcsName
  );
  HRESULT __stdcall RenameElement (
    [in] LPWSTR pwcsOldName,
    [in] LPWSTR pwcsNewName
  );
  HRESULT __stdcall SetElementTimes (
    [in] LPWSTR pwcsName,
    [in] struct _FILETIME *pctime,
    [in] struct _FILETIME *patime,
    [in] struct _FILETIME *pmtime
  );
  HRESULT __stdcall SetClass (
    [in] struct GUID *clsid
  );
  HRESULT __stdcall SetStateBits (
    [in] UINT grfStateBits,
    [in] UINT grfMask
  );
  HRESULT __stdcall Stat (
    [out] struct tagSTATSTG *pstatstg,
    [in] UINT grfStatFlag
  );
};
[
  uuid(0000000D-0000-0000-C000-000000000046)
]
interface IEnumSTATSTG : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] struct tagSTATSTG *rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumSTATSTG **ppenum
  );
};
[
  uuid(0000002F-0000-0000-C000-000000000046)
]
interface IRecordInfo : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RecordInit (
    [out] void *pvNew
  );
  HRESULT __stdcall RecordClear (
    [in] void *pvExisting
  );
  HRESULT __stdcall RecordCopy (
    [in] void *pvExisting,
    [out] void *pvNew
  );
  HRESULT __stdcall GetGuid (
    [out] struct GUID *pguid
  );
  HRESULT __stdcall GetName (
    [out] BSTR *pbstrName
  );
  HRESULT __stdcall GetSize (
    [out] UINT *pcbSize
  );
  HRESULT __stdcall GetTypeInfo (
    [out] interface ITypeInfo **ppTypeInfo
  );
  HRESULT __stdcall GetField (
    [in] void *pvData,
    [in] LPWSTR szFieldName,
    [out] VARIANT *pvarField
  );
  HRESULT __stdcall GetFieldNoCopy (
    [in] void *pvData,
    [in] LPWSTR szFieldName,
    [out] VARIANT *pvarField,
    [out] void *ppvDataCArray
  );
  HRESULT __stdcall PutField (
    [in] UINT wFlags,
    [in out] void *pvData,
    [in] LPWSTR szFieldName,
    [in] VARIANT *pvarField
  );
  HRESULT __stdcall PutFieldNoCopy (
    [in] UINT wFlags,
    [in out] void *pvData,
    [in] LPWSTR szFieldName,
    [in] VARIANT *pvarField
  );
  HRESULT __stdcall GetFieldNames (
    [in out] UINT *pcNames,
    [out] BSTR *rgBstrNames
  );
  long __stdcall IsMatchingType (
    [in] interface IRecordInfo *pRecordInfo
  );
  void * __stdcall RecordCreate (void);
  HRESULT __stdcall RecordCreateCopy (
    [in] void *pvSource,
    [out] void *ppvDest
  );
  HRESULT __stdcall RecordDestroy (
    [in] void *pvRecord
  );
};
[
  uuid(00020401-0000-0000-C000-000000000046)
]
interface ITypeInfo : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteGetTypeAttr (
    [out] struct tagTYPEATTR **ppTypeAttr,
    [out] DWORD *pDummy
  );
  HRESULT __stdcall GetTypeComp (
    [out] interface ITypeComp **ppTComp
  );
  HRESULT __stdcall RemoteGetFuncDesc (
    [in] unsigned int index,
    [out] struct tagFUNCDESC **ppFuncDesc,
    [out] DWORD *pDummy
  );
  HRESULT __stdcall RemoteGetVarDesc (
    [in] unsigned int index,
    [out] struct tagVARDESC **ppVarDesc,
    [out] DWORD *pDummy
  );
  HRESULT __stdcall RemoteGetNames (
    [in] long memid,
    [out] BSTR *rgBstrNames,
    [in] unsigned int cMaxNames,
    [out] unsigned int *pcNames
  );
  HRESULT __stdcall GetRefTypeOfImplType (
    [in] unsigned int index,
    [out] UINT *pRefType
  );
  HRESULT __stdcall GetImplTypeFlags (
    [in] unsigned int index,
    [out] int *pImplTypeFlags
  );
  HRESULT __stdcall LocalGetIDsOfNames (void);
  HRESULT __stdcall LocalInvoke (void);
  HRESULT __stdcall RemoteGetDocumentation (
    [in] long memid,
    [in] UINT refPtrFlags,
    [out] BSTR *pbstrName,
    [out] BSTR *pBstrDocString,
    [out] UINT *pdwHelpContext,
    [out] BSTR *pBstrHelpFile
  );
  HRESULT __stdcall RemoteGetDllEntry (
    [in] long memid,
    [in] enum tagINVOKEKIND invkind,
    [in] UINT refPtrFlags,
    [out] BSTR *pBstrDllName,
    [out] BSTR *pbstrName,
    [out] USHORT *pwOrdinal
  );
  HRESULT __stdcall GetRefTypeInfo (
    [in] UINT hreftype,
    [out] interface ITypeInfo **ppTInfo
  );
  HRESULT __stdcall LocalAddressOfMember (void);
  HRESULT __stdcall RemoteCreateInstance (
    [in] struct GUID *riid,
    [out] IUnknown **ppvObj
  );
  HRESULT __stdcall GetMops (
    [in] long memid,
    [out] BSTR *pBstrMops
  );
  HRESULT __stdcall RemoteGetContainingTypeLib (
    [out] interface ITypeLib **ppTLib,
    [out] unsigned int *pIndex
  );
  HRESULT __stdcall LocalReleaseTypeAttr (void);
  HRESULT __stdcall LocalReleaseFuncDesc (void);
  HRESULT __stdcall LocalReleaseVarDesc (void);
};
[
  uuid(00020403-0000-0000-C000-000000000046)
]
interface ITypeComp : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteBind (
    [in] LPWSTR szName,
    [in] UINT lHashVal,
    [in] USHORT wFlags,
    [out] interface ITypeInfo **ppTInfo,
    [out] enum tagDESCKIND *pDescKind,
    [out] struct tagFUNCDESC **ppFuncDesc,
    [out] struct tagVARDESC **ppVarDesc,
    [out] interface ITypeComp **ppTypeComp,
    [out] DWORD *pDummy
  );
  HRESULT __stdcall RemoteBindType (
    [in] LPWSTR szName,
    [in] UINT lHashVal,
    [out] interface ITypeInfo **ppTInfo
  );
};
[
  uuid(00020402-0000-0000-C000-000000000046)
]
interface ITypeLib : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteGetTypeInfoCount (
    [out] unsigned int *pcTInfo
  );
  HRESULT __stdcall GetTypeInfo (
    [in] unsigned int index,
    [out] interface ITypeInfo **ppTInfo
  );
  HRESULT __stdcall GetTypeInfoType (
    [in] unsigned int index,
    [out] enum tagTYPEKIND *pTKind
  );
  HRESULT __stdcall GetTypeInfoOfGuid (
    [in] struct GUID *guid,
    [out] interface ITypeInfo **ppTInfo
  );
  HRESULT __stdcall RemoteGetLibAttr (
    [out] struct tagTLIBATTR **ppTLibAttr,
    [out] DWORD *pDummy
  );
  HRESULT __stdcall GetTypeComp (
    [out] interface ITypeComp **ppTComp
  );
  HRESULT __stdcall RemoteGetDocumentation (
    [in] int index,
    [in] UINT refPtrFlags,
    [out] BSTR *pbstrName,
    [out] BSTR *pBstrDocString,
    [out] UINT *pdwHelpContext,
    [out] BSTR *pBstrHelpFile
  );
  HRESULT __stdcall RemoteIsName (
    [in] LPWSTR szNameBuf,
    [in] UINT lHashVal,
    [out] long *pfName,
    [out] BSTR *pBstrLibName
  );
  HRESULT __stdcall RemoteFindName (
    [in] LPWSTR szNameBuf,
    [in] UINT lHashVal,
    [out] interface ITypeInfo **ppTInfo,
    [out] long *rgMemId,
    [in out] USHORT *pcFound,
    [out] BSTR *pBstrLibName
  );
  HRESULT __stdcall LocalReleaseTLibAttr (void);
};
[
  uuid(89B2E422-4F1B-4316-BCEF-A44AFEA83EB3),
  helpstring("IPortableDevicePropVariantCollection Interface")
]
interface IPortableDevicePropVariantCollection : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCount (
    [in] UINT *pcElems
  );
  HRESULT __stdcall GetAt (
    [in] UINT dwIndex,
    [in] struct tag_inner_PROPVARIANT *pValue
  );
  HRESULT __stdcall Add (
    [in] struct tag_inner_PROPVARIANT *pValue
  );
  HRESULT __stdcall GetType (
    [out] USHORT *pvt
  );
  HRESULT __stdcall ChangeType (
    [in] USHORT vt
  );
  HRESULT __stdcall Clear (void);
  HRESULT __stdcall RemoveAt (
    [in] UINT dwIndex
  );
};
[
  uuid(DADA2357-E0AD-492E-98DB-DD61C53BA353),
  helpstring("IPortableDeviceKeyCollection Interface")
]
interface IPortableDeviceKeyCollection : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCount (
    [in] UINT *pcElems
  );
  HRESULT __stdcall GetAt (
    [in] UINT dwIndex,
    [in] struct _tagpropertykey *pKey
  );
  HRESULT __stdcall Add (
    [in] struct _tagpropertykey *key
  );
  HRESULT __stdcall Clear (void);
  HRESULT __stdcall RemoveAt (
    [in] UINT dwIndex
  );
};
[
  uuid(6E3F2D79-4E07-48C4-8208-D8C2E5AF4A99),
  helpstring("IPortableDeviceValuesCollection Interface")
]
interface IPortableDeviceValuesCollection : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCount (
    [in] UINT *pcElems
  );
  HRESULT __stdcall GetAt (
    [in] UINT dwIndex,
    [out] interface IPortableDeviceValues **ppValues
  );
  HRESULT __stdcall Add (
    [in] interface IPortableDeviceValues *pValues
  );
  HRESULT __stdcall Clear (void);
  HRESULT __stdcall RemoveAt (
    [in] UINT dwIndex
  );
};
[
  uuid(886D8EEB-8CF2-4446-8D02-CDBA1DBDCF99),
  helpstring("Simple Property Store Interface")
]
interface IPropertyStore : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCount (
    [out] UINT *cProps
  );
  HRESULT __stdcall GetAt (
    [in] UINT iProp,
    [out] struct _tagpropertykey *pKey
  );
  HRESULT __stdcall GetValue (
    [in] struct _tagpropertykey *key,
    [out] struct tag_inner_PROPVARIANT *pv
  );
  HRESULT __stdcall SetValue (
    [in] struct _tagpropertykey *key,
    [in] struct tag_inner_PROPVARIANT *propvar
  );
  HRESULT __stdcall Commit (void);
};
[
  uuid(6A96ED84-7C73-4480-9938-BF5AF477D426),
  helpstring("IPortableDeviceContent Interface")
]
interface IPortableDeviceContent : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall EnumObjects (
    [in] UINT dwFlags,
    [in] LPWSTR pszParentObjectID,
    [in] interface IPortableDeviceValues *pFilter,
    [out] interface IEnumPortableDeviceObjectIDs **ppenum
  );
  HRESULT __stdcall Properties (
    [out] interface IPortableDeviceProperties **ppProperties
  );
  HRESULT __stdcall Transfer (
    [out] interface IPortableDeviceResources **ppResources
  );
  HRESULT __stdcall CreateObjectWithPropertiesOnly (
    [in] interface IPortableDeviceValues *pValues,
    [in out] LPWSTR ppszObjectID
  );
  HRESULT __stdcall CreateObjectWithPropertiesAndData (
    [in] interface IPortableDeviceValues *pValues,
    [out] interface IStream **ppData,
    [in out] UINT *pdwOptimalWriteBufferSize,
    [in out] LPWSTR ppszCookie
  );
  HRESULT __stdcall Delete (
    [in] UINT dwOptions,
    [in] interface IPortableDevicePropVariantCollection *pObjectIDs,
    [in out] interface IPortableDevicePropVariantCollection **ppResults
  );
  HRESULT __stdcall GetObjectIDsFromPersistentUniqueIDs (
    [in] interface IPortableDevicePropVariantCollection *pPersistentUniqueIDs,
    [out] interface IPortableDevicePropVariantCollection **ppObjectIDs
  );
  HRESULT __stdcall Cancel (void);
  HRESULT __stdcall Move (
    [in] interface IPortableDevicePropVariantCollection *pObjectIDs,
    [in] LPWSTR pszDestinationFolderObjectID,
    [in out] interface IPortableDevicePropVariantCollection **ppResults
  );
  HRESULT __stdcall Copy (
    [in] interface IPortableDevicePropVariantCollection *pObjectIDs,
    [in] LPWSTR pszDestinationFolderObjectID,
    [in out] interface IPortableDevicePropVariantCollection **ppResults
  );
};
[
  uuid(10ECE955-CF41-4728-BFA0-41EEDF1BBF19),
  helpstring("IEnumPortableDeviceObjectIDs Interface")
]
interface IEnumPortableDeviceObjectIDs : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT cObjects,
    [out] LPWSTR pObjIDs,
    [in out] UINT *pcFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT cObjects
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumPortableDeviceObjectIDs **ppenum
  );
  HRESULT __stdcall Cancel (void);
};
[
  uuid(7F6D695C-03DF-4439-A809-59266BEEE3A6),
  helpstring("IPortableDeviceProperties Interface")
]
interface IPortableDeviceProperties : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetSupportedProperties (
    [in] LPWSTR pszObjectID,
    [out] interface IPortableDeviceKeyCollection **ppKeys
  );
  HRESULT __stdcall GetPropertyAttributes (
    [in] LPWSTR pszObjectID,
    [in] struct _tagpropertykey *key,
    [out] interface IPortableDeviceValues **ppAttributes
  );
  HRESULT __stdcall GetValues (
    [in] LPWSTR pszObjectID,
    [in] interface IPortableDeviceKeyCollection *pKeys,
    [out] interface IPortableDeviceValues **ppValues
  );
  HRESULT __stdcall SetValues (
    [in] LPWSTR pszObjectID,
    [in] interface IPortableDeviceValues *pValues,
    [out] interface IPortableDeviceValues **ppResults
  );
  HRESULT __stdcall Delete (
    [in] LPWSTR pszObjectID,
    [in] interface IPortableDeviceKeyCollection *pKeys
  );
  HRESULT __stdcall Cancel (void);
};
[
  uuid(FD8878AC-D841-4D17-891C-E6829CDB6934),
  helpstring("IPortableDeviceResources Interface")
]
interface IPortableDeviceResources : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetSupportedResources (
    [in] LPWSTR pszObjectID,
    [out] interface IPortableDeviceKeyCollection **ppKeys
  );
  HRESULT __stdcall GetResourceAttributes (
    [in] LPWSTR pszObjectID,
    [in] struct _tagpropertykey *key,
    [out] interface IPortableDeviceValues **ppResourceAttributes
  );
  HRESULT __stdcall GetStream (
    [in] LPWSTR pszObjectID,
    [in] struct _tagpropertykey *key,
    [in] UINT dwMode,
    [in out] UINT *pdwOptimalBufferSize,
    [out] interface IStream **ppStream
  );
  HRESULT __stdcall Delete (
    [in] LPWSTR pszObjectID,
    [in] interface IPortableDeviceKeyCollection *pKeys
  );
  HRESULT __stdcall Cancel (void);
  HRESULT __stdcall CreateResource (
    [in] interface IPortableDeviceValues *pResourceAttributes,
    [out] interface IStream **ppData,
    [in out] UINT *pdwOptimalWriteBufferSize,
    [in out] LPWSTR ppszCookie
  );
};
[
  uuid(2C8C6DBF-E3DC-4061-BECC-8542E810D126),
  helpstring("IPortableDeviceCapabilities Interface")
]
interface IPortableDeviceCapabilities : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetSupportedCommands (
    [out] interface IPortableDeviceKeyCollection **ppCommands
  );
  HRESULT __stdcall GetCommandOptions (
    [in] struct _tagpropertykey *Command,
    [out] interface IPortableDeviceValues **ppOptions
  );
  HRESULT __stdcall GetFunctionalCategories (
    [out] interface IPortableDevicePropVariantCollection **ppCategories
  );
  HRESULT __stdcall GetFunctionalObjects (
    [in] struct GUID *Category,
    [out] interface IPortableDevicePropVariantCollection **ppObjectIDs
  );
  HRESULT __stdcall GetSupportedContentTypes (
    [in] struct GUID *Category,
    [out] interface IPortableDevicePropVariantCollection **ppContentTypes
  );
  HRESULT __stdcall GetSupportedFormats (
    [in] struct GUID *ContentType,
    [out] interface IPortableDevicePropVariantCollection **ppFormats
  );
  HRESULT __stdcall GetSupportedFormatProperties (
    [in] struct GUID *Format,
    [out] interface IPortableDeviceKeyCollection **ppKeys
  );
  HRESULT __stdcall GetFixedPropertyAttributes (
    [in] struct GUID *Format,
    [in] struct _tagpropertykey *key,
    [out] interface IPortableDeviceValues **ppAttributes
  );
  HRESULT __stdcall Cancel (void);
  HRESULT __stdcall GetSupportedEvents (
    [out] interface IPortableDevicePropVariantCollection **ppEvents
  );
  HRESULT __stdcall GetEventOptions (
    [in] struct GUID *Event,
    [out] interface IPortableDeviceValues **ppOptions
  );
};
[
  uuid(A8792A31-F385-493C-A893-40F64EB45F6E),
  helpstring("IPortableDeviceEventCallback Interface")
]
interface IPortableDeviceEventCallback : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall OnEvent (
    [in] interface IPortableDeviceValues *pEventParameters
  );
};
[
  uuid(A1567595-4C2F-4574-A6FA-ECEF917B9A40),
  helpstring("IPortableDeviceManager Interface")
]
interface IPortableDeviceManager : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetDevices (
    [in out] LPWSTR pPnPDeviceIDs,
    [in out] UINT *pcPnPDeviceIDs
  );
  HRESULT __stdcall RefreshDeviceList (void);
  HRESULT __stdcall GetDeviceFriendlyName (
    [in] LPWSTR pszPnPDeviceID,
    [in out] USHORT *pDeviceFriendlyName,
    [in out] UINT *pcchDeviceFriendlyName
  );
  HRESULT __stdcall GetDeviceDescription (
    [in] LPWSTR pszPnPDeviceID,
    [in out] USHORT *pDeviceDescription,
    [in out] UINT *pcchDeviceDescription
  );
  HRESULT __stdcall GetDeviceManufacturer (
    [in] LPWSTR pszPnPDeviceID,
    [in out] USHORT *pDeviceManufacturer,
    [in out] UINT *pcchDeviceManufacturer
  );
  HRESULT __stdcall GetDeviceProperty (
    [in] LPWSTR pszPnPDeviceID,
    [in] LPWSTR pszDevicePropertyName,
    [in out] UCHAR *pData,
    [in out] UINT *pcbData,
    [in out] UINT *pdwType
  );
  HRESULT __stdcall GetPrivateDevices (
    [in out] LPWSTR pPnPDeviceIDs,
    [in out] UINT *pcPnPDeviceIDs
  );
};
[
  uuid(D3BD3A44-D7B5-40A9-98B7-2FA4D01DEC08),
  helpstring("IPortableDeviceService Interface")
]
interface IPortableDeviceService : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Open (
    [in] LPWSTR pszPnPServiceID,
    [in] interface IPortableDeviceValues *pClientInfo
  );
  HRESULT __stdcall Capabilities (
    [out] interface IPortableDeviceServiceCapabilities **ppCapabilities
  );
  HRESULT __stdcall Content (
    [out] interface IPortableDeviceContent2 **ppContent
  );
  HRESULT __stdcall Methods (
    [out] interface IPortableDeviceServiceMethods **ppMethods
  );
  HRESULT __stdcall Cancel (void);
  HRESULT __stdcall Close (void);
  HRESULT __stdcall GetServiceObjectID (
    [out] LPWSTR ppszServiceObjectID
  );
  HRESULT __stdcall GetPnPServiceID (
    [out] LPWSTR ppszPnPServiceID
  );
  HRESULT __stdcall Advise (
    [in] UINT dwFlags,
    [in] interface IPortableDeviceEventCallback *pCallback,
    [in] interface IPortableDeviceValues *pParameters,
    [out] LPWSTR ppszCookie
  );
  HRESULT __stdcall Unadvise (
    [in] LPWSTR pszCookie
  );
  HRESULT __stdcall SendCommand (
    [in] UINT dwFlags,
    [in] interface IPortableDeviceValues *pParameters,
    [out] interface IPortableDeviceValues **ppResults
  );
};
[
  uuid(24DBD89D-413E-43E0-BD5B-197F3C56C886),
  helpstring("IPortableDeviceServiceCapabilities Interface")
]
interface IPortableDeviceServiceCapabilities : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetSupportedMethods (
    [out] interface IPortableDevicePropVariantCollection **ppMethods
  );
  HRESULT __stdcall GetSupportedMethodsByFormat (
    [in] struct GUID *Format,
    [out] interface IPortableDevicePropVariantCollection **ppMethods
  );
  HRESULT __stdcall GetMethodAttributes (
    [in] struct GUID *Method,
    [out] interface IPortableDeviceValues **ppAttributes
  );
  HRESULT __stdcall GetMethodParameterAttributes (
    [in] struct GUID *Method,
    [in] struct _tagpropertykey *Parameter,
    [out] interface IPortableDeviceValues **ppAttributes
  );
  HRESULT __stdcall GetSupportedFormats (
    [out] interface IPortableDevicePropVariantCollection **ppFormats
  );
  HRESULT __stdcall GetFormatAttributes (
    [in] struct GUID *Format,
    [out] interface IPortableDeviceValues **ppAttributes
  );
  HRESULT __stdcall GetSupportedFormatProperties (
    [in] struct GUID *Format,
    [out] interface IPortableDeviceKeyCollection **ppKeys
  );
  HRESULT __stdcall GetFormatPropertyAttributes (
    [in] struct GUID *Format,
    [in] struct _tagpropertykey *Property,
    [out] interface IPortableDeviceValues **ppAttributes
  );
  HRESULT __stdcall GetSupportedEvents (
    [out] interface IPortableDevicePropVariantCollection **ppEvents
  );
  HRESULT __stdcall GetEventAttributes (
    [in] struct GUID *Event,
    [out] interface IPortableDeviceValues **ppAttributes
  );
  HRESULT __stdcall GetEventParameterAttributes (
    [in] struct GUID *Event,
    [in] struct _tagpropertykey *Parameter,
    [out] interface IPortableDeviceValues **ppAttributes
  );
  HRESULT __stdcall GetInheritedServices (
    [in] UINT dwInheritanceType,
    [out] interface IPortableDevicePropVariantCollection **ppServices
  );
  HRESULT __stdcall GetFormatRenderingProfiles (
    [in] struct GUID *Format,
    [out] interface IPortableDeviceValuesCollection **ppRenderingProfiles
  );
  HRESULT __stdcall GetSupportedCommands (
    [out] interface IPortableDeviceKeyCollection **ppCommands
  );
  HRESULT __stdcall GetCommandOptions (
    [in] struct _tagpropertykey *Command,
    [out] interface IPortableDeviceValues **ppOptions
  );
  HRESULT __stdcall Cancel (void);
};
[
  uuid(9B4ADD96-F6BF-4034-8708-ECA72BF10554),
  helpstring("IPortableDeviceContent2 Interface")
]
interface IPortableDeviceContent2 : IPortableDeviceContent
{
  [id(1610743808)]
  HRESULT __stdcall UpdateObjectWithPropertiesAndData (
    [in] LPWSTR pszObjectID,
    [in] interface IPortableDeviceValues *pProperties,
    [out] interface IStream **ppData,
    [in out] UINT *pdwOptimalWriteBufferSize
  );
};
[
  uuid(E20333C9-FD34-412D-A381-CC6F2D820DF7),
  helpstring("IPortableDeviceServiceMethods Interface")
]
interface IPortableDeviceServiceMethods : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Invoke (
    [in] struct GUID *Method,
    [in] interface IPortableDeviceValues *pParameters,
    [in out] interface IPortableDeviceValues **ppResults
  );
  HRESULT __stdcall InvokeAsync (
    [in] struct GUID *Method,
    [in] interface IPortableDeviceValues *pParameters,
    [in] interface IPortableDeviceServiceMethodCallback *pCallback
  );
  HRESULT __stdcall Cancel (
    [in] interface IPortableDeviceServiceMethodCallback *pCallback
  );
};
[
  uuid(C424233C-AFCE-4828-A756-7ED7A2350083),
  helpstring("IPortableDeviceServiceMethodCallback Interface")
]
interface IPortableDeviceServiceMethodCallback : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall OnComplete (
    [in] HRESULT hrStatus,
    [in] interface IPortableDeviceValues *pResults
  );
};
[
  uuid(5E1EAFC3-E3D7-4132-96FA-759C0F9D1E0F)
]
interface IPortableDeviceDispatchFactory : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetDeviceDispatch (
    [in] LPWSTR pszPnPDeviceID,
    [out] IDispatch **ppDeviceDispatch
  );
};

