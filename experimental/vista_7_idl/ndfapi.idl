/* Automated generated idl file <ndfapilib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface INetworkFileAccessDiagnosticsUI;

/* Structure forward declarations.  */
struct _RemotableHandle;

/* Union record forward declarations.  */
union __MIDL_IWinTypes_0009;

/* Union record forward declarations.  */
dispinterface INetworkDiagnostics;
dispinterface IDiagnosticsWaitHandle;
dispinterface IRootCauseInfoEnum;
dispinterface IRootCauseInfo;
dispinterface IDiagnosisText;
dispinterface IDiagnosisParameterEnum;
dispinterface IDiagnosisParameter;
dispinterface IRepairInfoEnum;
dispinterface IRepairInfo;
dispinterface IRepairUiInfo;

/* Union record forward declarations.  */
coclass NDFAPI;
coclass NetworkDiagnostics;

/* Structure/union declarations.  */
struct _RemotableHandle
{
  long fContext;
  union __MIDL_IWinTypes_0009 u;
};
union __MIDL_IWinTypes_0009
{
  long hInproc;
  long hRemote;
};

/* Type definitions.  */
typedef struct _RemotableHandle * wireHWND;

[
  uuid(11DD5EA9-F8DB-4F6E-BF7C-6AADBA404A3D),
  version(1.0),
  helpstring("ndfapi 1.0 Type Library")
]
library ndfapilib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(C529C7EF-A3AF-45F2-8A47-767B33AA5CC0),
     helpstring("NDFAPI Class"),
     cancreate
   ]
   coclass NDFAPI
   {
     interface INetworkFileAccessDiagnosticsUI;
   };
   [
     uuid(E2A4E630-7AD8-44F0-B6EE-D36EA4C6EB94),
     helpstring("NetworkDiagnostics Class"),
     cancreate
   ]
   coclass NetworkDiagnostics
   {
     dispinterface INetworkDiagnostics;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(A92DFFF7-67CA-439C-BE88-27B4577FA57E),
     helpstring("INetworkDiagnostics Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface INetworkDiagnostics : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall CreateIncident (
       [in] BSTR EntryPoint,
       [in] BSTR Attributes
     );
     HRESULT __stdcall Diagnose (
       [in] UINT dwWait,
       [in] UINT dwReserved,
       [out retval] dispinterface IDiagnosticsWaitHandle **Synchronize
     );
     [propget]
     HRESULT __stdcall DiagnoseResult (
       [out retval] UINT *Hr
     );
     [propget]
     HRESULT __stdcall RootCauses (
       [out retval] dispinterface IRootCauseInfoEnum **RootCauses
     );
     HRESULT __stdcall Repair (
       [in] UINT Rank,
       [in] UINT dwWait,
       [out retval] dispinterface IDiagnosticsWaitHandle **Synchronize
     );
     [propget]
     HRESULT __stdcall RepairResult (
       [out retval] UINT *Hr
     );
     HRESULT __stdcall Validate (
       [in] UINT dwWait,
       [out retval] dispinterface IDiagnosticsWaitHandle **Synchronize
     );
     [propget]
     HRESULT __stdcall ValidateResult (
       [out retval] UINT *Hr
     );
     [propget]
     HRESULT __stdcall Progress (
       [out retval] BSTR *ProgressText
     );
     [propget]
     HRESULT __stdcall IncidentID (
       [out retval] BSTR *IncidentID
     );
     HRESULT __stdcall OpenExistingIncident (
       [in] BSTR IncidentID
     );
     HRESULT __stdcall SetFollowUpSession (
       [in] dispinterface INetworkDiagnostics *FollowUpSession
     );
     [propget]
     HRESULT __stdcall EntryPoint (
       [out retval] BSTR *EntryPoint
     );
     [propget]
     HRESULT __stdcall HelperAttributes (
       [out retval] BSTR *Attributes
     );
     [propget]
     HRESULT __stdcall SessionStatus (
       [out retval] UINT *Status
     );
     [propget]
     HRESULT __stdcall FollowUpSession (
       [out retval] BSTR *IncidentID
     );
     HRESULT __stdcall ShouldSkipRootCause (
       [in] dispinterface IRootCauseInfo *RootCause,
       [out retval] UINT *SkipReason
     );
     HRESULT __stdcall ShouldSkipRepair (
       [in] dispinterface IRepairInfo *Repair,
       [out retval] UINT *SkipReason
     );
     [propget]
     HRESULT __stdcall TraceFile (
       [out retval] BSTR *TraceFile
     );
     HRESULT __stdcall SkipRepair (
       [in] UINT Rank
     );
     HRESULT __stdcall RepairShown (
       [in] UINT Rank
     );
   };
   [
     uuid(4758E4A5-6F20-4615-BC2C-27580CC00E67),
     helpstring("IDiagnosticsWaitHandle Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IDiagnosticsWaitHandle : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall Wait (
       [in] UINT dwMilliseconds
     );
   };
   [
     uuid(05656AAF-A27F-41B0-9FA4-A34ADB09631B),
     helpstring("IRootCauseInfoEnum Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IRootCauseInfoEnum : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Next (
       [out retval] dispinterface IRootCauseInfo **RootCause
     );
     HRESULT __stdcall Reset (void);
     [propget]
     HRESULT __stdcall Count (
       [out retval] UINT *Count
     );
   };
   [
     uuid(3BFEB072-B667-47C7-A4EA-3E67D7C2ACA4),
     helpstring("IRootCauseInfo Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IRootCauseInfo : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *Description
     );
     [propget]
     HRESULT __stdcall DescriptionEx (
       [out retval] dispinterface IDiagnosisText **Description
     );
     [propget]
     HRESULT __stdcall RootCauseID (
       [out retval] BSTR *RootCauseID
     );
     [propget]
     HRESULT __stdcall Flags (
       [out retval] UINT *Flags
     );
     [propget]
     HRESULT __stdcall NetworkInterfaceID (
       [out retval] BSTR *NetworkInterfaceID
     );
     [propget]
     HRESULT __stdcall Repairs (
       [out retval] dispinterface IRepairInfoEnum **Repairs
     );
     [propget]
     HRESULT __stdcall ClassName (
       [out retval] BSTR *ClassName
     );
   };
   [
     uuid(F7C33982-17FE-4472-AC19-8113F5A9CF78),
     helpstring("IRepairUiInfo"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IDiagnosisText : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Title (
       [out retval] BSTR *Title
     );
     [propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *Description
     );
     [propget]
     HRESULT __stdcall Parameters (
       [out retval] dispinterface IDiagnosisParameterEnum **Params
     );
     [propget]
     HRESULT __stdcall Extensions (
       [out retval] dispinterface IDiagnosisParameterEnum **Extensions
     );
   };
   [
     uuid(D30A82FF-2F37-40C0-A24D-2A8CA90321EB),
     helpstring("IRepairUiInfo"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IDiagnosisParameterEnum : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Next (
       [out retval] dispinterface IDiagnosisParameter **Param
     );
     HRESULT __stdcall Reset (void);
     [propget]
     HRESULT __stdcall Count (
       [out retval] UINT *Count
     );
   };
   [
     uuid(5B8FE18C-02A2-4364-9FF6-3415CEFAF70B),
     helpstring("IRepairUiInfo"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IDiagnosisParameter : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *Name
     );
     [propget]
     HRESULT __stdcall Value (
       [out retval] BSTR *Value
     );
   };
   [
     uuid(CBFDF96C-FB17-43DD-BC0F-03CA57914435),
     helpstring("IRepairInfoEnum Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IRepairInfoEnum : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Next (
       [out retval] dispinterface IRepairInfo **Repair
     );
     HRESULT __stdcall Reset (void);
     [propget]
     HRESULT __stdcall Count (
       [out retval] UINT *Count
     );
   };
   [
     uuid(53F9A461-08A2-4203-9EA5-DB567AB2E3BA),
     helpstring("IRepairInfo interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IRepairInfo : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *Description
     );
     [propget]
     HRESULT __stdcall DescriptionEx (
       [out retval] dispinterface IDiagnosisText **Description
     );
     [propget]
     HRESULT __stdcall RepairID (
       [out retval] BSTR *RepairID
     );
     [propget]
     HRESULT __stdcall Flags (
       [out retval] UINT *Flags
     );
     [propget]
     HRESULT __stdcall Rank (
       [out retval] USHORT *Rank
     );
     [propget]
     HRESULT __stdcall UiInfo (
       [out retval] dispinterface IRepairUiInfo **UiInfo
     );
     [propget]
     HRESULT __stdcall RequiredSidType (
       [out retval] UINT *SidType
     );
     [propget]
     HRESULT __stdcall RootCause (
       [out retval] dispinterface IRootCauseInfo **RootCause
     );
   };
   [
     uuid(9D07E91E-03E1-4786-A38D-9B4F11AC9D1D),
     helpstring("IRepairUiInfo"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IRepairUiInfo : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Type (
       [out retval] UINT *UiInfoType
     );
     HRESULT __stdcall LaunchUI (void);
     [propget]
     HRESULT __stdcall HelpTopicLink (
       [out retval] BSTR *HelpTopic
     );
   };

};

/* Interface declarations.  */
[
  uuid(FB5AD46A-DD49-470D-8132-6A094056401D),
  helpstring("INetworkFileAccessDiagnosticsUI Interface")
]
interface INetworkFileAccessDiagnosticsUI : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Show (
    [in] wireHWND hwndOwner,
    [in] LPWSTR pszServer,
    [in] LPWSTR pszPath,
    [in] HRESULT hrToDiagnose
  );
  HRESULT __stdcall IsDiagnosableResult (
    [in] HRESULT hrToDiagnose,
    [in] LPWSTR pszFile
  );
};

