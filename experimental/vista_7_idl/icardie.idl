/* Automated generated idl file <icardie>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Structure forward declarations.  */
struct _SERVICEIDENTITY;
struct _REQUESTEDTOKENPOLICY;
struct _SERVICEIDENTITY2;
struct _REQUESTEDTOKENPOLICY2;

/* Union record forward declarations.  */
dispinterface ICardSpaceSigninHelper;
dispinterface ICardSpaceClaimCollection;

/* Union record forward declarations.  */
coclass CardSpaceSigninHelper;
coclass CardSpaceElementBehaviorFactory;
coclass CardSpaceClaimCollection;

/* Structure/union declarations.  */
struct _SERVICEIDENTITY
{
  BSTR Url;
  BSTR PolicyUrl;
  UINT IdentityType;
  UCHAR Identity[];
};
struct _REQUESTEDTOKENPOLICY
{
  UINT Flags;
  struct _SERVICEIDENTITY Recipient;
  struct _SERVICEIDENTITY Issuer;
  BSTR TokenType;
  BSTR RequiredClaims[];
  BSTR OptionalClaims[];
  BSTR PrivacyUrl;
  VARIANT PrivacyVersion;
};
struct _SERVICEIDENTITY2
{
  BSTR Url;
  BSTR PolicyUrl;
  UINT IdentityType;
  UCHAR Identity[];
};
struct _REQUESTEDTOKENPOLICY2
{
  UINT Flags;
  struct _SERVICEIDENTITY2 Recipient;
  struct _SERVICEIDENTITY2 Issuer;
  BSTR TokenType;
  BSTR RequiredClaims[];
  BSTR OptionalClaims[];
  BSTR PrivacyUrl;
  VARIANT PrivacyVersion;
};

[
  uuid(8D810F97-C1A1-49CA-9902-A7B7E58AF009),
  version(1.0),
  helpstring("Microsoft Information Card IE Helper 1.0 Type Library")
]
library icardie
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(19916E01-B44E-4E31-94A4-4696DF46157B),
     version(1.0),
     helpstring("CardSpaceSigninHelper Class"),
     cancreate
   ]
   coclass CardSpaceSigninHelper
   {
     dispinterface ICardSpaceSigninHelper;
   };
   [
     uuid(C2C4F00A-720E-4389-AEB9-E9C4B0D93C6F),
     version(1.0),
     helpstring("CardSpaceElementBehaviorFactory Class"),
     cancreate
   ]
   coclass CardSpaceElementBehaviorFactory
   {
     interface IUnknown;
   };
   [
     uuid(53001F3A-F5E1-4B90-9C9F-00E09B53C5F1),
     version(1.0),
     helpstring("CardSpaceClaimCollection Class"),
     cancreate
   ]
   coclass CardSpaceClaimCollection
   {
     dispinterface ICardSpaceClaimCollection;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(9B23A3F7-CE97-4509-91C2-805C3C9E6A84),
     helpstring("ICardSpaceSigninHelper Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICardSpaceSigninHelper : IDispatch
   {
     [id(2), propget]
     HRESULT __stdcall isInstalled (
       [out retval] WINBOOL *status
     );
     [id(13), propget]
     HRESULT __stdcall PrivacyUrl (
       [out retval] BSTR *pUrl
     );
     [id(13), propput]
     HRESULT __stdcall PrivacyUrl (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall PrivacyVersion (
       [out retval] VARIANT *pVersion
     );
     [id(14), propput]
     HRESULT __stdcall PrivacyVersion (
       [in] VARIANT *argNo1
     );
     [id(4), propget]
     HRESULT __stdcall Issuer (
       [out retval] BSTR *pUrl
     );
     [id(4), propput]
     HRESULT __stdcall Issuer (
       [in] BSTR argNo1
     );
     [id(9), propget]
     HRESULT __stdcall issuerPolicy (
       [out retval] BSTR *pUrl
     );
     [id(9), propput]
     HRESULT __stdcall issuerPolicy (
       [in] BSTR argNo1
     );
     [id(0), propget]
     HRESULT __stdcall value (
       [out retval] BSTR *pValue
     );
     [id(0), propput]
     HRESULT __stdcall value (
       [in] BSTR argNo1
     );
     [id(8), propget]
     HRESULT __stdcall TokenType (
       [out retval] BSTR *pTokenType
     );
     [id(8), propput]
     HRESULT __stdcall TokenType (
       [in] BSTR argNo1
     );
     [id(12), propget]
     HRESULT __stdcall RequiredClaims (
       [out retval] IUnknown **ppUnk
     );
     [id(11), propget]
     HRESULT __stdcall OptionalClaims (
       [out retval] IUnknown **ppUnk
     );
   };
   [
     uuid(EB01DC81-2F21-4360-A16C-B52CDF9081D1),
     helpstring("ICardSpaceClaimCollection interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICardSpaceClaimCollection : IDispatch
   {
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _newEnum (
       [out retval] IUnknown **p
     );
     [id(21)]
     HRESULT __stdcall item (
       VARIANT *pVarIndex,
       [out retval] VARIANT *pVarResult
     );
     [propget]
     HRESULT __stdcall length (
       [out retval] long *p
     );
     HRESULT __stdcall add (
       VARIANT *pVarClaimUri
     );
     HRESULT __stdcall remove (
       VARIANT *pValue
     );
     HRESULT __stdcall toString (
       [out retval] BSTR *pString
     );
     HRESULT __stdcall fromString (
       BSTR pString
     );
   };

};

