/* Automated generated idl file <amovie>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Union record forward declarations.  */
dispinterface DActiveMovieEvents;
dispinterface DActiveMovieEvents2;
dispinterface IActiveMovie3;
dispinterface IActiveMovie2;
dispinterface IActiveMovie;

/* Union record forward declarations.  */
coclass ActiveMovie;

/* Enumeration declarations.  */
[
  helpstring("ActiveMovie Readiness State")
]
enum ReadyStateConstants
{
  amvUninitialized = (int) 201326592,
  amvLoading = (int) 201326593,
  amvInteractive = (int) 201326595,
  amvComplete = (int) 201326596
};
[
  helpstring("State of ActiveMovie Clip")
]
enum StateConstants
{
  amvNotLoaded = (int) -1,
  amvStopped = (int) 201326592,
  amvPaused = (int) 201326593,
  amvRunning = (int) 201326594
};
[
  helpstring("ActiveMovie Display Mode")
]
enum DisplayModeConstants
{
  amvTime = (int) 201326592,
  amvFrames = (int) 201326593
};
[
  helpstring("Direct Show Video Size")
]
enum WindowSizeConstants
{
  amvOriginalSize = (int) 201326592,
  amvDoubleOriginalSize = (int) 201326593,
  amvOneSixteenthScreen = (int) 201326594,
  amvOneFourthScreen = (int) 201326595,
  amvOneHalfScreen = (int) 201326596
};
[
  helpstring("Str_c78")
]
enum AppearanceConstants
{
  amvFlat = (int) 201326592,
  amv3D = (int) 201326593
};
[
  helpstring("Str_cc8")
]
enum BorderStyleConstants
{
  amvNone = (int) 201326592,
  amvFixedSingle = (int) 201326593
};

[
  uuid(05589FA0-C356-11CE-BF01-00AA0055595A),
  version(2.0),
  helpstring("Microsoft ActiveMovie Control")
]
library amovie
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(05589FA1-C356-11CE-BF01-00AA0055595A),
     version(2.0),
     helpstring("Microsoft ActiveMovie Control"),
     cancreate
   ]
   coclass ActiveMovie
   {
     dispinterface IActiveMovie3;
     dispinterface IActiveMovie2;
     dispinterface IActiveMovie;
     dispinterface DActiveMovieEvents2;
     dispinterface DActiveMovieEvents;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(05589FA3-C356-11CE-BF01-00AA0055595A),
     helpstring("Event interface for ActiveMovie Control"),
     hidden,
     dispatchable
   ]
   dispinterface DActiveMovieEvents
   {
     [id(1)]
     void __stdcall StateChange (
       long oldState,
       long newState
     );
     void __stdcall PositionChange (
       double oldPosition,
       double newPosition
     );
     void __stdcall Timer (void);
     [id(50)]
     void __stdcall OpenComplete (void);
     [id(-600)]
     void __stdcall Click (void);
     [id(-601)]
     void __stdcall DblClick (void);
     [id(-602)]
     void __stdcall KeyDown (
       short *KeyCode,
       short Shift
     );
     [id(-604)]
     void __stdcall KeyUp (
       short *KeyCode,
       short Shift
     );
     void __stdcall KeyPress (
       short *KeyAscii
     );
     [id(-605)]
     void __stdcall MouseDown (
       short Button,
       short Shift,
       OLE_XPOS_PIXELS x,
       OLE_YPOS_PIXELS y
     );
     [id(-606)]
     void __stdcall MouseMove (
       short Button,
       short Shift,
       OLE_XPOS_PIXELS x,
       OLE_YPOS_PIXELS y
     );
     [id(-607)]
     void __stdcall MouseUp (
       short Button,
       short Shift,
       OLE_XPOS_PIXELS x,
       OLE_YPOS_PIXELS y
     );
     [id(999)]
     void __stdcall Error (
       short SCode,
       BSTR Description,
       BSTR Source,
       WINBOOL *CancelDisplay
     );
   };
   [
     uuid(B6CD6553-E9CB-11D0-821F-00A0C91F9CA0),
     helpstring("Event interface for ActiveMovie Control"),
     hidden,
     dispatchable
   ]
   dispinterface DActiveMovieEvents2
   {
     [id(1)]
     void __stdcall StateChange (
       long oldState,
       long newState
     );
     void __stdcall PositionChange (
       double oldPosition,
       double newPosition
     );
     void __stdcall Timer (void);
     [id(50)]
     void __stdcall OpenComplete (void);
     [id(-600)]
     void __stdcall Click (void);
     [id(-601)]
     void __stdcall DblClick (void);
     [id(-602)]
     void __stdcall KeyDown (
       short *KeyCode,
       short Shift
     );
     [id(-604)]
     void __stdcall KeyUp (
       short *KeyCode,
       short Shift
     );
     void __stdcall KeyPress (
       short *KeyAscii
     );
     [id(-605)]
     void __stdcall MouseDown (
       short Button,
       short Shift,
       OLE_XPOS_PIXELS x,
       OLE_YPOS_PIXELS y
     );
     [id(-606)]
     void __stdcall MouseMove (
       short Button,
       short Shift,
       OLE_XPOS_PIXELS x,
       OLE_YPOS_PIXELS y
     );
     [id(-607)]
     void __stdcall MouseUp (
       short Button,
       short Shift,
       OLE_XPOS_PIXELS x,
       OLE_YPOS_PIXELS y
     );
     [id(999)]
     void __stdcall Error (
       short SCode,
       BSTR Description,
       BSTR Source,
       WINBOOL *CancelDisplay
     );
     [id(51)]
     void __stdcall DisplayModeChange (void);
     [id(-609)]
     void __stdcall ReadyStateChange (
       enum ReadyStateConstants ReadyState
     );
     [id(52)]
     void __stdcall ScriptCommand (
       BSTR bstrType,
       BSTR bstrText
     );
   };
   [
     uuid(265EC140-AE62-11D1-8500-00A0C91F9CA0),
     helpstring("ActiveMovie Control"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IActiveMovie3 : IActiveMovie2
   {
     [id(1111), propget]
     HRESULT __stdcall MediaPlayer (
       [out retval] IDispatch **ppDispatch
     );
   };
   [
     uuid(B6CD6554-E9CB-11D0-821F-00A0C91F9CA0),
     helpstring("ActiveMovie Control"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IActiveMovie2 : IActiveMovie
   {
     [id(53)]
     HRESULT __stdcall IsSoundCardEnabled (
       [out retval] WINBOOL *pbSoundCard
     );
     [id(-525), propget]
     HRESULT __stdcall ReadyState (
       [out retval] enum ReadyStateConstants *pValue
     );
   };
   [
     uuid(05589FA2-C356-11CE-BF01-00AA0055595A),
     helpstring("ActiveMovie Control"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IActiveMovie : IDispatch
   {
     [id(-552)]
     HRESULT __stdcall AboutBox (void);
     [id(1610743809)]
     HRESULT __stdcall Run (void);
     HRESULT __stdcall Pause (void);
     HRESULT __stdcall Stop (void);
     [id(4), propget]
     HRESULT __stdcall ImageSourceWidth (
       [out retval] long *pWidth
     );
     [propget]
     HRESULT __stdcall ImageSourceHeight (
       [out retval] long *pHeight
     );
     [propget]
     HRESULT __stdcall Author (
       [out retval] BSTR *pbstrAuthor
     );
     [propget]
     HRESULT __stdcall Title (
       [out retval] BSTR *pbstrTitle
     );
     [propget]
     HRESULT __stdcall Copyright (
       [out retval] BSTR *pbstrCopyright
     );
     [propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *pbstrDescription
     );
     [propget]
     HRESULT __stdcall Rating (
       [out retval] BSTR *pbstrRating
     );
     [propget]
     HRESULT __stdcall FileName (
       [out retval] BSTR *pbstrFileName
     );
     [id(11), propput]
     HRESULT __stdcall FileName (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Duration (
       [out retval] double *pValue
     );
     [propget]
     HRESULT __stdcall CurrentPosition (
       [out retval] double *pValue
     );
     [id(13), propput]
     HRESULT __stdcall CurrentPosition (
       [in] double argNo1
     );
     [propget]
     HRESULT __stdcall PlayCount (
       [out retval] long *pPlayCount
     );
     [id(14), propput]
     HRESULT __stdcall PlayCount (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall SelectionStart (
       [out retval] double *pValue
     );
     [id(15), propput]
     HRESULT __stdcall SelectionStart (
       [in] double argNo1
     );
     [propget]
     HRESULT __stdcall SelectionEnd (
       [out retval] double *pValue
     );
     [id(16), propput]
     HRESULT __stdcall SelectionEnd (
       [in] double argNo1
     );
     [propget]
     HRESULT __stdcall CurrentState (
       [out retval] enum StateConstants *pState
     );
     [propget]
     HRESULT __stdcall Rate (
       [out retval] double *pValue
     );
     [id(18), propput]
     HRESULT __stdcall Rate (
       [in] double argNo1
     );
     [propget]
     HRESULT __stdcall Volume (
       [out retval] long *pValue
     );
     [id(19), propput]
     HRESULT __stdcall Volume (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall Balance (
       [out retval] long *pValue
     );
     [id(20), propput]
     HRESULT __stdcall Balance (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall EnableContextMenu (
       [out retval] WINBOOL *pEnable
     );
     [id(21), propput]
     HRESULT __stdcall EnableContextMenu (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall ShowDisplay (
       [out retval] WINBOOL *Show
     );
     [id(22), propput]
     HRESULT __stdcall ShowDisplay (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall ShowControls (
       [out retval] WINBOOL *Show
     );
     [id(23), propput]
     HRESULT __stdcall ShowControls (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall ShowPositionControls (
       [out retval] WINBOOL *Show
     );
     [id(24), propput]
     HRESULT __stdcall ShowPositionControls (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall ShowSelectionControls (
       [out retval] WINBOOL *Show
     );
     [id(25), propput]
     HRESULT __stdcall ShowSelectionControls (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall ShowTracker (
       [out retval] WINBOOL *Show
     );
     [id(26), propput]
     HRESULT __stdcall ShowTracker (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall EnablePositionControls (
       [out retval] WINBOOL *Enable
     );
     [id(27), propput]
     HRESULT __stdcall EnablePositionControls (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall EnableSelectionControls (
       [out retval] WINBOOL *Enable
     );
     [id(28), propput]
     HRESULT __stdcall EnableSelectionControls (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall EnableTracker (
       [out retval] WINBOOL *Enable
     );
     [id(29), propput]
     HRESULT __stdcall EnableTracker (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AllowHideDisplay (
       [out retval] WINBOOL *Show
     );
     [id(30), propput]
     HRESULT __stdcall AllowHideDisplay (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AllowHideControls (
       [out retval] WINBOOL *Show
     );
     [id(31), propput]
     HRESULT __stdcall AllowHideControls (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall DisplayMode (
       [out retval] enum DisplayModeConstants *pValue
     );
     [id(32), propput]
     HRESULT __stdcall DisplayMode (
       [in] enum DisplayModeConstants argNo1
     );
     [propget]
     HRESULT __stdcall AllowChangeDisplayMode (
       [out retval] WINBOOL *fAllow
     );
     [id(33), propput]
     HRESULT __stdcall AllowChangeDisplayMode (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall FilterGraph (
       [out retval] IUnknown **ppFilterGraph
     );
     [id(34), propput]
     HRESULT __stdcall FilterGraph (
       [in] IUnknown * argNo1
     );
     [propget]
     HRESULT __stdcall FilterGraphDispatch (
       [out retval] IDispatch **pDispatch
     );
     [propget]
     HRESULT __stdcall DisplayForeColor (
       [out retval] OLE_COLOR *ForeColor
     );
     [id(36), propput]
     HRESULT __stdcall DisplayForeColor (
       [in] OLE_COLOR argNo1
     );
     [propget]
     HRESULT __stdcall DisplayBackColor (
       [out retval] OLE_COLOR *BackColor
     );
     [id(37), propput]
     HRESULT __stdcall DisplayBackColor (
       [in] OLE_COLOR argNo1
     );
     [propget]
     HRESULT __stdcall MovieWindowSize (
       [out retval] enum WindowSizeConstants *WindowSize
     );
     [id(38), propput]
     HRESULT __stdcall MovieWindowSize (
       [in] enum WindowSizeConstants argNo1
     );
     [propget]
     HRESULT __stdcall FullScreenMode (
       [out retval] WINBOOL *pEnable
     );
     [id(39), propput]
     HRESULT __stdcall FullScreenMode (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AutoStart (
       [out retval] WINBOOL *pEnable
     );
     [id(40), propput]
     HRESULT __stdcall AutoStart (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AutoRewind (
       [out retval] WINBOOL *pEnable
     );
     [id(41), propput]
     HRESULT __stdcall AutoRewind (
       [in] WINBOOL argNo1
     );
     [id(-515), propget]
     HRESULT __stdcall hWnd (
       [out retval] long *hWnd
     );
     [id(-520), propget]
     HRESULT __stdcall Appearance (
       [out retval] enum AppearanceConstants *pAppearance
     );
     [id(-520), propput]
     HRESULT __stdcall Appearance (
       [in] enum AppearanceConstants argNo1
     );
     [id(42), propget]
     HRESULT __stdcall BorderStyle (
       [out retval] enum BorderStyleConstants *pBorderStyle
     );
     [id(42), propput]
     HRESULT __stdcall BorderStyle (
       [in] enum BorderStyleConstants argNo1
     );
     [id(-514), propget]
     HRESULT __stdcall Enabled (
       [out retval] WINBOOL *pEnabled
     );
     [id(-514), propput]
     HRESULT __stdcall Enabled (
       [in] WINBOOL argNo1
     );
     [id(1610743885), propget, hidden]
     HRESULT __stdcall Info (
       [out retval] long *ppInfo
     );
   };

};

