/* Automated generated idl file <pmcobjlib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface IComponentData;
interface IComponent;
interface IConsole;
interface IHeaderCtrl;
interface IToolbar;
interface IImageList;
interface IDataObject;
interface IEnumFORMATETC;
interface IAdviseSink;
interface IMoniker;
interface IPersistStream;
interface IPersist;
interface IStream;
interface ISequentialStream;
interface IBindCtx;
interface IRunningObjectTable;
interface IEnumMoniker;
interface IEnumString;
interface IEnumSTATDATA;
interface IConsoleVerb;
interface ISnapinNode;
interface IConsole2;
interface ISnapinAbout;
interface IExtendView;
interface IViewExtensionCallback;

/* Structure forward declarations.  */
struct _userHBITMAP;
struct _userBITMAP;
struct _MMCButton;
struct tagFORMATETC;
struct _userCLIPFORMAT;
struct tagDVTARGETDEVICE;
struct _userSTGMEDIUM;
struct _STGMEDIUM_UNION;
struct _userHMETAFILEPICT;
struct _remoteMETAFILEPICT;
struct _userHMETAFILE;
struct _BYTE_BLOB;
struct _userHENHMETAFILE;
struct _GDI_OBJECT;
struct _userHPALETTE;
struct tagLOGPALETTE;
struct tagPALETTEENTRY;
struct _userHGLOBAL;
struct _FLAGGED_BYTE_BLOB;
struct _userFLAG_STGMEDIUM;
struct _LARGE_INTEGER;
struct _ULARGE_INTEGER;
struct tagSTATSTG;
struct _FILETIME;
struct tagBIND_OPTS2;
struct _COSERVERINFO;
struct _COAUTHINFO;
struct _COAUTHIDENTITY;
struct tagSTATDATA;
struct _RemotableHandle;
struct _RESULTDATAITEM;
struct _SCOPEDATAITEM;
struct _MMC_EXT_VIEW_DATA;

/* Union record forward declarations.  */
union __MIDL_IWinTypes_0007;
union __MIDL_IWinTypes_0001;
union __MIDL_IAdviseSink_0003;
union __MIDL_IWinTypes_0005;
union __MIDL_IWinTypes_0004;
union __MIDL_IWinTypes_0006;
union __MIDL_IAdviseSink_0002;
union __MIDL_IWinTypes_0008;
union __MIDL_IWinTypes_0003;
union __MIDL_IWinTypes_0009;

/* Union record forward declarations.  */
coclass PMCComponentData;
coclass PMCComponent;
coclass PMCRootNode;
coclass PMCAbout;
coclass PMCPrintQueueViewExtension;

/* Enumeration declarations.  */
enum _MMC_BUTTON_STATE
{
  ENABLED = (int) 201326593,
  CHECKED = (int) 201326594,
  HIDDEN = (int) 201326596,
  INDETERMINATE = (int) 201326600,
  BUTTONPRESSED = (int) 201326608
};
enum _MMC_CONSOLE_VERB
{
  MMC_VERB__dummy_ = (int) 201326592
};
enum _MMC_NOTIFY_TYPE
{
  MMCN__dummy_ = (int) 201326592
};
enum _DATA_OBJECT_TYPES
{
  CCT_SCOPE = (int) 201359360,
  CCT_RESULT = (int) 201359361,
  CCT_SNAPIN_MANAGER = (int) 201359362,
  CCT_UNINITIALIZED = (int) 201392127
};
enum tagESnapinIconType
{
  kSnapinIconExpanded = (int) 201326592,
  kSnapinIconCollapsed = (int) 201326593
};

/* Structure/union declarations.  */
struct _userHBITMAP
{
  long fContext;
  union __MIDL_IWinTypes_0007 u;
};
union __MIDL_IWinTypes_0007
{
  long hInproc;
  struct _userBITMAP *hRemote;
  LONGLONG hInproc64;
};
struct _userBITMAP
{
  long bmType;
  long bmWidth;
  long bmHeight;
  long bmWidthBytes;
  USHORT bmPlanes;
  USHORT bmBitsPixel;
  UINT cbSize;
  UCHAR *pBuffer;
};
struct _MMCButton
{
  int nBitmap;
  int idCommand;
  UCHAR fsState;
  UCHAR fsType;
  LPWSTR lpButtonText;
  LPWSTR lpTooltipText;
};
struct tagFORMATETC
{
  wireCLIPFORMAT cfFormat;
  struct tagDVTARGETDEVICE *ptd;
  UINT dwAspect;
  long lindex;
  UINT tymed;
};
struct _userCLIPFORMAT
{
  long fContext;
  union __MIDL_IWinTypes_0001 u;
};
union __MIDL_IWinTypes_0001
{
  UINT dwValue;
  LPWSTR pwszName;
};
struct tagDVTARGETDEVICE
{
  UINT tdSize;
  USHORT tdDriverNameOffset;
  USHORT tdDeviceNameOffset;
  USHORT tdPortNameOffset;
  USHORT tdExtDevmodeOffset;
  UCHAR *tdData;
};
struct _userSTGMEDIUM
{
  struct _STGMEDIUM_UNION DUMMYUNIONNAME;
  IUnknown * pUnkForRelease;
};
struct _STGMEDIUM_UNION
{
  UINT tymed;
  union __MIDL_IAdviseSink_0003 u;
};
union __MIDL_IAdviseSink_0003
{
  struct _userHMETAFILEPICT *hMetaFilePict;
  struct _userHENHMETAFILE *hHEnhMetaFile;
  struct _GDI_OBJECT *hGdiHandle;
  struct _userHGLOBAL *hGlobal;
  LPWSTR lpszFileName;
  struct _BYTE_BLOB *pstm;
  struct _BYTE_BLOB *pstg;
};
struct _userHMETAFILEPICT
{
  long fContext;
  union __MIDL_IWinTypes_0005 u;
};
union __MIDL_IWinTypes_0005
{
  long hInproc;
  struct _remoteMETAFILEPICT *hRemote;
  LONGLONG hInproc64;
};
struct _remoteMETAFILEPICT
{
  long mm;
  long xExt;
  long yExt;
  struct _userHMETAFILE *hMF;
};
struct _userHMETAFILE
{
  long fContext;
  union __MIDL_IWinTypes_0004 u;
};
union __MIDL_IWinTypes_0004
{
  long hInproc;
  struct _BYTE_BLOB *hRemote;
  LONGLONG hInproc64;
};
struct _BYTE_BLOB
{
  UINT clSize;
  UCHAR *abData;
};
struct _userHENHMETAFILE
{
  long fContext;
  union __MIDL_IWinTypes_0006 u;
};
union __MIDL_IWinTypes_0006
{
  long hInproc;
  struct _BYTE_BLOB *hRemote;
  LONGLONG hInproc64;
};
struct _GDI_OBJECT
{
  UINT ObjectType;
  union __MIDL_IAdviseSink_0002 u;
};
union __MIDL_IAdviseSink_0002
{
  struct _userHBITMAP *hBitmap;
  struct _userHPALETTE *hPalette;
  struct _userHGLOBAL *hGeneric;
};
struct _userHPALETTE
{
  long fContext;
  union __MIDL_IWinTypes_0008 u;
};
union __MIDL_IWinTypes_0008
{
  long hInproc;
  struct tagLOGPALETTE *hRemote;
  LONGLONG hInproc64;
};
struct tagLOGPALETTE
{
  USHORT palVersion;
  USHORT palNumEntries;
  struct tagPALETTEENTRY *palPalEntry;
};
struct tagPALETTEENTRY
{
  UCHAR peRed;
  UCHAR peGreen;
  UCHAR peBlue;
  UCHAR peFlags;
};
struct _userHGLOBAL
{
  long fContext;
  union __MIDL_IWinTypes_0003 u;
};
union __MIDL_IWinTypes_0003
{
  long hInproc;
  struct _FLAGGED_BYTE_BLOB *hRemote;
  LONGLONG hInproc64;
};
struct _FLAGGED_BYTE_BLOB
{
  UINT fFlags;
  UINT clSize;
  UCHAR *abData;
};
struct _userFLAG_STGMEDIUM
{
  long ContextFlags;
  long fPassOwnership;
  struct _userSTGMEDIUM Stgmed;
};
struct _LARGE_INTEGER
{
  LONGLONG QuadPart;
};
struct _ULARGE_INTEGER
{
  ULONGLONG QuadPart;
};
struct tagSTATSTG
{
  LPWSTR pwcsName;
  UINT type;
  struct _ULARGE_INTEGER cbSize;
  struct _FILETIME mtime;
  struct _FILETIME ctime;
  struct _FILETIME atime;
  UINT grfMode;
  UINT grfLocksSupported;
  struct GUID clsid;
  UINT grfStateBits;
  UINT reserved;
};
struct _FILETIME
{
  UINT dwLowDateTime;
  UINT dwHighDateTime;
};
struct tagBIND_OPTS2
{
  UINT cbStruct;
  UINT grfFlags;
  UINT grfMode;
  UINT dwTickCountDeadline;
  UINT dwTrackFlags;
  UINT dwClassContext;
  UINT locale;
  struct _COSERVERINFO *pServerInfo;
};
struct _COSERVERINFO
{
  UINT dwReserved1;
  LPWSTR pwszName;
  struct _COAUTHINFO *pAuthInfo;
  UINT dwReserved2;
};
struct _COAUTHINFO
{
  UINT dwAuthnSvc;
  UINT dwAuthzSvc;
  LPWSTR pwszServerPrincName;
  UINT dwAuthnLevel;
  UINT dwImpersonationLevel;
  struct _COAUTHIDENTITY *pAuthIdentityData;
  UINT dwCapabilities;
};
struct _COAUTHIDENTITY
{
  USHORT *User;
  UINT UserLength;
  USHORT *Domain;
  UINT DomainLength;
  USHORT *Password;
  UINT PasswordLength;
  UINT Flags;
};
struct tagSTATDATA
{
  struct tagFORMATETC formatetc;
  UINT advf;
  interface IAdviseSink *pAdvSink;
  UINT dwConnection;
};
struct _RemotableHandle
{
  long fContext;
  union __MIDL_IWinTypes_0009 u;
};
union __MIDL_IWinTypes_0009
{
  long hInproc;
  long hRemote;
};
struct _RESULTDATAITEM
{
  UINT mask;
  long bScopeItem;
  LONG_PTR itemID;
  int nIndex;
  int nCol;
  LPWSTR str;
  int nImage;
  unsigned int nState;
  LONG_PTR lParam;
  int iIndent;
};
struct _SCOPEDATAITEM
{
  UINT mask;
  LPWSTR displayname;
  int nImage;
  int nOpenImage;
  unsigned int nState;
  int cChildren;
  LONG_PTR lParam;
  LONG_PTR relativeID;
  LONG_PTR ID;
};
struct _MMC_EXT_VIEW_DATA
{
  struct GUID viewID;
  LPWSTR pszURL;
  LPWSTR pszViewTitle;
  LPWSTR pszTooltipText;
  long bReplacesDefaultView;
};

/* Type definitions.  */
typedef struct _userHBITMAP * wireHBITMAP;
typedef LONGLONG LONG_PTR;
typedef struct _userCLIPFORMAT * wireCLIPFORMAT;
typedef struct _userSTGMEDIUM * wireSTGMEDIUM;
typedef struct _userFLAG_STGMEDIUM * wireFLAG_STGMEDIUM;
typedef struct _userSTGMEDIUM * wireASYNC_STGMEDIUM;
typedef struct _RemotableHandle * wireHWND;
typedef struct _RemotableHandle * wireHICON;

[
  uuid(A1B0DE63-7454-4184-B5B6-6ACFDAC5C9A6),
  version(1.0),
  helpstring("Print Management Console 1.0 Type Library")
]
library pmcobjlib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(D06342BD-9057-4673-B43A-0E9BBBE99F11),
     helpstring("PMCComponentData Class"),
     cancreate
   ]
   coclass PMCComponentData
   {
     interface IComponentData;
   };
   [
     uuid(42D69529-136E-49D6-8407-3026853038BF),
     helpstring("PMCComponent Class"),
     cancreate
   ]
   coclass PMCComponent
   {
     interface IComponent;
   };
   [
     uuid(3F13AB10-AE95-48AA-8C94-533730760A20),
     helpstring("PMCRootNode Class"),
     cancreate
   ]
   coclass PMCRootNode
   {
     interface ISnapinNode;
   };
   [
     uuid(B03B16C7-35A7-4A55-BEF1-8876E1CE2F45),
     helpstring("PMCAbout Class"),
     cancreate
   ]
   coclass PMCAbout
   {
     interface ISnapinAbout;
   };
   [
     uuid(7C606A3F-8AA8-4E36-92D6-2B6AFEC0B732),
     helpstring("PMCPrintQueueViewExtension Class"),
     cancreate
   ]
   coclass PMCPrintQueueViewExtension
   {
     interface IExtendView;
   };

};

/* Interface declarations.  */
[
  uuid(955AB28A-5218-11D0-A985-00C04FD8D565),
  helpstring("IComponentData Interface")
]
interface IComponentData : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Initialize (
    [in] IUnknown * pUnknown
  );
  HRESULT __stdcall CreateComponent (
    [out] interface IComponent **ppComponent
  );
  HRESULT __stdcall Notify (
    [in] interface IDataObject *lpDataObject,
    [in] enum _MMC_NOTIFY_TYPE event,
    [in] LONG_PTR arg,
    [in] LONG_PTR param
  );
  HRESULT __stdcall Destroy (void);
  HRESULT __stdcall QueryDataObject (
    [in] LONG_PTR cookie,
    [in] enum _DATA_OBJECT_TYPES type,
    [out] interface IDataObject **ppDataObject
  );
  HRESULT __stdcall GetDisplayInfo (
    [in out] struct _SCOPEDATAITEM *pScopeDataItem
  );
  HRESULT __stdcall CompareObjects (
    [in] interface IDataObject *lpDataObjectA,
    [in] interface IDataObject *lpDataObjectB
  );
};
[
  uuid(43136EB2-D36C-11CF-ADBC-00AA00A80033),
  helpstring("IComponent Interface")
]
interface IComponent : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Initialize (
    [in] interface IConsole *lpConsole
  );
  HRESULT __stdcall Notify (
    [in] interface IDataObject *lpDataObject,
    [in] enum _MMC_NOTIFY_TYPE event,
    [in] LONG_PTR arg,
    [in] LONG_PTR param
  );
  HRESULT __stdcall Destroy (
    [in] LONG_PTR cookie
  );
  HRESULT __stdcall QueryDataObject (
    [in] LONG_PTR cookie,
    [in] enum _DATA_OBJECT_TYPES type,
    [out] interface IDataObject **ppDataObject
  );
  HRESULT __stdcall GetResultViewType (
    [in] LONG_PTR cookie,
    [out] LPWSTR ppViewType,
    [out] long *pViewOptions
  );
  HRESULT __stdcall GetDisplayInfo (
    [in out] struct _RESULTDATAITEM *pResultDataItem
  );
  HRESULT __stdcall CompareObjects (
    [in] interface IDataObject *lpDataObjectA,
    [in] interface IDataObject *lpDataObjectB
  );
};
[
  uuid(43136EB1-D36C-11CF-ADBC-00AA00A80033),
  helpstring("IConsole Interface")
]
interface IConsole : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall SetHeader (
    [in] interface IHeaderCtrl *pHeader
  );
  HRESULT __stdcall SetToolbar (
    [in] interface IToolbar *pToolbar
  );
  HRESULT __stdcall QueryResultView (
    [out] IUnknown **pUnknown
  );
  HRESULT __stdcall QueryScopeImageList (
    [out] interface IImageList **ppImageList
  );
  HRESULT __stdcall QueryResultImageList (
    [out] interface IImageList **ppImageList
  );
  HRESULT __stdcall UpdateAllViews (
    [in] interface IDataObject *lpDataObject,
    [in] LONG_PTR data,
    [in] LONG_PTR hint
  );
  HRESULT __stdcall MessageBox (
    [in] LPWSTR lpszText,
    [in] LPWSTR lpszTitle,
    [in] unsigned int fuStyle,
    [out] int *piRetval
  );
  HRESULT __stdcall QueryConsoleVerb (
    [out] interface IConsoleVerb **ppConsoleVerb
  );
  HRESULT __stdcall SelectScopeItem (
    [in] LONG_PTR hScopeItem
  );
  HRESULT __stdcall GetMainWindow (
    [out] wireHWND *phwnd
  );
  HRESULT __stdcall NewWindow (
    [in] LONG_PTR hScopeItem,
    [in] UINT lOptions
  );
};
[
  uuid(43136EB3-D36C-11CF-ADBC-00AA00A80033),
  helpstring("INodeInit Interface")
]
interface IHeaderCtrl : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall InsertColumn (
    [in] int nCol,
    [in] LPWSTR title,
    [in] int nFormat,
    [in] int nWidth
  );
  HRESULT __stdcall DeleteColumn (
    [in] int nCol
  );
  HRESULT __stdcall SetColumnText (
    [in] int nCol,
    [in] LPWSTR title
  );
  HRESULT __stdcall GetColumnText (
    [in] int nCol,
    [out] LPWSTR pText
  );
  HRESULT __stdcall SetColumnWidth (
    [in] int nCol,
    [in] int nWidth
  );
  HRESULT __stdcall GetColumnWidth (
    [in] int nCol,
    [out] int *pWidth
  );
};
[
  uuid(43136EB9-D36C-11CF-ADBC-00AA00A80033)
]
interface IToolbar : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall AddBitmap (
    [in] int nImages,
    [in] wireHBITMAP hbmp,
    [in] int cxSize,
    [in] int cySize,
    [in] UINT crMask
  );
  HRESULT __stdcall AddButtons (
    [in] int nButtons,
    [in] struct _MMCButton *lpButtons
  );
  HRESULT __stdcall InsertButton (
    [in] int nIndex,
    [in] struct _MMCButton *lpButton
  );
  HRESULT __stdcall DeleteButton (
    [in] int nIndex
  );
  HRESULT __stdcall GetButtonState (
    [in] int idCommand,
    [in] enum _MMC_BUTTON_STATE nState,
    [out] long *pState
  );
  HRESULT __stdcall SetButtonState (
    [in] int idCommand,
    [in] enum _MMC_BUTTON_STATE nState,
    [in] long bState
  );
};
[
  uuid(43136EB8-D36C-11CF-ADBC-00AA00A80033),
  helpstring("IImageList Interface")
]
interface IImageList : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall ImageListSetIcon (
    [in] LONG_PTR *pIcon,
    [in] long nLoc
  );
  HRESULT __stdcall ImageListSetStrip (
    [in] LONG_PTR *pBMapSm,
    [in] LONG_PTR *pBMapLg,
    [in] long nStartLoc,
    [in] UINT cMask
  );
};
[
  uuid(0000010E-0000-0000-C000-000000000046)
]
interface IDataObject : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteGetData (
    [in] struct tagFORMATETC *pformatetcIn,
    [out] wireSTGMEDIUM *pRemoteMedium
  );
  HRESULT __stdcall RemoteGetDataHere (
    [in] struct tagFORMATETC *pformatetc,
    [in out] wireSTGMEDIUM *pRemoteMedium
  );
  HRESULT __stdcall QueryGetData (
    [in] struct tagFORMATETC *pformatetc
  );
  HRESULT __stdcall GetCanonicalFormatEtc (
    [in] struct tagFORMATETC *pformatectIn,
    [out] struct tagFORMATETC *pformatetcOut
  );
  HRESULT __stdcall RemoteSetData (
    [in] struct tagFORMATETC *pformatetc,
    [in] wireFLAG_STGMEDIUM *pmedium,
    [in] long fRelease
  );
  HRESULT __stdcall EnumFormatEtc (
    [in] UINT dwDirection,
    [out] interface IEnumFORMATETC **ppenumFormatEtc
  );
  HRESULT __stdcall DAdvise (
    [in] struct tagFORMATETC *pformatetc,
    [in] UINT advf,
    [in] interface IAdviseSink *pAdvSink,
    [out] UINT *pdwConnection
  );
  HRESULT __stdcall DUnadvise (
    [in] UINT dwConnection
  );
  HRESULT __stdcall EnumDAdvise (
    [out] interface IEnumSTATDATA **ppenumAdvise
  );
};
[
  uuid(00000103-0000-0000-C000-000000000046)
]
interface IEnumFORMATETC : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] struct tagFORMATETC *rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumFORMATETC **ppenum
  );
};
[
  uuid(0000010F-0000-0000-C000-000000000046)
]
interface IAdviseSink : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteOnDataChange (
    [in] struct tagFORMATETC *pformatetc,
    [in] wireASYNC_STGMEDIUM *pStgmed
  );
  HRESULT __stdcall RemoteOnViewChange (
    [in] UINT dwAspect,
    [in] long lindex
  );
  HRESULT __stdcall RemoteOnRename (
    [in] interface IMoniker *pmk
  );
  HRESULT __stdcall RemoteOnSave (void);
  HRESULT __stdcall RemoteOnClose (void);
};
[
  uuid(0000000F-0000-0000-C000-000000000046)
]
interface IMoniker : IPersistStream
{
  [id(1610809344)]
  HRESULT __stdcall RemoteBindToObject (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] struct GUID *riidResult,
    [out] IUnknown **ppvResult
  );
  HRESULT __stdcall RemoteBindToStorage (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] struct GUID *riid,
    [out] IUnknown **ppvObj
  );
  HRESULT __stdcall Reduce (
    [in] interface IBindCtx *pbc,
    [in] UINT dwReduceHowFar,
    [in out] interface IMoniker **ppmkToLeft,
    [out] interface IMoniker **ppmkReduced
  );
  HRESULT __stdcall ComposeWith (
    [in] interface IMoniker *pmkRight,
    [in] long fOnlyIfNotGeneric,
    [out] interface IMoniker **ppmkComposite
  );
  HRESULT __stdcall Enum (
    [in] long fForward,
    [out] interface IEnumMoniker **ppenumMoniker
  );
  HRESULT __stdcall IsEqual (
    [in] interface IMoniker *pmkOtherMoniker
  );
  HRESULT __stdcall Hash (
    [out] UINT *pdwHash
  );
  HRESULT __stdcall IsRunning (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] interface IMoniker *pmkNewlyRunning
  );
  HRESULT __stdcall GetTimeOfLastChange (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [out] struct _FILETIME *pfiletime
  );
  HRESULT __stdcall Inverse (
    [out] interface IMoniker **ppmk
  );
  HRESULT __stdcall CommonPrefixWith (
    [in] interface IMoniker *pmkOther,
    [out] interface IMoniker **ppmkPrefix
  );
  HRESULT __stdcall RelativePathTo (
    [in] interface IMoniker *pmkOther,
    [out] interface IMoniker **ppmkRelPath
  );
  HRESULT __stdcall GetDisplayName (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [out] LPWSTR ppszDisplayName
  );
  HRESULT __stdcall ParseDisplayName (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] LPWSTR pszDisplayName,
    [out] UINT *pchEaten,
    [out] interface IMoniker **ppmkOut
  );
  HRESULT __stdcall IsSystemMoniker (
    [out] UINT *pdwMksys
  );
};
[
  uuid(00000109-0000-0000-C000-000000000046)
]
interface IPersistStream : IPersist
{
  [id(1610743808)]
  HRESULT __stdcall IsDirty (void);
  HRESULT __stdcall Load (
    [in] interface IStream *pstm
  );
  HRESULT __stdcall Save (
    [in] interface IStream *pstm,
    [in] long fClearDirty
  );
  HRESULT __stdcall GetSizeMax (
    [out] struct _ULARGE_INTEGER *pcbSize
  );
};
[
  uuid(0000010C-0000-0000-C000-000000000046)
]
interface IPersist : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetClassID (
    [out] struct GUID *pClassID
  );
};
[
  uuid(0000000C-0000-0000-C000-000000000046)
]
interface IStream : ISequentialStream
{
  [id(1610743808)]
  HRESULT __stdcall RemoteSeek (
    [in] struct _LARGE_INTEGER dlibMove,
    [in] UINT dwOrigin,
    [out] struct _ULARGE_INTEGER *plibNewPosition
  );
  HRESULT __stdcall SetSize (
    [in] struct _ULARGE_INTEGER libNewSize
  );
  HRESULT __stdcall RemoteCopyTo (
    [in] interface IStream *pstm,
    [in] struct _ULARGE_INTEGER cb,
    [out] struct _ULARGE_INTEGER *pcbRead,
    [out] struct _ULARGE_INTEGER *pcbWritten
  );
  HRESULT __stdcall Commit (
    [in] UINT grfCommitFlags
  );
  HRESULT __stdcall Revert (void);
  HRESULT __stdcall LockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall UnlockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall Stat (
    [out] struct tagSTATSTG *pstatstg,
    [in] UINT grfStatFlag
  );
  HRESULT __stdcall Clone (
    [out] interface IStream **ppstm
  );
};
[
  uuid(0C733A30-2A1C-11CE-ADE5-00AA0044773D)
]
interface ISequentialStream : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteRead (
    [out] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbRead
  );
  HRESULT __stdcall RemoteWrite (
    [in] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbWritten
  );
};
[
  uuid(0000000E-0000-0000-C000-000000000046)
]
interface IBindCtx : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RegisterObjectBound (
    [in] IUnknown * punk
  );
  HRESULT __stdcall RevokeObjectBound (
    [in] IUnknown * punk
  );
  HRESULT __stdcall ReleaseBoundObjects (void);
  HRESULT __stdcall RemoteSetBindOptions (
    [in] struct tagBIND_OPTS2 *pbindopts
  );
  HRESULT __stdcall RemoteGetBindOptions (
    [in out] struct tagBIND_OPTS2 *pbindopts
  );
  HRESULT __stdcall GetRunningObjectTable (
    [out] interface IRunningObjectTable **pprot
  );
  HRESULT __stdcall RegisterObjectParam (
    [in] LPWSTR pszKey,
    [in] IUnknown * punk
  );
  HRESULT __stdcall GetObjectParam (
    [in] LPWSTR pszKey,
    [out] IUnknown **ppunk
  );
  HRESULT __stdcall EnumObjectParam (
    [out] interface IEnumString **ppenum
  );
  HRESULT __stdcall RevokeObjectParam (
    [in] LPWSTR pszKey
  );
};
[
  uuid(00000010-0000-0000-C000-000000000046)
]
interface IRunningObjectTable : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Register (
    [in] UINT grfFlags,
    [in] IUnknown * punkObject,
    [in] interface IMoniker *pmkObjectName,
    [out] UINT *pdwRegister
  );
  HRESULT __stdcall Revoke (
    [in] UINT dwRegister
  );
  HRESULT __stdcall IsRunning (
    [in] interface IMoniker *pmkObjectName
  );
  HRESULT __stdcall GetObject (
    [in] interface IMoniker *pmkObjectName,
    [out] IUnknown **ppunkObject
  );
  HRESULT __stdcall NoteChangeTime (
    [in] UINT dwRegister,
    [in] struct _FILETIME *pfiletime
  );
  HRESULT __stdcall GetTimeOfLastChange (
    [in] interface IMoniker *pmkObjectName,
    [out] struct _FILETIME *pfiletime
  );
  HRESULT __stdcall EnumRunning (
    [out] interface IEnumMoniker **ppenumMoniker
  );
};
[
  uuid(00000102-0000-0000-C000-000000000046)
]
interface IEnumMoniker : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] interface IMoniker **rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumMoniker **ppenum
  );
};
[
  uuid(00000101-0000-0000-C000-000000000046)
]
interface IEnumString : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] LPWSTR rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumString **ppenum
  );
};
[
  uuid(00000105-0000-0000-C000-000000000046)
]
interface IEnumSTATDATA : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] struct tagSTATDATA *rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumSTATDATA **ppenum
  );
};
[
  uuid(E49F7A60-74AF-11D0-A286-00C04FD8FE93)
]
interface IConsoleVerb : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetVerbState (
    [in] enum _MMC_CONSOLE_VERB eCmdID,
    [in] enum _MMC_BUTTON_STATE nState,
    [out] long *pState
  );
  HRESULT __stdcall SetVerbState (
    [in] enum _MMC_CONSOLE_VERB eCmdID,
    [in] enum _MMC_BUTTON_STATE nState,
    [in] long bState
  );
  HRESULT __stdcall SetDefaultVerb (
    [in] enum _MMC_CONSOLE_VERB eCmdID
  );
  HRESULT __stdcall GetDefaultVerb (
    [out] enum _MMC_CONSOLE_VERB *peCmdID
  );
};
[
  uuid(2F3BE7C5-BBFC-4DB0-A305-EA42B8C8BC9C),
  helpstring("ISnapinNode Interface")
]
interface ISnapinNode : IUnknown
{
  [id(1610678272), propget]
  HRESULT __stdcall IsScopeNode (
    [out retval] long *pbIsScopeNode
  );
  [propget]
  HRESULT __stdcall NodeType (
    [out retval] struct GUID *pguidNodeType
  );
  [propget]
  HRESULT __stdcall ColumnsCount (
    [out retval] int *pnCount
  );
  [propget]
  HRESULT __stdcall displayname (
    [in] int nColumn,
    [out retval] BSTR *pbstrDisplayName
  );
  [propget]
  HRESULT __stdcall IconIndex (
    [in] enum tagESnapinIconType eIconType,
    [out retval] int *pnIndex
  );
  [propget]
  HRESULT __stdcall ScopeNodeID (
    [out retval] LONG_PTR *phID
  );
  [id(1610678277), propput]
  HRESULT __stdcall ScopeNodeID (
    [in] LONG_PTR argNo1
  );
  [id(1610678279), propget]
  HRESULT __stdcall ParentID (
    [out retval] LONG_PTR *phID
  );
  [id(1610678279), propput]
  HRESULT __stdcall ParentID (
    [in] LONG_PTR argNo1
  );
  [id(1610678281)]
  HRESULT __stdcall GetResultViewType (
    [out] BSTR *pbstrViewType,
    [out] long *pnViewOptions
  );
  HRESULT __stdcall CompareTo (
    [in] interface ISnapinNode *pNode,
    [out] int *pnResult
  );
  HRESULT __stdcall PreDisplayInfo (
    [in] interface IConsole2 *pConsole
  );
};
[
  uuid(103D842A-AA63-11D1-A7E1-00C04FD8D565),
  helpstring("IConsole2 Interface")
]
interface IConsole2 : IConsole
{
  [id(1610743808)]
  HRESULT __stdcall Expand (
    [in] LONG_PTR hItem,
    [in] long bExpand
  );
  HRESULT __stdcall IsTaskpadViewPreferred (void);
  HRESULT __stdcall SetStatusText (
    [in] LPWSTR pszStatusText
  );
};
[
  uuid(1245208C-A151-11D0-A7D7-00C04FD909DD)
]
interface ISnapinAbout : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetSnapinDescription (
    [out] LPWSTR lpDescription
  );
  HRESULT __stdcall GetProvider (
    [out] LPWSTR lpName
  );
  HRESULT __stdcall GetSnapinVersion (
    [out] LPWSTR lpVersion
  );
  HRESULT __stdcall GetSnapinImage (
    [out] wireHICON *hAppIcon
  );
  HRESULT __stdcall GetStaticFolderImage (
    [out] wireHBITMAP *hSmallImage,
    [out] wireHBITMAP *hSmallImageOpen,
    [out] wireHBITMAP *hLargeImage,
    [out] UINT *cMask
  );
};
[
  uuid(89995CEE-D2ED-4C0E-AE5E-DF7E76F3FA53),
  helpstring("IExtendView Interface")
]
interface IExtendView : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetViews (
    [in] interface IDataObject *pDataObject,
    [in] interface IViewExtensionCallback *pViewExtensionCallback
  );
};
[
  uuid(34DD928A-7599-41E5-9F5E-D6BC3062C2DA),
  helpstring("IViewExtensionCallback Interface")
]
interface IViewExtensionCallback : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall AddView (
    [in] struct _MMC_EXT_VIEW_DATA *pExtViewData
  );
};

