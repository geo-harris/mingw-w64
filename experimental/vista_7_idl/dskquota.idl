/* Automated generated idl file <diskquotatypelibrary>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Union record forward declarations.  */
dispinterface DIDiskQuotaUser;
dispinterface DIDiskQuotaControlEvents;
dispinterface DIDiskQuotaControl;
dispinterface IDiskQuotaControlEvents;

/* Union record forward declarations.  */
coclass DiskQuotaControl;

/* Enumeration declarations.  */
enum AccountStatusConstants
{
  dqAcctResolved = (int) 201326592,
  dqAcctUnavailable = (int) 201326593,
  dqAcctDeleted = (int) 201326594,
  dqAcctInvalid = (int) 201326595,
  dqAcctUnknown = (int) 201326596,
  dqAcctUnresolved = (int) 201326597
};
enum QuotaStateConstants
{
  dqStateDisable = (int) 201326592,
  dqStateTrack = (int) 201326593,
  dqStateEnforce = (int) 201326594
};
enum UserNameResolutionConstants
{
  dqResolveNone = (int) 201326592,
  dqResolveSync = (int) 201326593,
  dqResolveAsync = (int) 201326594
};

[
  uuid(7988B57C-EC89-11CF-9C00-00AA00A14F56),
  version(1.0),
  helpstring("Microsoft Disk Quota Type Library")
]
library diskquotatypelibrary
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(7988B571-EC89-11CF-9C00-00AA00A14F56),
     version(1.0),
     helpstring("Microsoft Disk Quota"),
     cancreate
   ]
   coclass DiskQuotaControl
   {
     dispinterface DIDiskQuotaControl;
     dispinterface DIDiskQuotaControlEvents;
     dispinterface IDiskQuotaControlEvents;
     dispinterface DIDiskQuotaUser;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(7988B57A-EC89-11CF-9C00-00AA00A14F56),
     version(1.0),
     helpstring("Automation interface for DiskQuotaUser"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface DIDiskQuotaUser : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall ID (
       [out retval] long *pID
     );
     [propget]
     HRESULT __stdcall AccountContainerName (
       [out retval] BSTR *pContainerName
     );
     [propget]
     HRESULT __stdcall LogonName (
       [out retval] BSTR *pLogonName
     );
     [propget]
     HRESULT __stdcall DisplayName (
       [out retval] BSTR *pDisplayName
     );
     [propget]
     HRESULT __stdcall QuotaThreshold (
       [out retval] double *pThreshold
     );
     [id(1610743812), propput]
     HRESULT __stdcall QuotaThreshold (
       [in] double argNo1
     );
     [id(1610743814), propget]
     HRESULT __stdcall QuotaThresholdText (
       [out retval] BSTR *pThresholdText
     );
     [propget]
     HRESULT __stdcall QuotaLimit (
       [out retval] double *pLimit
     );
     [id(1610743815), propput]
     HRESULT __stdcall QuotaLimit (
       [in] double argNo1
     );
     [id(1610743817), propget]
     HRESULT __stdcall QuotaLimitText (
       [out retval] BSTR *pLimitText
     );
     [propget]
     HRESULT __stdcall QuotaUsed (
       [out retval] double *pUsed
     );
     [propget]
     HRESULT __stdcall QuotaUsedText (
       [out retval] BSTR *pUsedText
     );
     [propget]
     HRESULT __stdcall AccountStatus (
       [out retval] enum AccountStatusConstants *pStatus
     );
     HRESULT __stdcall Invalidate (void);
   };
   [
     uuid(7988B581-EC89-11CF-9C00-00AA00A14F56),
     version(1.0),
     helpstring("DIDiskQuotaControlEvents Interface"),
     nonextensible,
     dispatchable
   ]
   dispinterface DIDiskQuotaControlEvents
   {
     [id(1)]
     void __stdcall OnUserNameChanged (
       dispinterface DIDiskQuotaUser *pUser
     );
   };
   [
     uuid(7988B575-EC89-11CF-9C00-00AA00A14F56),
     version(1.0),
     helpstring("Automation interface for DiskQuotaControl object"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface DIDiskQuotaControl : IDispatch
   {
     [id(1610743808), propput]
     HRESULT __stdcall QuotaState (
       [in] enum QuotaStateConstants argNo1
     );
     [id(1610743808), propget]
     HRESULT __stdcall QuotaState (
       [out retval] enum QuotaStateConstants *pState
     );
     [id(1610743810), propget]
     HRESULT __stdcall QuotaFileIncomplete (
       [out retval] WINBOOL *pbIncomplete
     );
     [propget]
     HRESULT __stdcall QuotaFileRebuilding (
       [out retval] WINBOOL *pbRebuilding
     );
     [propput]
     HRESULT __stdcall LogQuotaThreshold (
       [in] WINBOOL argNo1
     );
     [id(1610743812), propget]
     HRESULT __stdcall LogQuotaThreshold (
       [out retval] WINBOOL *pbLogThreshold
     );
     [id(1610743814), propput]
     HRESULT __stdcall LogQuotaLimit (
       [in] WINBOOL argNo1
     );
     [id(1610743814), propget]
     HRESULT __stdcall LogQuotaLimit (
       [out retval] WINBOOL *pbLogLimit
     );
     [id(1610743816), propput]
     HRESULT __stdcall DefaultQuotaThreshold (
       [in] double argNo1
     );
     [id(1610743816), propget]
     HRESULT __stdcall DefaultQuotaThreshold (
       [out retval] double *pThreshold
     );
     [id(1610743818), propget]
     HRESULT __stdcall DefaultQuotaThresholdText (
       [out retval] BSTR *pThresholdText
     );
     [propput]
     HRESULT __stdcall DefaultQuotaLimit (
       [in] double argNo1
     );
     [id(1610743819), propget]
     HRESULT __stdcall DefaultQuotaLimit (
       [out retval] double *pLimit
     );
     [id(1610743821), propget]
     HRESULT __stdcall DefaultQuotaLimitText (
       [out retval] BSTR *pLimitText
     );
     [propput]
     HRESULT __stdcall UserNameResolution (
       [in] enum UserNameResolutionConstants argNo1
     );
     [id(1610743822), propget]
     HRESULT __stdcall UserNameResolution (
       [out retval] enum UserNameResolutionConstants *pResolutionType
     );
     [id(1610743824)]
     HRESULT __stdcall Initialize (
       [in] BSTR path,
       [in] WINBOOL bReadWrite
     );
     HRESULT __stdcall ShutdownNameResolution (void);
     HRESULT __stdcall AddUser (
       [in] BSTR LogonName,
       [out retval] dispinterface DIDiskQuotaUser **ppUser
     );
     HRESULT __stdcall DeleteUser (
       [in] dispinterface DIDiskQuotaUser *pUser
     );
     HRESULT __stdcall FindUser (
       [in] BSTR LogonName,
       [out retval] dispinterface DIDiskQuotaUser **ppUser
     );
     HRESULT __stdcall InvalidateSidNameCache (void);
     HRESULT __stdcall GiveUserNameResolutionPriority (
       [in] dispinterface DIDiskQuotaUser *pUser
     );
     HRESULT __stdcall TranslateLogonNameToSID (
       [in] BSTR LogonName,
       [out retval] BSTR *psid
     );
     [id(-4)]
     HRESULT __stdcall _NewEnum (
       [out retval] IDispatch **ppEnum
     );
   };
   [
     uuid(7988B579-EC89-11CF-9C00-00AA00A14F56),
     version(1.0),
     helpstring("Dual interface for DiskQuotaControl Events"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IDiskQuotaControlEvents : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall OnUserNameChanged (
       [in] dispinterface DIDiskQuotaUser *pUser
     );
   };

};

