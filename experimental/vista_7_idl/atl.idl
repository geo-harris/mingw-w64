/* Automated generated idl file <atllib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface IDocHostUIHandlerDispatch;

/* Union record forward declarations.  */
dispinterface IAxWinAmbientDispatch;

[
  uuid(44EC0535-400F-11D0-9DCD-00A0C90391D3),
  version(1.0),
  helpstring("ATL 2.0 Type Library")
]
library atllib
{
  importlib("stdole2.tlb");

   /* Dispatch interface declarations.  */
   [
     uuid(B6EA2051-048A-11D1-82B9-00C04FB9942E),
     helpstring("IAxWinAmbientDispatch Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAxWinAmbientDispatch : IDispatch
   {
     [id(1610743808), propput]
     HRESULT __stdcall AllowWindowlessActivation (
       [in] WINBOOL argNo1
     );
     [id(1610743808), propget]
     HRESULT __stdcall AllowWindowlessActivation (
       [out retval] WINBOOL *pbCanWindowlessActivate
     );
     [id(-701), propput]
     HRESULT __stdcall BackColor (
       [in] OLE_COLOR argNo1
     );
     [id(-701), propget]
     HRESULT __stdcall BackColor (
       [out retval] OLE_COLOR *pclrBackground
     );
     [id(-704), propput]
     HRESULT __stdcall ForeColor (
       [in] OLE_COLOR argNo1
     );
     [id(-704), propget]
     HRESULT __stdcall ForeColor (
       [out retval] OLE_COLOR *pclrForeground
     );
     [id(-705), propput]
     HRESULT __stdcall LocaleID (
       [in] UINT argNo1
     );
     [id(-705), propget]
     HRESULT __stdcall LocaleID (
       [out retval] UINT *plcidLocaleID
     );
     [id(-709), propput]
     HRESULT __stdcall UserMode (
       [in] WINBOOL argNo1
     );
     [id(-709), propget]
     HRESULT __stdcall UserMode (
       [out retval] WINBOOL *pbUserMode
     );
     [id(-713), propput]
     HRESULT __stdcall DisplayAsDefault (
       [in] WINBOOL argNo1
     );
     [id(-713), propget]
     HRESULT __stdcall DisplayAsDefault (
       [out retval] WINBOOL *pbDisplayAsDefault
     );
     [id(-703), propput]
     HRESULT __stdcall Font (
       [in] IFontDisp *argNo1
     );
     [id(-703), propget]
     HRESULT __stdcall Font (
       [out retval] IFontDisp **pFont
     );
     [id(-706), propput]
     HRESULT __stdcall MessageReflect (
       [in] WINBOOL argNo1
     );
     [id(-706), propget]
     HRESULT __stdcall MessageReflect (
       [out retval] WINBOOL *pbMsgReflect
     );
     [id(-711), propget]
     HRESULT __stdcall ShowGrabHandles (
       WINBOOL *pbShowGrabHandles
     );
     [id(-712), propget]
     HRESULT __stdcall ShowHatching (
       WINBOOL *pbShowHatching
     );
     [id(1610743826), propput]
     HRESULT __stdcall DocHostFlags (
       [in] UINT argNo1
     );
     [id(1610743826), propget]
     HRESULT __stdcall DocHostFlags (
       [out retval] UINT *pdwDocHostFlags
     );
     [id(1610743828), propput]
     HRESULT __stdcall DocHostDoubleClickFlags (
       [in] UINT argNo1
     );
     [id(1610743828), propget]
     HRESULT __stdcall DocHostDoubleClickFlags (
       [out retval] UINT *pdwDocHostDoubleClickFlags
     );
     [id(1610743830), propput]
     HRESULT __stdcall AllowContextMenu (
       [in] WINBOOL argNo1
     );
     [id(1610743830), propget]
     HRESULT __stdcall AllowContextMenu (
       [out retval] WINBOOL *pbAllowContextMenu
     );
     [id(1610743832), propput]
     HRESULT __stdcall AllowShowUI (
       [in] WINBOOL argNo1
     );
     [id(1610743832), propget]
     HRESULT __stdcall AllowShowUI (
       [out retval] WINBOOL *pbAllowShowUI
     );
     [id(1610743834), propput]
     HRESULT __stdcall OptionKeyPath (
       [in] BSTR argNo1
     );
     [id(1610743834), propget]
     HRESULT __stdcall OptionKeyPath (
       [out retval] BSTR *pbstrOptionKeyPath
     );
   };

};

/* Interface declarations.  */
[
  uuid(425B5AF0-65F1-11D1-9611-0000F81E0D0D),
  helpstring("IDocHostUIHandlerDispatch Interface"),
  dispatchable
]
interface IDocHostUIHandlerDispatch : IDispatch
{
  [id(1610743808)]
  HRESULT __stdcall ShowContextMenu (
    [in] UINT dwID,
    [in] UINT x,
    [in] UINT y,
    [in] IUnknown * pcmdtReserved,
    [in] IDispatch * pdispReserved,
    [out retval] HRESULT *dwRetVal
  );
  HRESULT __stdcall GetHostInfo (
    [in out] UINT *pdwFlags,
    [in out] UINT *pdwDoubleClick
  );
  HRESULT __stdcall ShowUI (
    [in] UINT dwID,
    [in] IUnknown * pActiveObject,
    [in] IUnknown * pCommandTarget,
    [in] IUnknown * pFrame,
    [in] IUnknown * pDoc,
    [out retval] HRESULT *dwRetVal
  );
  HRESULT __stdcall HideUI (void);
  HRESULT __stdcall UpdateUI (void);
  HRESULT __stdcall EnableModeless (
    [in] WINBOOL fEnable
  );
  HRESULT __stdcall OnDocWindowActivate (
    [in] WINBOOL fActivate
  );
  HRESULT __stdcall OnFrameWindowActivate (
    [in] WINBOOL fActivate
  );
  HRESULT __stdcall ResizeBorder (
    [in] long left,
    [in] long top,
    [in] long right,
    [in] long bottom,
    [in] IUnknown * pUIWindow,
    [in] WINBOOL fFrameWindow
  );
  HRESULT __stdcall TranslateAccelerator (
    [in] UINT hWnd,
    [in] UINT nMessage,
    [in] UINT wParam,
    [in] UINT lParam,
    [in] BSTR bstrGuidCmdGroup,
    [in] UINT nCmdID,
    [out retval] HRESULT *dwRetVal
  );
  HRESULT __stdcall GetOptionKeyPath (
    [out] BSTR *pbstrKey,
    [in] UINT dw
  );
  HRESULT __stdcall GetDropTarget (
    [in] IUnknown * pDropTarget,
    [out] IUnknown **ppDropTarget
  );
  HRESULT __stdcall GetExternal (
    [out] IDispatch **ppDispatch
  );
  HRESULT __stdcall TranslateUrl (
    [in] UINT dwTranslate,
    [in] BSTR bstrURLIn,
    [out] BSTR *pbstrURLOut
  );
  HRESULT __stdcall FilterDataObject (
    [in] IUnknown * pDO,
    [out] IUnknown **ppDORet
  );
};

