/* Automated generated idl file <vbscript_regexp_55>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Union record forward declarations.  */
dispinterface IRegExp;
dispinterface IMatch;
dispinterface IMatchCollection;
dispinterface IRegExp2;
dispinterface IMatch2;
dispinterface IMatchCollection2;
dispinterface ISubMatches;

/* Union record forward declarations.  */
coclass RegExp;
coclass Match;
coclass MatchCollection;
coclass SubMatches;

[
  uuid(3F4DACA7-160D-11D2-A8E9-00104B365C9F),
  version(5.5),
  helpstring("Microsoft VBScript Regular Expressions 5.5")
]
library vbscript_regexp_55
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(3F4DACA4-160D-11D2-A8E9-00104B365C9F),
     cancreate
   ]
   coclass RegExp
   {
     dispinterface IRegExp2;
   };
   [
     uuid(3F4DACA5-160D-11D2-A8E9-00104B365C9F)
   ]
   coclass Match
   {
     dispinterface IMatch2;
   };
   [
     uuid(3F4DACA6-160D-11D2-A8E9-00104B365C9F)
   ]
   coclass MatchCollection
   {
     dispinterface IMatchCollection2;
   };
   [
     uuid(3F4DACC0-160D-11D2-A8E9-00104B365C9F)
   ]
   coclass SubMatches
   {
     dispinterface ISubMatches;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(3F4DACA0-160D-11D2-A8E9-00104B365C9F),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IRegExp : IDispatch
   {
     [id(10001), propget]
     HRESULT __stdcall Pattern (
       [out retval] BSTR *pPattern
     );
     [id(10001), propput]
     HRESULT __stdcall Pattern (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall IgnoreCase (
       [out retval] WINBOOL *pIgnoreCase
     );
     [id(10002), propput]
     HRESULT __stdcall IgnoreCase (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall Global (
       [out retval] WINBOOL *pGlobal
     );
     [id(10003), propput]
     HRESULT __stdcall Global (
       [in] WINBOOL argNo1
     );
     HRESULT __stdcall Execute (
       [in] BSTR sourceString,
       [out retval] IDispatch **ppMatches
     );
     HRESULT __stdcall Test (
       [in] BSTR sourceString,
       [out retval] WINBOOL *pMatch
     );
     HRESULT __stdcall Replace (
       [in] BSTR sourceString,
       [in] BSTR replaceString,
       [out retval] BSTR *pDestString
     );
   };
   [
     uuid(3F4DACA1-160D-11D2-A8E9-00104B365C9F),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IMatch : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Value (
       [out retval] BSTR *pValue
     );
     [id(10001), propget]
     HRESULT __stdcall FirstIndex (
       [out retval] long *pFirstIndex
     );
     [propget]
     HRESULT __stdcall Length (
       [out retval] long *pLength
     );
   };
   [
     uuid(3F4DACA2-160D-11D2-A8E9-00104B365C9F),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IMatchCollection : IDispatch
   {
     [id(10001), propget]
     HRESULT __stdcall Item (
       [in] long index,
       [out retval] IDispatch **ppMatch
     );
     [id(1), propget]
     HRESULT __stdcall Count (
       [out retval] long *pCount
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppEnum
     );
   };
   [
     uuid(3F4DACB0-160D-11D2-A8E9-00104B365C9F),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IRegExp2 : IDispatch
   {
     [id(10001), propget]
     HRESULT __stdcall Pattern (
       [out retval] BSTR *pPattern
     );
     [id(10001), propput]
     HRESULT __stdcall Pattern (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall IgnoreCase (
       [out retval] WINBOOL *pIgnoreCase
     );
     [id(10002), propput]
     HRESULT __stdcall IgnoreCase (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall Global (
       [out retval] WINBOOL *pGlobal
     );
     [id(10003), propput]
     HRESULT __stdcall Global (
       [in] WINBOOL argNo1
     );
     [id(10007), propget]
     HRESULT __stdcall Multiline (
       [out retval] WINBOOL *pMultiline
     );
     [id(10007), propput]
     HRESULT __stdcall Multiline (
       [in] WINBOOL argNo1
     );
     [id(10004)]
     HRESULT __stdcall Execute (
       [in] BSTR sourceString,
       [out retval] IDispatch **ppMatches
     );
     HRESULT __stdcall Test (
       [in] BSTR sourceString,
       [out retval] WINBOOL *pMatch
     );
     HRESULT __stdcall Replace (
       [in] BSTR sourceString,
       [in] VARIANT replaceVar,
       [out retval] BSTR *pDestString
     );
   };
   [
     uuid(3F4DACB1-160D-11D2-A8E9-00104B365C9F),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IMatch2 : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Value (
       [out retval] BSTR *pValue
     );
     [id(10001), propget]
     HRESULT __stdcall FirstIndex (
       [out retval] long *pFirstIndex
     );
     [propget]
     HRESULT __stdcall Length (
       [out retval] long *pLength
     );
     [propget]
     HRESULT __stdcall SubMatches (
       [out retval] IDispatch **ppSubMatches
     );
   };
   [
     uuid(3F4DACB2-160D-11D2-A8E9-00104B365C9F),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IMatchCollection2 : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long index,
       [out retval] IDispatch **ppMatch
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pCount
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppEnum
     );
   };
   [
     uuid(3F4DACB3-160D-11D2-A8E9-00104B365C9F),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ISubMatches : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long index,
       [out retval] VARIANT *pSubMatch
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *pCount
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppEnum
     );
   };

};

