/* Automated generated idl file <sppuilib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Union record forward declarations.  */
dispinterface ISPPUI;

/* Union record forward declarations.  */
coclass SPPUIObject;
coclass SPPUIObjectInteractive;

/* Enumeration declarations.  */
enum tagWIZARDSTART_FLAGS
{
  E_WSF_DEFAULT = (int) 201326592,
  E_WSF_NOTIFICATION_WINLOGON = (int) 201326593
};

[
  uuid(EE574957-4077-4AD6-8658-327C2C86C5AA),
  version(1.0),
  helpstring("SPPUI 1.0 Type Library")
]
library sppuilib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(A6C13C9D-54E1-44FC-82F0-DBE2C843E51A),
     helpstring("SPPUIObject Class"),
     cancreate
   ]
   coclass SPPUIObject
   {
     dispinterface ISPPUI;
   };
   [
     uuid(F87B28F1-DA9A-4F35-8EC0-800EFCF26B83),
     helpstring("SPPUIObjectInteractive Class"),
     cancreate
   ]
   coclass SPPUIObjectInteractive
   {
     dispinterface ISPPUI;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(76D90824-E735-4844-B26F-AA1235B6E76B),
     helpstring("ISPPUI Interface"),
     dual,
     nonextensible,
     oleautomation
   ]
   dispinterface ISPPUI : IUnknown
   {
     [id(1)]
     HRESULT __stdcall StartWizard (
       [in] long bWaitExit,
       [in] long dwEventId
     );
     [hidden]
     HRESULT __stdcall StartWizardCmd (
       [in] enum tagWIZARDSTART_FLAGS eFlags,
       [in] UINT qwInitCount,
       [in] UINT dwEventId,
       [in] UINT dwErrorCode,
       [in] UINT dwProcessError,
       [in] UINT dwTimeOut,
       [in] UINT dwGraceTimeLeft,
       [in] UINT dwTotalGraceDays,
       [in] UINT dwGracePeriodType,
       [in] UINT dwChannel,
       [in] UINT dwStatus,
       [in] UINT dwEvalTimeRemaining,
       [in] ULONGLONG qwValidityTimeRemaining,
       [in] struct GUID *pApplicationId,
       [in] struct GUID *pComponentId,
       [out retval] UINT *dwDialogResult
     );
     [hidden]
     HRESULT __stdcall StartScheduledAction (
       [in] ULONGLONG qwNextEventTime,
       [in] UINT dwEventId,
       [in] UINT dwErrorCode,
       [in] UINT dwProcessError,
       [in] UINT dwTimeOut,
       [in] UINT dwGraceTimeLeft,
       [in] UINT dwTotalGraceDays,
       [in] UINT dwGracePeriodType,
       [in] UINT dwChannel,
       [in] UINT dwStatus,
       [in] UINT dwEvalTimeRemaining,
       [in] ULONGLONG qwValidityTimeRemaining,
       [in] struct GUID *pApplicationId,
       [in] struct GUID *pComponentId
     );
     HRESULT __stdcall BeginAutoActivation (
       [in] UINT ulLicenseChannel
     );
     HRESULT __stdcall EndAutoActivation (
       [in] UINT ulActivationResultCategory,
       [in] HRESULT hrActivationResult
     );
     HRESULT __stdcall ShouldShowEvent (
       [in] ULONGLONG qwNextEventTime,
       [in] UINT dwEventId,
       [out] UINT *pdwShouldShow
     );
     HRESULT __stdcall LaunchNonGenuineUI (
       [in] struct GUID *pApplicationId,
       [in] struct GUID *pComponentId
     );
     HRESULT __stdcall SilentTokenActivation (void);
   };

};

