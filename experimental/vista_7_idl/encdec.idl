/* Automated generated idl file <encdec>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface IETFilter;
interface IETFilterConfig;
interface IDTFilter;
interface IDTFilter2;
interface IDTFilter3;
interface IDTFilterConfig;
interface IXDSCodec;
interface IXDSCodecConfig;

/* Union record forward declarations.  */
dispinterface IETFilterEvents;
dispinterface IDTFilterEvents;
dispinterface IXDSCodecEvents;

/* Union record forward declarations.  */
coclass ETFilter;
coclass DTFilter;
coclass XDSCodec;
coclass CXDSData;

/* Enumeration declarations.  */
enum EnTvRat_System
{
  MPAA = (int) 201326592,
  US_TV = (int) 201326593,
  Canadian_English = (int) 201326594,
  Canadian_French = (int) 201326595,
  Reserved4 = (int) 201326596,
  System5 = (int) 201326597,
  System6 = (int) 201326598,
  Reserved7 = (int) 201326599,
  PBDA = (int) 201326600,
  AgeBased = (int) 201326601,
  TvRat_kSystems = (int) 201326602,
  TvRat_SystemDontKnow = (int) 201326847
};
enum EnTvRat_GenericLevel
{
  TvRat_0 = (int) 201326592,
  TvRat_1 = (int) 201326593,
  TvRat_2 = (int) 201326594,
  TvRat_3 = (int) 201326595,
  TvRat_4 = (int) 201326596,
  TvRat_5 = (int) 201326597,
  TvRat_6 = (int) 201326598,
  TvRat_7 = (int) 201326599,
  TvRat_8 = (int) 201326600,
  TvRat_9 = (int) 201326601,
  TvRat_10 = (int) 201326602,
  TvRat_11 = (int) 201326603,
  TvRat_12 = (int) 201326604,
  TvRat_13 = (int) 201326605,
  TvRat_14 = (int) 201326606,
  TvRat_15 = (int) 201326607,
  TvRat_16 = (int) 201326608,
  TvRat_17 = (int) 201326609,
  TvRat_18 = (int) 201326610,
  TvRat_19 = (int) 201326611,
  TvRat_20 = (int) 201326612,
  TvRat_21 = (int) 201326613,
  TvRat_kLevels = (int) 201326614,
  TvRat_Unblock = (int) -1,
  TvRat_LevelDontKnow = (int) 201326847
};
[
  uuid(25AEE876-3D61-4486-917E-7C0CB3D9983C)
]
enum ProtType
{
  PROT_COPY_FREE = (int) 201326593,
  PROT_COPY_ONCE = (int) 201326594,
  PROT_COPY_NEVER = (int) 201326595,
  PROT_COPY_NEVER_REALLY = (int) 201326596,
  PROT_COPY_NO_MORE = (int) 201326597,
  PROT_COPY_FREE_CIT = (int) 201326598,
  PROT_COPY_BF = (int) 201326599,
  PROT_COPY_CN_RECORDING_STOP = (int) 201326600,
  PROT_COPY_FREE_SECURE = (int) 201326601,
  PROT_COPY_INVALID = (int) 201326642
};

[
  uuid(C4C4C400-0049-4E2B-98FB-9537F6CE516D),
  version(1.0),
  helpstring("Microsoft Encypter-Tagger/Decrypter-Detagger Filters")
]
library encdec
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(C4C4C4F1-0049-4E2B-98FB-9537F6CE516D),
     helpstring("ETFilter Class"),
     cancreate
   ]
   coclass ETFilter
   {
     interface IETFilter;
     interface IETFilterConfig;
     dispinterface IETFilterEvents;
   };
   [
     uuid(C4C4C4F2-0049-4E2B-98FB-9537F6CE516D),
     helpstring("CDTFilter Class"),
     cancreate
   ]
   coclass DTFilter
   {
     interface IDTFilter;
     interface IDTFilterConfig;
     dispinterface IDTFilterEvents;
   };
   [
     uuid(C4C4C4F3-0049-4E2B-98FB-9537F6CE516D),
     helpstring("CXDSCodec Class"),
     cancreate
   ]
   coclass XDSCodec
   {
     interface IXDSCodec;
     interface IXDSCodecConfig;
     dispinterface IXDSCodecEvents;
   };
   [
     uuid(C4C4C4F4-0049-4E2B-98FB-9537F6CE516D),
     helpstring("CXDSCodec Class"),
     cancreate
   ]
   coclass CXDSData
   {
     interface IXDSCodec;
     interface IXDSCodecConfig;
     dispinterface IXDSCodecEvents;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(C4C4C4C1-0049-4E2B-98FB-9537F6CE516D),
     helpstring("IETFilterEvents"),
     dispatchable
   ]
   dispinterface IETFilterEvents
   {
   };
   [
     uuid(C4C4C4C2-0049-4E2B-98FB-9537F6CE516D),
     helpstring("IDTFilterEvents"),
     dispatchable
   ]
   dispinterface IDTFilterEvents
   {
   };
   [
     uuid(C4C4C4C3-0049-4E2B-98FB-9537F6CE516D),
     helpstring("IXDSCodecEvents"),
     dispatchable
   ]
   dispinterface IXDSCodecEvents
   {
   };

};

/* Interface declarations.  */
[
  uuid(C4C4C4B1-0049-4E2B-98FB-9537F6CE516D),
  helpstring("IETFilter Interface")
]
interface IETFilter : IUnknown
{
  [id(1), propget]
  HRESULT __stdcall EvalRatObjOK (
    [out retval] HRESULT *pHrCoCreateRetVal
  );
  HRESULT __stdcall GetCurrRating (
    [out] enum EnTvRat_System *pEnSystem,
    [out] enum EnTvRat_GenericLevel *pEnRating,
    [out] long *plbfEnAttr
  );
  HRESULT __stdcall GetCurrLicenseExpDate (
    [in] enum ProtType *ProtType,
    [out] long *lpDateTime
  );
  HRESULT __stdcall GetLastErrorCode (void);
  HRESULT __stdcall SetRecordingOn (
    long fRecState
  );
};
[
  uuid(C4C4C4D1-0049-4E2B-98FB-9537F6CE516D),
  helpstring("IETFilterConfig Interface"),
  restricted
]
interface IETFilterConfig : IUnknown
{
  [id(10)]
  HRESULT __stdcall InitLicense (
    [in] int LicenseId
  );
  HRESULT __stdcall GetSecureChannelObject (
    [out] IUnknown **ppUnkDRMSecureChannel
  );
};
[
  uuid(C4C4C4B2-0049-4E2B-98FB-9537F6CE516D),
  helpstring("IDTFilter Interface")
]
interface IDTFilter : IUnknown
{
  [id(1), propget]
  HRESULT __stdcall EvalRatObjOK (
    [out retval] HRESULT *pHrCoCreateRetVal
  );
  HRESULT __stdcall GetCurrRating (
    [out] enum EnTvRat_System *pEnSystem,
    [out] enum EnTvRat_GenericLevel *pEnRating,
    [out] long *plbfEnAttr
  );
  [propget]
  HRESULT __stdcall BlockedRatingAttributes (
    [in] enum EnTvRat_System enSystem,
    [in] enum EnTvRat_GenericLevel enLevel,
    [out retval] long *plbfEnAttr
  );
  [id(3), propput]
  HRESULT __stdcall BlockedRatingAttributes (
    [in] enum EnTvRat_System enSystem,
    [in] enum EnTvRat_GenericLevel enLevel,
    [in] long argNo3
  );
  [propget]
  HRESULT __stdcall BlockUnRated (
    [out retval] long *pfBlockUnRatedShows
  );
  [id(4), propput]
  HRESULT __stdcall BlockUnRated (
    [in] long argNo1
  );
  [propget]
  HRESULT __stdcall BlockUnRatedDelay (
    [out retval] long *pmsecsDelayBeforeBlock
  );
  [id(5), propput]
  HRESULT __stdcall BlockUnRatedDelay (
    [in] long argNo1
  );
};
[
  uuid(C4C4C4B4-0049-4E2B-98FB-9537F6CE516D),
  helpstring("IDTFilter2 Interface")
]
interface IDTFilter2 : IDTFilter
{
  [id(6), propget]
  HRESULT __stdcall ChallengeUrl (
    [out] BSTR *pbstrChallengeUrl
  );
  HRESULT __stdcall GetCurrLicenseExpDate (
    [in] enum ProtType *ProtType,
    [out] long *lpDateTime
  );
  HRESULT __stdcall GetLastErrorCode (void);
};
[
  uuid(513998CC-E929-4CDF-9FBD-BAD1E0314866),
  helpstring("IDTFilter3 Interface")
]
interface IDTFilter3 : IDTFilter2
{
  [id(9)]
  HRESULT __stdcall GetProtectionType (
    [out] enum ProtType *pProtectionType
  );
  HRESULT __stdcall LicenseHasExpirationDate (
    [out] long *pfLicenseHasExpirationDate
  );
  HRESULT __stdcall SetRights (
    [in] BSTR bstrRights
  );
};
[
  uuid(C4C4C4D2-0049-4E2B-98FB-9537F6CE516D),
  helpstring("IDTFilterConfig Interface"),
  restricted
]
interface IDTFilterConfig : IUnknown
{
  [id(11)]
  HRESULT __stdcall GetSecureChannelObject (
    [out] IUnknown **ppUnkDRMSecureChannel
  );
};
[
  uuid(C4C4C4B3-0049-4E2B-98FB-9537F6CE516D),
  helpstring("IXDSCodec Interface")
]
interface IXDSCodec : IUnknown
{
  [id(1), propget]
  HRESULT __stdcall XDSToRatObjOK (
    [out retval] HRESULT *pHrCoCreateRetVal
  );
  [propput]
  HRESULT __stdcall CCSubstreamService (
    [in] long argNo1
  );
  [id(2), propget]
  HRESULT __stdcall CCSubstreamService (
    [out retval] long *pSubstreamMask
  );
  HRESULT __stdcall GetContentAdvisoryRating (
    [out] long *pRat,
    [out] long *pPktSeqID,
    [out] long *pCallSeqID,
    [out] LONGLONG *pTimeStart,
    [out] LONGLONG *pTimeEnd
  );
  HRESULT __stdcall GetXDSPacket (
    [out] long *pXDSClassPkt,
    [out] long *pXDSTypePkt,
    [out] BSTR *pBstrXDSPkt,
    [out] long *pPktSeqID,
    [out] long *pCallSeqID,
    [out] LONGLONG *pTimeStart,
    [out] LONGLONG *pTimeEnd
  );
  HRESULT __stdcall GetCurrLicenseExpDate (
    [in] enum ProtType *ProtType,
    [out] long *lpDateTime
  );
  HRESULT __stdcall GetLastErrorCode (void);
};
[
  uuid(C4C4C4D3-0049-4E2B-98FB-9537F6CE516D),
  helpstring("IXDSCodecConfig Interface")
]
interface IXDSCodecConfig : IUnknown
{
  [id(11)]
  HRESULT __stdcall GetSecureChannelObject (
    [out] IUnknown **ppUnkDRMSecureChannel
  );
  HRESULT __stdcall SetPauseBufferTime (
    [in] UINT dwPauseBufferTime
  );
};

