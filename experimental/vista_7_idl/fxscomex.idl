/* Automated generated idl file <faxcomexlib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface _IFaxServerNotify2;
interface _IFaxAccountNotify;

/* Union record forward declarations.  */
dispinterface IFaxServerNotify;
dispinterface IFaxServer;
dispinterface IFaxDeviceProviders;
dispinterface IFaxDeviceProvider;
dispinterface IFaxDevices;
dispinterface IFaxDevice;
dispinterface IFaxInboundRouting;
dispinterface IFaxInboundRoutingExtensions;
dispinterface IFaxInboundRoutingExtension;
dispinterface IFaxInboundRoutingMethods;
dispinterface IFaxInboundRoutingMethod;
dispinterface IFaxFolders;
dispinterface IFaxOutgoingQueue;
dispinterface IFaxOutgoingJobs;
dispinterface IFaxOutgoingJob;
dispinterface IFaxSender;
dispinterface IFaxRecipient;
dispinterface IFaxIncomingQueue;
dispinterface IFaxIncomingJobs;
dispinterface IFaxIncomingJob;
dispinterface IFaxIncomingArchive;
dispinterface IFaxIncomingMessageIterator;
dispinterface IFaxIncomingMessage;
dispinterface IFaxOutgoingArchive;
dispinterface IFaxOutgoingMessageIterator;
dispinterface IFaxOutgoingMessage;
dispinterface IFaxLoggingOptions;
dispinterface IFaxEventLogging;
dispinterface IFaxActivityLogging;
dispinterface IFaxActivity;
dispinterface IFaxOutboundRouting;
dispinterface IFaxOutboundRoutingGroups;
dispinterface IFaxOutboundRoutingGroup;
dispinterface IFaxDeviceIds;
dispinterface IFaxOutboundRoutingRules;
dispinterface IFaxOutboundRoutingRule;
dispinterface IFaxReceiptOptions;
dispinterface IFaxSecurity;
dispinterface IFaxJobStatus;
dispinterface IFaxServer2;
dispinterface IFaxConfiguration;
dispinterface IFaxAccount;
dispinterface IFaxAccountFolders;
dispinterface IFaxAccountOutgoingQueue;
dispinterface IFaxAccountIncomingQueue;
dispinterface IFaxAccountIncomingArchive;
dispinterface IFaxAccountOutgoingArchive;
dispinterface IFaxAccountSet;
dispinterface IFaxAccounts;
dispinterface IFaxSecurity2;
dispinterface IFaxServerNotify2;
dispinterface IFaxAccountNotify;
dispinterface IFaxDocument2;
dispinterface IFaxDocument;
dispinterface IFaxRecipients;
dispinterface IFaxIncomingMessage2;
dispinterface IFaxOutgoingJob2;
dispinterface IFaxOutgoingMessage2;

/* Union record forward declarations.  */
coclass FaxServer;
coclass FaxDeviceProviders;
coclass FaxDevices;
coclass FaxInboundRouting;
coclass FaxFolders;
coclass FaxLoggingOptions;
coclass FaxActivity;
coclass FaxOutboundRouting;
coclass FaxReceiptOptions;
coclass FaxSecurity;
coclass FaxDocument;
coclass FaxSender;
coclass FaxRecipients;
coclass FaxIncomingArchive;
coclass FaxIncomingQueue;
coclass FaxOutgoingArchive;
coclass FaxOutgoingQueue;
coclass FaxIncomingMessageIterator;
coclass FaxIncomingMessage;
coclass FaxOutgoingJobs;
coclass FaxOutgoingJob;
coclass FaxOutgoingMessageIterator;
coclass FaxOutgoingMessage;
coclass FaxIncomingJobs;
coclass FaxIncomingJob;
coclass FaxDeviceProvider;
coclass FaxDevice;
coclass FaxActivityLogging;
coclass FaxEventLogging;
coclass FaxOutboundRoutingGroups;
coclass FaxOutboundRoutingGroup;
coclass FaxDeviceIds;
coclass FaxOutboundRoutingRules;
coclass FaxOutboundRoutingRule;
coclass FaxInboundRoutingExtensions;
coclass FaxInboundRoutingExtension;
coclass FaxInboundRoutingMethods;
coclass FaxInboundRoutingMethod;
coclass FaxJobStatus;
coclass FaxRecipient;
coclass FaxConfiguration;
coclass FaxAccountSet;
coclass FaxAccounts;
coclass FaxAccount;
coclass FaxAccountFolders;
coclass FaxAccountIncomingQueue;
coclass FaxAccountOutgoingQueue;
coclass FaxAccountIncomingArchive;
coclass FaxAccountOutgoingArchive;
coclass FaxSecurity2;

/* Enumeration declarations.  */
enum FAX_PROVIDER_STATUS_ENUM
{
  fpsSUCCESS = (int) 201326592,
  fpsSERVER_ERROR = (int) 201326593,
  fpsBAD_GUID = (int) 201326594,
  fpsBAD_VERSION = (int) 201326595,
  fpsCANT_LOAD = (int) 201326596,
  fpsCANT_LINK = (int) 201326597,
  fpsCANT_INIT = (int) 201326598
};
enum FAX_DEVICE_RECEIVE_MODE_ENUM
{
  fdrmNO_ANSWER = (int) 201326592,
  fdrmAUTO_ANSWER = (int) 201326593,
  fdrmMANUAL_ANSWER = (int) 201326594
};
enum FAX_RECEIPT_TYPE_ENUM
{
  frtNONE = (int) 201326592,
  frtMAIL = (int) 201326593,
  frtMSGBOX = (int) 201326596
};
enum FAX_PRIORITY_TYPE_ENUM
{
  fptLOW = (int) 201326592,
  fptNORMAL = (int) 201326593,
  fptHIGH = (int) 201326594
};
enum FAX_JOB_STATUS_ENUM
{
  fjsPENDING = (int) 201326593,
  fjsINPROGRESS = (int) 201326594,
  fjsFAILED = (int) 201326600,
  fjsPAUSED = (int) 201326608,
  fjsNOLINE = (int) 201326624,
  fjsRETRYING = (int) 201326656,
  fjsRETRIES_EXCEEDED = (int) 201326720,
  fjsCOMPLETED = (int) 201326848,
  fjsCANCELED = (int) 201327104,
  fjsCANCELING = (int) 201327616,
  fjsROUTING = (int) 201328640
};
enum FAX_JOB_EXTENDED_STATUS_ENUM
{
  fjesNONE = (int) 201326592,
  fjesDISCONNECTED = (int) 201326593,
  fjesINITIALIZING = (int) 201326594,
  fjesDIALING = (int) 201326595,
  fjesTRANSMITTING = (int) 201326596,
  fjesANSWERED = (int) 201326597,
  fjesRECEIVING = (int) 201326598,
  fjesLINE_UNAVAILABLE = (int) 201326599,
  fjesBUSY = (int) 201326600,
  fjesNO_ANSWER = (int) 201326601,
  fjesBAD_ADDRESS = (int) 201326602,
  fjesNO_DIAL_TONE = (int) 201326603,
  fjesFATAL_ERROR = (int) 201326604,
  fjesCALL_DELAYED = (int) 201326605,
  fjesCALL_BLACKLISTED = (int) 201326606,
  fjesNOT_FAX_CALL = (int) 201326607,
  fjesPARTIALLY_RECEIVED = (int) 201326608,
  fjesHANDLED = (int) 201326609,
  fjesCALL_COMPLETED = (int) 201326610,
  fjesCALL_ABORTED = (int) 201326611,
  fjesPROPRIETARY = (int) 218103808
};
enum FAX_JOB_OPERATIONS_ENUM
{
  fjoVIEW = (int) 201326593,
  fjoPAUSE = (int) 201326594,
  fjoRESUME = (int) 201326596,
  fjoRESTART = (int) 201326600,
  fjoDELETE = (int) 201326608,
  fjoRECIPIENT_INFO = (int) 201326624,
  fjoSENDER_INFO = (int) 201326656
};
enum FAX_JOB_TYPE_ENUM
{
  fjtSEND = (int) 201326592,
  fjtRECEIVE = (int) 201326593,
  fjtROUTING = (int) 201326594
};
enum FAX_LOG_LEVEL_ENUM
{
  fllNONE = (int) 201326592,
  fllMIN = (int) 201326593,
  fllMED = (int) 201326594,
  fllMAX = (int) 201326595
};
enum FAX_GROUP_STATUS_ENUM
{
  fgsALL_DEV_VALID = (int) 201326592,
  fgsEMPTY = (int) 201326593,
  fgsALL_DEV_NOT_VALID = (int) 201326594,
  fgsSOME_DEV_NOT_VALID = (int) 201326595
};
enum FAX_RULE_STATUS_ENUM
{
  frsVALID = (int) 201326592,
  frsEMPTY_GROUP = (int) 201326593,
  frsALL_GROUP_DEV_NOT_VALID = (int) 201326594,
  frsSOME_GROUP_DEV_NOT_VALID = (int) 201326595,
  frsBAD_DEVICE = (int) 201326596
};
enum FAX_SMTP_AUTHENTICATION_TYPE_ENUM
{
  fsatANONYMOUS = (int) 201326592,
  fsatBASIC = (int) 201326593,
  fsatNTLM = (int) 201326594
};
enum FAX_ACCESS_RIGHTS_ENUM
{
  farSUBMIT_LOW = (int) 201326593,
  farSUBMIT_NORMAL = (int) 201326594,
  farSUBMIT_HIGH = (int) 201326596,
  farQUERY_JOBS = (int) 201326600,
  farMANAGE_JOBS = (int) 201326608,
  farQUERY_CONFIG = (int) 201326624,
  farMANAGE_CONFIG = (int) 201326656,
  farQUERY_IN_ARCHIVE = (int) 201326720,
  farMANAGE_IN_ARCHIVE = (int) 201326848,
  farQUERY_OUT_ARCHIVE = (int) 201327104,
  farMANAGE_OUT_ARCHIVE = (int) 201327616
};
enum FAX_SERVER_EVENTS_TYPE_ENUM
{
  fsetNONE = (int) 201326592,
  fsetIN_QUEUE = (int) 201326593,
  fsetOUT_QUEUE = (int) 201326594,
  fsetCONFIG = (int) 201326596,
  fsetACTIVITY = (int) 201326600,
  fsetQUEUE_STATE = (int) 201326608,
  fsetIN_ARCHIVE = (int) 201326624,
  fsetOUT_ARCHIVE = (int) 201326656,
  fsetFXSSVC_ENDED = (int) 201326720,
  fsetDEVICE_STATUS = (int) 201326848,
  fsetINCOMING_CALL = (int) 201327104
};
enum FAX_SERVER_APIVERSION_ENUM
{
  fsAPI_VERSION_0 = (int) 201326592,
  fsAPI_VERSION_1 = (int) 201392128,
  fsAPI_VERSION_2 = (int) 201457664,
  fsAPI_VERSION_3 = (int) 201523200
};
enum FAX_ACCOUNT_EVENTS_TYPE_ENUM
{
  faetNONE = (int) 201326592,
  faetIN_QUEUE = (int) 201326593,
  faetOUT_QUEUE = (int) 201326594,
  faetIN_ARCHIVE = (int) 201326596,
  faetOUT_ARCHIVE = (int) 201326600,
  faetFXSSVC_ENDED = (int) 201326608
};
enum FAX_ACCESS_RIGHTS_ENUM_2
{
  far2SUBMIT_LOW = (int) 201326593,
  far2SUBMIT_NORMAL = (int) 201326594,
  far2SUBMIT_HIGH = (int) 201326596,
  far2QUERY_OUT_JOBS = (int) 201326600,
  far2MANAGE_OUT_JOBS = (int) 201326608,
  far2QUERY_CONFIG = (int) 201326624,
  far2MANAGE_CONFIG = (int) 201326656,
  far2QUERY_ARCHIVES = (int) 201326720,
  far2MANAGE_ARCHIVES = (int) 201326848,
  far2MANAGE_RECEIVE_FOLDER = (int) 201327104
};
enum FAX_COVERPAGE_TYPE_ENUM
{
  fcptNONE = (int) 201326592,
  fcptLOCAL = (int) 201326593,
  fcptSERVER = (int) 201326594
};
enum FAX_SCHEDULE_TYPE_ENUM
{
  fstNOW = (int) 201326592,
  fstSPECIFIC_TIME = (int) 201326593,
  fstDISCOUNT_PERIOD = (int) 201326594
};
enum FAX_ROUTING_RULE_CODE_ENUM
{
  frrcANY_CODE = (int) 201326592
};

[
  uuid(2BF34C1A-8CAC-419F-8547-32FDF6505DB8),
  version(1.0),
  helpstring("Microsoft Fax Service Extended COM Type Library")
]
library faxcomexlib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(CDA8ACB0-8CF5-4F6C-9BA2-5931D40C8CAE),
     helpstring("FaxServer Class"),
     cancreate
   ]
   coclass FaxServer
   {
     dispinterface IFaxServer2;
     dispinterface IFaxServer;
     dispinterface IFaxServerNotify2;
     dispinterface IFaxServerNotify;
   };
   [
     uuid(EB8FE768-875A-4F5F-82C5-03F23AAC1BD7),
     helpstring("FaxDeviceProviders Class")
   ]
   coclass FaxDeviceProviders
   {
     dispinterface IFaxDeviceProviders;
   };
   [
     uuid(5589E28E-23CB-4919-8808-E6101846E80D),
     helpstring("FaxDevices Class")
   ]
   coclass FaxDevices
   {
     dispinterface IFaxDevices;
   };
   [
     uuid(E80248ED-AD65-4218-8108-991924D4E7ED),
     helpstring("FaxInboundRouting Class")
   ]
   coclass FaxInboundRouting
   {
     dispinterface IFaxInboundRouting;
   };
   [
     uuid(C35211D7-5776-48CB-AF44-C31BE3B2CFE5),
     helpstring("FaxFolders Class")
   ]
   coclass FaxFolders
   {
     dispinterface IFaxFolders;
   };
   [
     uuid(1BF9EEA6-ECE0-4785-A18B-DE56E9EEF96A),
     helpstring("FaxLoggingOptions Class")
   ]
   coclass FaxLoggingOptions
   {
     dispinterface IFaxLoggingOptions;
   };
   [
     uuid(CFEF5D0E-E84D-462E-AABB-87D31EB04FEF),
     helpstring("FaxActivity Class")
   ]
   coclass FaxActivity
   {
     dispinterface IFaxActivity;
   };
   [
     uuid(C81B385E-B869-4AFD-86C0-616498ED9BE2),
     helpstring("FaxOutboundRouting Class")
   ]
   coclass FaxOutboundRouting
   {
     dispinterface IFaxOutboundRouting;
   };
   [
     uuid(6982487B-227B-4C96-A61C-248348B05AB6),
     helpstring("FaxReceiptOptions Class")
   ]
   coclass FaxReceiptOptions
   {
     dispinterface IFaxReceiptOptions;
   };
   [
     uuid(10C4DDDE-ABF0-43DF-964F-7F3AC21A4C7B),
     helpstring("FaxSecurity Class")
   ]
   coclass FaxSecurity
   {
     dispinterface IFaxSecurity;
   };
   [
     uuid(0F3F9F91-C838-415E-A4F3-3E828CA445E0),
     helpstring("FaxDocument Class"),
     cancreate
   ]
   coclass FaxDocument
   {
     dispinterface IFaxDocument2;
     dispinterface IFaxDocument;
   };
   [
     uuid(265D84D0-1850-4360-B7C8-758BBB5F0B96),
     helpstring("FaxSender Class")
   ]
   coclass FaxSender
   {
     dispinterface IFaxSender;
   };
   [
     uuid(EA9BDF53-10A9-4D4F-A067-63C8F84F01B0),
     helpstring("FaxRecipients Class")
   ]
   coclass FaxRecipients
   {
     dispinterface IFaxRecipients;
   };
   [
     uuid(8426C56A-35A1-4C6F-AF93-FC952422E2C2),
     helpstring("FaxIncomingArchive Class")
   ]
   coclass FaxIncomingArchive
   {
     dispinterface IFaxIncomingArchive;
   };
   [
     uuid(69131717-F3F1-40E3-809D-A6CBF7BD85E5),
     helpstring("FaxIncomingQueue Class")
   ]
   coclass FaxIncomingQueue
   {
     dispinterface IFaxIncomingQueue;
   };
   [
     uuid(43C28403-E04F-474D-990C-B94669148F59),
     helpstring("FaxOutgoingArchive Class")
   ]
   coclass FaxOutgoingArchive
   {
     dispinterface IFaxOutgoingArchive;
   };
   [
     uuid(7421169E-8C43-4B0D-BB16-645C8FA40357),
     helpstring("FaxOutgoingQueue Class")
   ]
   coclass FaxOutgoingQueue
   {
     dispinterface IFaxOutgoingQueue;
   };
   [
     uuid(6088E1D8-3FC8-45C2-87B1-909A29607EA9),
     helpstring("FaxIncomingMessageIterator Class")
   ]
   coclass FaxIncomingMessageIterator
   {
     dispinterface IFaxIncomingMessageIterator;
   };
   [
     uuid(1932FCF7-9D43-4D5A-89FF-03861B321736),
     helpstring("FaxIncomingMessage Class")
   ]
   coclass FaxIncomingMessage
   {
     dispinterface IFaxIncomingMessage2;
     dispinterface IFaxIncomingMessage;
   };
   [
     uuid(92BF2A6C-37BE-43FA-A37D-CB0E5F753B35),
     helpstring("FaxOutgoingJobs Class")
   ]
   coclass FaxOutgoingJobs
   {
     dispinterface IFaxOutgoingJobs;
   };
   [
     uuid(71BB429C-0EF9-4915-BEC5-A5D897A3E924),
     helpstring("FaxOutgoingJob Class")
   ]
   coclass FaxOutgoingJob
   {
     dispinterface IFaxOutgoingJob2;
     dispinterface IFaxOutgoingJob;
   };
   [
     uuid(8A3224D0-D30B-49DE-9813-CB385790FBBB),
     helpstring("FaxOutgoingMessageIterator Class")
   ]
   coclass FaxOutgoingMessageIterator
   {
     dispinterface IFaxOutgoingMessageIterator;
   };
   [
     uuid(91B4A378-4AD8-4AEF-A4DC-97D96E939A3A),
     helpstring("FaxOutgoingMessage Class")
   ]
   coclass FaxOutgoingMessage
   {
     dispinterface IFaxOutgoingMessage2;
     dispinterface IFaxOutgoingMessage;
   };
   [
     uuid(A1BB8A43-8866-4FB7-A15D-6266C875A5CC),
     helpstring("FaxIncomingJobs Class")
   ]
   coclass FaxIncomingJobs
   {
     dispinterface IFaxIncomingJobs;
   };
   [
     uuid(C47311EC-AE32-41B8-AE4B-3EAE0629D0C9),
     helpstring("FaxIncomingJob Class")
   ]
   coclass FaxIncomingJob
   {
     dispinterface IFaxIncomingJob;
   };
   [
     uuid(17CF1AA3-F5EB-484A-9C9A-4440A5BAABFC),
     helpstring("FaxDeviceProvider Class")
   ]
   coclass FaxDeviceProvider
   {
     dispinterface IFaxDeviceProvider;
   };
   [
     uuid(59E3A5B2-D676-484B-A6DE-720BFA89B5AF),
     helpstring("FaxDevice Class")
   ]
   coclass FaxDevice
   {
     dispinterface IFaxDevice;
   };
   [
     uuid(F0A0294E-3BBD-48B8-8F13-8C591A55BDBC),
     helpstring("FaxActivityLogging Class")
   ]
   coclass FaxActivityLogging
   {
     dispinterface IFaxActivityLogging;
   };
   [
     uuid(A6850930-A0F6-4A6F-95B7-DB2EBF3D02E3),
     helpstring("FaxEventLogging Class")
   ]
   coclass FaxEventLogging
   {
     dispinterface IFaxEventLogging;
   };
   [
     uuid(CCBEA1A5-E2B4-4B57-9421-B04B6289464B),
     helpstring("FaxOutboundRoutingGroups Class")
   ]
   coclass FaxOutboundRoutingGroups
   {
     dispinterface IFaxOutboundRoutingGroups;
   };
   [
     uuid(0213F3E0-6791-4D77-A271-04D2357C50D6),
     helpstring("FaxOutboundRoutingGroup Class")
   ]
   coclass FaxOutboundRoutingGroup
   {
     dispinterface IFaxOutboundRoutingGroup;
   };
   [
     uuid(CDC539EA-7277-460E-8DE0-48A0A5760D1F),
     helpstring("FaxDeviceIds Class")
   ]
   coclass FaxDeviceIds
   {
     dispinterface IFaxDeviceIds;
   };
   [
     uuid(D385BECA-E624-4473-BFAA-9F4000831F54),
     helpstring("FaxOutboundRoutingRules Class")
   ]
   coclass FaxOutboundRoutingRules
   {
     dispinterface IFaxOutboundRoutingRules;
   };
   [
     uuid(6549EEBF-08D1-475A-828B-3BF105952FA0),
     helpstring("FaxOutboundRoutingRule Class")
   ]
   coclass FaxOutboundRoutingRule
   {
     dispinterface IFaxOutboundRoutingRule;
   };
   [
     uuid(189A48ED-623C-4C0D-80F2-D66C7B9EFEC2),
     helpstring("FaxInboundRoutingExtensions Class")
   ]
   coclass FaxInboundRoutingExtensions
   {
     dispinterface IFaxInboundRoutingExtensions;
   };
   [
     uuid(1D7DFB51-7207-4436-A0D9-24E32EE56988),
     helpstring("FaxInboundRoutingExtension Class")
   ]
   coclass FaxInboundRoutingExtension
   {
     dispinterface IFaxInboundRoutingExtension;
   };
   [
     uuid(25FCB76A-B750-4B82-9266-FBBBAE8922BA),
     helpstring("FaxInboundRoutingMethods Class")
   ]
   coclass FaxInboundRoutingMethods
   {
     dispinterface IFaxInboundRoutingMethods;
   };
   [
     uuid(4B9FD75C-0194-4B72-9CE5-02A8205AC7D4),
     helpstring("FaxInboundRoutingMethod Class")
   ]
   coclass FaxInboundRoutingMethod
   {
     dispinterface IFaxInboundRoutingMethod;
   };
   [
     uuid(7BF222F4-BE8D-442F-841D-6132742423BB),
     helpstring("FaxJobStatus Class")
   ]
   coclass FaxJobStatus
   {
     dispinterface IFaxJobStatus;
   };
   [
     uuid(60BF3301-7DF8-4BD8-9148-7B5801F9EFDF),
     helpstring("FaxRecipient Class")
   ]
   coclass FaxRecipient
   {
     dispinterface IFaxRecipient;
   };
   [
     uuid(5857326F-E7B3-41A7-9C19-A91B463E2D56),
     helpstring("FaxConfiguration Class")
   ]
   coclass FaxConfiguration
   {
     dispinterface IFaxConfiguration;
   };
   [
     uuid(FBC23C4B-79E0-4291-BC56-C12E253BBF3A),
     helpstring("FaxAccountSet Class")
   ]
   coclass FaxAccountSet
   {
     dispinterface IFaxAccountSet;
   };
   [
     uuid(DA1F94AA-EE2C-47C0-8F4F-2A217075B76E),
     helpstring("FaxAccounts Class")
   ]
   coclass FaxAccounts
   {
     dispinterface IFaxAccounts;
   };
   [
     uuid(A7E0647F-4524-4464-A56D-B9FE666F715E),
     helpstring("FaxAccount Class")
   ]
   coclass FaxAccount
   {
     dispinterface IFaxAccount;
     dispinterface IFaxAccountNotify;
   };
   [
     uuid(85398F49-C034-4A3F-821C-DB7D685E8129),
     helpstring("FaxAccountFolders Class")
   ]
   coclass FaxAccountFolders
   {
     dispinterface IFaxAccountFolders;
   };
   [
     uuid(9BCF6094-B4DA-45F4-B8D6-DDEB2186652C),
     helpstring("FaxAccountIncomingQueue Class")
   ]
   coclass FaxAccountIncomingQueue
   {
     dispinterface IFaxAccountIncomingQueue;
   };
   [
     uuid(FEECEEFB-C149-48BA-BAB8-B791E101F62F),
     helpstring("FaxAccountOutgoingQueue Class")
   ]
   coclass FaxAccountOutgoingQueue
   {
     dispinterface IFaxAccountOutgoingQueue;
   };
   [
     uuid(14B33DB5-4C40-4ECF-9EF8-A360CBE809ED),
     helpstring("FaxAccountIncomingArchive Class")
   ]
   coclass FaxAccountIncomingArchive
   {
     dispinterface IFaxAccountIncomingArchive;
   };
   [
     uuid(851E7AF5-433A-4739-A2DF-AD245C2CB98E),
     helpstring("FaxAccountOutgoingArchive Class")
   ]
   coclass FaxAccountOutgoingArchive
   {
     dispinterface IFaxAccountOutgoingArchive;
   };
   [
     uuid(735C1248-EC89-4C30-A127-656E92E3C4EA),
     helpstring("FaxSecurity2 Class")
   ]
   coclass FaxSecurity2
   {
     dispinterface IFaxSecurity2;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(2E037B27-CF8A-4ABD-B1E0-5704943BEA6F),
     helpstring("_IFaxServerNotify Interface"),
     dispatchable
   ]
   dispinterface IFaxServerNotify
   {
     [id(1)]
     HRESULT __stdcall OnIncomingJobAdded (
       [in] dispinterface IFaxServer *pFaxServer,
       [in] BSTR bstrJobId
     );
     HRESULT __stdcall OnIncomingJobRemoved (
       [in] dispinterface IFaxServer *pFaxServer,
       [in] BSTR bstrJobId
     );
     HRESULT __stdcall OnIncomingJobChanged (
       [in] dispinterface IFaxServer *pFaxServer,
       [in] BSTR bstrJobId,
       [in] dispinterface IFaxJobStatus *pJobStatus
     );
     HRESULT __stdcall OnOutgoingJobAdded (
       [in] dispinterface IFaxServer *pFaxServer,
       [in] BSTR bstrJobId
     );
     HRESULT __stdcall OnOutgoingJobRemoved (
       [in] dispinterface IFaxServer *pFaxServer,
       [in] BSTR bstrJobId
     );
     HRESULT __stdcall OnOutgoingJobChanged (
       [in] dispinterface IFaxServer *pFaxServer,
       [in] BSTR bstrJobId,
       [in] dispinterface IFaxJobStatus *pJobStatus
     );
     HRESULT __stdcall OnIncomingMessageAdded (
       [in] dispinterface IFaxServer *pFaxServer,
       [in] BSTR bstrMessageId
     );
     HRESULT __stdcall OnIncomingMessageRemoved (
       [in] dispinterface IFaxServer *pFaxServer,
       [in] BSTR bstrMessageId
     );
     HRESULT __stdcall OnOutgoingMessageAdded (
       [in] dispinterface IFaxServer *pFaxServer,
       [in] BSTR bstrMessageId
     );
     HRESULT __stdcall OnOutgoingMessageRemoved (
       [in] dispinterface IFaxServer *pFaxServer,
       [in] BSTR bstrMessageId
     );
     HRESULT __stdcall OnReceiptOptionsChange (
       [in] dispinterface IFaxServer *pFaxServer
     );
     HRESULT __stdcall OnActivityLoggingConfigChange (
       [in] dispinterface IFaxServer *pFaxServer
     );
     HRESULT __stdcall OnSecurityConfigChange (
       [in] dispinterface IFaxServer *pFaxServer
     );
     HRESULT __stdcall OnEventLoggingConfigChange (
       [in] dispinterface IFaxServer *pFaxServer
     );
     HRESULT __stdcall OnOutgoingQueueConfigChange (
       [in] dispinterface IFaxServer *pFaxServer
     );
     HRESULT __stdcall OnOutgoingArchiveConfigChange (
       [in] dispinterface IFaxServer *pFaxServer
     );
     HRESULT __stdcall OnIncomingArchiveConfigChange (
       [in] dispinterface IFaxServer *pFaxServer
     );
     HRESULT __stdcall OnDevicesConfigChange (
       [in] dispinterface IFaxServer *pFaxServer
     );
     HRESULT __stdcall OnOutboundRoutingGroupsConfigChange (
       [in] dispinterface IFaxServer *pFaxServer
     );
     HRESULT __stdcall OnOutboundRoutingRulesConfigChange (
       [in] dispinterface IFaxServer *pFaxServer
     );
     HRESULT __stdcall OnServerActivityChange (
       [in] dispinterface IFaxServer *pFaxServer,
       [in] long lIncomingMessages,
       [in] long lRoutingMessages,
       [in] long lOutgoingMessages,
       [in] long lQueuedMessages
     );
     HRESULT __stdcall OnQueuesStatusChange (
       [in] dispinterface IFaxServer *pFaxServer,
       [in] WINBOOL bOutgoingQueueBlocked,
       [in] WINBOOL bOutgoingQueuePaused,
       [in] WINBOOL bIncomingQueueBlocked
     );
     HRESULT __stdcall OnNewCall (
       [in] dispinterface IFaxServer *pFaxServer,
       [in] long lCallId,
       [in] long lDeviceId,
       [in] BSTR bstrCallerId
     );
     HRESULT __stdcall OnServerShutDown (
       [in] dispinterface IFaxServer *pFaxServer
     );
     HRESULT __stdcall OnDeviceStatusChange (
       [in] dispinterface IFaxServer *pFaxServer,
       [in] long lDeviceId,
       [in] WINBOOL bPoweredOff,
       [in] WINBOOL bSending,
       [in] WINBOOL bReceiving,
       [in] WINBOOL bRinging
     );
   };
   [
     uuid(475B6469-90A5-4878-A577-17A86E8E3462),
     helpstring("IFaxServer interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxServer : IDispatch
   {
     [id(1)]
     HRESULT __stdcall Connect (
       [in] BSTR bstrServerName
     );
     [propget]
     HRESULT __stdcall ServerName (
       [out retval] BSTR *pbstrServerName
     );
     HRESULT __stdcall GetDeviceProviders (
       [out retval] dispinterface IFaxDeviceProviders **ppFaxDeviceProviders
     );
     HRESULT __stdcall GetDevices (
       [out retval] dispinterface IFaxDevices **ppFaxDevices
     );
     [propget]
     HRESULT __stdcall InboundRouting (
       [out retval] dispinterface IFaxInboundRouting **ppFaxInboundRouting
     );
     [propget]
     HRESULT __stdcall Folders (
       [out retval] dispinterface IFaxFolders **pFaxFolders
     );
     [propget]
     HRESULT __stdcall LoggingOptions (
       [out retval] dispinterface IFaxLoggingOptions **ppFaxLoggingOptions
     );
     [propget]
     HRESULT __stdcall MajorVersion (
       [out retval] long *plMajorVersion
     );
     [propget]
     HRESULT __stdcall MinorVersion (
       [out retval] long *plMinorVersion
     );
     [propget]
     HRESULT __stdcall MajorBuild (
       [out retval] long *plMajorBuild
     );
     [propget]
     HRESULT __stdcall MinorBuild (
       [out retval] long *plMinorBuild
     );
     [propget]
     HRESULT __stdcall Debug (
       [out retval] WINBOOL *pbDebug
     );
     [propget]
     HRESULT __stdcall Activity (
       [out retval] dispinterface IFaxActivity **ppFaxActivity
     );
     [propget]
     HRESULT __stdcall OutboundRouting (
       [out retval] dispinterface IFaxOutboundRouting **ppFaxOutboundRouting
     );
     [propget]
     HRESULT __stdcall ReceiptOptions (
       [out retval] dispinterface IFaxReceiptOptions **ppFaxReceiptOptions
     );
     [propget]
     HRESULT __stdcall Security (
       [out retval] dispinterface IFaxSecurity **ppFaxSecurity
     );
     HRESULT __stdcall Disconnect (void);
     HRESULT __stdcall GetExtensionProperty (
       [in] BSTR bstrGUID,
       [out retval] VARIANT *pvProperty
     );
     HRESULT __stdcall SetExtensionProperty (
       [in] BSTR bstrGUID,
       [in] VARIANT vProperty
     );
     HRESULT __stdcall ListenToServerEvents (
       [in] enum FAX_SERVER_EVENTS_TYPE_ENUM EventTypes
     );
     HRESULT __stdcall RegisterDeviceProvider (
       [in] BSTR bstrGUID,
       [in] BSTR bstrFriendlyName,
       [in] BSTR bstrImageName,
       [in] BSTR TspName,
       [in] long lFSPIVersion
     );
     HRESULT __stdcall UnregisterDeviceProvider (
       [in] BSTR bstrUniqueName
     );
     HRESULT __stdcall RegisterInboundRoutingExtension (
       [in] BSTR bstrExtensionName,
       [in] BSTR bstrFriendlyName,
       [in] BSTR bstrImageName,
       [in] VARIANT vMethods
     );
     HRESULT __stdcall UnregisterInboundRoutingExtension (
       [in] BSTR bstrExtensionUniqueName
     );
     [propget]
     HRESULT __stdcall RegisteredEvents (
       [out retval] enum FAX_SERVER_EVENTS_TYPE_ENUM *pEventTypes
     );
     [propget]
     HRESULT __stdcall APIVersion (
       [out retval] enum FAX_SERVER_APIVERSION_ENUM *pAPIVersion
     );
   };
   [
     uuid(9FB76F62-4C7E-43A5-B6FD-502893F7E13E),
     helpstring("IFaxDeviceProviders interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxDeviceProviders : IDispatch
   {
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppUnk
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT vIndex,
       [out retval] dispinterface IFaxDeviceProvider **pFaxDeviceProvider
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
   };
   [
     uuid(290EAC63-83EC-449C-8417-F148DF8C682A),
     helpstring("IFaxDeviceProvider interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxDeviceProvider : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall FriendlyName (
       [out retval] BSTR *pbstrFriendlyName
     );
     [propget]
     HRESULT __stdcall ImageName (
       [out retval] BSTR *pbstrImageName
     );
     [propget]
     HRESULT __stdcall UniqueName (
       [out retval] BSTR *pbstrUniqueName
     );
     [propget]
     HRESULT __stdcall TapiProviderName (
       [out retval] BSTR *pbstrTapiProviderName
     );
     [propget]
     HRESULT __stdcall MajorVersion (
       [out retval] long *plMajorVersion
     );
     [propget]
     HRESULT __stdcall MinorVersion (
       [out retval] long *plMinorVersion
     );
     [propget]
     HRESULT __stdcall MajorBuild (
       [out retval] long *plMajorBuild
     );
     [propget]
     HRESULT __stdcall MinorBuild (
       [out retval] long *plMinorBuild
     );
     [propget]
     HRESULT __stdcall Debug (
       [out retval] WINBOOL *pbDebug
     );
     [propget]
     HRESULT __stdcall Status (
       [out retval] enum FAX_PROVIDER_STATUS_ENUM *pStatus
     );
     [propget]
     HRESULT __stdcall InitErrorCode (
       [out retval] long *plInitErrorCode
     );
     [propget]
     HRESULT __stdcall DeviceIds (
       [out retval] VARIANT *pvDeviceIds
     );
   };
   [
     uuid(9E46783E-F34F-482E-A360-0416BECBBD96),
     helpstring("IFaxDevices interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxDevices : IDispatch
   {
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppUnk
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT vIndex,
       [out retval] dispinterface IFaxDevice **pFaxDevice
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
     [propget]
     HRESULT __stdcall ItemById (
       [in] long lId,
       [out retval] dispinterface IFaxDevice **ppFaxDevice
     );
   };
   [
     uuid(49306C59-B52E-4867-9DF4-CA5841C956D0),
     helpstring("IFaxDevice interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxDevice : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Id (
       [out retval] long *plId
     );
     [propget]
     HRESULT __stdcall DeviceName (
       [out retval] BSTR *pbstrDeviceName
     );
     [propget]
     HRESULT __stdcall ProviderUniqueName (
       [out retval] BSTR *pbstrProviderUniqueName
     );
     [propget]
     HRESULT __stdcall PoweredOff (
       [out retval] WINBOOL *pbPoweredOff
     );
     [propget]
     HRESULT __stdcall ReceivingNow (
       [out retval] WINBOOL *pbReceivingNow
     );
     [propget]
     HRESULT __stdcall SendingNow (
       [out retval] WINBOOL *pbSendingNow
     );
     [propget]
     HRESULT __stdcall UsedRoutingMethods (
       [out retval] VARIANT *pvUsedRoutingMethods
     );
     [propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *pbstrDescription
     );
     [id(8), propput]
     HRESULT __stdcall Description (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall SendEnabled (
       [out retval] WINBOOL *pbSendEnabled
     );
     [id(9), propput]
     HRESULT __stdcall SendEnabled (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall ReceiveMode (
       [out retval] enum FAX_DEVICE_RECEIVE_MODE_ENUM *pReceiveMode
     );
     [id(10), propput]
     HRESULT __stdcall ReceiveMode (
       [in] enum FAX_DEVICE_RECEIVE_MODE_ENUM argNo1
     );
     [propget]
     HRESULT __stdcall RingsBeforeAnswer (
       [out retval] long *plRingsBeforeAnswer
     );
     [id(11), propput]
     HRESULT __stdcall RingsBeforeAnswer (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall CSID (
       [out retval] BSTR *pbstrCSID
     );
     [id(12), propput]
     HRESULT __stdcall CSID (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall TSID (
       [out retval] BSTR *pbstrTSID
     );
     [id(13), propput]
     HRESULT __stdcall TSID (
       [in] BSTR argNo1
     );
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall Save (void);
     HRESULT __stdcall GetExtensionProperty (
       [in] BSTR bstrGUID,
       [out retval] VARIANT *pvProperty
     );
     HRESULT __stdcall SetExtensionProperty (
       [in] BSTR bstrGUID,
       [in] VARIANT vProperty
     );
     HRESULT __stdcall UseRoutingMethod (
       [in] BSTR bstrMethodGUID,
       [in] WINBOOL bUse
     );
     [propget]
     HRESULT __stdcall RingingNow (
       [out retval] WINBOOL *pbRingingNow
     );
     HRESULT __stdcall AnswerCall (void);
   };
   [
     uuid(8148C20F-9D52-45B1-BF96-38FC12713527),
     helpstring("IFaxInboundRouting interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxInboundRouting : IDispatch
   {
     [id(1)]
     HRESULT __stdcall GetExtensions (
       [out retval] dispinterface IFaxInboundRoutingExtensions **pFaxInboundRoutingExtensions
     );
     HRESULT __stdcall GetMethods (
       [out retval] dispinterface IFaxInboundRoutingMethods **pFaxInboundRoutingMethods
     );
   };
   [
     uuid(2F6C9673-7B26-42DE-8EB0-915DCD2A4F4C),
     helpstring("IFaxInboundRoutingExtensions interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxInboundRoutingExtensions : IDispatch
   {
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppUnk
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT vIndex,
       [out retval] dispinterface IFaxInboundRoutingExtension **pFaxInboundRoutingExtension
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
   };
   [
     uuid(885B5E08-C26C-4EF9-AF83-51580A750BE1),
     helpstring("IFaxInboundRoutingExtension interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxInboundRoutingExtension : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall FriendlyName (
       [out retval] BSTR *pbstrFriendlyName
     );
     [propget]
     HRESULT __stdcall ImageName (
       [out retval] BSTR *pbstrImageName
     );
     [propget]
     HRESULT __stdcall UniqueName (
       [out retval] BSTR *pbstrUniqueName
     );
     [propget]
     HRESULT __stdcall MajorVersion (
       [out retval] long *plMajorVersion
     );
     [propget]
     HRESULT __stdcall MinorVersion (
       [out retval] long *plMinorVersion
     );
     [propget]
     HRESULT __stdcall MajorBuild (
       [out retval] long *plMajorBuild
     );
     [propget]
     HRESULT __stdcall MinorBuild (
       [out retval] long *plMinorBuild
     );
     [propget]
     HRESULT __stdcall Debug (
       [out retval] WINBOOL *pbDebug
     );
     [propget]
     HRESULT __stdcall Status (
       [out retval] enum FAX_PROVIDER_STATUS_ENUM *pStatus
     );
     [propget]
     HRESULT __stdcall InitErrorCode (
       [out retval] long *plInitErrorCode
     );
     [propget]
     HRESULT __stdcall Methods (
       [out retval] VARIANT *pvMethods
     );
   };
   [
     uuid(783FCA10-8908-4473-9D69-F67FBEA0C6B9),
     helpstring("IFaxInboundRoutingMethods interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxInboundRoutingMethods : IDispatch
   {
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppUnk
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT vIndex,
       [out retval] dispinterface IFaxInboundRoutingMethod **pFaxInboundRoutingMethod
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
   };
   [
     uuid(45700061-AD9D-4776-A8C4-64065492CF4B),
     helpstring("IFaxInboundRoutingMethod interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxInboundRoutingMethod : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstrName
     );
     [propget]
     HRESULT __stdcall GUID (
       [out retval] BSTR *pbstrGUID
     );
     [propget]
     HRESULT __stdcall FunctionName (
       [out retval] BSTR *pbstrFunctionName
     );
     [propget]
     HRESULT __stdcall ExtensionFriendlyName (
       [out retval] BSTR *pbstrExtensionFriendlyName
     );
     [propget]
     HRESULT __stdcall ExtensionImageName (
       [out retval] BSTR *pbstrExtensionImageName
     );
     [propget]
     HRESULT __stdcall Priority (
       [out retval] long *plPriority
     );
     [id(6), propput]
     HRESULT __stdcall Priority (
       [in] long argNo1
     );
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall Save (void);
   };
   [
     uuid(DCE3B2A8-A7AB-42BC-9D0A-3149457261A0),
     helpstring("IFaxFolders interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxFolders : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall OutgoingQueue (
       [out retval] dispinterface IFaxOutgoingQueue **pFaxOutgoingQueue
     );
     [propget]
     HRESULT __stdcall IncomingQueue (
       [out retval] dispinterface IFaxIncomingQueue **pFaxIncomingQueue
     );
     [propget]
     HRESULT __stdcall IncomingArchive (
       [out retval] dispinterface IFaxIncomingArchive **pFaxIncomingArchive
     );
     [propget]
     HRESULT __stdcall OutgoingArchive (
       [out retval] dispinterface IFaxOutgoingArchive **pFaxOutgoingArchive
     );
   };
   [
     uuid(80B1DF24-D9AC-4333-B373-487CEDC80CE5),
     helpstring("IFaxOutgoingQueue interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxOutgoingQueue : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Blocked (
       [out retval] WINBOOL *pbBlocked
     );
     [id(1), propput]
     HRESULT __stdcall Blocked (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall Paused (
       [out retval] WINBOOL *pbPaused
     );
     [id(2), propput]
     HRESULT __stdcall Paused (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AllowPersonalCoverPages (
       [out retval] WINBOOL *pbAllowPersonalCoverPages
     );
     [id(3), propput]
     HRESULT __stdcall AllowPersonalCoverPages (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall UseDeviceTSID (
       [out retval] WINBOOL *pbUseDeviceTSID
     );
     [id(4), propput]
     HRESULT __stdcall UseDeviceTSID (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall Retries (
       [out retval] long *plRetries
     );
     [id(5), propput]
     HRESULT __stdcall Retries (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall RetryDelay (
       [out retval] long *plRetryDelay
     );
     [id(6), propput]
     HRESULT __stdcall RetryDelay (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall DiscountRateStart (
       [out retval] DATE *pdateDiscountRateStart
     );
     [id(7), propput]
     HRESULT __stdcall DiscountRateStart (
       [in] DATE argNo1
     );
     [propget]
     HRESULT __stdcall DiscountRateEnd (
       [out retval] DATE *pdateDiscountRateEnd
     );
     [id(8), propput]
     HRESULT __stdcall DiscountRateEnd (
       [in] DATE argNo1
     );
     [propget]
     HRESULT __stdcall AgeLimit (
       [out retval] long *plAgeLimit
     );
     [id(9), propput]
     HRESULT __stdcall AgeLimit (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall Branding (
       [out retval] WINBOOL *pbBranding
     );
     [id(10), propput]
     HRESULT __stdcall Branding (
       [in] WINBOOL argNo1
     );
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall Save (void);
     HRESULT __stdcall GetJobs (
       [out retval] dispinterface IFaxOutgoingJobs **pFaxOutgoingJobs
     );
     HRESULT __stdcall GetJob (
       [in] BSTR bstrJobId,
       [out retval] dispinterface IFaxOutgoingJob **pFaxOutgoingJob
     );
   };
   [
     uuid(2C56D8E6-8C2F-4573-944C-E505F8F5AEED),
     helpstring("IFaxOutgoingJobs interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxOutgoingJobs : IDispatch
   {
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppUnk
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT vIndex,
       [out retval] dispinterface IFaxOutgoingJob **pFaxOutgoingJob
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
   };
   [
     uuid(6356DAAD-6614-4583-BF7A-3AD67BBFC71C),
     helpstring("IFaxOutgoingJob interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxOutgoingJob : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Subject (
       [out retval] BSTR *pbstrSubject
     );
     [propget]
     HRESULT __stdcall DocumentName (
       [out retval] BSTR *pbstrDocumentName
     );
     [propget]
     HRESULT __stdcall Pages (
       [out retval] long *plPages
     );
     [propget]
     HRESULT __stdcall Size (
       [out retval] long *plSize
     );
     [propget]
     HRESULT __stdcall SubmissionId (
       [out retval] BSTR *pbstrSubmissionId
     );
     [propget]
     HRESULT __stdcall Id (
       [out retval] BSTR *pbstrId
     );
     [propget]
     HRESULT __stdcall OriginalScheduledTime (
       [out retval] DATE *pdateOriginalScheduledTime
     );
     [propget]
     HRESULT __stdcall SubmissionTime (
       [out retval] DATE *pdateSubmissionTime
     );
     [propget]
     HRESULT __stdcall ReceiptType (
       [out retval] enum FAX_RECEIPT_TYPE_ENUM *pReceiptType
     );
     [propget]
     HRESULT __stdcall Priority (
       [out retval] enum FAX_PRIORITY_TYPE_ENUM *pPriority
     );
     [propget]
     HRESULT __stdcall Sender (
       [out retval] dispinterface IFaxSender **ppFaxSender
     );
     [propget]
     HRESULT __stdcall Recipient (
       [out retval] dispinterface IFaxRecipient **ppFaxRecipient
     );
     [propget]
     HRESULT __stdcall CurrentPage (
       [out retval] long *plCurrentPage
     );
     [propget]
     HRESULT __stdcall DeviceId (
       [out retval] long *plDeviceId
     );
     [propget]
     HRESULT __stdcall Status (
       [out retval] enum FAX_JOB_STATUS_ENUM *pStatus
     );
     [propget]
     HRESULT __stdcall ExtendedStatusCode (
       [out retval] enum FAX_JOB_EXTENDED_STATUS_ENUM *pExtendedStatusCode
     );
     [propget]
     HRESULT __stdcall ExtendedStatus (
       [out retval] BSTR *pbstrExtendedStatus
     );
     [propget]
     HRESULT __stdcall AvailableOperations (
       [out retval] enum FAX_JOB_OPERATIONS_ENUM *pAvailableOperations
     );
     [propget]
     HRESULT __stdcall Retries (
       [out retval] long *plRetries
     );
     [propget]
     HRESULT __stdcall ScheduledTime (
       [out retval] DATE *pdateScheduledTime
     );
     [propget]
     HRESULT __stdcall TransmissionStart (
       [out retval] DATE *pdateTransmissionStart
     );
     [propget]
     HRESULT __stdcall TransmissionEnd (
       [out retval] DATE *pdateTransmissionEnd
     );
     [propget]
     HRESULT __stdcall CSID (
       [out retval] BSTR *pbstrCSID
     );
     [propget]
     HRESULT __stdcall TSID (
       [out retval] BSTR *pbstrTSID
     );
     [propget]
     HRESULT __stdcall GroupBroadcastReceipts (
       [out retval] WINBOOL *pbGroupBroadcastReceipts
     );
     HRESULT __stdcall Pause (void);
     HRESULT __stdcall Resume (void);
     HRESULT __stdcall Restart (void);
     HRESULT __stdcall CopyTiff (
       [in] BSTR bstrTiffPath
     );
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall Cancel (void);
   };
   [
     uuid(0D879D7D-F57A-4CC6-A6F9-3EE5D527B46A),
     helpstring("IFaxSender interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxSender : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall BillingCode (
       [out retval] BSTR *pbstrBillingCode
     );
     [id(1), propput]
     HRESULT __stdcall BillingCode (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall City (
       [out retval] BSTR *pbstrCity
     );
     [id(2), propput]
     HRESULT __stdcall City (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Company (
       [out retval] BSTR *pbstrCompany
     );
     [id(3), propput]
     HRESULT __stdcall Company (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Country (
       [out retval] BSTR *pbstrCountry
     );
     [id(4), propput]
     HRESULT __stdcall Country (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Department (
       [out retval] BSTR *pbstrDepartment
     );
     [id(5), propput]
     HRESULT __stdcall Department (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Email (
       [out retval] BSTR *pbstrEmail
     );
     [id(6), propput]
     HRESULT __stdcall Email (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall FaxNumber (
       [out retval] BSTR *pbstrFaxNumber
     );
     [id(7), propput]
     HRESULT __stdcall FaxNumber (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall HomePhone (
       [out retval] BSTR *pbstrHomePhone
     );
     [id(8), propput]
     HRESULT __stdcall HomePhone (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstrName
     );
     [id(9), propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall TSID (
       [out retval] BSTR *pbstrTSID
     );
     [id(10), propput]
     HRESULT __stdcall TSID (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall OfficePhone (
       [out retval] BSTR *pbstrOfficePhone
     );
     [id(11), propput]
     HRESULT __stdcall OfficePhone (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall OfficeLocation (
       [out retval] BSTR *pbstrOfficeLocation
     );
     [id(12), propput]
     HRESULT __stdcall OfficeLocation (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall State (
       [out retval] BSTR *pbstrState
     );
     [id(13), propput]
     HRESULT __stdcall State (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall StreetAddress (
       [out retval] BSTR *pbstrStreetAddress
     );
     [id(14), propput]
     HRESULT __stdcall StreetAddress (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Title (
       [out retval] BSTR *pbstrTitle
     );
     [id(15), propput]
     HRESULT __stdcall Title (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall ZipCode (
       [out retval] BSTR *pbstrZipCode
     );
     [id(16), propput]
     HRESULT __stdcall ZipCode (
       [in] BSTR argNo1
     );
     HRESULT __stdcall LoadDefaultSender (void);
     HRESULT __stdcall SaveDefaultSender (void);
   };
   [
     uuid(9A3DA3A0-538D-42B6-9444-AAA57D0CE2BC),
     helpstring("IFaxRecipient interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxRecipient : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall FaxNumber (
       [out retval] BSTR *pbstrFaxNumber
     );
     [id(1), propput]
     HRESULT __stdcall FaxNumber (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstrName
     );
     [id(2), propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
   };
   [
     uuid(902E64EF-8FD8-4B75-9725-6014DF161545),
     helpstring("IFaxIncomingQueue interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxIncomingQueue : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Blocked (
       [out retval] WINBOOL *pbBlocked
     );
     [id(1), propput]
     HRESULT __stdcall Blocked (
       [in] WINBOOL argNo1
     );
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall Save (void);
     HRESULT __stdcall GetJobs (
       [out retval] dispinterface IFaxIncomingJobs **pFaxIncomingJobs
     );
     HRESULT __stdcall GetJob (
       [in] BSTR bstrJobId,
       [out retval] dispinterface IFaxIncomingJob **pFaxIncomingJob
     );
   };
   [
     uuid(011F04E9-4FD6-4C23-9513-B6B66BB26BE9),
     helpstring("IFaxIncomingJobs interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxIncomingJobs : IDispatch
   {
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppUnk
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT vIndex,
       [out retval] dispinterface IFaxIncomingJob **pFaxIncomingJob
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
   };
   [
     uuid(207529E6-654A-4916-9F88-4D232EE8A107),
     helpstring("IFaxIncomingJob interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxIncomingJob : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Size (
       [out retval] long *plSize
     );
     [propget]
     HRESULT __stdcall Id (
       [out retval] BSTR *pbstrId
     );
     [propget]
     HRESULT __stdcall CurrentPage (
       [out retval] long *plCurrentPage
     );
     [propget]
     HRESULT __stdcall DeviceId (
       [out retval] long *plDeviceId
     );
     [propget]
     HRESULT __stdcall Status (
       [out retval] enum FAX_JOB_STATUS_ENUM *pStatus
     );
     [propget]
     HRESULT __stdcall ExtendedStatusCode (
       [out retval] enum FAX_JOB_EXTENDED_STATUS_ENUM *pExtendedStatusCode
     );
     [propget]
     HRESULT __stdcall ExtendedStatus (
       [out retval] BSTR *pbstrExtendedStatus
     );
     [propget]
     HRESULT __stdcall AvailableOperations (
       [out retval] enum FAX_JOB_OPERATIONS_ENUM *pAvailableOperations
     );
     [propget]
     HRESULT __stdcall Retries (
       [out retval] long *plRetries
     );
     [propget]
     HRESULT __stdcall TransmissionStart (
       [out retval] DATE *pdateTransmissionStart
     );
     [propget]
     HRESULT __stdcall TransmissionEnd (
       [out retval] DATE *pdateTransmissionEnd
     );
     [propget]
     HRESULT __stdcall CSID (
       [out retval] BSTR *pbstrCSID
     );
     [propget]
     HRESULT __stdcall TSID (
       [out retval] BSTR *pbstrTSID
     );
     [propget]
     HRESULT __stdcall CallerId (
       [out retval] BSTR *pbstrCallerId
     );
     [propget]
     HRESULT __stdcall RoutingInformation (
       [out retval] BSTR *pbstrRoutingInformation
     );
     [propget]
     HRESULT __stdcall JobType (
       [out retval] enum FAX_JOB_TYPE_ENUM *pJobType
     );
     HRESULT __stdcall Cancel (void);
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall CopyTiff (
       [in] BSTR bstrTiffPath
     );
   };
   [
     uuid(76062CC7-F714-4FBD-AA06-ED6E4A4B70F3),
     helpstring("IFaxIncomingArchive interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxIncomingArchive : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall UseArchive (
       [out retval] WINBOOL *pbUseArchive
     );
     [id(1), propput]
     HRESULT __stdcall UseArchive (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall ArchiveFolder (
       [out retval] BSTR *pbstrArchiveFolder
     );
     [id(2), propput]
     HRESULT __stdcall ArchiveFolder (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall SizeQuotaWarning (
       [out retval] WINBOOL *pbSizeQuotaWarning
     );
     [id(3), propput]
     HRESULT __stdcall SizeQuotaWarning (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall HighQuotaWaterMark (
       [out retval] long *plHighQuotaWaterMark
     );
     [id(4), propput]
     HRESULT __stdcall HighQuotaWaterMark (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall LowQuotaWaterMark (
       [out retval] long *plLowQuotaWaterMark
     );
     [id(5), propput]
     HRESULT __stdcall LowQuotaWaterMark (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall AgeLimit (
       [out retval] long *plAgeLimit
     );
     [id(6), propput]
     HRESULT __stdcall AgeLimit (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall SizeLow (
       [out retval] long *plSizeLow
     );
     [propget]
     HRESULT __stdcall SizeHigh (
       [out retval] long *plSizeHigh
     );
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall Save (void);
     HRESULT __stdcall GetMessages (
       [in opt] long lPrefetchSize = (int) 201326692,
       [out retval] dispinterface IFaxIncomingMessageIterator **pFaxIncomingMessageIterator
     );
     HRESULT __stdcall GetMessage (
       [in] BSTR bstrMessageId,
       [out retval] dispinterface IFaxIncomingMessage **pFaxIncomingMessage
     );
   };
   [
     uuid(FD73ECC4-6F06-4F52-82A8-F7BA06AE3108),
     helpstring("IFaxIncomingMessageIterator interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxIncomingMessageIterator : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Message (
       [out retval] dispinterface IFaxIncomingMessage **pFaxIncomingMessage
     );
     [propget]
     HRESULT __stdcall PrefetchSize (
       [out retval] long *plPrefetchSize
     );
     [id(2), propput]
     HRESULT __stdcall PrefetchSize (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall AtEOF (
       [out retval] WINBOOL *pbEOF
     );
     HRESULT __stdcall MoveFirst (void);
     HRESULT __stdcall MoveNext (void);
   };
   [
     uuid(7CAB88FA-2EF9-4851-B2F3-1D148FED8447),
     helpstring("IFaxIncomingMessage interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxIncomingMessage : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Id (
       [out retval] BSTR *pbstrId
     );
     [propget]
     HRESULT __stdcall Pages (
       [out retval] long *plPages
     );
     [propget]
     HRESULT __stdcall Size (
       [out retval] long *plSize
     );
     [propget]
     HRESULT __stdcall DeviceName (
       [out retval] BSTR *pbstrDeviceName
     );
     [propget]
     HRESULT __stdcall Retries (
       [out retval] long *plRetries
     );
     [propget]
     HRESULT __stdcall TransmissionStart (
       [out retval] DATE *pdateTransmissionStart
     );
     [propget]
     HRESULT __stdcall TransmissionEnd (
       [out retval] DATE *pdateTransmissionEnd
     );
     [propget]
     HRESULT __stdcall CSID (
       [out retval] BSTR *pbstrCSID
     );
     [propget]
     HRESULT __stdcall TSID (
       [out retval] BSTR *pbstrTSID
     );
     [propget]
     HRESULT __stdcall CallerId (
       [out retval] BSTR *pbstrCallerId
     );
     [propget]
     HRESULT __stdcall RoutingInformation (
       [out retval] BSTR *pbstrRoutingInformation
     );
     HRESULT __stdcall CopyTiff (
       [in] BSTR bstrTiffPath
     );
     HRESULT __stdcall Delete (void);
   };
   [
     uuid(C9C28F40-8D80-4E53-810F-9A79919B49FD),
     helpstring("IFaxOutgoingArchive interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxOutgoingArchive : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall UseArchive (
       [out retval] WINBOOL *pbUseArchive
     );
     [id(1), propput]
     HRESULT __stdcall UseArchive (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall ArchiveFolder (
       [out retval] BSTR *pbstrArchiveFolder
     );
     [id(2), propput]
     HRESULT __stdcall ArchiveFolder (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall SizeQuotaWarning (
       [out retval] WINBOOL *pbSizeQuotaWarning
     );
     [id(3), propput]
     HRESULT __stdcall SizeQuotaWarning (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall HighQuotaWaterMark (
       [out retval] long *plHighQuotaWaterMark
     );
     [id(4), propput]
     HRESULT __stdcall HighQuotaWaterMark (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall LowQuotaWaterMark (
       [out retval] long *plLowQuotaWaterMark
     );
     [id(5), propput]
     HRESULT __stdcall LowQuotaWaterMark (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall AgeLimit (
       [out retval] long *plAgeLimit
     );
     [id(6), propput]
     HRESULT __stdcall AgeLimit (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall SizeLow (
       [out retval] long *plSizeLow
     );
     [propget]
     HRESULT __stdcall SizeHigh (
       [out retval] long *plSizeHigh
     );
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall Save (void);
     HRESULT __stdcall GetMessages (
       [in opt] long lPrefetchSize = (int) 201326692,
       [out retval] dispinterface IFaxOutgoingMessageIterator **pFaxOutgoingMessageIterator
     );
     HRESULT __stdcall GetMessage (
       [in] BSTR bstrMessageId,
       [out retval] dispinterface IFaxOutgoingMessage **pFaxOutgoingMessage
     );
   };
   [
     uuid(F5EC5D4F-B840-432F-9980-112FE42A9B7A),
     helpstring("IFaxOutgoingMessageIterator interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxOutgoingMessageIterator : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Message (
       [out retval] dispinterface IFaxOutgoingMessage **pFaxOutgoingMessage
     );
     [propget]
     HRESULT __stdcall AtEOF (
       [out retval] WINBOOL *pbEOF
     );
     [propget]
     HRESULT __stdcall PrefetchSize (
       [out retval] long *plPrefetchSize
     );
     [id(3), propput]
     HRESULT __stdcall PrefetchSize (
       [in] long argNo1
     );
     HRESULT __stdcall MoveFirst (void);
     HRESULT __stdcall MoveNext (void);
   };
   [
     uuid(F0EA35DE-CAA5-4A7C-82C7-2B60BA5F2BE2),
     helpstring("IFaxOutgoingMessage interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxOutgoingMessage : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall SubmissionId (
       [out retval] BSTR *pbstrSubmissionId
     );
     [propget]
     HRESULT __stdcall Id (
       [out retval] BSTR *pbstrId
     );
     [propget]
     HRESULT __stdcall Subject (
       [out retval] BSTR *pbstrSubject
     );
     [propget]
     HRESULT __stdcall DocumentName (
       [out retval] BSTR *pbstrDocumentName
     );
     [propget]
     HRESULT __stdcall Retries (
       [out retval] long *plRetries
     );
     [propget]
     HRESULT __stdcall Pages (
       [out retval] long *plPages
     );
     [propget]
     HRESULT __stdcall Size (
       [out retval] long *plSize
     );
     [propget]
     HRESULT __stdcall OriginalScheduledTime (
       [out retval] DATE *pdateOriginalScheduledTime
     );
     [propget]
     HRESULT __stdcall SubmissionTime (
       [out retval] DATE *pdateSubmissionTime
     );
     [propget]
     HRESULT __stdcall Priority (
       [out retval] enum FAX_PRIORITY_TYPE_ENUM *pPriority
     );
     [propget]
     HRESULT __stdcall Sender (
       [out retval] dispinterface IFaxSender **ppFaxSender
     );
     [propget]
     HRESULT __stdcall Recipient (
       [out retval] dispinterface IFaxRecipient **ppFaxRecipient
     );
     [propget]
     HRESULT __stdcall DeviceName (
       [out retval] BSTR *pbstrDeviceName
     );
     [propget]
     HRESULT __stdcall TransmissionStart (
       [out retval] DATE *pdateTransmissionStart
     );
     [propget]
     HRESULT __stdcall TransmissionEnd (
       [out retval] DATE *pdateTransmissionEnd
     );
     [propget]
     HRESULT __stdcall CSID (
       [out retval] BSTR *pbstrCSID
     );
     [propget]
     HRESULT __stdcall TSID (
       [out retval] BSTR *pbstrTSID
     );
     HRESULT __stdcall CopyTiff (
       [in] BSTR bstrTiffPath
     );
     HRESULT __stdcall Delete (void);
   };
   [
     uuid(34E64FB9-6B31-4D32-8B27-D286C0C33606),
     helpstring("IFaxLoggingOptions interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxLoggingOptions : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall EventLogging (
       [out retval] dispinterface IFaxEventLogging **pFaxEventLogging
     );
     [propget]
     HRESULT __stdcall ActivityLogging (
       [out retval] dispinterface IFaxActivityLogging **pFaxActivityLogging
     );
   };
   [
     uuid(0880D965-20E8-42E4-8E17-944F192CAAD4),
     helpstring("IFaxEventLogging interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxEventLogging : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall InitEventsLevel (
       [out retval] enum FAX_LOG_LEVEL_ENUM *pInitEventLevel
     );
     [id(1), propput]
     HRESULT __stdcall InitEventsLevel (
       [in] enum FAX_LOG_LEVEL_ENUM argNo1
     );
     [propget]
     HRESULT __stdcall InboundEventsLevel (
       [out retval] enum FAX_LOG_LEVEL_ENUM *pInboundEventLevel
     );
     [id(2), propput]
     HRESULT __stdcall InboundEventsLevel (
       [in] enum FAX_LOG_LEVEL_ENUM argNo1
     );
     [propget]
     HRESULT __stdcall OutboundEventsLevel (
       [out retval] enum FAX_LOG_LEVEL_ENUM *pOutboundEventLevel
     );
     [id(3), propput]
     HRESULT __stdcall OutboundEventsLevel (
       [in] enum FAX_LOG_LEVEL_ENUM argNo1
     );
     [propget]
     HRESULT __stdcall GeneralEventsLevel (
       [out retval] enum FAX_LOG_LEVEL_ENUM *pGeneralEventLevel
     );
     [id(4), propput]
     HRESULT __stdcall GeneralEventsLevel (
       [in] enum FAX_LOG_LEVEL_ENUM argNo1
     );
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall Save (void);
   };
   [
     uuid(1E29078B-5A69-497B-9592-49B7E7FADDB5),
     helpstring("IFaxActivityLogging interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxActivityLogging : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall LogIncoming (
       [out retval] WINBOOL *pbLogIncoming
     );
     [id(1), propput]
     HRESULT __stdcall LogIncoming (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall LogOutgoing (
       [out retval] WINBOOL *pbLogOutgoing
     );
     [id(2), propput]
     HRESULT __stdcall LogOutgoing (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall DatabasePath (
       [out retval] BSTR *pbstrDatabasePath
     );
     [id(3), propput]
     HRESULT __stdcall DatabasePath (
       [in] BSTR argNo1
     );
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall Save (void);
   };
   [
     uuid(4B106F97-3DF5-40F2-BC3C-44CB8115EBDF),
     helpstring("IFaxActivity interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxActivity : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall IncomingMessages (
       [out retval] long *plIncomingMessages
     );
     [propget]
     HRESULT __stdcall RoutingMessages (
       [out retval] long *plRoutingMessages
     );
     [propget]
     HRESULT __stdcall OutgoingMessages (
       [out retval] long *plOutgoingMessages
     );
     [propget]
     HRESULT __stdcall QueuedMessages (
       [out retval] long *plQueuedMessages
     );
     HRESULT __stdcall Refresh (void);
   };
   [
     uuid(25DC05A4-9909-41BD-A95B-7E5D1DEC1D43),
     helpstring("IFaxOutboundRouting interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxOutboundRouting : IDispatch
   {
     [id(1)]
     HRESULT __stdcall GetGroups (
       [out retval] dispinterface IFaxOutboundRoutingGroups **pFaxOutboundRoutingGroups
     );
     HRESULT __stdcall GetRules (
       [out retval] dispinterface IFaxOutboundRoutingRules **pFaxOutboundRoutingRules
     );
   };
   [
     uuid(235CBEF7-C2DE-4BFD-B8DA-75097C82C87F),
     helpstring("IFaxOutboundRoutingGroups interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxOutboundRoutingGroups : IDispatch
   {
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppUnk
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT vIndex,
       [out retval] dispinterface IFaxOutboundRoutingGroup **pFaxOutboundRoutingGroup
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
     HRESULT __stdcall Add (
       [in] BSTR bstrName,
       [out retval] dispinterface IFaxOutboundRoutingGroup **pFaxOutboundRoutingGroup
     );
     HRESULT __stdcall Remove (
       [in] VARIANT vIndex
     );
   };
   [
     uuid(CA6289A1-7E25-4F87-9A0B-93365734962C),
     helpstring("IFaxOutboundRoutingGroup interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxOutboundRoutingGroup : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstrName
     );
     [propget]
     HRESULT __stdcall Status (
       [out retval] enum FAX_GROUP_STATUS_ENUM *pStatus
     );
     [propget]
     HRESULT __stdcall DeviceIds (
       [out retval] dispinterface IFaxDeviceIds **pFaxDeviceIds
     );
   };
   [
     uuid(2F0F813F-4CE9-443E-8CA1-738CFAEEE149),
     helpstring("IFaxDeviceIds interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxDeviceIds : IDispatch
   {
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppUnk
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long lIndex,
       [out retval] long *plDeviceId
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
     HRESULT __stdcall Add (
       [in] long lDeviceId
     );
     HRESULT __stdcall Remove (
       [in] long lIndex
     );
     HRESULT __stdcall SetOrder (
       [in] long lDeviceId,
       [in] long lNewOrder
     );
   };
   [
     uuid(DCEFA1E7-AE7D-4ED6-8521-369EDCCA5120),
     helpstring("IFaxOutboundRoutingRules interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxOutboundRoutingRules : IDispatch
   {
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppUnk
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long lIndex,
       [out retval] dispinterface IFaxOutboundRoutingRule **pFaxOutboundRoutingRule
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
     HRESULT __stdcall ItemByCountryAndArea (
       [in] long lCountryCode,
       [in] long lAreaCode,
       [out retval] dispinterface IFaxOutboundRoutingRule **pFaxOutboundRoutingRule
     );
     HRESULT __stdcall RemoveByCountryAndArea (
       [in] long lCountryCode,
       [in] long lAreaCode
     );
     HRESULT __stdcall Remove (
       [in] long lIndex
     );
     HRESULT __stdcall Add (
       [in] long lCountryCode,
       [in] long lAreaCode,
       [in] WINBOOL bUseDevice,
       [in] BSTR bstrGroupName,
       [in] long lDeviceId,
       [out retval] dispinterface IFaxOutboundRoutingRule **pFaxOutboundRoutingRule
     );
   };
   [
     uuid(E1F795D5-07C2-469F-B027-ACACC23219DA),
     helpstring("IFaxOutboundRoutingRule interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxOutboundRoutingRule : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall CountryCode (
       [out retval] long *plCountryCode
     );
     [propget]
     HRESULT __stdcall AreaCode (
       [out retval] long *plAreaCode
     );
     [propget]
     HRESULT __stdcall Status (
       [out retval] enum FAX_RULE_STATUS_ENUM *pStatus
     );
     [propget]
     HRESULT __stdcall UseDevice (
       [out retval] WINBOOL *pbUseDevice
     );
     [id(4), propput]
     HRESULT __stdcall UseDevice (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall DeviceId (
       [out retval] long *plDeviceId
     );
     [id(5), propput]
     HRESULT __stdcall DeviceId (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall GroupName (
       [out retval] BSTR *pbstrGroupName
     );
     [id(6), propput]
     HRESULT __stdcall GroupName (
       [in] BSTR argNo1
     );
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall Save (void);
   };
   [
     uuid(378EFAEB-5FCB-4AFB-B2EE-E16E80614487),
     helpstring("IFaxReceiptOptions interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxReceiptOptions : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall AuthenticationType (
       [out retval] enum FAX_SMTP_AUTHENTICATION_TYPE_ENUM *pType
     );
     [id(1), propput]
     HRESULT __stdcall AuthenticationType (
       [in] enum FAX_SMTP_AUTHENTICATION_TYPE_ENUM argNo1
     );
     [propget]
     HRESULT __stdcall SMTPServer (
       [out retval] BSTR *pbstrSMTPServer
     );
     [id(2), propput]
     HRESULT __stdcall SMTPServer (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall SMTPPort (
       [out retval] long *plSMTPPort
     );
     [id(3), propput]
     HRESULT __stdcall SMTPPort (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall SMTPSender (
       [out retval] BSTR *pbstrSMTPSender
     );
     [id(4), propput]
     HRESULT __stdcall SMTPSender (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall SMTPUser (
       [out retval] BSTR *pbstrSMTPUser
     );
     [id(5), propput]
     HRESULT __stdcall SMTPUser (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall AllowedReceipts (
       [out retval] enum FAX_RECEIPT_TYPE_ENUM *pAllowedReceipts
     );
     [id(6), propput]
     HRESULT __stdcall AllowedReceipts (
       [in] enum FAX_RECEIPT_TYPE_ENUM argNo1
     );
     [propget]
     HRESULT __stdcall SMTPPassword (
       [out retval] BSTR *pbstrSMTPPassword
     );
     [id(7), propput]
     HRESULT __stdcall SMTPPassword (
       [in] BSTR argNo1
     );
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall Save (void);
     [propget]
     HRESULT __stdcall UseForInboundRouting (
       [out retval] WINBOOL *pbUseForInboundRouting
     );
     [id(10), propput]
     HRESULT __stdcall UseForInboundRouting (
       [in] WINBOOL argNo1
     );
   };
   [
     uuid(77B508C1-09C0-47A2-91EB-FCE7FDF2690E),
     helpstring("IFaxSecurity interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxSecurity : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Descriptor (
       [out retval] VARIANT *pvDescriptor
     );
     [id(1), propput]
     HRESULT __stdcall Descriptor (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall GrantedRights (
       [out retval] enum FAX_ACCESS_RIGHTS_ENUM *pGrantedRights
     );
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall Save (void);
     [propget]
     HRESULT __stdcall InformationType (
       [out retval] long *plInformationType
     );
     [id(5), propput]
     HRESULT __stdcall InformationType (
       [in] long argNo1
     );
   };
   [
     uuid(8B86F485-FD7F-4824-886B-40C5CAA617CC),
     helpstring("IFaxJobStatus interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxJobStatus : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Status (
       [out retval] enum FAX_JOB_STATUS_ENUM *pStatus
     );
     [propget]
     HRESULT __stdcall Pages (
       [out retval] long *plPages
     );
     [propget]
     HRESULT __stdcall Size (
       [out retval] long *plSize
     );
     [propget]
     HRESULT __stdcall CurrentPage (
       [out retval] long *plCurrentPage
     );
     [propget]
     HRESULT __stdcall DeviceId (
       [out retval] long *plDeviceId
     );
     [propget]
     HRESULT __stdcall CSID (
       [out retval] BSTR *pbstrCSID
     );
     [propget]
     HRESULT __stdcall TSID (
       [out retval] BSTR *pbstrTSID
     );
     [propget]
     HRESULT __stdcall ExtendedStatusCode (
       [out retval] enum FAX_JOB_EXTENDED_STATUS_ENUM *pExtendedStatusCode
     );
     [propget]
     HRESULT __stdcall ExtendedStatus (
       [out retval] BSTR *pbstrExtendedStatus
     );
     [propget]
     HRESULT __stdcall AvailableOperations (
       [out retval] enum FAX_JOB_OPERATIONS_ENUM *pAvailableOperations
     );
     [propget]
     HRESULT __stdcall Retries (
       [out retval] long *plRetries
     );
     [propget]
     HRESULT __stdcall JobType (
       [out retval] enum FAX_JOB_TYPE_ENUM *pJobType
     );
     [propget]
     HRESULT __stdcall ScheduledTime (
       [out retval] DATE *pdateScheduledTime
     );
     [propget]
     HRESULT __stdcall TransmissionStart (
       [out retval] DATE *pdateTransmissionStart
     );
     [propget]
     HRESULT __stdcall TransmissionEnd (
       [out retval] DATE *pdateTransmissionEnd
     );
     [propget]
     HRESULT __stdcall CallerId (
       [out retval] BSTR *pbstrCallerId
     );
     [propget]
     HRESULT __stdcall RoutingInformation (
       [out retval] BSTR *pbstrRoutingInformation
     );
   };
   [
     uuid(571CED0F-5609-4F40-9176-547E3A72CA7C),
     helpstring("IFaxServer2 interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxServer2 : IFaxServer
   {
     [id(27), propget]
     HRESULT __stdcall Configuration (
       [out retval] dispinterface IFaxConfiguration **ppFaxConfiguration
     );
     [propget]
     HRESULT __stdcall CurrentAccount (
       [out retval] dispinterface IFaxAccount **ppCurrentAccount
     );
     [propget]
     HRESULT __stdcall FaxAccountSet (
       [out retval] dispinterface IFaxAccountSet **ppFaxAccountSet
     );
     [propget]
     HRESULT __stdcall Security2 (
       [out retval] dispinterface IFaxSecurity2 **ppFaxSecurity2
     );
   };
   [
     uuid(10F4D0F7-0994-4543-AB6E-506949128C40),
     helpstring("IFaxConfiguration interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxConfiguration : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall UseArchive (
       [out retval] WINBOOL *pbUseArchive
     );
     [id(1), propput]
     HRESULT __stdcall UseArchive (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall ArchiveLocation (
       [out retval] BSTR *pbstrArchiveLocation
     );
     [id(2), propput]
     HRESULT __stdcall ArchiveLocation (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall SizeQuotaWarning (
       [out retval] WINBOOL *pbSizeQuotaWarning
     );
     [id(3), propput]
     HRESULT __stdcall SizeQuotaWarning (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall HighQuotaWaterMark (
       [out retval] long *plHighQuotaWaterMark
     );
     [id(4), propput]
     HRESULT __stdcall HighQuotaWaterMark (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall LowQuotaWaterMark (
       [out retval] long *plLowQuotaWaterMark
     );
     [id(5), propput]
     HRESULT __stdcall LowQuotaWaterMark (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall ArchiveAgeLimit (
       [out retval] long *plArchiveAgeLimit
     );
     [id(6), propput]
     HRESULT __stdcall ArchiveAgeLimit (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall ArchiveSizeLow (
       [out retval] long *plSizeLow
     );
     [propget]
     HRESULT __stdcall ArchiveSizeHigh (
       [out retval] long *plSizeHigh
     );
     [propget]
     HRESULT __stdcall OutgoingQueueBlocked (
       [out retval] WINBOOL *pbOutgoingBlocked
     );
     [id(9), propput]
     HRESULT __stdcall OutgoingQueueBlocked (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall OutgoingQueuePaused (
       [out retval] WINBOOL *pbOutgoingPaused
     );
     [id(10), propput]
     HRESULT __stdcall OutgoingQueuePaused (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AllowPersonalCoverPages (
       [out retval] WINBOOL *pbAllowPersonalCoverPages
     );
     [id(11), propput]
     HRESULT __stdcall AllowPersonalCoverPages (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall UseDeviceTSID (
       [out retval] WINBOOL *pbUseDeviceTSID
     );
     [id(12), propput]
     HRESULT __stdcall UseDeviceTSID (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall Retries (
       [out retval] long *plRetries
     );
     [id(13), propput]
     HRESULT __stdcall Retries (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall RetryDelay (
       [out retval] long *plRetryDelay
     );
     [id(14), propput]
     HRESULT __stdcall RetryDelay (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall DiscountRateStart (
       [out retval] DATE *pdateDiscountRateStart
     );
     [id(15), propput]
     HRESULT __stdcall DiscountRateStart (
       [in] DATE argNo1
     );
     [propget]
     HRESULT __stdcall DiscountRateEnd (
       [out retval] DATE *pdateDiscountRateEnd
     );
     [id(16), propput]
     HRESULT __stdcall DiscountRateEnd (
       [in] DATE argNo1
     );
     [propget]
     HRESULT __stdcall OutgoingQueueAgeLimit (
       [out retval] long *plOutgoingQueueAgeLimit
     );
     [id(17), propput]
     HRESULT __stdcall OutgoingQueueAgeLimit (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall Branding (
       [out retval] WINBOOL *pbBranding
     );
     [id(18), propput]
     HRESULT __stdcall Branding (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall IncomingQueueBlocked (
       [out retval] WINBOOL *pbIncomingBlocked
     );
     [id(19), propput]
     HRESULT __stdcall IncomingQueueBlocked (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AutoCreateAccountOnConnect (
       [out retval] WINBOOL *pbAutoCreateAccountOnConnect
     );
     [id(20), propput]
     HRESULT __stdcall AutoCreateAccountOnConnect (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall IncomingFaxesArePublic (
       [out retval] WINBOOL *pbIncomingFaxesArePublic
     );
     [id(21), propput]
     HRESULT __stdcall IncomingFaxesArePublic (
       [in] WINBOOL argNo1
     );
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall Save (void);
   };
   [
     uuid(68535B33-5DC4-4086-BE26-B76F9B711006),
     helpstring("IFaxAccount interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxAccount : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall AccountName (
       [out retval] BSTR *pbstrAccountName
     );
     [propget]
     HRESULT __stdcall Folders (
       [out retval] dispinterface IFaxAccountFolders **ppFolders
     );
     HRESULT __stdcall ListenToAccountEvents (
       [in] enum FAX_ACCOUNT_EVENTS_TYPE_ENUM EventTypes
     );
     [propget]
     HRESULT __stdcall RegisteredEvents (
       [out retval] enum FAX_ACCOUNT_EVENTS_TYPE_ENUM *pRegisteredEvents
     );
   };
   [
     uuid(6463F89D-23D8-46A9-8F86-C47B77CA7926),
     helpstring("IFaxAccountFolders interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxAccountFolders : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall OutgoingQueue (
       [out retval] dispinterface IFaxAccountOutgoingQueue **pFaxOutgoingQueue
     );
     [propget]
     HRESULT __stdcall IncomingQueue (
       [out retval] dispinterface IFaxAccountIncomingQueue **pFaxIncomingQueue
     );
     [propget]
     HRESULT __stdcall IncomingArchive (
       [out retval] dispinterface IFaxAccountIncomingArchive **pFaxIncomingArchive
     );
     [propget]
     HRESULT __stdcall OutgoingArchive (
       [out retval] dispinterface IFaxAccountOutgoingArchive **pFaxOutgoingArchive
     );
   };
   [
     uuid(0F1424E9-F22D-4553-B7A5-0D24BD0D7E46),
     helpstring("IFaxAccountOutgoingQueue interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxAccountOutgoingQueue : IDispatch
   {
     [id(1)]
     HRESULT __stdcall GetJobs (
       [out retval] dispinterface IFaxOutgoingJobs **pFaxOutgoingJobs
     );
     HRESULT __stdcall GetJob (
       [in] BSTR bstrJobId,
       [out retval] dispinterface IFaxOutgoingJob **pFaxOutgoingJob
     );
   };
   [
     uuid(DD142D92-0186-4A95-A090-CBC3EADBA6B4),
     helpstring("IFaxAccountIncomingQueue interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxAccountIncomingQueue : IDispatch
   {
     [id(1)]
     HRESULT __stdcall GetJobs (
       [out retval] dispinterface IFaxIncomingJobs **pFaxIncomingJobs
     );
     HRESULT __stdcall GetJob (
       [in] BSTR bstrJobId,
       [out retval] dispinterface IFaxIncomingJob **pFaxIncomingJob
     );
   };
   [
     uuid(A8A5B6EF-E0D6-4AEE-955C-91625BEC9DB4),
     helpstring("IFaxAccountIncomingArchive interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxAccountIncomingArchive : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall SizeLow (
       [out retval] long *plSizeLow
     );
     [propget]
     HRESULT __stdcall SizeHigh (
       [out retval] long *plSizeHigh
     );
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall GetMessages (
       [in opt] long lPrefetchSize = (int) 201326692,
       [out retval] dispinterface IFaxIncomingMessageIterator **pFaxIncomingMessageIterator
     );
     HRESULT __stdcall GetMessage (
       [in] BSTR bstrMessageId,
       [out retval] dispinterface IFaxIncomingMessage **pFaxIncomingMessage
     );
   };
   [
     uuid(5463076D-EC14-491F-926E-B3CEDA5E5662),
     helpstring("IFaxAccountOutgoingArchive interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxAccountOutgoingArchive : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall SizeLow (
       [out retval] long *plSizeLow
     );
     [propget]
     HRESULT __stdcall SizeHigh (
       [out retval] long *plSizeHigh
     );
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall GetMessages (
       [in opt] long lPrefetchSize = (int) 201326692,
       [out retval] dispinterface IFaxOutgoingMessageIterator **pFaxOutgoingMessageIterator
     );
     HRESULT __stdcall GetMessage (
       [in] BSTR bstrMessageId,
       [out retval] dispinterface IFaxOutgoingMessage **pFaxOutgoingMessage
     );
   };
   [
     uuid(7428FBAE-841E-47B8-86F4-2288946DCA1B),
     helpstring("IFaxAccountSet interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxAccountSet : IDispatch
   {
     [id(1)]
     HRESULT __stdcall GetAccounts (
       [out retval] dispinterface IFaxAccounts **ppFaxAccounts
     );
     HRESULT __stdcall GetAccount (
       [in] BSTR bstrAccountName,
       [out retval] dispinterface IFaxAccount **pFaxAccount
     );
     HRESULT __stdcall AddAccount (
       [in] BSTR bstrAccountName,
       [out retval] dispinterface IFaxAccount **pFaxAccount
     );
     HRESULT __stdcall RemoveAccount (
       [in] BSTR bstrAccountName
     );
   };
   [
     uuid(93EA8162-8BE7-42D1-AE7B-EC74E2D989DA),
     helpstring("IFaxAccounts interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxAccounts : IDispatch
   {
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppUnk
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT vIndex,
       [out retval] dispinterface IFaxAccount **pFaxAccount
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
   };
   [
     uuid(17D851F4-D09B-48FC-99C9-8F24C4DB9AB1),
     helpstring("IFaxSecurity2 interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxSecurity2 : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Descriptor (
       [out retval] VARIANT *pvDescriptor
     );
     [id(1), propput]
     HRESULT __stdcall Descriptor (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall GrantedRights (
       [out retval] enum FAX_ACCESS_RIGHTS_ENUM_2 *pGrantedRights
     );
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall Save (void);
     [propget]
     HRESULT __stdcall InformationType (
       [out retval] long *plInformationType
     );
     [id(5), propput]
     HRESULT __stdcall InformationType (
       [in] long argNo1
     );
   };
   [
     uuid(616CA8D6-A77A-4062-ABFD-0E471241C7AA),
     helpstring("IFaxServerNotify2 Interface"),
     dispatchable
   ]
   dispinterface IFaxServerNotify2 : _IFaxServerNotify2
   {
   };
   [
     uuid(0B5E5BD1-B8A9-47A0-A323-EF4A293BA06A),
     helpstring("IFaxAccountNotify Interface"),
     dispatchable
   ]
   dispinterface IFaxAccountNotify : _IFaxAccountNotify
   {
   };
   [
     uuid(E1347661-F9EF-4D6D-B4A5-C0A068B65CFF),
     helpstring("IFaxDocument2 interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxDocument2 : IFaxDocument
   {
     [id(20), propget]
     HRESULT __stdcall SubmissionId (
       [out retval] BSTR *pbstrSubmissionId
     );
     [propget]
     HRESULT __stdcall Bodies (
       [out retval] VARIANT *pvBodies
     );
     [id(21), propput]
     HRESULT __stdcall Bodies (
       [in] VARIANT argNo1
     );
     HRESULT __stdcall Submit2 (
       [in] BSTR bstrFaxServerName,
       [out] VARIANT *pvFaxOutgoingJobIDs,
       [out retval] long *plErrorBodyFile
     );
     HRESULT __stdcall ConnectedSubmit2 (
       [in] dispinterface IFaxServer *pFaxServer,
       [out] VARIANT *pvFaxOutgoingJobIDs,
       [out retval] long *plErrorBodyFile
     );
   };
   [
     uuid(B207A246-09E3-4A4E-A7DC-FEA31D29458F),
     helpstring("IFaxDocument interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxDocument : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Body (
       [out retval] BSTR *pbstrBody
     );
     [id(1), propput]
     HRESULT __stdcall Body (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Sender (
       [out retval] dispinterface IFaxSender **ppFaxSender
     );
     [propget]
     HRESULT __stdcall Recipients (
       [out retval] dispinterface IFaxRecipients **ppFaxRecipients
     );
     [propget]
     HRESULT __stdcall CoverPage (
       [out retval] BSTR *pbstrCoverPage
     );
     [id(4), propput]
     HRESULT __stdcall CoverPage (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Subject (
       [out retval] BSTR *pbstrSubject
     );
     [id(5), propput]
     HRESULT __stdcall Subject (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Note (
       [out retval] BSTR *pbstrNote
     );
     [id(6), propput]
     HRESULT __stdcall Note (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall ScheduleTime (
       [out retval] DATE *pdateScheduleTime
     );
     [id(7), propput]
     HRESULT __stdcall ScheduleTime (
       [in] DATE argNo1
     );
     [propget]
     HRESULT __stdcall ReceiptAddress (
       [out retval] BSTR *pbstrReceiptAddress
     );
     [id(8), propput]
     HRESULT __stdcall ReceiptAddress (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall DocumentName (
       [out retval] BSTR *pbstrDocumentName
     );
     [id(9), propput]
     HRESULT __stdcall DocumentName (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall CallHandle (
       [out retval] long *plCallHandle
     );
     [id(10), propput]
     HRESULT __stdcall CallHandle (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall CoverPageType (
       [out retval] enum FAX_COVERPAGE_TYPE_ENUM *pCoverPageType
     );
     [id(11), propput]
     HRESULT __stdcall CoverPageType (
       [in] enum FAX_COVERPAGE_TYPE_ENUM argNo1
     );
     [propget]
     HRESULT __stdcall ScheduleType (
       [out retval] enum FAX_SCHEDULE_TYPE_ENUM *pScheduleType
     );
     [id(12), propput]
     HRESULT __stdcall ScheduleType (
       [in] enum FAX_SCHEDULE_TYPE_ENUM argNo1
     );
     [propget]
     HRESULT __stdcall ReceiptType (
       [out retval] enum FAX_RECEIPT_TYPE_ENUM *pReceiptType
     );
     [id(13), propput]
     HRESULT __stdcall ReceiptType (
       [in] enum FAX_RECEIPT_TYPE_ENUM argNo1
     );
     [propget]
     HRESULT __stdcall GroupBroadcastReceipts (
       [out retval] WINBOOL *pbUseGrouping
     );
     [id(14), propput]
     HRESULT __stdcall GroupBroadcastReceipts (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall Priority (
       [out retval] enum FAX_PRIORITY_TYPE_ENUM *pPriority
     );
     [id(15), propput]
     HRESULT __stdcall Priority (
       [in] enum FAX_PRIORITY_TYPE_ENUM argNo1
     );
     [propget]
     HRESULT __stdcall TapiConnection (
       [out retval] IDispatch **ppTapiConnection
     );
     [id(16), propputref]
     HRESULT __stdcall TapiConnection (
       [in] IDispatch * argNo1
     );
     HRESULT __stdcall Submit (
       [in] BSTR bstrFaxServerName,
       [out retval] VARIANT *pvFaxOutgoingJobIDs
     );
     HRESULT __stdcall ConnectedSubmit (
       [in] dispinterface IFaxServer *pFaxServer,
       [out retval] VARIANT *pvFaxOutgoingJobIDs
     );
     [propget]
     HRESULT __stdcall AttachFaxToReceipt (
       [out retval] WINBOOL *pbAttachFax
     );
     [id(19), propput]
     HRESULT __stdcall AttachFaxToReceipt (
       [in] WINBOOL argNo1
     );
   };
   [
     uuid(B9C9DE5A-894E-4492-9FA3-08C627C11D5D),
     helpstring("IFaxRecipients interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxRecipients : IDispatch
   {
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppUnk
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long lIndex,
       [out retval] dispinterface IFaxRecipient **ppFaxRecipient
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
     HRESULT __stdcall Add (
       [in] BSTR bstrFaxNumber,
       [in opt] BSTR bstrRecipientName = L"",
       [out retval] dispinterface IFaxRecipient **ppFaxRecipient
     );
     HRESULT __stdcall Remove (
       [in] long lIndex
     );
   };
   [
     uuid(F9208503-E2BC-48F3-9EC0-E6236F9B509A),
     helpstring("IFaxIncomingMessage2 interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxIncomingMessage2 : IFaxIncomingMessage
   {
     [id(14), propget]
     HRESULT __stdcall Subject (
       [out retval] BSTR *pbstrSubject
     );
     [id(14), propput]
     HRESULT __stdcall Subject (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall SenderName (
       [out retval] BSTR *pbstrSenderName
     );
     [id(15), propput]
     HRESULT __stdcall SenderName (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall SenderFaxNumber (
       [out retval] BSTR *pbstrSenderFaxNumber
     );
     [id(16), propput]
     HRESULT __stdcall SenderFaxNumber (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall HasCoverPage (
       [out retval] WINBOOL *pbHasCoverPage
     );
     [id(17), propput]
     HRESULT __stdcall HasCoverPage (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall Recipients (
       [out retval] BSTR *pbstrRecipients
     );
     [id(18), propput]
     HRESULT __stdcall Recipients (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall WasReAssigned (
       [out retval] WINBOOL *pbWasReAssigned
     );
     [propget]
     HRESULT __stdcall Read (
       [out retval] WINBOOL *pbRead
     );
     [id(20), propput]
     HRESULT __stdcall Read (
       [in] WINBOOL argNo1
     );
     HRESULT __stdcall ReAssign (void);
     HRESULT __stdcall Save (void);
     HRESULT __stdcall Refresh (void);
   };
   [
     uuid(418A8D96-59A0-4789-B176-EDF3DC8FA8F7),
     helpstring("IFaxOutgoingJob2 interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxOutgoingJob2 : IFaxOutgoingJob
   {
     [id(32), propget]
     HRESULT __stdcall HasCoverPage (
       [out retval] WINBOOL *pbHasCoverPage
     );
     [propget]
     HRESULT __stdcall ReceiptAddress (
       [out retval] BSTR *pbstrReceiptAddress
     );
     [propget]
     HRESULT __stdcall ScheduleType (
       [out retval] enum FAX_SCHEDULE_TYPE_ENUM *pScheduleType
     );
   };
   [
     uuid(B37DF687-BC88-4B46-B3BE-B458B3EA9E7F),
     helpstring("IFaxOutgoingMessage2 interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IFaxOutgoingMessage2 : IFaxOutgoingMessage
   {
     [id(20), propget]
     HRESULT __stdcall HasCoverPage (
       [out retval] WINBOOL *pbHasCoverPage
     );
     [propget]
     HRESULT __stdcall ReceiptType (
       [out retval] enum FAX_RECEIPT_TYPE_ENUM *pReceiptType
     );
     [propget]
     HRESULT __stdcall ReceiptAddress (
       [out retval] BSTR *pbstrReceiptAddress
     );
     [propget]
     HRESULT __stdcall Read (
       [out retval] WINBOOL *pbRead
     );
     [id(23), propput]
     HRESULT __stdcall Read (
       [in] WINBOOL argNo1
     );
     HRESULT __stdcall Save (void);
     HRESULT __stdcall Refresh (void);
   };

};

/* Interface declarations.  */
[
  uuid(EC9C69B9-5FE7-4805-9467-82FCD96AF903),
  dispatchable
]
interface _IFaxServerNotify2 : IDispatch
{
  [id(1)]
  HRESULT __stdcall OnIncomingJobAdded (
    [in] dispinterface IFaxServer2 *pFaxServer,
    [in] BSTR bstrJobId
  );
  HRESULT __stdcall OnIncomingJobRemoved (
    [in] dispinterface IFaxServer2 *pFaxServer,
    [in] BSTR bstrJobId
  );
  HRESULT __stdcall OnIncomingJobChanged (
    [in] dispinterface IFaxServer2 *pFaxServer,
    [in] BSTR bstrJobId,
    [in] dispinterface IFaxJobStatus *pJobStatus
  );
  HRESULT __stdcall OnOutgoingJobAdded (
    [in] dispinterface IFaxServer2 *pFaxServer,
    [in] BSTR bstrJobId
  );
  HRESULT __stdcall OnOutgoingJobRemoved (
    [in] dispinterface IFaxServer2 *pFaxServer,
    [in] BSTR bstrJobId
  );
  HRESULT __stdcall OnOutgoingJobChanged (
    [in] dispinterface IFaxServer2 *pFaxServer,
    [in] BSTR bstrJobId,
    [in] dispinterface IFaxJobStatus *pJobStatus
  );
  HRESULT __stdcall OnIncomingMessageAdded (
    [in] dispinterface IFaxServer2 *pFaxServer,
    [in] BSTR bstrMessageId
  );
  HRESULT __stdcall OnIncomingMessageRemoved (
    [in] dispinterface IFaxServer2 *pFaxServer,
    [in] BSTR bstrMessageId
  );
  HRESULT __stdcall OnOutgoingMessageAdded (
    [in] dispinterface IFaxServer2 *pFaxServer,
    [in] BSTR bstrMessageId
  );
  HRESULT __stdcall OnOutgoingMessageRemoved (
    [in] dispinterface IFaxServer2 *pFaxServer,
    [in] BSTR bstrMessageId
  );
  HRESULT __stdcall OnReceiptOptionsChange (
    [in] dispinterface IFaxServer2 *pFaxServer
  );
  HRESULT __stdcall OnActivityLoggingConfigChange (
    [in] dispinterface IFaxServer2 *pFaxServer
  );
  HRESULT __stdcall OnSecurityConfigChange (
    [in] dispinterface IFaxServer2 *pFaxServer
  );
  HRESULT __stdcall OnEventLoggingConfigChange (
    [in] dispinterface IFaxServer2 *pFaxServer
  );
  HRESULT __stdcall OnOutgoingQueueConfigChange (
    [in] dispinterface IFaxServer2 *pFaxServer
  );
  HRESULT __stdcall OnOutgoingArchiveConfigChange (
    [in] dispinterface IFaxServer2 *pFaxServer
  );
  HRESULT __stdcall OnIncomingArchiveConfigChange (
    [in] dispinterface IFaxServer2 *pFaxServer
  );
  HRESULT __stdcall OnDevicesConfigChange (
    [in] dispinterface IFaxServer2 *pFaxServer
  );
  HRESULT __stdcall OnOutboundRoutingGroupsConfigChange (
    [in] dispinterface IFaxServer2 *pFaxServer
  );
  HRESULT __stdcall OnOutboundRoutingRulesConfigChange (
    [in] dispinterface IFaxServer2 *pFaxServer
  );
  HRESULT __stdcall OnServerActivityChange (
    [in] dispinterface IFaxServer2 *pFaxServer,
    [in] long lIncomingMessages,
    [in] long lRoutingMessages,
    [in] long lOutgoingMessages,
    [in] long lQueuedMessages
  );
  HRESULT __stdcall OnQueuesStatusChange (
    [in] dispinterface IFaxServer2 *pFaxServer,
    [in] WINBOOL bOutgoingQueueBlocked,
    [in] WINBOOL bOutgoingQueuePaused,
    [in] WINBOOL bIncomingQueueBlocked
  );
  HRESULT __stdcall OnNewCall (
    [in] dispinterface IFaxServer2 *pFaxServer,
    [in] long lCallId,
    [in] long lDeviceId,
    [in] BSTR bstrCallerId
  );
  HRESULT __stdcall OnServerShutDown (
    [in] dispinterface IFaxServer2 *pFaxServer
  );
  HRESULT __stdcall OnDeviceStatusChange (
    [in] dispinterface IFaxServer2 *pFaxServer,
    [in] long lDeviceId,
    [in] WINBOOL bPoweredOff,
    [in] WINBOOL bSending,
    [in] WINBOOL bReceiving,
    [in] WINBOOL bRinging
  );
  HRESULT __stdcall OnGeneralServerConfigChanged (
    [in] dispinterface IFaxServer2 *pFaxServer
  );
};
[
  uuid(B9B3BC81-AC1B-46F3-B39D-0ADC30E1B788),
  dispatchable
]
interface _IFaxAccountNotify : IDispatch
{
  [id(1)]
  HRESULT __stdcall OnIncomingJobAdded (
    [in] dispinterface IFaxAccount *pFaxAccount,
    [in] BSTR bstrJobId
  );
  HRESULT __stdcall OnIncomingJobRemoved (
    [in] dispinterface IFaxAccount *pFaxAccount,
    [in] BSTR bstrJobId
  );
  HRESULT __stdcall OnIncomingJobChanged (
    [in] dispinterface IFaxAccount *pFaxAccount,
    [in] BSTR bstrJobId,
    [in] dispinterface IFaxJobStatus *pJobStatus
  );
  HRESULT __stdcall OnOutgoingJobAdded (
    [in] dispinterface IFaxAccount *pFaxAccount,
    [in] BSTR bstrJobId
  );
  HRESULT __stdcall OnOutgoingJobRemoved (
    [in] dispinterface IFaxAccount *pFaxAccount,
    [in] BSTR bstrJobId
  );
  HRESULT __stdcall OnOutgoingJobChanged (
    [in] dispinterface IFaxAccount *pFaxAccount,
    [in] BSTR bstrJobId,
    [in] dispinterface IFaxJobStatus *pJobStatus
  );
  HRESULT __stdcall OnIncomingMessageAdded (
    [in] dispinterface IFaxAccount *pFaxAccount,
    [in] BSTR bstrMessageId,
    [in] WINBOOL fAddedToReceiveFolder
  );
  HRESULT __stdcall OnIncomingMessageRemoved (
    [in] dispinterface IFaxAccount *pFaxAccount,
    [in] BSTR bstrMessageId,
    [in] WINBOOL fRemovedFromReceiveFolder
  );
  HRESULT __stdcall OnOutgoingMessageAdded (
    [in] dispinterface IFaxAccount *pFaxAccount,
    [in] BSTR bstrMessageId
  );
  HRESULT __stdcall OnOutgoingMessageRemoved (
    [in] dispinterface IFaxAccount *pFaxAccount,
    [in] BSTR bstrMessageId
  );
  HRESULT __stdcall OnServerShutDown (
    [in] dispinterface IFaxServer2 *pFaxServer
  );
};

/* Module declarations.  */
module FaxConstants
{
  [id(1073741824)]
  CONST long lDEFAULT_PREFETCH_SIZE = (int) 201326692;
  CONST BSTR bstrGROUPNAME_ALLDEVICES = L"<All Devices>";
  CONST USHORT wcharREASSIGN_RECIPIENTS_DELIMITER = (USHORT) 59;
};

