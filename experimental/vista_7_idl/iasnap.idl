/* Automated generated idl file <networkpolicy>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface ICondition;
interface IRequest;
interface IRequestSource;
interface IConditionText;

/* Union record forward declarations.  */
dispinterface IRequestHandler;
dispinterface IIasComponent;
dispinterface IQualityControl;

/* Union record forward declarations.  */
coclass AttributeMatch;
coclass NTGroups;
coclass TimeOfDay;
coclass PolicyEnforcer;
coclass MachineNTGroups;
coclass UserNTGroups;
coclass SHV;
coclass EAPTypes;
coclass MachineInventory;
coclass AbsoluteTime;

/* Enumeration declarations.  */
enum _IAS_LOGICAL_TOKEN
{
  IAS_LOGICAL_TRUE = (int) 201326592,
  IAS_LOGICAL_FALSE = (int) 201326593,
  IAS_LOGICAL_NOT = (int) 201326594,
  IAS_LOGICAL_AND = (int) 201326595,
  IAS_LOGICAL_OR = (int) 201326596,
  IAS_LOGICAL_XOR = (int) 201326597,
  IAS_LOGICAL_LEFT_PAREN = (int) 201326598,
  IAS_LOGICAL_RIGHT_PAREN = (int) 201326599,
  IAS_LOGICAL_NUM_TOKENS = (int) 201326600
};
enum _IASPROTOCOL
{
  IAS_PROTOCOL_INVALID = (int) 201326592,
  IAS_PROTOCOL_NONE = (int) 201326593,
  IAS_PROTOCOL_RADIUS = (int) 201326594,
  IAS_PROTOCOL_TACACSPLUS = (int) 201326595,
  IAS_PROTOCOL_LDAP = (int) 201326596,
  IAS_PROTOCOL_RAS = (int) 201326597
};
enum _IASREQUESTSTATUS
{
  IAS_REQUEST_STATUS_ABORT = (int) 201326592,
  IAS_REQUEST_STATUS_CONTINUE = (int) 201326593,
  IAS_REQUEST_STATUS_HANDLED = (int) 201326594,
  IAS_REQUEST_STATUS_INVALID = (int) 201326595
};
enum _IASRESPONSE
{
  IAS_RESPONSE_INVALID = (int) 201326592,
  IAS_RESPONSE_ACCESS_ACCEPT = (int) 201326593,
  IAS_RESPONSE_ACCESS_REJECT = (int) 201326594,
  IAS_RESPONSE_ACCESS_CHALLENGE = (int) 201326595,
  IAS_RESPONSE_ACCOUNTING = (int) 201326596,
  IAS_RESPONSE_DISCARD_PACKET = (int) 201326597,
  IAS_RESPONSE_FORWARD_PACKET = (int) 201327591,
  IAS_RESPONSE_RAS = (int) 201327592,
  IAS_RESPONSE_MAX = (int) 201328640
};
enum _QUALITYSTATUS
{
  QUALITY_STATUS_INOPERABLE = (int) 201326593,
  QUALITY_STATUS_FLOODED = (int) 201326594,
  QUALITY_STATUS_READY = (int) 201326595,
  QUALITY_STATUS_UNKNOWN = (int) 201326596
};

/* Type definitions.  */
typedef enum _IASREQUESTSTATUS IASREQUESTSTATUS;

[
  uuid(6BC098A0-0CE6-11D1-BAAE-00C04FC2E20D),
  version(1.0),
  helpstring("IAS Network Access Policy 1.0")
]
library networkpolicy
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(6BC098A4-0CE6-11D1-BAAE-00C04FC2E20D),
     cancreate
   ]
   coclass AttributeMatch
   {
     interface ICondition;
     interface IConditionText;
   };
   [
     uuid(6BC098A5-0CE6-11D1-BAAE-00C04FC2E20D),
     cancreate
   ]
   coclass NTGroups
   {
     interface ICondition;
     interface IConditionText;
   };
   [
     uuid(6BC098A6-0CE6-11D1-BAAE-00C04FC2E20D),
     cancreate
   ]
   coclass TimeOfDay
   {
     interface ICondition;
     interface IConditionText;
   };
   [
     uuid(6BC098A7-0CE6-11D1-BAAE-00C04FC2E20D),
     cancreate
   ]
   coclass PolicyEnforcer
   {
     dispinterface IRequestHandler;
     dispinterface IIasComponent;
     dispinterface IQualityControl;
     interface IDispatch;
   };
   [
     uuid(6BC096E0-0CE6-11D1-BAAE-00C04FC2E20D),
     cancreate
   ]
   coclass MachineNTGroups
   {
     interface ICondition;
     interface IConditionText;
   };
   [
     uuid(6BC096E1-0CE6-11D1-BAAE-00C04FC2E20D),
     cancreate
   ]
   coclass UserNTGroups
   {
     interface ICondition;
     interface IConditionText;
   };
   [
     uuid(6BC096E2-0CE6-11D1-BAAE-00C04FC2E20D),
     cancreate
   ]
   coclass SHV
   {
     interface ICondition;
     interface IConditionText;
   };
   [
     uuid(6BC098AC-0CE6-11D1-BAAE-00C04FC2E20D),
     cancreate
   ]
   coclass EAPTypes
   {
     interface ICondition;
     interface IConditionText;
   };
   [
     uuid(6B750899-F157-47D7-9C08-257E7A35141D),
     cancreate
   ]
   coclass MachineInventory
   {
     interface ICondition;
     interface IConditionText;
   };
   [
     uuid(6BC098AD-0CE6-11D1-BAAE-00C04FC2E20D),
     cancreate
   ]
   coclass AbsoluteTime
   {
     interface ICondition;
     interface IConditionText;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(6BC096AA-0CE6-11D1-BAAE-00C04FC2E20D),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IRequestHandler : IDispatch
   {
     [id(1)]
     HRESULT __stdcall OnRequest (
       interface IRequest *pRequest
     );
   };
   [
     uuid(6BC096B4-0CE6-11D1-BAAE-00C04FC2E20D),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IIasComponent : IDispatch
   {
     [id(1)]
     HRESULT __stdcall Initialize (void);
     HRESULT __stdcall Shutdown (void);
     HRESULT __stdcall GetProperty (
       long Id,
       VARIANT *pValue
     );
     HRESULT __stdcall PutProperty (
       long Id,
       VARIANT *pValue
     );
     HRESULT __stdcall InitNew (void);
     HRESULT __stdcall Suspend (void);
     HRESULT __stdcall Resume (void);
     HRESULT __stdcall ReInitialize (void);
   };
   [
     uuid(6BC096AB-0CE6-11D1-BAAE-00C04FC2E20D),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IQualityControl : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall OnQualityNotify (
       enum _QUALITYSTATUS eQualityStatus,
       long lObjectID
     );
     HRESULT __stdcall SetQualityNotify (
       dispinterface IQualityControl *pQualityControl
     );
   };

};

/* Interface declarations.  */
[
  uuid(6BC098A1-0CE6-11D1-BAAE-00C04FC2E20D),
  oleautomation
]
interface ICondition : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall IsTrue (
    [in] interface IRequest *pRequest,
    [out retval] WINBOOL *pVal
  );
};
[
  uuid(6BC096A7-0CE6-11D1-BAAE-00C04FC2E20D)
]
interface IRequest : IUnknown
{
  [id(1), propget]
  HRESULT __stdcall Request (
    [out retval] long *pVal
  );
  [id(1), propput]
  HRESULT __stdcall Request (
    [in] long argNo1
  );
  [propget]
  HRESULT __stdcall Response (
    [out retval] long *pVal
  );
  [propget]
  HRESULT __stdcall Reason (
    [out retval] long *pVal
  );
  [propget]
  HRESULT __stdcall Protocol (
    [out retval] enum _IASPROTOCOL *pVal
  );
  [id(4), propput]
  HRESULT __stdcall Protocol (
    [in] enum _IASPROTOCOL argNo1
  );
  [propget]
  HRESULT __stdcall Source (
    [out retval] interface IRequestSource **pVal
  );
  [id(5), propput]
  HRESULT __stdcall Source (
    [in] interface IRequestSource *argNo1
  );
  [propget]
  HRESULT __stdcall RoutingType (
    [out retval] long *pVal
  );
  [id(6), propput]
  HRESULT __stdcall RoutingType (
    [in] long argNo1
  );
  HRESULT __stdcall SetResponse (
    [in] enum _IASRESPONSE eResponse,
    [in] long lReason
  );
  HRESULT __stdcall ReturnToSource (
    [in] IASREQUESTSTATUS eStatus
  );
  [id(10), propget]
  HRESULT __stdcall ErrorCode (
    [out retval] HRESULT *pVal
  );
  [id(10), propput]
  HRESULT __stdcall ErrorCode (
    [in] HRESULT argNo1
  );
};
[
  uuid(6BC096A9-0CE6-11D1-BAAE-00C04FC2E20D),
  oleautomation
]
interface IRequestSource : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall OnRequestComplete (
    interface IRequest *pRequest,
    IASREQUESTSTATUS eStatus
  );
};
[
  uuid(6BC098A2-0CE6-11D1-BAAE-00C04FC2E20D),
  oleautomation
]
interface IConditionText : IUnknown
{
  [id(1610678272), propget]
  HRESULT __stdcall ConditionText (
    [out retval] BSTR *pVal
  );
  [id(1610678272), propput]
  HRESULT __stdcall ConditionText (
    [in] BSTR argNo1
  );
};

