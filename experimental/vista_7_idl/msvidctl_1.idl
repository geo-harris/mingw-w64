/* Automated generated idl file <tunerlib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface IEnumComponents;
interface IEnumGUID;
interface IEnumMoniker;
interface IMoniker;
interface IPersistStream;
interface IPersist;
interface IStream;
interface ISequentialStream;
interface IBindCtx;
interface IRunningObjectTable;
interface IEnumString;
interface IEnumComponentTypes;
interface IEnumTuningSpaces;
interface IBDAComparable;
interface IBDACreateTuneRequestEx;
interface ICreatePropBagOnRegKey;
interface IBroadcastEvent;
interface IRegisterTuner;
interface ITuner;
interface IGraphBuilder;
interface IFilterGraph;
interface IBaseFilter;
interface IMediaFilter;
interface IReferenceClock;
interface IEnumPins;
interface IPin;
interface IEnumMediaTypes;
interface IEnumFilters;
interface IPersistTuneXmlUtility;
interface IPersistTuneXmlUtility2;
interface IESEventService;
interface IESEvent;
interface IESEvents;
interface IESEventFactory;
interface IMarshal2;
interface IMarshal;

/* Structure forward declarations.  */
struct _AMMediaType;
struct _LARGE_INTEGER;
struct _ULARGE_INTEGER;
struct tagSTATSTG;
struct _FILETIME;
struct tagBIND_OPTS2;
struct _COSERVERINFO;
struct _COAUTHINFO;
struct _COAUTHIDENTITY;
struct _PinInfo;
struct _FilterInfo;

/* Union record forward declarations.  */
dispinterface ITuningSpaceContainer;
dispinterface ITuningSpace;
dispinterface ITuneRequest;
dispinterface IComponents;
dispinterface IComponent;
dispinterface IComponentType;
dispinterface ILocator;
dispinterface IComponentTypes;
dispinterface ITuningSpaces;
dispinterface IATSCTuningSpace;
dispinterface IAnalogTVTuningSpace;
dispinterface IDigitalCableTuningSpace;
dispinterface IAnalogRadioTuningSpace2;
dispinterface IAnalogRadioTuningSpace;
dispinterface IAuxInTuningSpace;
dispinterface IAuxInTuningSpace2;
dispinterface IDVBTuningSpace2;
dispinterface IDVBTuningSpace;
dispinterface IDVBSTuningSpace;
dispinterface ILanguageComponentType;
dispinterface IMPEG2ComponentType;
dispinterface IATSCComponentType;
dispinterface IComponentsOld;
dispinterface IMPEG2Component;
dispinterface IAnalogAudioComponentType;
dispinterface IChannelIDTuneRequest;
dispinterface IChannelTuneRequest;
dispinterface IATSCChannelTuneRequest;
dispinterface IDigitalCableTuneRequest;
dispinterface IMPEG2TuneRequest;
dispinterface IMPEG2TuneRequestFactory;
dispinterface IDigitalLocator;
dispinterface IAnalogLocator;
dispinterface IATSCLocator2;
dispinterface IATSCLocator;
dispinterface IDigitalCableLocator;
dispinterface IDVBTLocator;
dispinterface IDVBTLocator2;
dispinterface IDVBSLocator2;
dispinterface IDVBSLocator;
dispinterface IDVBCLocator;
dispinterface IISDBSLocator;
dispinterface IDVBTuneRequest;

/* Union record forward declarations.  */
coclass SystemTuningSpaces;
coclass TuningSpace;
coclass ChannelIDTuningSpace;
coclass ATSCTuningSpace;
coclass DigitalCableTuningSpace;
coclass AnalogRadioTuningSpace;
coclass AuxInTuningSpace;
coclass AnalogTVTuningSpace;
coclass DVBTuningSpace;
coclass DVBSTuningSpace;
coclass ComponentTypes;
coclass ComponentType;
coclass LanguageComponentType;
coclass MPEG2ComponentType;
coclass ATSCComponentType;
coclass Components;
coclass Component;
coclass MPEG2Component;
coclass AnalogAudioComponentType;
coclass TuneRequest;
coclass ChannelIDTuneRequest;
coclass ChannelTuneRequest;
coclass ATSCChannelTuneRequest;
coclass DigitalCableTuneRequest;
coclass MPEG2TuneRequest;
coclass MPEG2TuneRequestFactory;
coclass Locator;
coclass DigitalLocator;
coclass AnalogLocator;
coclass ATSCLocator;
coclass DigitalCableLocator;
coclass DVBTLocator;
coclass DVBTLocator2;
coclass DVBSLocator;
coclass DVBCLocator;
coclass ISDBSLocator;
coclass DVBTuneRequest;
coclass CreatePropBagOnRegKey;
coclass BroadcastEventService;
coclass TunerMarshaler;
coclass PersistTuneXmlUtility;
coclass ESEventService;
coclass ESEventFactory;

/* Enumeration declarations.  */
enum ComponentCategory
{
  CategoryNotSet = (int) -1,
  CategoryOther = (int) 201326592,
  CategoryVideo = (int) 201326593,
  CategoryAudio = (int) 201326594,
  CategoryText = (int) 201326595,
  CategorySubtitles = (int) 201326596,
  CategoryCaptions = (int) 201326597,
  CategorySuperimpose = (int) 201326598,
  CategoryData = (int) 201326599,
  CATEGORY_COUNT = (int) 201326600
};
enum ComponentStatus
{
  StatusActive = (int) 201326592,
  StatusInactive = (int) 201326593,
  StatusUnavailable = (int) 201326594
};
enum FECMethod
{
  BDA_FEC_METHOD_NOT_SET = (int) -1,
  BDA_FEC_METHOD_NOT_DEFINED = (int) 201326592,
  BDA_FEC_VITERBI = (int) 201326593,
  BDA_FEC_RS_204_188 = (int) 201326594,
  BDA_FEC_LDPC = (int) 201326595,
  BDA_FEC_BCH = (int) 201326596,
  BDA_FEC_RS_147_130 = (int) 201326597,
  BDA_FEC_MAX = (int) 201326598
};
enum BinaryConvolutionCodeRate
{
  BDA_BCC_RATE_NOT_SET = (int) -1,
  BDA_BCC_RATE_NOT_DEFINED = (int) 201326592,
  BDA_BCC_RATE_1_2 = (int) 201326593,
  BDA_BCC_RATE_2_3 = (int) 201326594,
  BDA_BCC_RATE_3_4 = (int) 201326595,
  BDA_BCC_RATE_3_5 = (int) 201326596,
  BDA_BCC_RATE_4_5 = (int) 201326597,
  BDA_BCC_RATE_5_6 = (int) 201326598,
  BDA_BCC_RATE_5_11 = (int) 201326599,
  BDA_BCC_RATE_7_8 = (int) 201326600,
  BDA_BCC_RATE_1_4 = (int) 201326601,
  BDA_BCC_RATE_1_3 = (int) 201326602,
  BDA_BCC_RATE_2_5 = (int) 201326603,
  BDA_BCC_RATE_6_7 = (int) 201326604,
  BDA_BCC_RATE_8_9 = (int) 201326605,
  BDA_BCC_RATE_9_10 = (int) 201326606,
  BDA_BCC_RATE_MAX = (int) 201326607
};
enum ModulationType
{
  BDA_MOD_NOT_SET = (int) -1,
  BDA_MOD_NOT_DEFINED = (int) 201326592,
  BDA_MOD_16QAM = (int) 201326593,
  BDA_MOD_32QAM = (int) 201326594,
  BDA_MOD_64QAM = (int) 201326595,
  BDA_MOD_80QAM = (int) 201326596,
  BDA_MOD_96QAM = (int) 201326597,
  BDA_MOD_112QAM = (int) 201326598,
  BDA_MOD_128QAM = (int) 201326599,
  BDA_MOD_160QAM = (int) 201326600,
  BDA_MOD_192QAM = (int) 201326601,
  BDA_MOD_224QAM = (int) 201326602,
  BDA_MOD_256QAM = (int) 201326603,
  BDA_MOD_320QAM = (int) 201326604,
  BDA_MOD_384QAM = (int) 201326605,
  BDA_MOD_448QAM = (int) 201326606,
  BDA_MOD_512QAM = (int) 201326607,
  BDA_MOD_640QAM = (int) 201326608,
  BDA_MOD_768QAM = (int) 201326609,
  BDA_MOD_896QAM = (int) 201326610,
  BDA_MOD_1024QAM = (int) 201326611,
  BDA_MOD_QPSK = (int) 201326612,
  BDA_MOD_BPSK = (int) 201326613,
  BDA_MOD_OQPSK = (int) 201326614,
  BDA_MOD_8VSB = (int) 201326615,
  BDA_MOD_16VSB = (int) 201326616,
  BDA_MOD_ANALOG_AMPLITUDE = (int) 201326617,
  BDA_MOD_ANALOG_FREQUENCY = (int) 201326618,
  BDA_MOD_8PSK = (int) 201326619,
  BDA_MOD_RF = (int) 201326620,
  BDA_MOD_16APSK = (int) 201326621,
  BDA_MOD_32APSK = (int) 201326622,
  BDA_MOD_NBC_QPSK = (int) 201326623,
  BDA_MOD_NBC_8PSK = (int) 201326624,
  BDA_MOD_DIRECTV = (int) 201326625,
  BDA_MOD_ISDB_T_TMCC = (int) 201326626,
  BDA_MOD_ISDB_S_TMCC = (int) 201326627,
  BDA_MOD_MAX = (int) 201326628
};
enum tagTunerInputType
{
  TunerInputCable = (int) 201326592,
  TunerInputAntenna = (int) 201326593
};
enum DVBSystemType
{
  DVB_Cable = (int) 201326592,
  DVB_Terrestrial = (int) 201326593,
  DVB_Satellite = (int) 201326594,
  ISDB_Terrestrial = (int) 201326595,
  ISDB_Satellite = (int) 201326596
};
enum SpectralInversion
{
  BDA_SPECTRAL_INVERSION_NOT_SET = (int) -1,
  BDA_SPECTRAL_INVERSION_NOT_DEFINED = (int) 201326592,
  BDA_SPECTRAL_INVERSION_AUTOMATIC = (int) 201326593,
  BDA_SPECTRAL_INVERSION_NORMAL = (int) 201326594,
  BDA_SPECTRAL_INVERSION_INVERTED = (int) 201326595,
  BDA_SPECTRAL_INVERSION_MAX = (int) 201326596
};
enum MPEG2StreamType
{
  BDA_UNITIALIZED_MPEG2STREAMTYPE = (int) -1,
  Reserved1 = (int) 201326592,
  ISO_IEC_11172_2_VIDEO = (int) 201326593,
  ISO_IEC_13818_2_VIDEO = (int) 201326594,
  ISO_IEC_11172_3_AUDIO = (int) 201326595,
  ISO_IEC_13818_3_AUDIO = (int) 201326596,
  ISO_IEC_13818_1_PRIVATE_SECTION = (int) 201326597,
  ISO_IEC_13818_1_PES = (int) 201326598,
  ISO_IEC_13522_MHEG = (int) 201326599,
  ANNEX_A_DSM_CC = (int) 201326600,
  ITU_T_REC_H_222_1 = (int) 201326601,
  ISO_IEC_13818_6_TYPE_A = (int) 201326602,
  ISO_IEC_13818_6_TYPE_B = (int) 201326603,
  ISO_IEC_13818_6_TYPE_C = (int) 201326604,
  ISO_IEC_13818_6_TYPE_D = (int) 201326605,
  ISO_IEC_13818_1_AUXILIARY = (int) 201326606,
  ISO_IEC_13818_7_AUDIO = (int) 201326607,
  ISO_IEC_14496_2_VISUAL = (int) 201326608,
  ISO_IEC_14496_3_AUDIO = (int) 201326609,
  ISO_IEC_14496_1_IN_PES = (int) 201326610,
  ISO_IEC_14496_1_IN_SECTION = (int) 201326611,
  ISO_IEC_13818_6_DOWNLOAD = (int) 201326612,
  METADATA_IN_PES = (int) 201326613,
  METADATA_IN_SECTION = (int) 201326614,
  METADATA_IN_DATA_CAROUSEL = (int) 201326615,
  METADATA_IN_OBJECT_CAROUSEL = (int) 201326616,
  METADATA_IN_DOWNLOAD_PROTOCOL = (int) 201326617,
  IRPM_STREAMM = (int) 201326618,
  ITU_T_H264 = (int) 201326619,
  ISO_IEC_13818_1_RESERVED = (int) 201326620,
  USER_PRIVATE = (int) 201326608,
  ISO_IEC_USER_PRIVATE = (int) 201326720,
  DOLBY_AC3_AUDIO = (int) 201326721,
  DOLBY_DIGITAL_PLUS_AUDIO_ATSC = (int) 201326727
};
enum tagTVAudioMode
{
  AMTVAUDIO_MODE_MONO = (int) 201326593,
  AMTVAUDIO_MODE_STEREO = (int) 201326594,
  AMTVAUDIO_MODE_LANG_A = (int) 201326608,
  AMTVAUDIO_MODE_LANG_B = (int) 201326624,
  AMTVAUDIO_MODE_LANG_C = (int) 201326656,
  AMTVAUDIO_PRESET_STEREO = (int) 201327104,
  AMTVAUDIO_PRESET_LANG_A = (int) 201330688,
  AMTVAUDIO_PRESET_LANG_B = (int) 201334784,
  AMTVAUDIO_PRESET_LANG_C = (int) 201342976
};
enum tagAnalogVideoStandard
{
  AnalogVideo_None = (int) 201326592,
  AnalogVideo_NTSC_M = (int) 201326593,
  AnalogVideo_NTSC_M_J = (int) 201326594,
  AnalogVideo_NTSC_433 = (int) 201326596,
  AnalogVideo_PAL_B = (int) 201326608,
  AnalogVideo_PAL_D = (int) 201326624,
  AnalogVideo_PAL_G = (int) 201326656,
  AnalogVideo_PAL_H = (int) 201326720,
  AnalogVideo_PAL_I = (int) 201326848,
  AnalogVideo_PAL_M = (int) 201327104,
  AnalogVideo_PAL_N = (int) 201327616,
  AnalogVideo_PAL_60 = (int) 201328640,
  AnalogVideo_SECAM_B = (int) 201330688,
  AnalogVideo_SECAM_D = (int) 201334784,
  AnalogVideo_SECAM_G = (int) 201342976,
  AnalogVideo_SECAM_H = (int) 201359360,
  AnalogVideo_SECAM_K = (int) 201392128,
  AnalogVideo_SECAM_K1 = (int) 201457664,
  AnalogVideo_SECAM_L = (int) 201588736,
  AnalogVideo_SECAM_L1 = (int) 201850880,
  AnalogVideo_PAL_N_COMBO = (int) 202375168,
  AnalogVideoMask_MCE_NTSC = (int) 202378759,
  AnalogVideoMask_MCE_PAL = (int) 201327088,
  AnalogVideoMask_MCE_SECAM = (int) 202371072
};
enum HierarchyAlpha
{
  BDA_HALPHA_NOT_SET = (int) -1,
  BDA_HALPHA_NOT_DEFINED = (int) 201326592,
  BDA_HALPHA_1 = (int) 201326593,
  BDA_HALPHA_2 = (int) 201326594,
  BDA_HALPHA_4 = (int) 201326595,
  BDA_HALPHA_MAX = (int) 201326596
};
enum GuardInterval
{
  BDA_GUARD_NOT_SET = (int) -1,
  BDA_GUARD_NOT_DEFINED = (int) 201326592,
  BDA_GUARD_1_32 = (int) 201326593,
  BDA_GUARD_1_16 = (int) 201326594,
  BDA_GUARD_1_8 = (int) 201326595,
  BDA_GUARD_1_4 = (int) 201326596,
  BDA_GUARD_1_128 = (int) 201326597,
  BDA_GUARD_19_128 = (int) 201326598,
  BDA_GUARD_19_256 = (int) 201326599,
  BDA_GUARD_MAX = (int) 201326600
};
enum TransmissionMode
{
  BDA_XMIT_MODE_NOT_SET = (int) -1,
  BDA_XMIT_MODE_NOT_DEFINED = (int) 201326592,
  BDA_XMIT_MODE_2K = (int) 201326593,
  BDA_XMIT_MODE_8K = (int) 201326594,
  BDA_XMIT_MODE_4K = (int) 201326595,
  BDA_XMIT_MODE_2K_INTERLEAVED = (int) 201326596,
  BDA_XMIT_MODE_4K_INTERLEAVED = (int) 201326597,
  BDA_XMIT_MODE_1K = (int) 201326598,
  BDA_XMIT_MODE_16K = (int) 201326599,
  BDA_XMIT_MODE_32K = (int) 201326600,
  BDA_XMIT_MODE_MAX = (int) 201326601
};
enum Polarisation
{
  BDA_POLARISATION_NOT_SET = (int) -1,
  BDA_POLARISATION_NOT_DEFINED = (int) 201326592,
  BDA_POLARISATION_LINEAR_H = (int) 201326593,
  BDA_POLARISATION_LINEAR_V = (int) 201326594,
  BDA_POLARISATION_CIRCULAR_L = (int) 201326595,
  BDA_POLARISATION_CIRCULAR_R = (int) 201326596,
  BDA_POLARISATION_MAX = (int) 201326597
};
enum LNB_Source
{
  BDA_LNB_SOURCE_NOT_SET = (int) -1,
  BDA_LNB_SOURCE_NOT_DEFINED = (int) 201326592,
  BDA_LNB_SOURCE_A = (int) 201326593,
  BDA_LNB_SOURCE_B = (int) 201326594,
  BDA_LNB_SOURCE_C = (int) 201326595,
  BDA_LNB_SOURCE_D = (int) 201326596,
  BDA_LNB_SOURCE_MAX = (int) 201326597
};
enum RollOff
{
  BDA_ROLL_OFF_NOT_SET = (int) -1,
  BDA_ROLL_OFF_NOT_DEFINED = (int) 201326592,
  BDA_ROLL_OFF_20 = (int) 201326593,
  BDA_ROLL_OFF_25 = (int) 201326594,
  BDA_ROLL_OFF_35 = (int) 201326595,
  BDA_ROLL_OFF_MAX = (int) 201326596
};
enum Pilot
{
  BDA_PILOT_NOT_SET = (int) -1,
  BDA_PILOT_NOT_DEFINED = (int) 201326592,
  BDA_PILOT_OFF = (int) 201326593,
  BDA_PILOT_ON = (int) 201326594,
  BDA_PILOT_MAX = (int) 201326595
};
enum _FilterState
{
  State_Stopped = (int) 201326592,
  State_Paused = (int) 201326593,
  State_Running = (int) 201326594
};
enum _PinDirection
{
  PINDIR_INPUT = (int) 201326592,
  PINDIR_OUTPUT = (int) 201326593
};

/* Structure/union declarations.  */
struct _AMMediaType
{
  struct GUID majortype;
  struct GUID subtype;
  long bFixedSizeSamples;
  long bTemporalCompression;
  UINT lSampleSize;
  struct GUID formattype;
  IUnknown * pUnk;
  UINT cbFormat;
  UCHAR *pbFormat;
};
struct _LARGE_INTEGER
{
  LONGLONG QuadPart;
};
struct _ULARGE_INTEGER
{
  ULONGLONG QuadPart;
};
struct tagSTATSTG
{
  LPWSTR pwcsName;
  UINT Type;
  struct _ULARGE_INTEGER cbSize;
  struct _FILETIME mtime;
  struct _FILETIME ctime;
  struct _FILETIME atime;
  UINT grfMode;
  UINT grfLocksSupported;
  struct GUID CLSID;
  UINT grfStateBits;
  UINT reserved;
};
struct _FILETIME
{
  UINT dwLowDateTime;
  UINT dwHighDateTime;
};
struct tagBIND_OPTS2
{
  UINT cbStruct;
  UINT grfFlags;
  UINT grfMode;
  UINT dwTickCountDeadline;
  UINT dwTrackFlags;
  UINT dwClassContext;
  UINT locale;
  struct _COSERVERINFO *pServerInfo;
};
struct _COSERVERINFO
{
  UINT dwReserved1;
  LPWSTR pwszName;
  struct _COAUTHINFO *pAuthInfo;
  UINT dwReserved2;
};
struct _COAUTHINFO
{
  UINT dwAuthnSvc;
  UINT dwAuthzSvc;
  LPWSTR pwszServerPrincName;
  UINT dwAuthnLevel;
  UINT dwImpersonationLevel;
  struct _COAUTHIDENTITY *pAuthIdentityData;
  UINT dwCapabilities;
};
struct _COAUTHIDENTITY
{
  USHORT *User;
  UINT UserLength;
  USHORT *Domain;
  UINT DomainLength;
  USHORT *Password;
  UINT PasswordLength;
  UINT Flags;
};
struct _PinInfo
{
  interface IBaseFilter *pFilter;
  enum _PinDirection dir;
  USHORT achName[128];
};
struct _FilterInfo
{
  USHORT achName[128];
  interface IFilterGraph *pGraph;
};

/* Type definitions.  */
typedef ULONGLONG ULONG_PTR;

[
  uuid(9B085638-018E-11D3-9D8E-00C04F72D980),
  version(1.0),
  helpstring("Microsoft Tuner 1.0 Type Library")
]
library tunerlib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(D02AAC50-027E-11D3-9D8E-00C04F72D980),
     helpstring("SystemTuningSpace Class"),
     cancreate
   ]
   coclass SystemTuningSpaces
   {
     dispinterface ITuningSpaceContainer;
   };
   [
     uuid(5FFDC5E6-B83A-4B55-B6E8-C69E765FE9DB),
     helpstring("dummy class to expose base tuning space i/f to VB"),
     hidden,
     restricted
   ]
   coclass TuningSpace
   {
     dispinterface ITuningSpace;
     interface IBDAComparable;
   };
   [
     uuid(CC829A2F-3365-463F-AF13-81DBB6F3A555),
     helpstring("Channel ID Tuning Space Class"),
     cancreate
   ]
   coclass ChannelIDTuningSpace
   {
     dispinterface ITuningSpace;
     interface IBDAComparable;
     interface IBDACreateTuneRequestEx;
   };
   [
     uuid(A2E30750-6C3D-11D3-B653-00C04F79498E),
     helpstring("ATSC Digital Broadcast Tuning Space Class"),
     cancreate
   ]
   coclass ATSCTuningSpace
   {
     dispinterface IATSCTuningSpace;
     interface IBDAComparable;
   };
   [
     uuid(D9BB4CEE-B87A-47F1-AC92-B08D9C7813FC),
     helpstring("Digital Cable Tuning Space Class"),
     cancreate
   ]
   coclass DigitalCableTuningSpace
   {
     dispinterface IDigitalCableTuningSpace;
     interface IBDAComparable;
   };
   [
     uuid(8A674B4C-1F63-11D3-B64C-00C04F79498E),
     helpstring("Analog Radio Tuning Space Class"),
     cancreate
   ]
   coclass AnalogRadioTuningSpace
   {
     dispinterface IAnalogRadioTuningSpace2;
     dispinterface IAnalogRadioTuningSpace;
     interface IBDAComparable;
   };
   [
     uuid(F9769A06-7ACA-4E39-9CFB-97BB35F0E77E),
     helpstring("Auxiliary Inputs Tuning Space Class"),
     cancreate
   ]
   coclass AuxInTuningSpace
   {
     dispinterface IAuxInTuningSpace;
     dispinterface IAuxInTuningSpace2;
     interface IBDAComparable;
   };
   [
     uuid(8A674B4D-1F63-11D3-B64C-00C04F79498E),
     helpstring("Analog TV Tuning Space Class"),
     cancreate
   ]
   coclass AnalogTVTuningSpace
   {
     dispinterface IAnalogTVTuningSpace;
     interface IBDAComparable;
   };
   [
     uuid(C6B14B32-76AA-4A86-A7AC-5C79AAF58DA7),
     helpstring("DVB Tuning Space Class"),
     cancreate
   ]
   coclass DVBTuningSpace
   {
     dispinterface IDVBTuningSpace2;
     dispinterface IDVBTuningSpace;
     interface IBDAComparable;
   };
   [
     uuid(B64016F3-C9A2-4066-96F0-BD9563314726),
     helpstring("DVB Satellite Tuning Space Class"),
     cancreate
   ]
   coclass DVBSTuningSpace
   {
     dispinterface IDVBSTuningSpace;
     interface IBDAComparable;
   };
   [
     uuid(A1A2B1C4-0E3A-11D3-9D8E-00C04F72D980),
     helpstring("Component Types Collection Class"),
     cancreate
   ]
   coclass ComponentTypes
   {
     dispinterface IComponentTypes;
   };
   [
     uuid(823535A0-0318-11D3-9D8E-00C04F72D980),
     helpstring("ComponentType Class"),
     cancreate
   ]
   coclass ComponentType
   {
     dispinterface IComponentType;
   };
   [
     uuid(1BE49F30-0E1B-11D3-9D8E-00C04F72D980),
     helpstring("LanguageComponentType Class"),
     cancreate
   ]
   coclass LanguageComponentType
   {
     dispinterface ILanguageComponentType;
   };
   [
     uuid(418008F3-CF67-4668-9628-10DC52BE1D08),
     helpstring("MPEG2ComponentType Class"),
     cancreate
   ]
   coclass MPEG2ComponentType
   {
     dispinterface IMPEG2ComponentType;
   };
   [
     uuid(A8DCF3D5-0780-4EF4-8A83-2CFFAACB8ACE),
     helpstring("ATSCComponentType Class"),
     cancreate
   ]
   coclass ATSCComponentType
   {
     dispinterface IATSCComponentType;
   };
   [
     uuid(809B6661-94C4-49E6-B6EC-3F0F862215AA),
     helpstring("Components Collection Class"),
     cancreate,
     hidden,
     restricted
   ]
   coclass Components
   {
     dispinterface IComponents;
     dispinterface IComponentsOld;
   };
   [
     uuid(59DC47A8-116C-11D3-9D8E-00C04F72D980),
     helpstring("Component Class"),
     cancreate,
     hidden,
     restricted
   ]
   coclass Component
   {
     dispinterface IComponent;
   };
   [
     uuid(055CB2D7-2969-45CD-914B-76890722F112),
     helpstring("MPEG2 Component Class"),
     cancreate,
     hidden,
     restricted
   ]
   coclass MPEG2Component
   {
     dispinterface IMPEG2Component;
   };
   [
     uuid(28AB0005-E845-4FFA-AA9B-F4665236141C),
     helpstring("Analog Audio Component Class"),
     cancreate,
     hidden,
     restricted
   ]
   coclass AnalogAudioComponentType
   {
     dispinterface IAnalogAudioComponentType;
   };
   [
     uuid(B46E0D38-AB35-4A06-A137-70576B01B39F),
     helpstring("dummy class to expose base tune request i/f to VB"),
     hidden,
     restricted
   ]
   coclass TuneRequest
   {
     dispinterface ITuneRequest;
     interface IBDAComparable;
   };
   [
     uuid(3A9428A7-31A4-45E9-9EFB-E055BF7BB3DB),
     helpstring("Channel Tune Request"),
     cancreate,
     hidden,
     restricted
   ]
   coclass ChannelIDTuneRequest
   {
     dispinterface IChannelIDTuneRequest;
     interface IBDAComparable;
   };
   [
     uuid(0369B4E5-45B6-11D3-B650-00C04F79498E),
     helpstring("Channel Tune Request"),
     cancreate,
     hidden,
     restricted
   ]
   coclass ChannelTuneRequest
   {
     dispinterface IChannelTuneRequest;
     interface IBDAComparable;
   };
   [
     uuid(0369B4E6-45B6-11D3-B650-00C04F79498E),
     helpstring("ATSC Channel Tune Request"),
     cancreate,
     hidden,
     restricted
   ]
   coclass ATSCChannelTuneRequest
   {
     dispinterface IATSCChannelTuneRequest;
     interface IBDAComparable;
   };
   [
     uuid(26EC0B63-AA90-458A-8DF4-5659F2C8A18A),
     helpstring("Digital Cable Channel Tune Request"),
     cancreate,
     hidden,
     restricted
   ]
   coclass DigitalCableTuneRequest
   {
     dispinterface IDigitalCableTuneRequest;
     interface IBDAComparable;
   };
   [
     uuid(0955AC62-BF2E-4CBA-A2B9-A63F772D46CF),
     helpstring("dummy class to expose mpeg2 request i/f to VB"),
     cancreate,
     hidden,
     restricted
   ]
   coclass MPEG2TuneRequest
   {
     dispinterface IMPEG2TuneRequest;
     interface IBDAComparable;
   };
   [
     uuid(2C63E4EB-4CEA-41B8-919C-E947EA19A77C),
     helpstring("Factory for creating IMPEG2TuneRequest"),
     cancreate
   ]
   coclass MPEG2TuneRequestFactory
   {
     dispinterface IMPEG2TuneRequestFactory;
   };
   [
     uuid(0888C883-AC4F-4943-B516-2C38D9B34562),
     helpstring("dummy class to expose base locator i/f to VB"),
     hidden,
     restricted
   ]
   coclass Locator
   {
     dispinterface ILocator;
     interface IBDAComparable;
   };
   [
     uuid(6E50CC0D-C19B-4BF6-810B-5BD60761F5CC),
     helpstring("dummy class to expose base digital locator i/f to VB"),
     hidden,
     restricted
   ]
   coclass DigitalLocator
   {
     dispinterface IDigitalLocator;
     interface IBDAComparable;
   };
   [
     uuid(49638B91-48AB-48B7-A47A-7D0E75A08EDE),
     helpstring("Analog Locator"),
     cancreate
   ]
   coclass AnalogLocator
   {
     dispinterface IAnalogLocator;
     interface IBDAComparable;
   };
   [
     uuid(8872FF1B-98FA-4D7A-8D93-C9F1055F85BB),
     helpstring("ATSC Locator"),
     cancreate
   ]
   coclass ATSCLocator
   {
     dispinterface IATSCLocator2;
     dispinterface IATSCLocator;
     interface IBDAComparable;
   };
   [
     uuid(03C06416-D127-407A-AB4C-FDD279ABBE5D),
     helpstring("Digital Cable Locator"),
     cancreate
   ]
   coclass DigitalCableLocator
   {
     dispinterface IDigitalCableLocator;
     interface IBDAComparable;
   };
   [
     uuid(9CD64701-BDF3-4D14-8E03-F12983D86664),
     helpstring("DVB-Terrestrial Locator"),
     cancreate
   ]
   coclass DVBTLocator
   {
     dispinterface IDVBTLocator;
     interface IBDAComparable;
   };
   [
     uuid(EFE3FA02-45D7-4920-BE96-53FA7F35B0E6),
     helpstring("DVB-Terrestrial 2 Locator"),
     cancreate
   ]
   coclass DVBTLocator2
   {
     dispinterface IDVBTLocator2;
     dispinterface IDVBTLocator;
     interface IBDAComparable;
   };
   [
     uuid(1DF7D126-4050-47F0-A7CF-4C4CA9241333),
     helpstring("DVB-Satellite Locator"),
     cancreate
   ]
   coclass DVBSLocator
   {
     dispinterface IDVBSLocator2;
     dispinterface IDVBSLocator;
     interface IBDAComparable;
   };
   [
     uuid(C531D9FD-9685-4028-8B68-6E1232079F1E),
     helpstring("DVB-Cable Locator"),
     cancreate
   ]
   coclass DVBCLocator
   {
     dispinterface IDVBCLocator;
     interface IBDAComparable;
   };
   [
     uuid(6504AFED-A629-455C-A7F1-04964DEA5CC4),
     helpstring("ISDB-Satellite Locator"),
     cancreate
   ]
   coclass ISDBSLocator
   {
     dispinterface IISDBSLocator;
     dispinterface IDVBSLocator;
     interface IBDAComparable;
   };
   [
     uuid(15D6504A-5494-499C-886C-973C9E53B9F1),
     helpstring("DVB Tune Request"),
     cancreate,
     hidden,
     restricted
   ]
   coclass DVBTuneRequest
   {
     dispinterface IDVBTuneRequest;
     interface IBDAComparable;
   };
   [
     uuid(8A674B49-1F63-11D3-B64C-00C04F79498E),
     helpstring("Create property bag backed by registry"),
     cancreate,
     hidden,
     restricted
   ]
   coclass CreatePropBagOnRegKey
   {
     interface ICreatePropBagOnRegKey;
   };
   [
     uuid(0B3FFB92-0919-4934-9D5B-619C719D0202),
     helpstring("DShow Broadcast Event Service Object"),
     cancreate,
     hidden,
     restricted
   ]
   coclass BroadcastEventService
   {
     interface IBroadcastEvent;
   };
   [
     uuid(6438570B-0C08-4A25-9504-8012BB4D50CF),
     helpstring("BDA ITuner Marshaling utility object"),
     cancreate,
     hidden,
     restricted
   ]
   coclass TunerMarshaler
   {
     interface IRegisterTuner;
     interface ITuner;
   };
   [
     uuid(E77026B0-B97F-4CBB-B7FB-F4F03AD69F11),
     helpstring("Utility object for Tuning Model Object Xml deserialization or serialization"),
     cancreate
   ]
   coclass PersistTuneXmlUtility
   {
     interface IPersistTuneXmlUtility;
     interface IPersistTuneXmlUtility2;
   };
   [
     uuid(C20447FC-EC60-475E-813F-D2B0A6DECEFE),
     helpstring("Extensible Eventing Service object"),
     cancreate
   ]
   coclass ESEventService
   {
     interface IESEventService;
     interface IESEvents;
   };
   [
     uuid(8E8A07DA-71F8-40C1-A929-5E3A868AC2C6),
     helpstring("Eventing Service object(used for unmarshal)"),
     cancreate
   ]
   coclass ESEventFactory
   {
     interface IESEventFactory;
     interface IMarshal2;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(5B692E84-E2F1-11D2-9493-00C04F72D980),
     helpstring("Tuning Space Container Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ITuningSpaceContainer : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Count (
       [out retval] long *Count
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] interface IEnumVARIANT **NewEnum
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT varIndex,
       [out retval] dispinterface ITuningSpace **TuningSpace
     );
     [id(0), propput]
     HRESULT __stdcall Item (
       [in] VARIANT varIndex,
       [in] dispinterface ITuningSpace *argNo2
     );
     [id(1610743812)]
     HRESULT __stdcall TuningSpacesForCLSID (
       [in] BSTR SpaceCLSID,
       [out retval] dispinterface ITuningSpaces **NewColl
     );
     [restricted, hidden]
     HRESULT __stdcall _TuningSpacesForCLSID (
       [in] struct GUID *SpaceCLSID,
       [out retval] dispinterface ITuningSpaces **NewColl
     );
     HRESULT __stdcall TuningSpacesForName (
       [in] BSTR Name,
       [out retval] dispinterface ITuningSpaces **NewColl
     );
     HRESULT __stdcall FindID (
       [in] dispinterface ITuningSpace *TuningSpace,
       [out retval] long *ID
     );
     [id(-553)]
     HRESULT __stdcall Add (
       [in] dispinterface ITuningSpace *TuningSpace,
       [out retval] VARIANT *NewIndex
     );
     [id(1610743817), propget, restricted, hidden]
     HRESULT __stdcall EnumTuningSpaces (
       [out retval] interface IEnumTuningSpaces **ppEnum
     );
     [id(-555)]
     HRESULT __stdcall Remove (
       [in] VARIANT Index
     );
     [id(1610743819), propget]
     HRESULT __stdcall MaxCount (
       [out retval] long *MaxCount
     );
     [id(1610743819), propput, restricted, hidden]
     HRESULT __stdcall MaxCount (
       [in] long argNo1
     );
   };
   [
     uuid(061C6E30-E622-11D2-9493-00C04F72D980),
     helpstring("Tuning Space Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ITuningSpace : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall UniqueName (
       [out retval] BSTR *Name
     );
     [id(1), propput]
     HRESULT __stdcall UniqueName (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall FriendlyName (
       [out retval] BSTR *Name
     );
     [id(2), propput]
     HRESULT __stdcall FriendlyName (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall CLSID (
       [out retval] BSTR *SpaceCLSID
     );
     [propget]
     HRESULT __stdcall NetworkType (
       [out retval] BSTR *NetworkTypeGuid
     );
     [id(4), propput]
     HRESULT __stdcall NetworkType (
       [in] BSTR argNo1
     );
     [propget, restricted, hidden]
     HRESULT __stdcall _NetworkType (
       [out retval] struct GUID *NetworkTypeGuid
     );
     [id(5), propput, restricted, hidden]
     HRESULT __stdcall _NetworkType (
       [in] struct GUID *argNo1
     );
     HRESULT __stdcall CreateTuneRequest (
       [out retval] dispinterface ITuneRequest **TuneRequest
     );
     [restricted, hidden]
     HRESULT __stdcall EnumCategoryGUIDs (
       [out retval] interface IEnumGUID **ppEnum
     );
     [restricted, hidden]
     HRESULT __stdcall EnumDeviceMonikers (
       [out retval] interface IEnumMoniker **ppEnum
     );
     [propget]
     HRESULT __stdcall DefaultPreferredComponentTypes (
       [out retval] dispinterface IComponentTypes **ComponentTypes
     );
     [id(9), propput]
     HRESULT __stdcall DefaultPreferredComponentTypes (
       [in] dispinterface IComponentTypes *argNo1
     );
     [propget]
     HRESULT __stdcall FrequencyMapping (
       [out retval] BSTR *pMapping
     );
     [id(10), propput]
     HRESULT __stdcall FrequencyMapping (
       BSTR argNo1
     );
     [propget]
     HRESULT __stdcall DefaultLocator (
       [out retval] dispinterface ILocator **LocatorVal
     );
     [id(11), propput]
     HRESULT __stdcall DefaultLocator (
       [in] dispinterface ILocator *argNo1
     );
     [id(1610743826)]
     HRESULT __stdcall Clone (
       [out retval] dispinterface ITuningSpace **NewTS
     );
   };
   [
     uuid(07DDC146-FC3D-11D2-9D8C-00C04F72D980),
     helpstring("Tune Request Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ITuneRequest : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall TuningSpace (
       [out retval] dispinterface ITuningSpace **TuningSpace
     );
     [propget]
     HRESULT __stdcall Components (
       [out retval] dispinterface IComponents **Components
     );
     HRESULT __stdcall Clone (
       [out retval] dispinterface ITuneRequest **NewTuneRequest
     );
     [propget]
     HRESULT __stdcall Locator (
       [out retval] dispinterface ILocator **Locator
     );
     [id(4), propput]
     HRESULT __stdcall Locator (
       [in] dispinterface ILocator *argNo1
     );
   };
   [
     uuid(39A48091-FFFE-4182-A161-3FF802640E26),
     helpstring("Component Collection Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IComponents : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Count (
       [out retval] long *Count
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] interface IEnumVARIANT **ppNewEnum
     );
     [id(1610743810), restricted, hidden]
     HRESULT __stdcall EnumComponents (
       [out retval] interface IEnumComponents **ppNewEnum
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT Index,
       [out retval] dispinterface IComponent **ppComponent
     );
     [id(-553)]
     HRESULT __stdcall Add (
       [in] dispinterface IComponent *Component,
       [out retval] VARIANT *NewIndex
     );
     [id(-555)]
     HRESULT __stdcall Remove (
       [in] VARIANT Index
     );
     [id(1610743814)]
     HRESULT __stdcall Clone (
       [out retval] dispinterface IComponents **NewList
     );
     [id(0), propput]
     HRESULT __stdcall Item (
       [in] VARIANT Index,
       [in] dispinterface IComponent *argNo2
     );
   };
   [
     uuid(1A5576FC-0E19-11D3-9D8E-00C04F72D980),
     helpstring("Component Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IComponent : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Type (
       [out retval] dispinterface IComponentType **CT
     );
     [id(1), propput, restricted, hidden]
     HRESULT __stdcall Type (
       [in] dispinterface IComponentType *argNo1
     );
     [id(3), propget]
     HRESULT __stdcall DescLangID (
       [out retval] long *LangID
     );
     [id(3), propput]
     HRESULT __stdcall DescLangID (
       [in] long argNo1
     );
     [id(2), propget]
     HRESULT __stdcall Status (
       [out retval] enum ComponentStatus *Status
     );
     [id(2), propput]
     HRESULT __stdcall Status (
       [in] enum ComponentStatus argNo1
     );
     [id(4), propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *Description
     );
     [id(4), propput, restricted, hidden]
     HRESULT __stdcall Description (
       [in] BSTR argNo1
     );
     HRESULT __stdcall Clone (
       [out retval] dispinterface IComponent **NewComponent
     );
   };
   [
     uuid(6A340DC0-0311-11D3-9D8E-00C04F72D980),
     helpstring("Component Type Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IComponentType : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Category (
       [out retval] enum ComponentCategory *Category
     );
     [id(1), propput]
     HRESULT __stdcall Category (
       [in] enum ComponentCategory argNo1
     );
     [propget]
     HRESULT __stdcall MediaMajorType (
       [out retval] BSTR *MediaMajorType
     );
     [id(2), propput]
     HRESULT __stdcall MediaMajorType (
       [in] BSTR argNo1
     );
     [propget, restricted, hidden]
     HRESULT __stdcall _MediaMajorType (
       [out retval] struct GUID *MediaMajorTypeGuid
     );
     [id(3), propput, restricted, hidden]
     HRESULT __stdcall _MediaMajorType (
       [in] struct GUID *argNo1
     );
     [propget]
     HRESULT __stdcall MediaSubType (
       [out retval] BSTR *MediaSubType
     );
     [id(4), propput]
     HRESULT __stdcall MediaSubType (
       [in] BSTR argNo1
     );
     [propget, restricted, hidden]
     HRESULT __stdcall _MediaSubType (
       [out retval] struct GUID *MediaSubTypeGuid
     );
     [id(5), propput, restricted, hidden]
     HRESULT __stdcall _MediaSubType (
       [in] struct GUID *argNo1
     );
     [propget]
     HRESULT __stdcall MediaFormatType (
       [out retval] BSTR *MediaFormatType
     );
     [id(6), propput]
     HRESULT __stdcall MediaFormatType (
       [in] BSTR argNo1
     );
     [propget, restricted, hidden]
     HRESULT __stdcall _MediaFormatType (
       [out retval] struct GUID *MediaFormatTypeGuid
     );
     [id(7), propput, restricted, hidden]
     HRESULT __stdcall _MediaFormatType (
       [in] struct GUID *argNo1
     );
     [propget, restricted, hidden]
     HRESULT __stdcall MediaType (
       [out retval] struct _AMMediaType *MediaType
     );
     [id(8), propput, restricted, hidden]
     HRESULT __stdcall MediaType (
       [in] struct _AMMediaType *argNo1
     );
     HRESULT __stdcall Clone (
       [out retval] dispinterface IComponentType **NewCT
     );
   };
   [
     uuid(286D7F89-760C-4F89-80C4-66841D2507AA),
     helpstring("Generic Locator Information"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ILocator : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall CarrierFrequency (
       [out retval] long *Frequency
     );
     [id(1), propput]
     HRESULT __stdcall CarrierFrequency (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall InnerFEC (
       [out retval] enum FECMethod *FEC
     );
     [id(2), propput]
     HRESULT __stdcall InnerFEC (
       [in] enum FECMethod argNo1
     );
     [propget]
     HRESULT __stdcall InnerFECRate (
       [out retval] enum BinaryConvolutionCodeRate *FEC
     );
     [id(3), propput]
     HRESULT __stdcall InnerFECRate (
       [in] enum BinaryConvolutionCodeRate argNo1
     );
     [propget]
     HRESULT __stdcall OuterFEC (
       [out retval] enum FECMethod *FEC
     );
     [id(4), propput]
     HRESULT __stdcall OuterFEC (
       [in] enum FECMethod argNo1
     );
     [propget]
     HRESULT __stdcall OuterFECRate (
       [out retval] enum BinaryConvolutionCodeRate *FEC
     );
     [id(5), propput]
     HRESULT __stdcall OuterFECRate (
       [in] enum BinaryConvolutionCodeRate argNo1
     );
     [propget]
     HRESULT __stdcall Modulation (
       [out retval] enum ModulationType *Modulation
     );
     [id(6), propput]
     HRESULT __stdcall Modulation (
       [in] enum ModulationType argNo1
     );
     [propget]
     HRESULT __stdcall SymbolRate (
       [out retval] long *Rate
     );
     [id(7), propput]
     HRESULT __stdcall SymbolRate (
       [in] long argNo1
     );
     HRESULT __stdcall Clone (
       [out retval] dispinterface ILocator **NewLocator
     );
   };
   [
     uuid(0DC13D4A-0313-11D3-9D8E-00C04F72D980),
     helpstring("ComponentType Collection Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IComponentTypes : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Count (
       [out retval] long *Count
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] interface IEnumVARIANT **ppNewEnum
     );
     [id(1610743810), restricted, hidden]
     HRESULT __stdcall EnumComponentTypes (
       [out retval] interface IEnumComponentTypes **ppNewEnum
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT Index,
       [out retval] dispinterface IComponentType **ComponentType
     );
     [id(0), propput]
     HRESULT __stdcall Item (
       [in] VARIANT Index,
       [in] dispinterface IComponentType *argNo2
     );
     [id(-553)]
     HRESULT __stdcall Add (
       [in] dispinterface IComponentType *ComponentType,
       [out retval] VARIANT *NewIndex
     );
     [id(-555)]
     HRESULT __stdcall Remove (
       [in] VARIANT Index
     );
     [id(1610743815)]
     HRESULT __stdcall Clone (
       [out retval] dispinterface IComponentTypes **NewList
     );
   };
   [
     uuid(901284E4-33FE-4B69-8D63-634A596F3756),
     helpstring("Tuning Space Collection Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ITuningSpaces : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Count (
       [out retval] long *Count
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] interface IEnumVARIANT **NewEnum
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT varIndex,
       [out retval] dispinterface ITuningSpace **TuningSpace
     );
     [id(1610743811), propget, restricted, hidden]
     HRESULT __stdcall EnumTuningSpaces (
       [out retval] interface IEnumTuningSpaces **NewEnum
     );
   };
   [
     uuid(0369B4E2-45B6-11D3-B650-00C04F79498E),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IATSCTuningSpace : IAnalogTVTuningSpace
   {
     [id(201), propget]
     HRESULT __stdcall MinMinorChannel (
       [out retval] long *MinMinorChannelVal
     );
     [id(201), propput]
     HRESULT __stdcall MinMinorChannel (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall MaxMinorChannel (
       [out retval] long *MaxMinorChannelVal
     );
     [id(202), propput]
     HRESULT __stdcall MaxMinorChannel (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall MinPhysicalChannel (
       [out retval] long *MinPhysicalChannelVal
     );
     [id(203), propput]
     HRESULT __stdcall MinPhysicalChannel (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall MaxPhysicalChannel (
       [out retval] long *MaxPhysicalChannelVal
     );
     [id(204), propput]
     HRESULT __stdcall MaxPhysicalChannel (
       [in] long argNo1
     );
   };
   [
     uuid(2A6E293C-2595-11D3-B64C-00C04F79498E),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IAnalogTVTuningSpace : ITuningSpace
   {
     [id(101), propget]
     HRESULT __stdcall MinChannel (
       [out retval] long *MinChannelVal
     );
     [id(101), propput]
     HRESULT __stdcall MinChannel (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall MaxChannel (
       [out retval] long *MaxChannelVal
     );
     [id(102), propput]
     HRESULT __stdcall MaxChannel (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall InputType (
       [out retval] enum tagTunerInputType *InputTypeVal
     );
     [id(103), propput]
     HRESULT __stdcall InputType (
       [in] enum tagTunerInputType argNo1
     );
     [propget]
     HRESULT __stdcall CountryCode (
       [out retval] long *CountryCodeVal
     );
     [id(104), propput]
     HRESULT __stdcall CountryCode (
       [in] long argNo1
     );
   };
   [
     uuid(013F9F9C-B449-4EC7-A6D2-9D4F2FC70AE5),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDigitalCableTuningSpace : IATSCTuningSpace
   {
     [id(301), propget]
     HRESULT __stdcall MinMajorChannel (
       [out retval] long *MinMajorChannelVal
     );
     [id(301), propput]
     HRESULT __stdcall MinMajorChannel (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall MaxMajorChannel (
       [out retval] long *MaxMajorChannelVal
     );
     [id(302), propput]
     HRESULT __stdcall MaxMajorChannel (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall MinSourceID (
       [out retval] long *MinSourceIDVal
     );
     [id(303), propput]
     HRESULT __stdcall MinSourceID (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall MaxSourceID (
       [out retval] long *MaxSourceIDVal
     );
     [id(304), propput]
     HRESULT __stdcall MaxSourceID (
       [in] long argNo1
     );
   };
   [
     uuid(39DD45DA-2DA8-46BA-8A8A-87E2B73D983A),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IAnalogRadioTuningSpace2 : IAnalogRadioTuningSpace
   {
     [id(104), propget]
     HRESULT __stdcall CountryCode (
       [out retval] long *CountryCodeVal
     );
     [id(104), propput]
     HRESULT __stdcall CountryCode (
       [in] long argNo1
     );
   };
   [
     uuid(2A6E293B-2595-11D3-B64C-00C04F79498E),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IAnalogRadioTuningSpace : ITuningSpace
   {
     [id(101), propget]
     HRESULT __stdcall MinFrequency (
       [out retval] long *MinFrequencyVal
     );
     [id(101), propput]
     HRESULT __stdcall MinFrequency (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall MaxFrequency (
       [out retval] long *MaxFrequencyVal
     );
     [id(102), propput]
     HRESULT __stdcall MaxFrequency (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall Step (
       [out retval] long *StepVal
     );
     [id(103), propput]
     HRESULT __stdcall Step (
       [in] long argNo1
     );
   };
   [
     uuid(E48244B8-7E17-4F76-A763-5090FF1E2F30),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IAuxInTuningSpace : ITuningSpace
   {
   };
   [
     uuid(B10931ED-8BFE-4AB0-9DCE-E469C29A9729),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IAuxInTuningSpace2 : IAuxInTuningSpace
   {
     [id(101), propget]
     HRESULT __stdcall CountryCode (
       [out retval] long *CountryCodeVal
     );
     [id(101), propput]
     HRESULT __stdcall CountryCode (
       [in] long argNo1
     );
   };
   [
     uuid(843188B4-CE62-43DB-966B-8145A094E040),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDVBTuningSpace2 : IDVBTuningSpace
   {
     [id(102), propget]
     HRESULT __stdcall NetworkID (
       [out retval] long *NetworkID
     );
     [id(102), propput]
     HRESULT __stdcall NetworkID (
       [in] long argNo1
     );
   };
   [
     uuid(ADA0B268-3B19-4E5B-ACC4-49F852BE13BA),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDVBTuningSpace : ITuningSpace
   {
     [id(101), propget]
     HRESULT __stdcall SystemType (
       [out retval] enum DVBSystemType *SysType
     );
     [id(101), propput]
     HRESULT __stdcall SystemType (
       [in] enum DVBSystemType argNo1
     );
   };
   [
     uuid(CDF7BE60-D954-42FD-A972-78971958E470),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDVBSTuningSpace : IDVBTuningSpace2
   {
     [id(1001), propget]
     HRESULT __stdcall LowOscillator (
       [out retval] long *LowOscillator
     );
     [id(1001), propput]
     HRESULT __stdcall LowOscillator (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall HighOscillator (
       [out retval] long *HighOscillator
     );
     [id(1002), propput]
     HRESULT __stdcall HighOscillator (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall LNBSwitch (
       [out retval] long *LNBSwitch
     );
     [id(1003), propput]
     HRESULT __stdcall LNBSwitch (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall InputRange (
       [out retval] BSTR *InputRange
     );
     [id(1004), propput]
     HRESULT __stdcall InputRange (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall SpectralInversion (
       [out retval] enum SpectralInversion *SpectralInversionVal
     );
     [id(1005), propput]
     HRESULT __stdcall SpectralInversion (
       [in] enum SpectralInversion argNo1
     );
   };
   [
     uuid(B874C8BA-0FA2-11D3-9D8E-00C04F72D980),
     helpstring("Language Component Type Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ILanguageComponentType : IComponentType
   {
     [id(100), propget]
     HRESULT __stdcall LangID (
       [out retval] long *LangID
     );
     [id(100), propput]
     HRESULT __stdcall LangID (
       [in] long argNo1
     );
   };
   [
     uuid(2C073D84-B51C-48C9-AA9F-68971E1F6E38),
     helpstring("MPEG2 Component Type Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IMPEG2ComponentType : ILanguageComponentType
   {
     [id(200), propget]
     HRESULT __stdcall StreamType (
       [out retval] enum MPEG2StreamType *MP2StreamType
     );
     [id(200), propput]
     HRESULT __stdcall StreamType (
       [in] enum MPEG2StreamType argNo1
     );
   };
   [
     uuid(FC189E4D-7BD4-4125-B3B3-3A76A332CC96),
     helpstring("ATSC Component Type Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IATSCComponentType : IMPEG2ComponentType
   {
     [id(300), propget]
     HRESULT __stdcall Flags (
       [out retval] long *Flags
     );
     [id(300), propput]
     HRESULT __stdcall Flags (
       [in] long argNo1
     );
   };
   [
     uuid(FCD01846-0E19-11D3-9D8E-00C04F72D980),
     helpstring("Old Component Collection Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IComponentsOld : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Count (
       [out retval] long *Count
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] interface IEnumVARIANT **ppNewEnum
     );
     [id(1610743810), restricted, hidden]
     HRESULT __stdcall EnumComponents (
       [out retval] interface IEnumComponents **ppNewEnum
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT Index,
       [out retval] dispinterface IComponent **ppComponent
     );
     [id(-553)]
     HRESULT __stdcall Add (
       [in] dispinterface IComponent *Component,
       [out retval] VARIANT *NewIndex
     );
     [id(-555)]
     HRESULT __stdcall Remove (
       [in] VARIANT Index
     );
     [id(1610743814)]
     HRESULT __stdcall Clone (
       [out retval] dispinterface IComponents **NewList
     );
   };
   [
     uuid(1493E353-1EB6-473C-802D-8E6B8EC9D2A9),
     helpstring("MPEG2 Component Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IMPEG2Component : IComponent
   {
     [id(101), propget]
     HRESULT __stdcall PID (
       [out retval] long *PID
     );
     [id(101), propput]
     HRESULT __stdcall PID (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall PCRPID (
       [out retval] long *PCRPID
     );
     [id(102), propput]
     HRESULT __stdcall PCRPID (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall ProgramNumber (
       [out retval] long *ProgramNumber
     );
     [id(103), propput]
     HRESULT __stdcall ProgramNumber (
       [in] long argNo1
     );
   };
   [
     uuid(2CFEB2A8-1787-4A24-A941-C6EAEC39C842),
     helpstring("Analog Audio Component Type Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IAnalogAudioComponentType : IComponentType
   {
     [id(201), propget]
     HRESULT __stdcall AnalogAudioMode (
       [out retval] enum tagTVAudioMode *Mode
     );
     [id(201), propput]
     HRESULT __stdcall AnalogAudioMode (
       [in] enum tagTVAudioMode argNo1
     );
   };
   [
     uuid(156EFF60-86F4-4E28-89FC-109799FD57EE),
     helpstring("Channel ID Tune Request Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IChannelIDTuneRequest : ITuneRequest
   {
     [id(101), propget]
     HRESULT __stdcall ChannelID (
       [out retval] BSTR *ChannelID
     );
     [id(101), propput]
     HRESULT __stdcall ChannelID (
       [in] BSTR argNo1
     );
   };
   [
     uuid(0369B4E0-45B6-11D3-B650-00C04F79498E),
     helpstring("Channel Tune Request Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IChannelTuneRequest : ITuneRequest
   {
     [id(101), propget]
     HRESULT __stdcall Channel (
       [out retval] long *Channel
     );
     [id(101), propput]
     HRESULT __stdcall Channel (
       [in] long argNo1
     );
   };
   [
     uuid(0369B4E1-45B6-11D3-B650-00C04F79498E),
     helpstring("ATSC Channel Tune Request Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IATSCChannelTuneRequest : IChannelTuneRequest
   {
     [id(201), propget]
     HRESULT __stdcall MinorChannel (
       [out retval] long *MinorChannel
     );
     [id(201), propput]
     HRESULT __stdcall MinorChannel (
       [in] long argNo1
     );
   };
   [
     uuid(BAD7753B-6B37-4810-AE57-3CE0C4A9E6CB),
     helpstring("Digital Cable Channel Tune Request Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDigitalCableTuneRequest : IATSCChannelTuneRequest
   {
     [id(301), propget]
     HRESULT __stdcall MajorChannel (
       [out retval] long *pMajorChannel
     );
     [id(301), propput]
     HRESULT __stdcall MajorChannel (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall SourceID (
       [out retval] long *pSourceID
     );
     [id(302), propput]
     HRESULT __stdcall SourceID (
       [in] long argNo1
     );
   };
   [
     uuid(EB7D987F-8A01-42AD-B8AE-574DEEE44D1A),
     helpstring("MPEG2 Tune Request Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IMPEG2TuneRequest : ITuneRequest
   {
     [id(101), propget]
     HRESULT __stdcall TSID (
       [out retval] long *TSID
     );
     [id(101), propput]
     HRESULT __stdcall TSID (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall ProgNo (
       [out retval] long *ProgNo
     );
     [id(102), propput]
     HRESULT __stdcall ProgNo (
       [in] long argNo1
     );
   };
   [
     uuid(14E11ABD-EE37-4893-9EA1-6964DE933E39),
     helpstring("MPEG2 Tune Request Factory Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IMPEG2TuneRequestFactory : IDispatch
   {
     [id(1)]
     HRESULT __stdcall CreateTuneRequest (
       [in] dispinterface ITuningSpace *TuningSpace,
       [out retval] dispinterface IMPEG2TuneRequest **TuneRequest
     );
   };
   [
     uuid(19B595D8-839A-47F0-96DF-4F194F3C768C),
     helpstring("Digital Locator Information"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDigitalLocator : ILocator
   {
   };
   [
     uuid(34D1F26B-E339-430D-ABCE-738CB48984DC),
     helpstring("Analog Locator Information"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IAnalogLocator : ILocator
   {
     [id(601), propget]
     HRESULT __stdcall VideoStandard (
       [out retval] enum tagAnalogVideoStandard *AVS
     );
     [id(601), propput]
     HRESULT __stdcall VideoStandard (
       [in] enum tagAnalogVideoStandard argNo1
     );
   };
   [
     uuid(612AA885-66CF-4090-BA0A-566F5312E4CA),
     helpstring("ATSC Locator2 Information"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IATSCLocator2 : IATSCLocator
   {
     [id(203), propget]
     HRESULT __stdcall ProgramNumber (
       [out retval] long *ProgramNumber
     );
     [id(203), propput]
     HRESULT __stdcall ProgramNumber (
       [in] long argNo1
     );
   };
   [
     uuid(BF8D986F-8C2B-4131-94D7-4D3D9FCC21EF),
     helpstring("ATSC Locator Information"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IATSCLocator : IDigitalLocator
   {
     [id(201), propget]
     HRESULT __stdcall PhysicalChannel (
       [out retval] long *PhysicalChannel
     );
     [id(201), propput]
     HRESULT __stdcall PhysicalChannel (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall TSID (
       [out retval] long *TSID
     );
     [id(202), propput]
     HRESULT __stdcall TSID (
       [in] long argNo1
     );
   };
   [
     uuid(48F66A11-171A-419A-9525-BEEECD51584C),
     helpstring("DigitalCable Locator Information"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDigitalCableLocator : IATSCLocator2
   {
   };
   [
     uuid(8664DA16-DDA2-42AC-926A-C18F9127C302),
     helpstring("DVB Terrestrial Locator Information"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDVBTLocator : IDigitalLocator
   {
     [id(301), propget]
     HRESULT __stdcall Bandwidth (
       [out retval] long *BandWidthVal
     );
     [id(301), propput]
     HRESULT __stdcall Bandwidth (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall LPInnerFEC (
       [out retval] enum FECMethod *FEC
     );
     [id(302), propput]
     HRESULT __stdcall LPInnerFEC (
       [in] enum FECMethod argNo1
     );
     [propget]
     HRESULT __stdcall LPInnerFECRate (
       [out retval] enum BinaryConvolutionCodeRate *FEC
     );
     [id(303), propput]
     HRESULT __stdcall LPInnerFECRate (
       [in] enum BinaryConvolutionCodeRate argNo1
     );
     [id(305), propget]
     HRESULT __stdcall HAlpha (
       [out retval] enum HierarchyAlpha *Alpha
     );
     [id(305), propput]
     HRESULT __stdcall HAlpha (
       [in] enum HierarchyAlpha argNo1
     );
     [id(304), propget]
     HRESULT __stdcall Guard (
       [out retval] enum GuardInterval *GI
     );
     [id(304), propput]
     HRESULT __stdcall Guard (
       [in] enum GuardInterval argNo1
     );
     [id(306), propget]
     HRESULT __stdcall Mode (
       [out retval] enum TransmissionMode *Mode
     );
     [id(306), propput]
     HRESULT __stdcall Mode (
       [in] enum TransmissionMode argNo1
     );
     [propget]
     HRESULT __stdcall OtherFrequencyInUse (
       [out retval] WINBOOL *OtherFrequencyInUseVal
     );
     [id(307), propput]
     HRESULT __stdcall OtherFrequencyInUse (
       [in] WINBOOL argNo1
     );
   };
   [
     uuid(448A2EDF-AE95-4B43-A3CC-747843C453D4),
     helpstring("DVB Terrestrial 2 Locator Information"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDVBTLocator2 : IDVBTLocator
   {
     [id(351), propget]
     HRESULT __stdcall PhysicalLayerPipeId (
       [out retval] long *PhysicalLayerPipeIdVal
     );
     [id(351), propput]
     HRESULT __stdcall PhysicalLayerPipeId (
       [in] long argNo1
     );
   };
   [
     uuid(6044634A-1733-4F99-B982-5FB12AFCE4F0),
     helpstring("DVB Satellite Locator2 Information"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDVBSLocator2 : IDVBSLocator
   {
     [id(406), propget]
     HRESULT __stdcall DiseqLNBSource (
       [out retval] enum LNB_Source *DiseqLNBSourceVal
     );
     [id(406), propput]
     HRESULT __stdcall DiseqLNBSource (
       [in] enum LNB_Source argNo1
     );
     [propget]
     HRESULT __stdcall LocalOscillatorOverrideLow (
       [out retval] long *LocalOscillatorOverrideLowVal
     );
     [id(407), propput]
     HRESULT __stdcall LocalOscillatorOverrideLow (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall LocalOscillatorOverrideHigh (
       [out retval] long *LocalOscillatorOverrideHighVal
     );
     [id(408), propput]
     HRESULT __stdcall LocalOscillatorOverrideHigh (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall LocalLNBSwitchOverride (
       [out retval] long *LocalLNBSwitchOverrideVal
     );
     [id(409), propput]
     HRESULT __stdcall LocalLNBSwitchOverride (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall LocalSpectralInversionOverride (
       [out retval] enum SpectralInversion *LocalSpectralInversionOverrideVal
     );
     [id(410), propput]
     HRESULT __stdcall LocalSpectralInversionOverride (
       [in] enum SpectralInversion argNo1
     );
     [propget]
     HRESULT __stdcall SignalRollOff (
       [out retval] enum RollOff *RollOffVal
     );
     [id(411), propput]
     HRESULT __stdcall SignalRollOff (
       [in] enum RollOff argNo1
     );
     [propget]
     HRESULT __stdcall SignalPilot (
       [out retval] enum Pilot *PilotVal
     );
     [id(412), propput]
     HRESULT __stdcall SignalPilot (
       [in] enum Pilot argNo1
     );
   };
   [
     uuid(3D7C353C-0D04-45F1-A742-F97CC1188DC8),
     helpstring("DVB Satellite Locator Information"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDVBSLocator : IDigitalLocator
   {
     [id(401), propget]
     HRESULT __stdcall SignalPolarisation (
       [out retval] enum Polarisation *PolarisationVal
     );
     [id(401), propput]
     HRESULT __stdcall SignalPolarisation (
       [in] enum Polarisation argNo1
     );
     [propget]
     HRESULT __stdcall WestPosition (
       [out retval] WINBOOL *WestLongitude
     );
     [id(402), propput]
     HRESULT __stdcall WestPosition (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall OrbitalPosition (
       [out retval] long *longitude
     );
     [id(403), propput]
     HRESULT __stdcall OrbitalPosition (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall Azimuth (
       [out retval] long *Azimuth
     );
     [id(404), propput]
     HRESULT __stdcall Azimuth (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall Elevation (
       [out retval] long *Elevation
     );
     [id(405), propput]
     HRESULT __stdcall Elevation (
       [in] long argNo1
     );
   };
   [
     uuid(6E42F36E-1DD2-43C4-9F78-69D25AE39034),
     helpstring("DVB Cable Locator Information"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDVBCLocator : IDigitalLocator
   {
   };
   [
     uuid(C9897087-E29C-473F-9E4B-7072123DEA14),
     helpstring("ISDB Satellite Locator Information"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IISDBSLocator : IDVBSLocator
   {
   };
   [
     uuid(0D6F567E-A636-42BB-83BA-CE4C1704AFA2),
     helpstring("DVB Tune Request Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDVBTuneRequest : ITuneRequest
   {
     [id(101), propget]
     HRESULT __stdcall ONID (
       [out retval] long *ONID
     );
     [id(101), propput]
     HRESULT __stdcall ONID (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall TSID (
       [out retval] long *TSID
     );
     [id(102), propput]
     HRESULT __stdcall TSID (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall SID (
       [out retval] long *SID
     );
     [id(103), propput]
     HRESULT __stdcall SID (
       [in] long argNo1
     );
   };

};

/* Interface declarations.  */
[
  uuid(2A6E2939-2595-11D3-B64C-00C04F79498E),
  hidden,
  restricted
]
interface IEnumComponents : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT celt,
    [out] dispinterface IComponent **rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumComponents **ppEnum
  );
};
[
  uuid(0002E000-0000-0000-C000-000000000046)
]
interface IEnumGUID : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] struct GUID *rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumGUID **ppEnum
  );
};
[
  uuid(00000102-0000-0000-C000-000000000046)
]
interface IEnumMoniker : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] interface IMoniker **rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumMoniker **ppEnum
  );
};
[
  uuid(0000000F-0000-0000-C000-000000000046)
]
interface IMoniker : IPersistStream
{
  [id(1610809344)]
  HRESULT __stdcall RemoteBindToObject (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] struct GUID *riidResult,
    [out] IUnknown **ppvResult
  );
  HRESULT __stdcall RemoteBindToStorage (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] struct GUID *riid,
    [out] IUnknown **ppvObj
  );
  HRESULT __stdcall Reduce (
    [in] interface IBindCtx *pbc,
    [in] UINT dwReduceHowFar,
    [in out] interface IMoniker **ppmkToLeft,
    [out] interface IMoniker **ppmkReduced
  );
  HRESULT __stdcall ComposeWith (
    [in] interface IMoniker *pmkRight,
    [in] long fOnlyIfNotGeneric,
    [out] interface IMoniker **ppmkComposite
  );
  HRESULT __stdcall Enum (
    [in] long fForward,
    [out] interface IEnumMoniker **ppenumMoniker
  );
  HRESULT __stdcall IsEqual (
    [in] interface IMoniker *pmkOtherMoniker
  );
  HRESULT __stdcall Hash (
    [out] UINT *pdwHash
  );
  HRESULT __stdcall IsRunning (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] interface IMoniker *pmkNewlyRunning
  );
  HRESULT __stdcall GetTimeOfLastChange (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [out] struct _FILETIME *pfiletime
  );
  HRESULT __stdcall Inverse (
    [out] interface IMoniker **ppmk
  );
  HRESULT __stdcall CommonPrefixWith (
    [in] interface IMoniker *pmkOther,
    [out] interface IMoniker **ppmkPrefix
  );
  HRESULT __stdcall RelativePathTo (
    [in] interface IMoniker *pmkOther,
    [out] interface IMoniker **ppmkRelPath
  );
  HRESULT __stdcall GetDisplayName (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [out] LPWSTR ppszDisplayName
  );
  HRESULT __stdcall ParseDisplayName (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] LPWSTR pszDisplayName,
    [out] UINT *pchEaten,
    [out] interface IMoniker **ppmkOut
  );
  HRESULT __stdcall IsSystemMoniker (
    [out] UINT *pdwMksys
  );
};
[
  uuid(00000109-0000-0000-C000-000000000046)
]
interface IPersistStream : IPersist
{
  [id(1610743808)]
  HRESULT __stdcall IsDirty (void);
  HRESULT __stdcall Load (
    [in] interface IStream *pstm
  );
  HRESULT __stdcall Save (
    [in] interface IStream *pstm,
    [in] long fClearDirty
  );
  HRESULT __stdcall GetSizeMax (
    [out] struct _ULARGE_INTEGER *pcbSize
  );
};
[
  uuid(0000010C-0000-0000-C000-000000000046)
]
interface IPersist : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetClassID (
    [out] struct GUID *pClassID
  );
};
[
  uuid(0000000C-0000-0000-C000-000000000046)
]
interface IStream : ISequentialStream
{
  [id(1610743808)]
  HRESULT __stdcall RemoteSeek (
    [in] struct _LARGE_INTEGER dlibMove,
    [in] UINT dwOrigin,
    [out] struct _ULARGE_INTEGER *plibNewPosition
  );
  HRESULT __stdcall SetSize (
    [in] struct _ULARGE_INTEGER libNewSize
  );
  HRESULT __stdcall RemoteCopyTo (
    [in] interface IStream *pstm,
    [in] struct _ULARGE_INTEGER cb,
    [out] struct _ULARGE_INTEGER *pcbRead,
    [out] struct _ULARGE_INTEGER *pcbWritten
  );
  HRESULT __stdcall Commit (
    [in] UINT grfCommitFlags
  );
  HRESULT __stdcall Revert (void);
  HRESULT __stdcall LockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall UnlockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall Stat (
    [out] struct tagSTATSTG *pstatstg,
    [in] UINT grfStatFlag
  );
  HRESULT __stdcall Clone (
    [out] interface IStream **ppstm
  );
};
[
  uuid(0C733A30-2A1C-11CE-ADE5-00AA0044773D)
]
interface ISequentialStream : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteRead (
    [out] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbRead
  );
  HRESULT __stdcall RemoteWrite (
    [in] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbWritten
  );
};
[
  uuid(0000000E-0000-0000-C000-000000000046)
]
interface IBindCtx : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RegisterObjectBound (
    [in] IUnknown * pUnk
  );
  HRESULT __stdcall RevokeObjectBound (
    [in] IUnknown * pUnk
  );
  HRESULT __stdcall ReleaseBoundObjects (void);
  HRESULT __stdcall RemoteSetBindOptions (
    [in] struct tagBIND_OPTS2 *pbindopts
  );
  HRESULT __stdcall RemoteGetBindOptions (
    [in out] struct tagBIND_OPTS2 *pbindopts
  );
  HRESULT __stdcall GetRunningObjectTable (
    [out] interface IRunningObjectTable **pprot
  );
  HRESULT __stdcall RegisterObjectParam (
    [in] LPWSTR pszKey,
    [in] IUnknown * pUnk
  );
  HRESULT __stdcall GetObjectParam (
    [in] LPWSTR pszKey,
    [out] IUnknown **ppunk
  );
  HRESULT __stdcall EnumObjectParam (
    [out] interface IEnumString **ppEnum
  );
  HRESULT __stdcall RevokeObjectParam (
    [in] LPWSTR pszKey
  );
};
[
  uuid(00000010-0000-0000-C000-000000000046)
]
interface IRunningObjectTable : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Register (
    [in] UINT grfFlags,
    [in] IUnknown * punkObject,
    [in] interface IMoniker *pmkObjectName,
    [out] UINT *pdwRegister
  );
  HRESULT __stdcall Revoke (
    [in] UINT dwRegister
  );
  HRESULT __stdcall IsRunning (
    [in] interface IMoniker *pmkObjectName
  );
  HRESULT __stdcall GetObject (
    [in] interface IMoniker *pmkObjectName,
    [out] IUnknown **ppunkObject
  );
  HRESULT __stdcall NoteChangeTime (
    [in] UINT dwRegister,
    [in] struct _FILETIME *pfiletime
  );
  HRESULT __stdcall GetTimeOfLastChange (
    [in] interface IMoniker *pmkObjectName,
    [out] struct _FILETIME *pfiletime
  );
  HRESULT __stdcall EnumRunning (
    [out] interface IEnumMoniker **ppenumMoniker
  );
};
[
  uuid(00000101-0000-0000-C000-000000000046)
]
interface IEnumString : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] LPWSTR rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumString **ppEnum
  );
};
[
  uuid(8A674B4A-1F63-11D3-B64C-00C04F79498E),
  hidden,
  restricted
]
interface IEnumComponentTypes : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT celt,
    [out] dispinterface IComponentType **rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumComponentTypes **ppEnum
  );
};
[
  uuid(8B8EB248-FC2B-11D2-9D8C-00C04F72D980),
  hidden,
  restricted
]
interface IEnumTuningSpaces : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT celt,
    [out] dispinterface ITuningSpace **rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumTuningSpaces **ppEnum
  );
};
[
  uuid(B34505E0-2F0E-497B-80BC-D43F3B24ED7F),
  helpstring("BDA Comparison By Value interface"),
  hidden,
  nonextensible
]
interface IBDAComparable : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall CompareExact (
    [in] IDispatch * CompareTo,
    [out retval] long *Result
  );
  HRESULT __stdcall CompareEquivalent (
    [in] IDispatch * CompareTo,
    [in] UINT dwFlags,
    [out retval] long *Result
  );
  HRESULT __stdcall HashExact (
    [out retval] LONGLONG *Result
  );
  HRESULT __stdcall HashExactIncremental (
    [in] LONGLONG PartialResult,
    [out retval] LONGLONG *Result
  );
  HRESULT __stdcall HashEquivalent (
    [in] UINT dwFlags,
    [out retval] LONGLONG *Result
  );
  HRESULT __stdcall HashEquivalentIncremental (
    [in] LONGLONG PartialResult,
    [in] UINT dwFlags,
    [out retval] LONGLONG *Result
  );
};
[
  uuid(C0A4A1D4-2B3C-491A-BA22-499FBADD4D12),
  helpstring("BDA Create Tune RequestEx interface, implemented by Tuning Spaces")
]
interface IBDACreateTuneRequestEx : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall CreateTuneRequestEx (
    [in] struct GUID *TuneRequestIID,
    [out retval] dispinterface ITuneRequest **TuneRequest
  );
};
[
  uuid(8A674B48-1F63-11D3-B64C-00C04F79498E),
  helpstring("Create property bag backed by registry"),
  hidden,
  restricted
]
interface ICreatePropBagOnRegKey : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Create (
    [in] void *hkey,
    [in] LPWSTR subkey,
    [in] UINT ulOptions,
    [in] UINT samDesired,
    struct GUID *iid,
    [out] void *ppBag
  );
};
[
  uuid(3B21263F-26E8-489D-AAC4-924F7EFD9511),
  helpstring("Broadcast Event Service Firing/Reflecting Interface"),
  hidden,
  nonextensible
]
interface IBroadcastEvent : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Fire (
    [in] struct GUID EventID
  );
};
[
  uuid(359B3901-572C-4854-BB49-CDEF66606A25),
  helpstring("BDA ITuner Marshaler helper"),
  hidden,
  nonextensible
]
interface IRegisterTuner : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Register (
    [in] interface ITuner *pTuner,
    [in] interface IGraphBuilder *pGraph
  );
  HRESULT __stdcall Unregister (void);
};
[
  uuid(28C52640-018A-11D3-9D8E-00C04F72D980),
  helpstring("Tuner Interface"),
  hidden,
  nonextensible
]
interface ITuner : IUnknown
{
  [id(1610678272), propget]
  HRESULT __stdcall TuningSpace (
    [out retval] dispinterface ITuningSpace **TuningSpace
  );
  [id(1610678272), propput]
  HRESULT __stdcall TuningSpace (
    [in] dispinterface ITuningSpace *argNo1
  );
  [id(1610678274), restricted, hidden]
  HRESULT __stdcall EnumTuningSpaces (
    [out retval] interface IEnumTuningSpaces **ppEnum
  );
  [propget]
  HRESULT __stdcall TuneRequest (
    [out retval] dispinterface ITuneRequest **TuneRequest
  );
  [id(1610678275), propput]
  HRESULT __stdcall TuneRequest (
    [in] dispinterface ITuneRequest *argNo1
  );
  [id(1610678277)]
  HRESULT __stdcall Validate (
    [in] dispinterface ITuneRequest *TuneRequest
  );
  [propget]
  HRESULT __stdcall PreferredComponentTypes (
    [out retval] dispinterface IComponentTypes **ComponentTypes
  );
  [id(1610678278), propput]
  HRESULT __stdcall PreferredComponentTypes (
    [in] dispinterface IComponentTypes *argNo1
  );
  [id(1610678280), propget]
  HRESULT __stdcall SignalStrength (
    [out retval] long *Strength
  );
  HRESULT __stdcall TriggerSignalEvents (
    [in] long Interval
  );
};
[
  uuid(56A868A9-0AD4-11CE-B03A-0020AF0BA770)
]
interface IGraphBuilder : IFilterGraph
{
  [id(1610743808)]
  HRESULT __stdcall Connect (
    [in] interface IPin *ppinOut,
    [in] interface IPin *ppinIn
  );
  HRESULT __stdcall Render (
    [in] interface IPin *ppinOut
  );
  HRESULT __stdcall RenderFile (
    [in] LPWSTR lpcwstrFile,
    [in] LPWSTR lpcwstrPlayList
  );
  HRESULT __stdcall AddSourceFilter (
    [in] LPWSTR lpcwstrFileName,
    [in] LPWSTR lpcwstrFilterName,
    [out] interface IBaseFilter **ppFilter
  );
  HRESULT __stdcall SetLogFile (
    [in] ULONG_PTR hFile
  );
  HRESULT __stdcall Abort (void);
  HRESULT __stdcall ShouldOperationContinue (void);
};
[
  uuid(56A8689F-0AD4-11CE-B03A-0020AF0BA770)
]
interface IFilterGraph : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall AddFilter (
    [in] interface IBaseFilter *pFilter,
    [in] LPWSTR pName
  );
  HRESULT __stdcall RemoveFilter (
    [in] interface IBaseFilter *pFilter
  );
  HRESULT __stdcall EnumFilters (
    [out] interface IEnumFilters **ppEnum
  );
  HRESULT __stdcall FindFilterByName (
    [in] LPWSTR pName,
    [out] interface IBaseFilter **ppFilter
  );
  HRESULT __stdcall ConnectDirect (
    [in] interface IPin *ppinOut,
    [in] interface IPin *ppinIn,
    [in] struct _AMMediaType *pmt
  );
  HRESULT __stdcall Reconnect (
    [in] interface IPin *pPin
  );
  HRESULT __stdcall Disconnect (
    [in] interface IPin *pPin
  );
  HRESULT __stdcall SetDefaultSyncSource (void);
};
[
  uuid(56A86895-0AD4-11CE-B03A-0020AF0BA770)
]
interface IBaseFilter : IMediaFilter
{
  [id(1610809344)]
  HRESULT __stdcall EnumPins (
    [out] interface IEnumPins **ppEnum
  );
  HRESULT __stdcall FindPin (
    [in] LPWSTR ID,
    [out] interface IPin **ppPin
  );
  HRESULT __stdcall QueryFilterInfo (
    [out] struct _FilterInfo *pInfo
  );
  HRESULT __stdcall JoinFilterGraph (
    [in] interface IFilterGraph *pGraph,
    [in] LPWSTR pName
  );
  HRESULT __stdcall QueryVendorInfo (
    [out] LPWSTR pVendorInfo
  );
};
[
  uuid(56A86899-0AD4-11CE-B03A-0020AF0BA770)
]
interface IMediaFilter : IPersist
{
  [id(1610743808)]
  HRESULT __stdcall Stop (void);
  HRESULT __stdcall Pause (void);
  HRESULT __stdcall Run (
    LONGLONG tStart
  );
  HRESULT __stdcall GetState (
    [in] UINT dwMilliSecsTimeout,
    [out] enum _FilterState *State
  );
  HRESULT __stdcall SetSyncSource (
    [in] interface IReferenceClock *pClock
  );
  HRESULT __stdcall GetSyncSource (
    [out] interface IReferenceClock **pClock
  );
};
[
  uuid(56A86897-0AD4-11CE-B03A-0020AF0BA770)
]
interface IReferenceClock : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetTime (
    [out] LONGLONG *pTime
  );
  HRESULT __stdcall AdviseTime (
    [in] LONGLONG baseTime,
    [in] LONGLONG streamTime,
    [in] ULONG_PTR hEvent,
    [out] ULONG_PTR *pdwAdviseCookie
  );
  HRESULT __stdcall AdvisePeriodic (
    [in] LONGLONG startTime,
    [in] LONGLONG periodTime,
    [in] ULONG_PTR hSemaphore,
    [out] ULONG_PTR *pdwAdviseCookie
  );
  HRESULT __stdcall Unadvise (
    [in] ULONG_PTR dwAdviseCookie
  );
};
[
  uuid(56A86892-0AD4-11CE-B03A-0020AF0BA770)
]
interface IEnumPins : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT cPins,
    [out] interface IPin **ppPins,
    [out] UINT *pcFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT cPins
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumPins **ppEnum
  );
};
[
  uuid(56A86891-0AD4-11CE-B03A-0020AF0BA770)
]
interface IPin : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Connect (
    [in] interface IPin *pReceivePin,
    [in] struct _AMMediaType *pmt
  );
  HRESULT __stdcall ReceiveConnection (
    [in] interface IPin *pConnector,
    [in] struct _AMMediaType *pmt
  );
  HRESULT __stdcall Disconnect (void);
  HRESULT __stdcall ConnectedTo (
    [out] interface IPin **pPin
  );
  HRESULT __stdcall ConnectionMediaType (
    [out] struct _AMMediaType *pmt
  );
  HRESULT __stdcall QueryPinInfo (
    [out] struct _PinInfo *pInfo
  );
  HRESULT __stdcall QueryDirection (
    [out] enum _PinDirection *pPinDir
  );
  HRESULT __stdcall QueryId (
    [out] LPWSTR ID
  );
  HRESULT __stdcall QueryAccept (
    [in] struct _AMMediaType *pmt
  );
  HRESULT __stdcall EnumMediaTypes (
    [out] interface IEnumMediaTypes **ppEnum
  );
  HRESULT __stdcall QueryInternalConnections (
    [out] interface IPin **apPin,
    [in out] UINT *nPin
  );
  HRESULT __stdcall EndOfStream (void);
  HRESULT __stdcall BeginFlush (void);
  HRESULT __stdcall EndFlush (void);
  HRESULT __stdcall NewSegment (
    [in] LONGLONG tStart,
    [in] LONGLONG tStop,
    [in] double dRate
  );
};
[
  uuid(89C31040-846B-11CE-97D3-00AA0055595A)
]
interface IEnumMediaTypes : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT cMediaTypes,
    [out] struct _AMMediaType **ppMediaTypes,
    [out] UINT *pcFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT cMediaTypes
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumMediaTypes **ppEnum
  );
};
[
  uuid(56A86893-0AD4-11CE-B03A-0020AF0BA770)
]
interface IEnumFilters : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT cFilters,
    [out] interface IBaseFilter **ppFilter,
    [out] UINT *pcFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT cFilters
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumFilters **ppEnum
  );
};
[
  uuid(990237AE-AC11-4614-BE8F-DD217A4CB4CB),
  helpstring("IPersistTuneXmlUtility Interface"),
  hidden,
  nonextensible
]
interface IPersistTuneXmlUtility : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Deserialize (
    [in] VARIANT varValue,
    [out retval] IUnknown **ppObject
  );
};
[
  uuid(992E165F-EA24-4B2F-9A1D-009D92120451),
  helpstring("IPersistTuneXmlUtility2 Interface"),
  hidden,
  nonextensible
]
interface IPersistTuneXmlUtility2 : IPersistTuneXmlUtility
{
  [id(1610743808)]
  HRESULT __stdcall Serialize (
    [in] dispinterface ITuneRequest *piTuneRequest,
    [out retval] BSTR *pString
  );
};
[
  uuid(ED89A619-4C06-4B2F-99EB-C7669B13047C),
  helpstring("Extensible eventing service interface")
]
interface IESEventService : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall FireESEvent (
    interface IESEvent *pESEvent
  );
};
[
  uuid(1F0E5357-AF43-44E6-8547-654C645145D2),
  helpstring("IESEvent Interface")
]
interface IESEvent : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetEventId (
    [out retval] UINT *pdwEventId
  );
  HRESULT __stdcall GetEventType (
    [out retval] struct GUID *pguidEventType
  );
  HRESULT __stdcall SetCompletionStatus (
    [in] UINT dwResult
  );
  HRESULT __stdcall GetData (
    [out retval] UCHAR pbData[]*
  );
  HRESULT __stdcall GetStringData (
    [out retval] BSTR *pbstrData
  );
};
[
  uuid(ABD414BF-CFE5-4E5E-AF5B-4B4E49C5BFEB),
  helpstring("Eventing out-going client interface")
]
interface IESEvents : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall OnESEventReceived (
    [in] struct GUID guidEventType,
    [in] interface IESEvent *pESEvent
  );
};
[
  uuid(506A09B8-7F86-4E04-AC05-3303BFE8FC49),
  helpstring("event factory interface")
]
interface IESEventFactory : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall CreateESEvent (
    [in] IUnknown * pServiceProvider,
    [in] UINT dwEventId,
    [in] struct GUID guidEventType,
    [in] UINT dwEventDataLength,
    [in] UCHAR *pEventData,
    [in] BSTR bstrBaseUrl,
    [in] IUnknown * pInitContext,
    [out retval] interface IESEvent **ppESEvent
  );
};
[
  uuid(000001CF-0000-0000-C000-000000000046)
]
interface IMarshal2 : IMarshal
{
};
[
  uuid(00000003-0000-0000-C000-000000000046)
]
interface IMarshal : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetUnmarshalClass (
    [in] struct GUID *riid,
    [in] void *pv,
    [in] UINT dwDestContext,
    [in] void *pvDestContext,
    [in] UINT mshlflags,
    [out] struct GUID *pCid
  );
  HRESULT __stdcall GetMarshalSizeMax (
    [in] struct GUID *riid,
    [in] void *pv,
    [in] UINT dwDestContext,
    [in] void *pvDestContext,
    [in] UINT mshlflags,
    [out] UINT *pSize
  );
  HRESULT __stdcall MarshalInterface (
    [in] interface IStream *pstm,
    [in] struct GUID *riid,
    [in] void *pv,
    [in] UINT dwDestContext,
    [in] void *pvDestContext,
    [in] UINT mshlflags
  );
  HRESULT __stdcall UnmarshalInterface (
    [in] interface IStream *pstm,
    [in] struct GUID *riid,
    [out] void *ppv
  );
  HRESULT __stdcall ReleaseMarshalData (
    [in] interface IStream *pstm
  );
  HRESULT __stdcall DisconnectObject (
    [in] UINT dwReserved
  );
};

