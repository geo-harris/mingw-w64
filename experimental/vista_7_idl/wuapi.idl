/* Automated generated idl file <wuapilib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface IUpdateLockdown;
interface ISearchCompletedCallback;
interface IDownloadCompletedCallback;
interface IDownloadProgressChangedCallback;
interface IInstallationCompletedCallback;
interface IInstallationProgressChangedCallback;

/* Structure forward declarations.  */
struct _RemotableHandle;

/* Union record forward declarations.  */
union __MIDL_IWinTypes_0009;

/* Union record forward declarations.  */
dispinterface IUpdateException;
dispinterface IInvalidProductLicenseException;
dispinterface IAutomaticUpdatesSettings;
dispinterface IAutomaticUpdatesSettings2;
dispinterface IAutomaticUpdatesSettings3;
dispinterface IUpdate;
dispinterface IUpdateCollection;
dispinterface ICategoryCollection;
dispinterface ICategory;
dispinterface IImageInformation;
dispinterface IUpdateIdentity;
dispinterface IInstallationBehavior;
dispinterface IStringCollection;
dispinterface IUpdateDownloadContentCollection;
dispinterface IUpdateDownloadContent;
dispinterface IUpdate2;
dispinterface IUpdate3;
dispinterface IWindowsDriverUpdateEntry;
dispinterface IWindowsDriverUpdateEntryCollection;
dispinterface IUpdate4;
dispinterface IUpdate5;
dispinterface IWindowsDriverUpdate;
dispinterface IWindowsDriverUpdate2;
dispinterface IWindowsDriverUpdate3;
dispinterface IWindowsDriverUpdate4;
dispinterface IWindowsDriverUpdate5;
dispinterface ISearchJob;
dispinterface ISearchCompletedCallbackArgs;
dispinterface IDownloadJob;
dispinterface IDownloadProgress;
dispinterface IUpdateDownloadResult;
dispinterface IDownloadCompletedCallbackArgs;
dispinterface IDownloadProgressChangedCallbackArgs;
dispinterface IInstallationJob;
dispinterface IInstallationProgress;
dispinterface IUpdateInstallationResult;
dispinterface IInstallationCompletedCallbackArgs;
dispinterface IInstallationProgressChangedCallbackArgs;
dispinterface IUpdateHistoryEntry;
dispinterface IUpdateHistoryEntry2;
dispinterface IUpdateDownloadContent2;
dispinterface IUpdateSearcher3;
dispinterface IUpdateSearcher2;
dispinterface IUpdateSearcher;
dispinterface ISearchResult;
dispinterface IUpdateExceptionCollection;
dispinterface IUpdateHistoryEntryCollection;
dispinterface IWebProxy;
dispinterface ISystemInformation;
dispinterface IWindowsUpdateAgentInfo;
dispinterface IAutomaticUpdates2;
dispinterface IAutomaticUpdates;
dispinterface IAutomaticUpdatesResults;
dispinterface IUpdateDownloader;
dispinterface IDownloadResult;
dispinterface IUpdateInstaller2;
dispinterface IUpdateInstaller;
dispinterface IInstallationResult;
dispinterface IUpdateSession3;
dispinterface IUpdateSession2;
dispinterface IUpdateSession;
dispinterface IUpdateServiceManager2;
dispinterface IUpdateServiceManager;
dispinterface IUpdateServiceCollection;
dispinterface IUpdateService;
dispinterface IUpdateServiceRegistration;
dispinterface IUpdateService2;
dispinterface IInstallationAgent;

/* Union record forward declarations.  */
coclass StringCollection;
coclass UpdateSearcher;
coclass WebProxy;
coclass SystemInformation;
coclass WindowsUpdateAgentInfo;
coclass AutomaticUpdates;
coclass UpdateCollection;
coclass UpdateDownloader;
coclass UpdateInstaller;
coclass UpdateSession;
coclass UpdateServiceManager;
coclass InstallationAgent;

/* Enumeration declarations.  */
[
  helpstring("Defines the possible restrictions for IUpdateLockdown::LockDown() to impose on an object")
]
enum tagUpdateLockdownOption
{
  uloForWebsiteAccess = (int) 201326593
};
[
  helpstring("Defines the possible options for IUpdateServiceManager2::AddService2()")
]
enum tagAddServiceFlag
{
  asfAllowPendingRegistration = (int) 201326593,
  asfAllowOnlineRegistration = (int) 201326594,
  asfRegisterServiceWithAU = (int) 201326596
};
[
  helpstring("Defines the possible service options when adding an update service")
]
enum tagUpdateServiceOption
{
  usoNonVolatileService = (int) 201326593
};
[
  helpstring("Defines contexts under which an UpdateException can be raised.")
]
enum tagUpdateExceptionContext
{
  uecGeneral = (int) 201326593,
  uecWindowsDriver = (int) 201326594,
  uecWindowsInstaller = (int) 201326595
};
[
  helpstring("Defines possible ways in which elevated users will be notified about Automatic Updates events.")
]
enum tagAutomaticUpdatesNotificationLevel
{
  aunlNotConfigured = (int) 201326592,
  aunlDisabled = (int) 201326593,
  aunlNotifyBeforeDownload = (int) 201326594,
  aunlNotifyBeforeInstallation = (int) 201326595,
  aunlScheduledInstallation = (int) 201326596
};
[
  helpstring("Defines possible day(s) of week when Automatic Updates may (un)install updates.")
]
enum tagAutomaticUpdatesScheduledInstallationDay
{
  ausidEveryDay = (int) 201326592,
  ausidEverySunday = (int) 201326593,
  ausidEveryMonday = (int) 201326594,
  ausidEveryTuesday = (int) 201326595,
  ausidEveryWednesday = (int) 201326596,
  ausidEveryThursday = (int) 201326597,
  ausidEveryFriday = (int) 201326598,
  ausidEverySaturday = (int) 201326599
};
[
  helpstring("Defines types of users whose permissions can be checked via IAutomaticUpdatesSettings2.CheckPermission.")
]
enum tagAutomaticUpdatesUserType
{
  auutCurrentUser = (int) 201326593,
  auutLocalAdministrator = (int) 201326594
};
[
  helpstring("Defines operations against which users' permissions can be checked via IAutomaticUpdatesSettings2::CheckPermission().")
]
enum tagAutomaticUpdatesPermissionType
{
  auptSetNotificationLevel = (int) 201326593,
  auptDisableAutomaticUpdates = (int) 201326594,
  auptSetIncludeRecommendedUpdates = (int) 201326595,
  auptSetFeaturedUpdatesEnabled = (int) 201326596,
  auptSetNonAdministratorsElevated = (int) 201326597
};
[
  helpstring("Defines possible levels of impact that may be caused by (un)installing an Update.")
]
enum tagInstallationImpact
{
  iiNormal = (int) 201326592,
  iiMinor = (int) 201326593,
  iiRequiresExclusiveHandling = (int) 201326594
};
[
  helpstring("Defines possible reboot behaviors exhibited by an Update during (un)installation.")
]
enum tagInstallationRebootBehavior
{
  irbNeverReboots = (int) 201326592,
  irbAlwaysRequiresReboot = (int) 201326593,
  irbCanRequestReboot = (int) 201326594
};
[
  helpstring("Defines possible types of an update.")
]
enum tagUpdateType
{
  utSoftware = (int) 201326593,
  utDriver = (int) 201326594
};
[
  helpstring("Defines actions an Update can be explicitly deployed for.")
]
enum tagDeploymentAction
{
  daNone = (int) 201326592,
  daInstallation = (int) 201326593,
  daUninstallation = (int) 201326594,
  daDetection = (int) 201326595
};
[
  helpstring("Defines possible priorities for a download operation.")
]
enum tagDownloadPriority
{
  dpLow = (int) 201326593,
  dpNormal = (int) 201326594,
  dpHigh = (int) 201326595
};
[
  helpstring("Defines possible auto selection modes of update.")
]
enum tagAutoSelectionMode
{
  asLetWindowsUpdateDecide = (int) 201326592,
  asAutoSelectIfDownloaded = (int) 201326593,
  asNeverAutoSelect = (int) 201326594,
  asAlwaysAutoSelect = (int) 201326595
};
[
  helpstring("Defines possible auto download modes of update.")
]
enum tagAutoDownloadMode
{
  adLetWindowsUpdateDecide = (int) 201326592,
  adNeverAutoDownload = (int) 201326593,
  adAlwaysAutoDownload = (int) 201326594
};
[
  helpstring("Defines possible results of a download, (un)install, or verification operation on an update.")
]
enum tagOperationResultCode
{
  orcNotStarted = (int) 201326592,
  orcInProgress = (int) 201326593,
  orcSucceeded = (int) 201326594,
  orcSucceededWithErrors = (int) 201326595,
  orcFailed = (int) 201326596,
  orcAborted = (int) 201326597
};
[
  helpstring("Defines the possible phases during a download operation.")
]
enum tagDownloadPhase
{
  dphInitializing = (int) 201326593,
  dphDownloading = (int) 201326594,
  dphVerifying = (int) 201326595
};
[
  helpstring("Defines operations that can be attempted on an Update.")
]
enum tagUpdateOperation
{
  uoInstallation = (int) 201326593,
  uoUninstallation = (int) 201326594
};
[
  helpstring("Defines possible server selections the Searcher can search against.")
]
enum tagServerSelection
{
  ssDefault = (int) 201326592,
  ssManagedServer = (int) 201326593,
  ssWindowsUpdate = (int) 201326594,
  ssOthers = (int) 201326595
};
[
  helpstring("Defines possible search scopes for a search call. The scope may indicate user updatesfor the calling user updates for all users, machine updates or a combination of these.")
]
enum tagSearchScope
{
  searchScopeDefault = (int) 201326592,
  searchScopeMachineOnly = (int) 201326593,
  searchScopeCurrentUserOnly = (int) 201326594,
  searchScopeMachineAndCurrentUser = (int) 201326595,
  searchScopeMachineAndAllUsers = (int) 201326596,
  searchScopeAllUsers = (int) 201326597
};
[
  helpstring("Defines possible states of service registration.")
]
enum tagUpdateServiceRegistrationState
{
  usrsNotRegistered = (int) 201326593,
  usrsRegistrationPending = (int) 201326594,
  usrsRegistered = (int) 201326595
};

/* Structure/union declarations.  */
struct _RemotableHandle
{
  long fContext;
  union __MIDL_IWinTypes_0009 u;
};
union __MIDL_IWinTypes_0009
{
  long hInproc;
  long hRemote;
};

/* Type definitions.  */
[
  helpstring("Defines the possible restrictions for IUpdateLockdown::LockDown() to impose on an object")
]
typedef enum tagUpdateLockdownOption UpdateLockdownOption;
[
  helpstring("Defines the possible options for IUpdateServiceManager2::AddService2()")
]
typedef enum tagAddServiceFlag AddServiceFlag;
[
  helpstring("Defines the possible service options when adding an update service")
]
typedef enum tagUpdateServiceOption UpdateServiceOption;
[
  helpstring("Defines contexts under which an UpdateException can be raised.")
]
typedef enum tagUpdateExceptionContext UpdateExceptionContext;
[
  helpstring("Defines possible ways in which elevated users will be notified about Automatic Updates events.")
]
typedef enum tagAutomaticUpdatesNotificationLevel AutomaticUpdatesNotificationLevel;
[
  helpstring("Defines possible day(s) of week when Automatic Updates may (un)install updates.")
]
typedef enum tagAutomaticUpdatesScheduledInstallationDay AutomaticUpdatesScheduledInstallationDay;
[
  helpstring("Defines types of users whose permissions can be checked via IAutomaticUpdatesSettings2.CheckPermission.")
]
typedef enum tagAutomaticUpdatesUserType AutomaticUpdatesUserType;
[
  helpstring("Defines operations against which users' permissions can be checked via IAutomaticUpdatesSettings2::CheckPermission().")
]
typedef enum tagAutomaticUpdatesPermissionType AutomaticUpdatesPermissionType;
[
  helpstring("Defines possible levels of impact that may be caused by (un)installing an Update.")
]
typedef enum tagInstallationImpact InstallationImpact;
[
  helpstring("Defines possible reboot behaviors exhibited by an Update during (un)installation.")
]
typedef enum tagInstallationRebootBehavior InstallationRebootBehavior;
[
  helpstring("Defines possible types of an update.")
]
typedef enum tagUpdateType UpdateType;
[
  helpstring("Defines actions an Update can be explicitly deployed for.")
]
typedef enum tagDeploymentAction DeploymentAction;
[
  helpstring("Defines possible priorities for a download operation.")
]
typedef enum tagDownloadPriority DownloadPriority;
[
  helpstring("Defines possible auto selection modes of update.")
]
typedef enum tagAutoSelectionMode AutoSelectionMode;
[
  helpstring("Defines possible auto download modes of update.")
]
typedef enum tagAutoDownloadMode AutoDownloadMode;
[
  helpstring("Defines possible results of a download, (un)install, or verification operation on an update.")
]
typedef enum tagOperationResultCode OperationResultCode;
[
  helpstring("Defines the possible phases during a download operation.")
]
typedef enum tagDownloadPhase DownloadPhase;
[
  helpstring("Defines operations that can be attempted on an Update.")
]
typedef enum tagUpdateOperation UpdateOperation;
[
  helpstring("Defines possible server selections the Searcher can search against.")
]
typedef enum tagServerSelection ServerSelection;
[
  helpstring("Defines possible search scopes for a search call. The scope may indicate user updatesfor the calling user updates for all users, machine updates or a combination of these.")
]
typedef enum tagSearchScope SearchScope;
typedef struct _RemotableHandle * wireHWND;
[
  helpstring("Defines possible states of service registration.")
]
typedef enum tagUpdateServiceRegistrationState UpdateServiceRegistrationState;

[
  uuid(B596CC9F-56E5-419E-A622-E01BB457431E),
  version(2.0),
  helpstring("WUAPI 2.0 Type Library")
]
library wuapilib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(72C97D74-7C3B-40AE-B77D-ABDB22EBA6FB),
     helpstring("StringCollection Class"),
     cancreate
   ]
   coclass StringCollection
   {
     dispinterface IStringCollection;
   };
   [
     uuid(B699E5E8-67FF-4177-88B0-3684A3388BFB),
     helpstring("UpdateSearcher Class"),
     cancreate
   ]
   coclass UpdateSearcher
   {
     dispinterface IUpdateSearcher3;
   };
   [
     uuid(650503CF-9108-4DDC-A2CE-6C2341E1C582),
     helpstring("WebProxy Class"),
     cancreate
   ]
   coclass WebProxy
   {
     dispinterface IWebProxy;
   };
   [
     uuid(C01B9BA0-BEA7-41BA-B604-D0A36F469133),
     helpstring("SystemInformation Class"),
     cancreate
   ]
   coclass SystemInformation
   {
     dispinterface ISystemInformation;
   };
   [
     uuid(C2E88C2F-6F5B-4AAA-894B-55C847AD3A2D),
     helpstring("WindowsUpdateAgentInfo Class"),
     cancreate
   ]
   coclass WindowsUpdateAgentInfo
   {
     dispinterface IWindowsUpdateAgentInfo;
   };
   [
     uuid(BFE18E9C-6D87-4450-B37C-E02F0B373803),
     helpstring("AutomaticUpdates Class"),
     cancreate
   ]
   coclass AutomaticUpdates
   {
     dispinterface IAutomaticUpdates2;
   };
   [
     uuid(13639463-00DB-4646-803D-528026140D88),
     helpstring("UpdateCollection Class"),
     cancreate
   ]
   coclass UpdateCollection
   {
     dispinterface IUpdateCollection;
   };
   [
     uuid(5BAF654A-5A07-4264-A255-9FF54C7151E7),
     helpstring("UpdateDownloader Class"),
     cancreate
   ]
   coclass UpdateDownloader
   {
     dispinterface IUpdateDownloader;
   };
   [
     uuid(D2E0FE7F-D23E-48E1-93C0-6FA8CC346474),
     helpstring("UpdateInstaller Class"),
     cancreate
   ]
   coclass UpdateInstaller
   {
     dispinterface IUpdateInstaller2;
   };
   [
     uuid(4CB43D7F-7EEE-4906-8698-60DA1C38F2FE),
     helpstring("UpdateSession Class"),
     cancreate
   ]
   coclass UpdateSession
   {
     dispinterface IUpdateSession3;
   };
   [
     uuid(F8D253D9-89A4-4DAA-87B6-1168369F0B21),
     helpstring("UpdateServiceManager Class"),
     cancreate
   ]
   coclass UpdateServiceManager
   {
     dispinterface IUpdateServiceManager2;
   };
   [
     uuid(317E92FC-1679-46FD-A0B5-F08914DD8623),
     helpstring("InstallationAgent Class"),
     cancreate
   ]
   coclass InstallationAgent
   {
     dispinterface IInstallationAgent;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(A376DD5E-09D4-427F-AF7C-FED5B6E1C1D6),
     helpstring("IUpdateException Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateException : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Message (
       [out retval] BSTR *retval
     );
     [id(1610743809), propget]
     HRESULT __stdcall HResult (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall Context (
       [out retval] UpdateExceptionContext *retval
     );
   };
   [
     uuid(A37D00F5-7BB0-4953-B414-F9E98326F2E8),
     helpstring("IInvalidProductLicenseException Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IInvalidProductLicenseException : IUpdateException
   {
     [id(1610809345), propget]
     HRESULT __stdcall Product (
       [out retval] BSTR *retval
     );
   };
   [
     uuid(2EE48F22-AF3C-405F-8970-F71BE12EE9A2),
     helpstring("IAutomaticUpdatesSettings Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IAutomaticUpdatesSettings : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall NotificationLevel (
       [out retval] AutomaticUpdatesNotificationLevel *retval
     );
     [id(1610743809), propput]
     HRESULT __stdcall NotificationLevel (
       [in] AutomaticUpdatesNotificationLevel argNo1
     );
     [propget]
     HRESULT __stdcall ReadOnly (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall Required (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall ScheduledInstallationDay (
       [out retval] AutomaticUpdatesScheduledInstallationDay *retval
     );
     [id(1610743812), propput]
     HRESULT __stdcall ScheduledInstallationDay (
       [in] AutomaticUpdatesScheduledInstallationDay argNo1
     );
     [propget]
     HRESULT __stdcall ScheduledInstallationTime (
       [out retval] long *retval
     );
     [id(1610743813), propput]
     HRESULT __stdcall ScheduledInstallationTime (
       [in] long argNo1
     );
     HRESULT __stdcall Refresh (void);
     HRESULT __stdcall Save (void);
   };
   [
     uuid(6ABC136A-C3CA-4384-8171-CB2B1E59B8DC),
     helpstring("IAutomaticUpdatesSettings2 Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IAutomaticUpdatesSettings2 : IAutomaticUpdatesSettings
   {
     [id(1610809345), propget]
     HRESULT __stdcall IncludeRecommendedUpdates (
       [out retval] WINBOOL *retval
     );
     [id(1610809345), propput]
     HRESULT __stdcall IncludeRecommendedUpdates (
       [in] WINBOOL argNo1
     );
     HRESULT __stdcall CheckPermission (
       [in] AutomaticUpdatesUserType userType,
       [in] AutomaticUpdatesPermissionType permissionType,
       [out retval] WINBOOL *userHasPermission
     );
   };
   [
     uuid(B587F5C3-F57E-485F-BBF5-0D181C5CD0DC),
     helpstring("IAutomaticUpdatesSettings3 Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IAutomaticUpdatesSettings3 : IAutomaticUpdatesSettings2
   {
     [id(1610874881), propget]
     HRESULT __stdcall NonAdministratorsElevated (
       [out retval] WINBOOL *retval
     );
     [id(1610874881), propput]
     HRESULT __stdcall NonAdministratorsElevated (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall FeaturedUpdatesEnabled (
       [out retval] WINBOOL *retval
     );
     [id(1610874882), propput]
     HRESULT __stdcall FeaturedUpdatesEnabled (
       [in] WINBOOL argNo1
     );
   };
   [
     uuid(6A92B07A-D821-4682-B423-5C805022CC4D),
     helpstring("IUpdate Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdate : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Title (
       [out retval] BSTR *retval
     );
     [id(1610743809), propget]
     HRESULT __stdcall AutoSelectOnWebSites (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall BundledUpdates (
       [out retval] dispinterface IUpdateCollection **retval
     );
     [propget]
     HRESULT __stdcall CanRequireSource (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall Categories (
       [out retval] dispinterface ICategoryCollection **retval
     );
     [propget]
     HRESULT __stdcall Deadline (
       [out retval] VARIANT *retval
     );
     [propget]
     HRESULT __stdcall DeltaCompressedContentAvailable (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall DeltaCompressedContentPreferred (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall EulaAccepted (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall EulaText (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall HandlerID (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall Identity (
       [out retval] dispinterface IUpdateIdentity **retval
     );
     [propget]
     HRESULT __stdcall Image (
       [out retval] dispinterface IImageInformation **retval
     );
     [propget]
     HRESULT __stdcall InstallationBehavior (
       [out retval] dispinterface IInstallationBehavior **retval
     );
     [propget]
     HRESULT __stdcall IsBeta (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall IsDownloaded (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall IsHidden (
       [out retval] WINBOOL *retval
     );
     [id(1610743825), propput]
     HRESULT __stdcall IsHidden (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall IsInstalled (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall IsMandatory (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall IsUninstallable (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall Languages (
       [out retval] dispinterface IStringCollection **retval
     );
     [propget]
     HRESULT __stdcall LastDeploymentChangeTime (
       [out retval] DATE *retval
     );
     [propget]
     HRESULT __stdcall MaxDownloadSize (
       [out retval] DECIMAL *retval
     );
     [propget]
     HRESULT __stdcall MinDownloadSize (
       [out retval] DECIMAL *retval
     );
     [propget]
     HRESULT __stdcall MoreInfoUrls (
       [out retval] dispinterface IStringCollection **retval
     );
     [propget]
     HRESULT __stdcall MsrcSeverity (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall RecommendedCpuSpeed (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall RecommendedHardDiskSpace (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall RecommendedMemory (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall ReleaseNotes (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall SecurityBulletinIDs (
       [out retval] dispinterface IStringCollection **retval
     );
     [id(1610743841), propget]
     HRESULT __stdcall SupersededUpdateIDs (
       [out retval] dispinterface IStringCollection **retval
     );
     [propget]
     HRESULT __stdcall SupportUrl (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall Type (
       [out retval] UpdateType *retval
     );
     [propget]
     HRESULT __stdcall UninstallationNotes (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall UninstallationBehavior (
       [out retval] dispinterface IInstallationBehavior **retval
     );
     [propget]
     HRESULT __stdcall UninstallationSteps (
       [out retval] dispinterface IStringCollection **retval
     );
     [id(1610743848), propget]
     HRESULT __stdcall KBArticleIDs (
       [out retval] dispinterface IStringCollection **retval
     );
     [id(1610743847)]
     HRESULT __stdcall AcceptEula (void);
     [id(1610743849), propget]
     HRESULT __stdcall DeploymentAction (
       [out retval] DeploymentAction *retval
     );
     HRESULT __stdcall CopyFromCache (
       [in] BSTR path,
       [in] WINBOOL toExtractCabFiles
     );
     [propget]
     HRESULT __stdcall DownloadPriority (
       [out retval] DownloadPriority *retval
     );
     [propget]
     HRESULT __stdcall DownloadContents (
       [out retval] dispinterface IUpdateDownloadContentCollection **retval
     );
   };
   [
     uuid(07F7438C-7709-4CA5-B518-91279288134E),
     helpstring("IUpdateCollection Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateCollection : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long index,
       [out retval] dispinterface IUpdate **retval
     );
     [id(0), propput]
     HRESULT __stdcall Item (
       [in] long index,
       [in] dispinterface IUpdate *argNo2
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **retval
     );
     [id(1610743809), propget]
     HRESULT __stdcall Count (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall ReadOnly (
       [out retval] WINBOOL *retval
     );
     HRESULT __stdcall Add (
       [in] dispinterface IUpdate *value,
       [out retval] long *retval
     );
     HRESULT __stdcall Clear (void);
     HRESULT __stdcall Copy (
       [out retval] dispinterface IUpdateCollection **retval
     );
     HRESULT __stdcall Insert (
       [in] long index,
       [in] dispinterface IUpdate *value
     );
     HRESULT __stdcall RemoveAt (
       [in] long index
     );
   };
   [
     uuid(3A56BFB8-576C-43F7-9335-FE4838FD7E37),
     helpstring("ICategoryCollection Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ICategoryCollection : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long index,
       [out retval] dispinterface ICategory **retval
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **retval
     );
     [id(1610743809), propget]
     HRESULT __stdcall Count (
       [out retval] long *retval
     );
   };
   [
     uuid(81DDC1B8-9D35-47A6-B471-5B80F519223B),
     helpstring("ICategory Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ICategory : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *retval
     );
     [id(1610743809), propget]
     HRESULT __stdcall CategoryID (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall Children (
       [out retval] dispinterface ICategoryCollection **retval
     );
     [propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall Image (
       [out retval] dispinterface IImageInformation **retval
     );
     [propget]
     HRESULT __stdcall Order (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall Parent (
       [out retval] dispinterface ICategory **retval
     );
     [propget]
     HRESULT __stdcall Type (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall Updates (
       [out retval] dispinterface IUpdateCollection **retval
     );
   };
   [
     uuid(7C907864-346C-4AEB-8F3F-57DA289F969F),
     helpstring("IImageInformation Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IImageInformation : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall AltText (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall Height (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall Source (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall Width (
       [out retval] long *retval
     );
   };
   [
     uuid(46297823-9940-4C09-AED9-CD3EA6D05968),
     helpstring("IUpdateIdentity Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateIdentity : IDispatch
   {
     [id(1610743810), propget]
     HRESULT __stdcall RevisionNumber (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall UpdateID (
       [out retval] BSTR *retval
     );
   };
   [
     uuid(D9A59339-E245-4DBD-9686-4D5763E39624),
     helpstring("IInstallationBehavior Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IInstallationBehavior : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall CanRequestUserInput (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall Impact (
       [out retval] InstallationImpact *retval
     );
     [propget]
     HRESULT __stdcall RebootBehavior (
       [out retval] InstallationRebootBehavior *retval
     );
     [propget]
     HRESULT __stdcall RequiresNetworkConnectivity (
       [out retval] WINBOOL *retval
     );
   };
   [
     uuid(EFF90582-2DDC-480F-A06D-60F3FBC362C3),
     helpstring("IStringCollection Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IStringCollection : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long index,
       [out retval] BSTR *retval
     );
     [id(0), propput]
     HRESULT __stdcall Item (
       [in] long index,
       [in] BSTR argNo2
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **retval
     );
     [id(1610743809), propget]
     HRESULT __stdcall Count (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall ReadOnly (
       [out retval] WINBOOL *retval
     );
     HRESULT __stdcall Add (
       [in] BSTR value,
       [out retval] long *retval
     );
     HRESULT __stdcall Clear (void);
     HRESULT __stdcall Copy (
       [out retval] dispinterface IStringCollection **retval
     );
     HRESULT __stdcall Insert (
       [in] long index,
       [in] BSTR value
     );
     HRESULT __stdcall RemoveAt (
       [in] long index
     );
   };
   [
     uuid(BC5513C8-B3B8-4BF7-A4D4-361C0D8C88BA),
     helpstring("IUpdateDownloadContentCollection Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateDownloadContentCollection : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long index,
       [out retval] dispinterface IUpdateDownloadContent **retval
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **retval
     );
     [id(1610743809), propget]
     HRESULT __stdcall Count (
       [out retval] long *retval
     );
   };
   [
     uuid(54A2CB2D-9A0C-48B6-8A50-9ABB69EE2D02),
     helpstring("IUpdateDownloadContent Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateDownloadContent : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall DownloadUrl (
       [out retval] BSTR *retval
     );
   };
   [
     uuid(144FE9B0-D23D-4A8B-8634-FB4457533B7A),
     helpstring("IUpdate2 Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdate2 : IUpdate
   {
     [id(1610809345), propget]
     HRESULT __stdcall RebootRequired (
       [out retval] WINBOOL *retval
     );
     [id(1610809347), propget]
     HRESULT __stdcall IsPresent (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall CveIDs (
       [out retval] dispinterface IStringCollection **retval
     );
     [id(1610809346)]
     HRESULT __stdcall CopyToCache (
       [in] dispinterface IStringCollection *pFiles
     );
   };
   [
     uuid(112EDA6B-95B3-476F-9D90-AEE82C6B8181),
     helpstring("IUpdate3 Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdate3 : IUpdate2
   {
     [id(1610874881), propget]
     HRESULT __stdcall BrowseOnly (
       [out retval] WINBOOL *retval
     );
   };
   [
     uuid(ED8BFE40-A60B-42EA-9652-817DFCFA23EC),
     helpstring("IWindowsDriverUpdateEntry Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IWindowsDriverUpdateEntry : IDispatch
   {
     [id(1610809345), propget]
     HRESULT __stdcall DriverClass (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall DriverHardwareID (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall DriverManufacturer (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall DriverModel (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall DriverProvider (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall DriverVerDate (
       [out retval] DATE *retval
     );
     [propget]
     HRESULT __stdcall DeviceProblemNumber (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall DeviceStatus (
       [out retval] long *retval
     );
   };
   [
     uuid(0D521700-A372-4BEF-828B-3D00C10ADEBD),
     helpstring("IWindowsDriverUpdateEntryCollection Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IWindowsDriverUpdateEntryCollection : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long index,
       [out retval] dispinterface IWindowsDriverUpdateEntry **retval
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **retval
     );
     [id(1610743809), propget]
     HRESULT __stdcall Count (
       [out retval] long *retval
     );
   };
   [
     uuid(27E94B0D-5139-49A2-9A61-93522DC54652),
     helpstring("IUpdate4 Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdate4 : IUpdate3
   {
     [id(1610940417), propget]
     HRESULT __stdcall PerUser (
       [out retval] WINBOOL *retval
     );
   };
   [
     uuid(C1C2F21A-D2F4-4902-B5C6-8A081C19A890),
     helpstring("IUpdate5 Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdate5 : IUpdate4
   {
     [id(1611005953), propget]
     HRESULT __stdcall AutoSelection (
       [out retval] AutoSelectionMode *retval
     );
     [propget]
     HRESULT __stdcall AutoDownload (
       [out retval] AutoDownloadMode *retval
     );
   };
   [
     uuid(B383CD1A-5CE9-4504-9F63-764B1236F191),
     helpstring("IWindowsDriverUpdate Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IWindowsDriverUpdate : IUpdate
   {
     [id(1610809345), propget]
     HRESULT __stdcall DriverClass (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall DriverHardwareID (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall DriverManufacturer (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall DriverModel (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall DriverProvider (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall DriverVerDate (
       [out retval] DATE *retval
     );
     [propget]
     HRESULT __stdcall DeviceProblemNumber (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall DeviceStatus (
       [out retval] long *retval
     );
   };
   [
     uuid(615C4269-7A48-43BD-96B7-BF6CA27D6C3E),
     helpstring("IWindowsDriverUpdate2 Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IWindowsDriverUpdate2 : IWindowsDriverUpdate
   {
     [id(1610874881), propget]
     HRESULT __stdcall RebootRequired (
       [out retval] WINBOOL *retval
     );
     [id(1610874883), propget]
     HRESULT __stdcall IsPresent (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall CveIDs (
       [out retval] dispinterface IStringCollection **retval
     );
     [id(1610874882)]
     HRESULT __stdcall CopyToCache (
       [in] dispinterface IStringCollection *pFiles
     );
   };
   [
     uuid(49EBD502-4A96-41BD-9E3E-4C5057F4250C),
     helpstring("IWindowsDriverUpdate3 Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IWindowsDriverUpdate3 : IWindowsDriverUpdate2
   {
     [id(1610940417), propget]
     HRESULT __stdcall BrowseOnly (
       [out retval] WINBOOL *retval
     );
   };
   [
     uuid(004C6A2B-0C19-4C69-9F5C-A269B2560DB9),
     helpstring("IWindowsDriverUpdate4 Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IWindowsDriverUpdate4 : IWindowsDriverUpdate3
   {
     [id(1611005953), propget]
     HRESULT __stdcall WindowsDriverUpdateEntries (
       [out retval] dispinterface IWindowsDriverUpdateEntryCollection **retval
     );
     [propget]
     HRESULT __stdcall PerUser (
       [out retval] WINBOOL *retval
     );
   };
   [
     uuid(70CF5C82-8642-42BB-9DBC-0CFD263C6C4F),
     helpstring("IWindowsDriverUpdate5 Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IWindowsDriverUpdate5 : IWindowsDriverUpdate4
   {
     [id(1611071489), propget]
     HRESULT __stdcall AutoSelection (
       [out retval] AutoSelectionMode *retval
     );
     [propget]
     HRESULT __stdcall AutoDownload (
       [out retval] AutoDownloadMode *retval
     );
   };
   [
     uuid(7366EA16-7A1A-4EA2-B042-973D3E9CD99B),
     helpstring("ISearchJob Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ISearchJob : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall AsyncState (
       [out retval] VARIANT *retval
     );
     [propget]
     HRESULT __stdcall IsCompleted (
       [out retval] WINBOOL *retval
     );
     HRESULT __stdcall CleanUp (void);
     HRESULT __stdcall RequestAbort (void);
   };
   [
     uuid(A700A634-2850-4C47-938A-9E4B6E5AF9A6),
     helpstring("ISearchCompletedCallbackArgs Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ISearchCompletedCallbackArgs : IDispatch
   {
   };
   [
     uuid(C574DE85-7358-43F6-AAE8-8697E62D8BA7),
     helpstring("IDownloadJob Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDownloadJob : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall AsyncState (
       [out retval] VARIANT *retval
     );
     [propget]
     HRESULT __stdcall IsCompleted (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall Updates (
       [out retval] dispinterface IUpdateCollection **retval
     );
     HRESULT __stdcall CleanUp (void);
     HRESULT __stdcall GetProgress (
       [out retval] dispinterface IDownloadProgress **retval
     );
     HRESULT __stdcall RequestAbort (void);
   };
   [
     uuid(D31A5BAC-F719-4178-9DBB-5E2CB47FD18A),
     helpstring("IDownloadProgress Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDownloadProgress : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall CurrentUpdateBytesDownloaded (
       [out retval] DECIMAL *retval
     );
     [propget]
     HRESULT __stdcall CurrentUpdateBytesToDownload (
       [out retval] DECIMAL *retval
     );
     [propget]
     HRESULT __stdcall CurrentUpdateIndex (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall PercentComplete (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall TotalBytesDownloaded (
       [out retval] DECIMAL *retval
     );
     [propget]
     HRESULT __stdcall TotalBytesToDownload (
       [out retval] DECIMAL *retval
     );
     HRESULT __stdcall GetUpdateResult (
       [in] long updateIndex,
       [out retval] dispinterface IUpdateDownloadResult **retval
     );
     [propget]
     HRESULT __stdcall CurrentUpdateDownloadPhase (
       [out retval] DownloadPhase *retval
     );
     [propget]
     HRESULT __stdcall CurrentUpdatePercentComplete (
       [out retval] long *retval
     );
   };
   [
     uuid(BF99AF76-B575-42AD-8AA4-33CBB5477AF1),
     helpstring("IUpdateDownloadResult Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateDownloadResult : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall HResult (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall ResultCode (
       [out retval] OperationResultCode *retval
     );
   };
   [
     uuid(FA565B23-498C-47A0-979D-E7D5B1813360),
     helpstring("IDownloadCompletedCallbackArgs Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDownloadCompletedCallbackArgs : IDispatch
   {
   };
   [
     uuid(324FF2C6-4981-4B04-9412-57481745AB24),
     helpstring("IDownloadProgressChangedCallbackArgs Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDownloadProgressChangedCallbackArgs : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall Progress (
       [out retval] dispinterface IDownloadProgress **retval
     );
   };
   [
     uuid(5C209F0B-BAD5-432A-9556-4699BED2638A),
     helpstring("IInstallationJob Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IInstallationJob : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall AsyncState (
       [out retval] VARIANT *retval
     );
     [propget]
     HRESULT __stdcall IsCompleted (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall Updates (
       [out retval] dispinterface IUpdateCollection **retval
     );
     HRESULT __stdcall CleanUp (void);
     HRESULT __stdcall GetProgress (
       [out retval] dispinterface IInstallationProgress **retval
     );
     HRESULT __stdcall RequestAbort (void);
   };
   [
     uuid(345C8244-43A3-4E32-A368-65F073B76F36),
     helpstring("IInstallationProgress Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IInstallationProgress : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall CurrentUpdateIndex (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall CurrentUpdatePercentComplete (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall PercentComplete (
       [out retval] long *retval
     );
     HRESULT __stdcall GetUpdateResult (
       [in] long updateIndex,
       [out retval] dispinterface IUpdateInstallationResult **retval
     );
   };
   [
     uuid(D940F0F8-3CBB-4FD0-993F-471E7F2328AD),
     helpstring("IUpdateInstallationResult Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateInstallationResult : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall HResult (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall RebootRequired (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall ResultCode (
       [out retval] OperationResultCode *retval
     );
   };
   [
     uuid(250E2106-8EFB-4705-9653-EF13C581B6A1),
     helpstring("IInstallationCompletedCallbackArgs Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IInstallationCompletedCallbackArgs : IDispatch
   {
   };
   [
     uuid(E4F14E1E-689D-4218-A0B9-BC189C484A01),
     helpstring("IInstallationProgressChangedCallbackArgs Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IInstallationProgressChangedCallbackArgs : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall Progress (
       [out retval] dispinterface IInstallationProgress **retval
     );
   };
   [
     uuid(BE56A644-AF0E-4E0E-A311-C1D8E695CBFF),
     helpstring("IUpdateHistoryEntry Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateHistoryEntry : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall Operation (
       [out retval] UpdateOperation *retval
     );
     [propget]
     HRESULT __stdcall ResultCode (
       [out retval] OperationResultCode *retval
     );
     [propget]
     HRESULT __stdcall HResult (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall Date (
       [out retval] DATE *retval
     );
     [propget]
     HRESULT __stdcall UpdateIdentity (
       [out retval] dispinterface IUpdateIdentity **retval
     );
     [propget]
     HRESULT __stdcall Title (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall UnmappedResultCode (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall ClientApplicationID (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall ServerSelection (
       [out retval] ServerSelection *retval
     );
     [propget]
     HRESULT __stdcall ServiceID (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall UninstallationSteps (
       [out retval] dispinterface IStringCollection **retval
     );
     [propget]
     HRESULT __stdcall UninstallationNotes (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall SupportUrl (
       [out retval] BSTR *retval
     );
   };
   [
     uuid(C2BFB780-4539-4132-AB8C-0A8772013AB6),
     helpstring("IUpdateHistoryEntry2 Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateHistoryEntry2 : IUpdateHistoryEntry
   {
     [id(1610809345), propget]
     HRESULT __stdcall Categories (
       [out retval] dispinterface ICategoryCollection **retval
     );
   };
   [
     uuid(C97AD11B-F257-420B-9D9F-377F733F6F68),
     helpstring("IUpdateDownloadContent2 Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateDownloadContent2 : IUpdateDownloadContent
   {
     [id(1610809345), propget]
     HRESULT __stdcall IsDeltaCompressedContent (
       [out retval] WINBOOL *retval
     );
   };
   [
     uuid(04C6895D-EAF2-4034-97F3-311DE9BE413A),
     helpstring("IUpdateSearcher3 Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateSearcher3 : IUpdateSearcher2
   {
     [id(1610874881), propget]
     HRESULT __stdcall SearchScope (
       [out retval] SearchScope *retval
     );
     [id(1610874881), propput]
     HRESULT __stdcall SearchScope (
       [in] SearchScope argNo1
     );
   };
   [
     uuid(4CBDCB2D-1589-4BEB-BD1C-3E582FF0ADD0),
     helpstring("IUpdateSearcher2 Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateSearcher2 : IUpdateSearcher
   {
     [id(1610809345), propget]
     HRESULT __stdcall IgnoreDownloadPriority (
       [out retval] WINBOOL *retval
     );
     [id(1610809345), propput]
     HRESULT __stdcall IgnoreDownloadPriority (
       [in] WINBOOL argNo1
     );
   };
   [
     uuid(8F45ABF1-F9AE-4B95-A933-F0F66E5056EA),
     helpstring("IUpdateSearcher Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateSearcher : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall CanAutomaticallyUpgradeService (
       [out retval] WINBOOL *retval
     );
     [id(1610743809), propput]
     HRESULT __stdcall CanAutomaticallyUpgradeService (
       [in] WINBOOL argNo1
     );
     [id(1610743811), propget]
     HRESULT __stdcall ClientApplicationID (
       [out retval] BSTR *retval
     );
     [id(1610743811), propput]
     HRESULT __stdcall ClientApplicationID (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall IncludePotentiallySupersededUpdates (
       [out retval] WINBOOL *retval
     );
     [id(1610743812), propput]
     HRESULT __stdcall IncludePotentiallySupersededUpdates (
       [in] WINBOOL argNo1
     );
     [id(1610743815), propget]
     HRESULT __stdcall ServerSelection (
       [out retval] ServerSelection *retval
     );
     [id(1610743815), propput]
     HRESULT __stdcall ServerSelection (
       [in] ServerSelection argNo1
     );
     HRESULT __stdcall BeginSearch (
       [in] BSTR criteria,
       [in] IUnknown * onCompleted,
       [in] VARIANT state,
       [out retval] dispinterface ISearchJob **retval
     );
     HRESULT __stdcall EndSearch (
       [in] dispinterface ISearchJob *searchJob,
       [out retval] dispinterface ISearchResult **retval
     );
     HRESULT __stdcall EscapeString (
       [in] BSTR unescaped,
       [out retval] BSTR *retval
     );
     HRESULT __stdcall QueryHistory (
       [in] long startIndex,
       [in] long Count,
       [out retval] dispinterface IUpdateHistoryEntryCollection **retval
     );
     HRESULT __stdcall Search (
       [in] BSTR criteria,
       [out retval] dispinterface ISearchResult **retval
     );
     [propget]
     HRESULT __stdcall Online (
       [out retval] WINBOOL *retval
     );
     [id(1610743821), propput]
     HRESULT __stdcall Online (
       [in] WINBOOL argNo1
     );
     HRESULT __stdcall GetTotalHistoryCount (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall ServiceID (
       [out retval] BSTR *retval
     );
     [id(1610743823), propput]
     HRESULT __stdcall ServiceID (
       [in] BSTR argNo1
     );
   };
   [
     uuid(D40CFF62-E08C-4498-941A-01E25F0FD33C),
     helpstring("ISearchResult Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ISearchResult : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall ResultCode (
       [out retval] OperationResultCode *retval
     );
     [propget]
     HRESULT __stdcall RootCategories (
       [out retval] dispinterface ICategoryCollection **retval
     );
     [propget]
     HRESULT __stdcall Updates (
       [out retval] dispinterface IUpdateCollection **retval
     );
     [propget]
     HRESULT __stdcall Warnings (
       [out retval] dispinterface IUpdateExceptionCollection **retval
     );
   };
   [
     uuid(503626A3-8E14-4729-9355-0FE664BD2321),
     helpstring("IUpdateExceptionCollection Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateExceptionCollection : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long index,
       [out retval] dispinterface IUpdateException **retval
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **retval
     );
     [id(1610743809), propget]
     HRESULT __stdcall Count (
       [out retval] long *retval
     );
   };
   [
     uuid(A7F04F3C-A290-435B-AADF-A116C3357A5C),
     helpstring("IUpdateHistoryEntryCollection Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateHistoryEntryCollection : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long index,
       [out retval] dispinterface IUpdateHistoryEntry **retval
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **retval
     );
     [id(1610743809), propget]
     HRESULT __stdcall Count (
       [out retval] long *retval
     );
   };
   [
     uuid(174C81FE-AECD-4DAE-B8A0-2C6318DD86A8),
     helpstring("IWebProxy Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IWebProxy : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall Address (
       [out retval] BSTR *retval
     );
     [id(1610743809), propput]
     HRESULT __stdcall Address (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall BypassList (
       [out retval] dispinterface IStringCollection **retval
     );
     [id(1610743810), propput]
     HRESULT __stdcall BypassList (
       [in] dispinterface IStringCollection *argNo1
     );
     [propget]
     HRESULT __stdcall BypassProxyOnLocal (
       [out retval] WINBOOL *retval
     );
     [id(1610743811), propput]
     HRESULT __stdcall BypassProxyOnLocal (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall ReadOnly (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall UserName (
       [out retval] BSTR *retval
     );
     [id(1610743813), propput]
     HRESULT __stdcall UserName (
       [in] BSTR argNo1
     );
     HRESULT __stdcall SetPassword (
       [in] BSTR value
     );
     HRESULT __stdcall PromptForCredentials (
       [in] IUnknown * parentWindow,
       [in] BSTR Title
     );
     [restricted]
     HRESULT __stdcall PromptForCredentialsFromHwnd (
       [in] wireHWND parentWindow,
       [in] BSTR Title
     );
     [propget]
     HRESULT __stdcall AutoDetect (
       [out retval] WINBOOL *retval
     );
     [id(1610743817), propput]
     HRESULT __stdcall AutoDetect (
       [in] WINBOOL argNo1
     );
   };
   [
     uuid(ADE87BF7-7B56-4275-8FAB-B9B0E591844B),
     helpstring("ISystemInformation Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ISystemInformation : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall OemHardwareSupportLink (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall RebootRequired (
       [out retval] WINBOOL *retval
     );
   };
   [
     uuid(85713FA1-7796-4FA2-BE3B-E2D6124DD373),
     helpstring("IWindowsUpdateAgentInfo Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IWindowsUpdateAgentInfo : IDispatch
   {
     [id(1610743809)]
     HRESULT __stdcall GetInfo (
       [in] VARIANT varInfoIdentifier,
       [out retval] VARIANT *retval
     );
   };
   [
     uuid(4A2F5C31-CFD9-410E-B7FB-29A653973A0F),
     helpstring("IAutomaticUpdates2 Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IAutomaticUpdates2 : IAutomaticUpdates
   {
     [id(1610809345), propget]
     HRESULT __stdcall Results (
       [out retval] dispinterface IAutomaticUpdatesResults **retval
     );
   };
   [
     uuid(673425BF-C082-4C7C-BDFD-569464B8E0CE),
     helpstring("IAutomaticUpdates Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IAutomaticUpdates : IDispatch
   {
     [id(1610743809)]
     HRESULT __stdcall DetectNow (void);
     HRESULT __stdcall Pause (void);
     HRESULT __stdcall Resume (void);
     HRESULT __stdcall ShowSettingsDialog (void);
     [propget]
     HRESULT __stdcall Settings (
       [out retval] dispinterface IAutomaticUpdatesSettings **retval
     );
     [propget]
     HRESULT __stdcall ServiceEnabled (
       [out retval] WINBOOL *retval
     );
     HRESULT __stdcall EnableService (void);
   };
   [
     uuid(E7A4D634-7942-4DD9-A111-82228BA33901),
     helpstring("IAutomaticUpdatesResults Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IAutomaticUpdatesResults : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall LastSearchSuccessDate (
       [out retval] VARIANT *retval
     );
     [propget]
     HRESULT __stdcall LastInstallationSuccessDate (
       [out retval] VARIANT *retval
     );
   };
   [
     uuid(68F1C6F9-7ECC-4666-A464-247FE12496C3),
     helpstring("IUpdateDownloader Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateDownloader : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall ClientApplicationID (
       [out retval] BSTR *retval
     );
     [id(1610743809), propput]
     HRESULT __stdcall ClientApplicationID (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall IsForced (
       [out retval] WINBOOL *retval
     );
     [id(1610743810), propput]
     HRESULT __stdcall IsForced (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall Priority (
       [out retval] DownloadPriority *retval
     );
     [id(1610743811), propput]
     HRESULT __stdcall Priority (
       [in] DownloadPriority argNo1
     );
     [propget]
     HRESULT __stdcall Updates (
       [out retval] dispinterface IUpdateCollection **retval
     );
     [id(1610743812), propput]
     HRESULT __stdcall Updates (
       [in] dispinterface IUpdateCollection *argNo1
     );
     HRESULT __stdcall BeginDownload (
       [in] IUnknown * onProgressChanged,
       [in] IUnknown * onCompleted,
       [in] VARIANT state,
       [out retval] dispinterface IDownloadJob **retval
     );
     HRESULT __stdcall Download (
       [out retval] dispinterface IDownloadResult **retval
     );
     HRESULT __stdcall EndDownload (
       [in] dispinterface IDownloadJob *value,
       [out retval] dispinterface IDownloadResult **retval
     );
   };
   [
     uuid(DAA4FDD0-4727-4DBE-A1E7-745DCA317144),
     helpstring("IDownloadResult Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDownloadResult : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall HResult (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall ResultCode (
       [out retval] OperationResultCode *retval
     );
     HRESULT __stdcall GetUpdateResult (
       [in] long updateIndex,
       [out retval] dispinterface IUpdateDownloadResult **retval
     );
   };
   [
     uuid(3442D4FE-224D-4CEE-98CF-30E0C4D229E6),
     helpstring("IUpdateInstaller2 Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateInstaller2 : IUpdateInstaller
   {
     [id(1610809345), propget]
     HRESULT __stdcall ForceQuiet (
       [out retval] WINBOOL *retval
     );
     [id(1610809345), propput]
     HRESULT __stdcall ForceQuiet (
       [in] WINBOOL argNo1
     );
   };
   [
     uuid(7B929C68-CCDC-4226-96B1-8724600B54C2),
     helpstring("IUpdateInstaller Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateInstaller : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall ClientApplicationID (
       [out retval] BSTR *retval
     );
     [id(1610743809), propput]
     HRESULT __stdcall ClientApplicationID (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall IsForced (
       [out retval] WINBOOL *retval
     );
     [id(1610743810), propput]
     HRESULT __stdcall IsForced (
       [in] WINBOOL argNo1
     );
     [propget, restricted]
     HRESULT __stdcall ParentHwnd (
       [out retval] wireHWND *retval
     );
     [id(1610743811), propput, restricted]
     HRESULT __stdcall ParentHwnd (
       [in] wireHWND argNo1
     );
     [propput]
     HRESULT __stdcall parentWindow (
       [in] IUnknown * argNo1
     );
     [id(1610743812), propget]
     HRESULT __stdcall parentWindow (
       [out retval] IUnknown **retval
     );
     [propget]
     HRESULT __stdcall Updates (
       [out retval] dispinterface IUpdateCollection **retval
     );
     [id(1610743813), propput]
     HRESULT __stdcall Updates (
       [in] dispinterface IUpdateCollection *argNo1
     );
     HRESULT __stdcall BeginInstall (
       [in] IUnknown * onProgressChanged,
       [in] IUnknown * onCompleted,
       [in] VARIANT state,
       [out retval] dispinterface IInstallationJob **retval
     );
     HRESULT __stdcall BeginUninstall (
       [in] IUnknown * onProgressChanged,
       [in] IUnknown * onCompleted,
       [in] VARIANT state,
       [out retval] dispinterface IInstallationJob **retval
     );
     HRESULT __stdcall EndInstall (
       [in] dispinterface IInstallationJob *value,
       [out retval] dispinterface IInstallationResult **retval
     );
     HRESULT __stdcall EndUninstall (
       [in] dispinterface IInstallationJob *value,
       [out retval] dispinterface IInstallationResult **retval
     );
     HRESULT __stdcall Install (
       [out retval] dispinterface IInstallationResult **retval
     );
     HRESULT __stdcall RunWizard (
       [in opt] BSTR dialogTitle = L"",
       [out retval] dispinterface IInstallationResult **retval
     );
     [propget]
     HRESULT __stdcall IsBusy (
       [out retval] WINBOOL *retval
     );
     HRESULT __stdcall Uninstall (
       [out retval] dispinterface IInstallationResult **retval
     );
     [propget]
     HRESULT __stdcall AllowSourcePrompts (
       [out retval] WINBOOL *retval
     );
     [id(1610743822), propput]
     HRESULT __stdcall AllowSourcePrompts (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall RebootRequiredBeforeInstallation (
       [out retval] WINBOOL *retval
     );
   };
   [
     uuid(A43C56D6-7451-48D4-AF96-B6CD2D0D9B7A),
     helpstring("IInstallationResult Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IInstallationResult : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall HResult (
       [out retval] long *retval
     );
     [propget]
     HRESULT __stdcall RebootRequired (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall ResultCode (
       [out retval] OperationResultCode *retval
     );
     HRESULT __stdcall GetUpdateResult (
       [in] long updateIndex,
       [out retval] dispinterface IUpdateInstallationResult **retval
     );
   };
   [
     uuid(918EFD1E-B5D8-4C90-8540-AEB9BDC56F9D),
     helpstring("IUpdateSession3 Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateSession3 : IUpdateSession2
   {
     [id(1610874881)]
     HRESULT __stdcall CreateUpdateServiceManager (
       [out retval] dispinterface IUpdateServiceManager2 **retval
     );
     HRESULT __stdcall QueryHistory (
       [in] BSTR criteria,
       [in] long startIndex,
       [in] long Count,
       [out retval] dispinterface IUpdateHistoryEntryCollection **retval
     );
   };
   [
     uuid(91CAF7B0-EB23-49ED-9937-C52D817F46F7),
     helpstring("IUpdateSession2 Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateSession2 : IUpdateSession
   {
     [id(1610809345), propget]
     HRESULT __stdcall UserLocale (
       [out retval] UINT *retval
     );
     [id(1610809345), propput]
     HRESULT __stdcall UserLocale (
       [in] UINT argNo1
     );
   };
   [
     uuid(816858A4-260D-4260-933A-2585F1ABC76B),
     helpstring("IUpdateSession Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateSession : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall ClientApplicationID (
       [out retval] BSTR *retval
     );
     [id(1610743809), propput]
     HRESULT __stdcall ClientApplicationID (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall ReadOnly (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall WebProxy (
       [out retval] dispinterface IWebProxy **retval
     );
     [id(1610743811), propput]
     HRESULT __stdcall WebProxy (
       [in] dispinterface IWebProxy *argNo1
     );
     HRESULT __stdcall CreateUpdateSearcher (
       [out retval] dispinterface IUpdateSearcher **retval
     );
     HRESULT __stdcall CreateUpdateDownloader (
       [out retval] dispinterface IUpdateDownloader **retval
     );
     HRESULT __stdcall CreateUpdateInstaller (
       [out retval] dispinterface IUpdateInstaller **retval
     );
   };
   [
     uuid(0BB8531D-7E8D-424F-986C-A0B8F60A3E7B),
     helpstring("IUpdateServiceManager2 Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateServiceManager2 : IUpdateServiceManager
   {
     [id(1610809345), propget]
     HRESULT __stdcall ClientApplicationID (
       [out retval] BSTR *retval
     );
     [id(1610809345), propput]
     HRESULT __stdcall ClientApplicationID (
       [in] BSTR argNo1
     );
     HRESULT __stdcall QueryServiceRegistration (
       [in] BSTR ServiceID,
       [out retval] dispinterface IUpdateServiceRegistration **retval
     );
     HRESULT __stdcall AddService2 (
       [in] BSTR ServiceID,
       [in] long flags,
       [in] BSTR authorizationCabPath,
       [out retval] dispinterface IUpdateServiceRegistration **retval
     );
   };
   [
     uuid(23857E3C-02BA-44A3-9423-B1C900805F37),
     helpstring("IUpdateServiceManager Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateServiceManager : IDispatch
   {
     [id(1610743809), propget]
     HRESULT __stdcall Services (
       [out retval] dispinterface IUpdateServiceCollection **retval
     );
     HRESULT __stdcall AddService (
       [in] BSTR ServiceID,
       [in] BSTR authorizationCabPath,
       [out retval] dispinterface IUpdateService **retval
     );
     HRESULT __stdcall RegisterServiceWithAU (
       [in] BSTR ServiceID
     );
     HRESULT __stdcall RemoveService (
       [in] BSTR ServiceID
     );
     HRESULT __stdcall UnregisterServiceWithAU (
       [in] BSTR ServiceID
     );
     HRESULT __stdcall AddScanPackageService (
       [in] BSTR serviceName,
       [in] BSTR scanFileLocation,
       [in opt] long flags = (int) 201326592,
       [out retval] dispinterface IUpdateService **ppService
     );
     [id(1610678279)]
     HRESULT __stdcall SetOption (
       [in] BSTR optionName,
       [in] VARIANT optionValue
     );
   };
   [
     uuid(9B0353AA-0E52-44FF-B8B0-1F7FA0437F88),
     helpstring("IUpdateServiceCollection Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateServiceCollection : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long index,
       [out retval] dispinterface IUpdateService **retval
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **retval
     );
     [id(1610743809), propget]
     HRESULT __stdcall Count (
       [out retval] long *retval
     );
   };
   [
     uuid(76B3B17E-AED6-4DA5-85F0-83587F81ABE3),
     helpstring("IUpdateService Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateService : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *retval
     );
     [id(1610743809), propget]
     HRESULT __stdcall ContentValidationCert (
       [out retval] VARIANT *retval
     );
     [propget]
     HRESULT __stdcall ExpirationDate (
       [out retval] DATE *retval
     );
     [propget]
     HRESULT __stdcall IsManaged (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall IsRegisteredWithAU (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall IssueDate (
       [out retval] DATE *retval
     );
     [propget]
     HRESULT __stdcall OffersWindowsUpdates (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall RedirectUrls (
       [out retval] dispinterface IStringCollection **retval
     );
     [propget]
     HRESULT __stdcall ServiceID (
       [out retval] BSTR *retval
     );
     [id(1610743818), propget]
     HRESULT __stdcall IsScanPackageService (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall CanRegisterWithAU (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall ServiceUrl (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall SetupPrefix (
       [out retval] BSTR *retval
     );
   };
   [
     uuid(DDE02280-12B3-4E0B-937B-6747F6ACB286),
     helpstring("IUpdateServiceRegistration Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateServiceRegistration : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall RegistrationState (
       [out retval] UpdateServiceRegistrationState *retval
     );
     [id(1610743809), propget]
     HRESULT __stdcall ServiceID (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall IsPendingRegistrationWithAU (
       [out retval] WINBOOL *retval
     );
     [propget]
     HRESULT __stdcall Service (
       [out retval] dispinterface IUpdateService2 **retval
     );
   };
   [
     uuid(1518B460-6518-4172-940F-C75883B24CEB),
     helpstring("IUpdateService2 Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IUpdateService2 : IUpdateService
   {
     [id(1610809345), propget]
     HRESULT __stdcall IsDefaultAUService (
       [out retval] WINBOOL *retval
     );
   };
   [
     uuid(925CBC18-A2EA-4648-BF1C-EC8BADCFE20A),
     helpstring("IInstallationAgent Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IInstallationAgent : IDispatch
   {
     [id(1610743809)]
     HRESULT __stdcall RecordInstallationResult (
       [in] BSTR installationResultCookie,
       [in] long HResult,
       [in] dispinterface IStringCollection *extendedReportingData
     );
   };

};

/* Interface declarations.  */
[
  uuid(A976C28D-75A1-42AA-94AE-8AF8B872089A),
  helpstring("IUpdateLockdown Interface"),
  nonextensible,
  oleautomation
]
interface IUpdateLockdown : IUnknown
{
  [id(1610678273)]
  HRESULT __stdcall LockDown (
    [in] long flags
  );
};
[
  uuid(88AEE058-D4B0-4725-A2F1-814A67AE964C),
  helpstring("ISearchCompletedCallback Interface"),
  nonextensible,
  oleautomation
]
interface ISearchCompletedCallback : IUnknown
{
  [id(1610678273)]
  HRESULT __stdcall Invoke (
    [in] dispinterface ISearchJob *searchJob,
    [in] dispinterface ISearchCompletedCallbackArgs *callbackArgs
  );
};
[
  uuid(77254866-9F5B-4C8E-B9E2-C77A8530D64B),
  helpstring("IDownloadCompletedCallback Interface"),
  nonextensible,
  oleautomation
]
interface IDownloadCompletedCallback : IUnknown
{
  [id(1610678273)]
  HRESULT __stdcall Invoke (
    [in] dispinterface IDownloadJob *downloadJob,
    [in] dispinterface IDownloadCompletedCallbackArgs *callbackArgs
  );
};
[
  uuid(8C3F1CDD-6173-4591-AEBD-A56A53CA77C1),
  helpstring("IDownloadProgressChangedCallback Interface"),
  nonextensible,
  oleautomation
]
interface IDownloadProgressChangedCallback : IUnknown
{
  [id(1610678273)]
  HRESULT __stdcall Invoke (
    [in] dispinterface IDownloadJob *downloadJob,
    [in] dispinterface IDownloadProgressChangedCallbackArgs *callbackArgs
  );
};
[
  uuid(45F4F6F3-D602-4F98-9A8A-3EFA152AD2D3),
  helpstring("IInstallationCompletedCallback Interface"),
  nonextensible,
  oleautomation
]
interface IInstallationCompletedCallback : IUnknown
{
  [id(1610678273)]
  HRESULT __stdcall Invoke (
    [in] dispinterface IInstallationJob *installationJob,
    [in] dispinterface IInstallationCompletedCallbackArgs *callbackArgs
  );
};
[
  uuid(E01402D5-F8DA-43BA-A012-38894BD048F1),
  helpstring("IInstallationProgressChangedCallback Interface"),
  nonextensible,
  oleautomation
]
interface IInstallationProgressChangedCallback : IUnknown
{
  [id(1610678273)]
  HRESULT __stdcall Invoke (
    [in] dispinterface IInstallationJob *installationJob,
    [in] dispinterface IInstallationProgressChangedCallbackArgs *callbackArgs
  );
};

