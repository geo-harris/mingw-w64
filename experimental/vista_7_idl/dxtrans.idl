/* Automated generated idl file <dxtranslib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface IDXTransformFactory;
interface IServiceProvider;
interface IPropertyBag;
interface IErrorLog;
interface IDXTransform;
interface IDXBaseObject;
interface IDXSurfaceFactory;
interface IStream;
interface ISequentialStream;
interface IDXSurface;
interface IDXDCLock;
interface IDXTaskManager;
interface IDXTScale;
interface IDXSurfaceModifier;
interface IDXLookupTable;
interface IDXGradient;
interface IDXTScaleOutput;

/* Structure forward declarations.  */
struct DXBNDS;
struct DXDBND;
struct DXDBND64;
struct DXCBND;
struct DXCBND64;
struct DXVEC;
struct _LARGE_INTEGER;
struct _ULARGE_INTEGER;
struct tagSTATSTG;
struct _FILETIME;
struct DXSAMPLE;
struct _RemotableHandle;
struct DXTMTASKINFO;
struct tagSIZE;
struct tagPOINT;
struct DXBASESAMPLE;

/* Union record forward declarations.  */
union __MIDL___MIDL_itf_dxtrans_0000_0001_0001;
union __MIDL___MIDL_itf_dxtrans_0000_0001_0002;
union __MIDL_IWinTypes_0009;

/* Union record forward declarations.  */
dispinterface ICSSFilterDispatch;

/* Union record forward declarations.  */
coclass DXTransformFactory;
coclass DXTaskManager;
coclass DXTScale;
coclass DXSurface;
coclass DXSurfaceModifier;
coclass DXGradient;
coclass DXTFilter;

/* Enumeration declarations.  */
enum DXBNDTYPE
{
  DXBT_DISCRETE = (int) 201326592,
  DXBT_DISCRETE64 = (int) 201326593,
  DXBT_CONTINUOUS = (int) 201326594,
  DXBT_CONTINUOUS64 = (int) 201326595
};
enum DXSAMPLEFORMATENUM
{
  DXPF_FLAGSMASK = (int) -65536,
  DXPF_NONPREMULT = (int) 201392128,
  DXPF_TRANSPARENCY = (int) 201457664,
  DXPF_TRANSLUCENCY = (int) 201588736,
  DXPF_2BITERROR = (int) 203423744,
  DXPF_3BITERROR = (int) 204472320,
  DXPF_4BITERROR = (int) 205520896,
  DXPF_5BITERROR = (int) 206569472,
  DXPF_ERRORMASK = (int) 208666624,
  DXPF_NONSTANDARD = (int) 201326592,
  DXPF_PMARGB32 = (int) 201719809,
  DXPF_ARGB32 = (int) 201785346,
  DXPF_ARGB4444 = (int) 205979651,
  DXPF_A8 = (int) 201719812,
  DXPF_RGB32 = (int) 201326597,
  DXPF_RGB24 = (int) 201326598,
  DXPF_RGB565 = (int) 204472327,
  DXPF_RGB555 = (int) 204472328,
  DXPF_RGB8 = (int) 206569481,
  DXPF_ARGB1555 = (int) 204603402,
  DXPF_RGB32_CK = (int) 201457669,
  DXPF_RGB24_CK = (int) 201457670,
  DXPF_RGB555_CK = (int) 204603400,
  DXPF_RGB565_CK = (int) 204603399,
  DXPF_RGB8_CK = (int) 206700553
};
enum DXSURFMODCOMPOP
{
  DXSURFMOD_COMP_OVER = (int) 201326592,
  DXSURFMOD_COMP_ALPHA_MASK = (int) 201326593,
  DXSURFMOD_COMP_MAX_VALID = (int) 201326593
};
enum DXTFILTER_STATUS
{
  DXTFILTER_STATUS_Stopped = (int) 201326592,
  DXTFILTER_STATUS_Applied = (int) 201326593,
  DXTFILTER_STATUS_Playing = (int) 201326594,
  DXTFILTER_STATUS_MAX = (int) 201326595
};

/* Structure/union declarations.  */
struct DXBNDS
{
  enum DXBNDTYPE eType;
  union __MIDL___MIDL_itf_dxtrans_0000_0001_0001 u;
};
union __MIDL___MIDL_itf_dxtrans_0000_0001_0001
{
  struct DXDBND D[4];
  struct DXDBND64 LD[4];
  struct DXCBND C[4];
  struct DXCBND64 LC[4];
};
struct DXDBND
{
  long Min;
  long Max;
};
struct DXDBND64
{
  LONGLONG Min;
  LONGLONG Max;
};
struct DXCBND
{
  float Min;
  float Max;
};
struct DXCBND64
{
  double Min;
  double Max;
};
struct DXVEC
{
  enum DXBNDTYPE eType;
  union __MIDL___MIDL_itf_dxtrans_0000_0001_0002 u;
};
union __MIDL___MIDL_itf_dxtrans_0000_0001_0002
{
  long D[4];
  LONGLONG LD[4];
  float C[4];
  double LC[4];
};
struct _LARGE_INTEGER
{
  LONGLONG QuadPart;
};
struct _ULARGE_INTEGER
{
  ULONGLONG QuadPart;
};
struct tagSTATSTG
{
  LPWSTR pwcsName;
  UINT type;
  struct _ULARGE_INTEGER cbSize;
  struct _FILETIME mtime;
  struct _FILETIME ctime;
  struct _FILETIME atime;
  UINT grfMode;
  UINT grfLocksSupported;
  struct GUID clsid;
  UINT grfStateBits;
  UINT reserved;
};
struct _FILETIME
{
  UINT dwLowDateTime;
  UINT dwHighDateTime;
};
struct DXSAMPLE
{
  UCHAR Blue;
  UCHAR Green;
  UCHAR Red;
  UCHAR Alpha;
};
struct _RemotableHandle
{
  long fContext;
  union __MIDL_IWinTypes_0009 u;
};
union __MIDL_IWinTypes_0009
{
  long hInproc;
  long hRemote;
};
struct DXTMTASKINFO
{
  void *pfnTaskProc;
  void *pTaskData;
  void *pfnCompletionAPC;
  UINT dwCompletionData;
  struct GUID *pRequestID;
};
struct tagSIZE
{
  long cx;
  long cy;
};
struct tagPOINT
{
  long x;
  long y;
};
struct DXBASESAMPLE
{
  UCHAR Blue;
  UCHAR Green;
  UCHAR Red;
  UCHAR Alpha;
};

/* Type definitions.  */
typedef struct _RemotableHandle * wireHDC;
typedef ULONGLONG ULONG_PTR;

[
  uuid(54314D1D-35FE-11D1-81A1-0000F87557DB),
  version(1.1),
  helpstring("Microsoft DirectX Transforms Core Type Library")
]
library dxtranslib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(D1FE6762-FC48-11D0-883A-3C8B00C10000),
     helpstring("DXTransformFactory Class"),
     cancreate
   ]
   coclass DXTransformFactory
   {
     interface IDXTransformFactory;
     interface IDXSurfaceFactory;
   };
   [
     uuid(4CB26C03-FF93-11D0-817E-0000F87557DB),
     helpstring("DXTaskManager Class"),
     cancreate
   ]
   coclass DXTaskManager
   {
     interface IDXTaskManager;
   };
   [
     uuid(555278E2-05DB-11D1-883A-3C8B00C10000),
     helpstring("DXTScale Class"),
     cancreate
   ]
   coclass DXTScale
   {
     interface IDXTScale;
   };
   [
     uuid(0E890F83-5F79-11D1-9043-00C04FD9189D),
     helpstring("DXSurface Class"),
     cancreate
   ]
   coclass DXSurface
   {
     interface IDXSurface;
   };
   [
     uuid(3E669F1D-9C23-11D1-9053-00C04FD9189D),
     helpstring("DXSurfaceModifier Class"),
     cancreate
   ]
   coclass DXSurfaceModifier
   {
     interface IDXSurfaceModifier;
   };
   [
     uuid(C6365470-F667-11D1-9067-00C04FD9189D),
     helpstring("DXGradient Class"),
     cancreate
   ]
   coclass DXGradient
   {
     interface IDXGradient;
   };
   [
     uuid(385A91BC-1E8A-4E4A-A7A6-F4FC1E6CA1BD),
     helpstring("DXTFilter Class"),
     cancreate
   ]
   coclass DXTFilter
   {
     dispinterface ICSSFilterDispatch;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(9519152B-9484-4A6C-B6A7-4F25E92D6C6B),
     helpstring("ICSSFilterDispatch Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ICSSFilterDispatch : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Percent (
       [out retval] float *pVal
     );
     [id(1), propput]
     HRESULT __stdcall Percent (
       [in] float argNo1
     );
     [propget]
     HRESULT __stdcall Duration (
       [out retval] float *pVal
     );
     [id(2), propput]
     HRESULT __stdcall Duration (
       [in] float argNo1
     );
     [propget]
     HRESULT __stdcall Enabled (
       [out retval] WINBOOL *pfVal
     );
     [id(3), propput]
     HRESULT __stdcall Enabled (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall Status (
       [out retval] enum DXTFILTER_STATUS *peVal
     );
     HRESULT __stdcall Apply (void);
     HRESULT __stdcall Play (
       [in opt] VARIANT varDuration
     );
     HRESULT __stdcall Stop (void);
   };

};

/* Interface declarations.  */
[
  uuid(6A950B2B-A971-11D1-81C8-0000F87557DB),
  helpstring("IDXTransformFactory Interface")
]
interface IDXTransformFactory : IServiceProvider
{
  [id(1610743808)]
  HRESULT __stdcall SetService (
    [in] struct GUID *guidService,
    [in] IUnknown * pUnkService,
    [in] long bWeakReference
  );
  HRESULT __stdcall CreateTransform (
    [in] IUnknown **punkInputs,
    [in] UINT ulNumInputs,
    [in] IUnknown **punkOutputs,
    [in] UINT ulNumOutputs,
    [in] interface IPropertyBag *pInitProps,
    [in] interface IErrorLog *pErrLog,
    [in] struct GUID *TransCLSID,
    [in] struct GUID *TransIID,
    [out] void *ppTransform
  );
  HRESULT __stdcall InitializeTransform (
    [in] interface IDXTransform *pTransform,
    [in] IUnknown **punkInputs,
    [in] UINT ulNumInputs,
    [in] IUnknown **punkOutputs,
    [in] UINT ulNumOutputs,
    [in] interface IPropertyBag *pInitProps,
    [in] interface IErrorLog *pErrLog
  );
};
[
  uuid(6D5140C1-7436-11CE-8034-00AA006009FA)
]
interface IServiceProvider : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteQueryService (
    [in] struct GUID *guidService,
    [in] struct GUID *riid,
    [out] IUnknown **ppvObject
  );
};
[
  uuid(55272A00-42CB-11CE-8135-00AA004BB851)
]
interface IPropertyBag : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteRead (
    [in] LPWSTR pszPropName,
    [out] VARIANT *pVar,
    [in] interface IErrorLog *pErrorLog,
    [in] UINT varType,
    [in] IUnknown * pUnkObj
  );
  HRESULT __stdcall Write (
    [in] LPWSTR pszPropName,
    [in] VARIANT *pVar
  );
};
[
  uuid(3127CA40-446E-11CE-8135-00AA004BB851)
]
interface IErrorLog : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall AddError (
    [in] LPWSTR pszPropName,
    [in] struct EXCEPINFO *pExcepInfo
  );
};
[
  uuid(30A5FB78-E11F-11D1-9064-00C04FD9189D),
  helpstring("IDXTransform Interface")
]
interface IDXTransform : IDXBaseObject
{
  [id(1610743808)]
  HRESULT __stdcall Setup (
    [in] IUnknown **punkInputs,
    [in] UINT ulNumInputs,
    [in] IUnknown **punkOutputs,
    [in] UINT ulNumOutputs,
    [in] UINT dwFlags
  );
  HRESULT __stdcall Execute (
    [in] struct GUID *pRequestID,
    [in] struct DXBNDS *pClipBnds,
    [in] struct DXVEC *pPlacement
  );
  HRESULT __stdcall MapBoundsIn2Out (
    [in] struct DXBNDS *pInBounds,
    [in] UINT ulNumInBnds,
    [in] UINT ulOutIndex,
    [out] struct DXBNDS *pOutBounds
  );
  HRESULT __stdcall MapBoundsOut2In (
    [in] UINT ulOutIndex,
    [in] struct DXBNDS *pOutBounds,
    [in] UINT ulInIndex,
    [out] struct DXBNDS *pInBounds
  );
  HRESULT __stdcall SetMiscFlags (
    [in] UINT dwMiscFlags
  );
  HRESULT __stdcall GetMiscFlags (
    [out] UINT *pdwMiscFlags
  );
  HRESULT __stdcall GetInOutInfo (
    [in] long bIsOutput,
    [in] UINT ulIndex,
    [out] UINT *pdwFlags,
    [out] struct GUID *pIDs,
    [in out] UINT *pcIDs,
    [out] IUnknown **ppUnkCurrentObject
  );
  HRESULT __stdcall SetQuality (
    [in] float fQuality
  );
  HRESULT __stdcall GetQuality (
    [out] float *fQuality
  );
};
[
  uuid(17B59B2B-9CC8-11D1-9053-00C04FD9189D),
  helpstring("IDXBaseObject Interface")
]
interface IDXBaseObject : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetGenerationId (
    [out] UINT *pID
  );
  HRESULT __stdcall IncrementGenerationId (
    [in] long bRefresh
  );
  HRESULT __stdcall GetObjectSize (
    [out] UINT *pcbSize
  );
};
[
  uuid(144946F5-C4D4-11D1-81D1-0000F87557DB),
  helpstring("IDXSurfaceFactory Interface")
]
interface IDXSurfaceFactory : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall CreateSurface (
    [in] IUnknown * pDirectDraw,
    [in] void *pDDSurfaceDesc,
    [in] struct GUID *pFormatID,
    [in] struct DXBNDS *pBounds,
    [in] UINT dwFlags,
    [in] IUnknown * punkOuter,
    [in] struct GUID *riid,
    [out] void *ppDXSurface
  );
  HRESULT __stdcall CreateFromDDSurface (
    [in] IUnknown * pDDrawSurface,
    [in] struct GUID *pFormatID,
    [in] UINT dwFlags,
    [in] IUnknown * punkOuter,
    [in] struct GUID *riid,
    [out] void *ppDXSurface
  );
  HRESULT __stdcall LoadImage (
    [in] LPWSTR pszFileName,
    [in] IUnknown * pDirectDraw,
    [in] void *pDDSurfaceDesc,
    [in] struct GUID *pFormatID,
    [in] struct GUID *riid,
    [out] void *ppDXSurface
  );
  HRESULT __stdcall LoadImageFromStream (
    [in] interface IStream *pStream,
    [in] IUnknown * pDirectDraw,
    [in] void *pDDSurfaceDesc,
    [in] struct GUID *pFormatID,
    [in] struct GUID *riid,
    [out] void *ppDXSurface
  );
  HRESULT __stdcall CopySurfaceToNewFormat (
    [in] interface IDXSurface *pSrc,
    [in] IUnknown * pDirectDraw,
    [in] void *pDDSurfaceDesc,
    [in] struct GUID *pDestFormatID,
    [out] interface IDXSurface **ppNewSurface
  );
  HRESULT __stdcall CreateD3DRMTexture (
    [in] interface IDXSurface *pSrc,
    [in] IUnknown * pDirectDraw,
    [in] IUnknown * pD3DRM3,
    [in] struct GUID *riid,
    [out] void *ppTexture3
  );
  HRESULT __stdcall BitBlt (
    [in] interface IDXSurface *pDest,
    [in] struct DXVEC *pPlacement,
    [in] interface IDXSurface *pSrc,
    [in] struct DXBNDS *pClipBounds,
    [in] UINT dwFlags
  );
};
[
  uuid(0000000C-0000-0000-C000-000000000046)
]
interface IStream : ISequentialStream
{
  [id(1610743808)]
  HRESULT __stdcall RemoteSeek (
    [in] struct _LARGE_INTEGER dlibMove,
    [in] UINT dwOrigin,
    [out] struct _ULARGE_INTEGER *plibNewPosition
  );
  HRESULT __stdcall SetSize (
    [in] struct _ULARGE_INTEGER libNewSize
  );
  HRESULT __stdcall RemoteCopyTo (
    [in] interface IStream *pstm,
    [in] struct _ULARGE_INTEGER cb,
    [out] struct _ULARGE_INTEGER *pcbRead,
    [out] struct _ULARGE_INTEGER *pcbWritten
  );
  HRESULT __stdcall Commit (
    [in] UINT grfCommitFlags
  );
  HRESULT __stdcall Revert (void);
  HRESULT __stdcall LockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall UnlockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall Stat (
    [out] struct tagSTATSTG *pstatstg,
    [in] UINT grfStatFlag
  );
  HRESULT __stdcall Clone (
    [out] interface IStream **ppstm
  );
};
[
  uuid(0C733A30-2A1C-11CE-ADE5-00AA0044773D)
]
interface ISequentialStream : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteRead (
    [out] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbRead
  );
  HRESULT __stdcall RemoteWrite (
    [in] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbWritten
  );
};
[
  uuid(B39FD73F-E139-11D1-9065-00C04FD9189D),
  helpstring("IDXSurface Interface")
]
interface IDXSurface : IDXBaseObject
{
  [id(1610743808)]
  HRESULT __stdcall GetPixelFormat (
    [out] struct GUID *pFormatID,
    [out] enum DXSAMPLEFORMATENUM *pSampleFormatEnum
  );
  HRESULT __stdcall GetBounds (
    [out] struct DXBNDS *pBounds
  );
  HRESULT __stdcall GetStatusFlags (
    [out] UINT *pdwStatusFlags
  );
  HRESULT __stdcall SetStatusFlags (
    [in] UINT dwStatusFlags
  );
  HRESULT __stdcall LockSurface (
    [in] struct DXBNDS *pBounds,
    [in] UINT ulTimeOut,
    [in] UINT dwFlags,
    [in] struct GUID *riid,
    [out] void *ppPointer,
    [out] UINT *pulGenerationId
  );
  HRESULT __stdcall GetDirectDrawSurface (
    [in] struct GUID *riid,
    [out] void *ppSurface
  );
  HRESULT __stdcall GetColorKey (
    struct DXSAMPLE *pColorKey
  );
  HRESULT __stdcall SetColorKey (
    struct DXSAMPLE ColorKey
  );
  HRESULT __stdcall LockSurfaceDC (
    [in] struct DXBNDS *pBounds,
    [in] UINT ulTimeOut,
    [in] UINT dwFlags,
    [out] interface IDXDCLock **ppDCLock
  );
  HRESULT __stdcall SetAppData (
    ULONG_PTR dwAppData
  );
  HRESULT __stdcall GetAppData (
    ULONG_PTR *pdwAppData
  );
};
[
  uuid(0F619456-CF39-11D1-905E-00C04FD9189D),
  helpstring("IDXDCLock Interface")
]
interface IDXDCLock : IUnknown
{
  [id(1610678272)]
  wireHDC __stdcall GetDC (void);
};
[
  uuid(254DBBC1-F922-11D0-883A-3C8B00C10000),
  helpstring("IDXTaskManager Interface")
]
interface IDXTaskManager : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall QueryNumProcessors (
    [out] UINT *pulNumProc
  );
  HRESULT __stdcall SetThreadPoolSize (
    [in] UINT ulNumThreads
  );
  HRESULT __stdcall GetThreadPoolSize (
    [out] UINT *pulNumThreads
  );
  HRESULT __stdcall SetConcurrencyLimit (
    [in] UINT ulNumThreads
  );
  HRESULT __stdcall GetConcurrencyLimit (
    [out] UINT *pulNumThreads
  );
  HRESULT __stdcall ScheduleTasks (
    [in] struct DXTMTASKINFO *TaskInfo,
    [in] void *Events,
    [out] UINT *TaskIDs,
    [in] UINT ulNumTasks,
    [in] UINT ulWaitPeriod
  );
  HRESULT __stdcall TerminateTasks (
    [in] UINT *TaskIDs,
    [in] UINT ulCount,
    [in] UINT ulTimeOut
  );
  HRESULT __stdcall TerminateRequest (
    [in] struct GUID *RequestID,
    [in] UINT ulTimeOut
  );
};
[
  uuid(B39FD742-E139-11D1-9065-00C04FD9189D),
  helpstring("IDXTScale Interface")
]
interface IDXTScale : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall SetScales (
    [in] float Scales[2]
  );
  HRESULT __stdcall GetScales (
    [out] float Scales[2]
  );
  HRESULT __stdcall ScaleFitToSize (
    [in out] struct DXBNDS *pClipBounds,
    [in] struct tagSIZE FitToSize,
    [in] long bMaintainAspect
  );
};
[
  uuid(9EA3B637-C37D-11D1-905E-00C04FD9189D),
  helpstring("IDXSurfaceModifier Interface")
]
interface IDXSurfaceModifier : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall SetFillColor (
    [in] struct DXSAMPLE Color
  );
  HRESULT __stdcall GetFillColor (
    [out] struct DXSAMPLE *pColor
  );
  HRESULT __stdcall SetBounds (
    [in] struct DXBNDS *pBounds
  );
  HRESULT __stdcall SetBackground (
    [in] interface IDXSurface *pSurface
  );
  HRESULT __stdcall GetBackground (
    [out] interface IDXSurface **ppSurface
  );
  HRESULT __stdcall SetCompositeOperation (
    [in] enum DXSURFMODCOMPOP CompOp
  );
  HRESULT __stdcall GetCompositeOperation (
    [out] enum DXSURFMODCOMPOP *pCompOp
  );
  HRESULT __stdcall SetForeground (
    [in] interface IDXSurface *pSurface,
    [in] long bTile,
    [in] struct tagPOINT *pOrigin
  );
  HRESULT __stdcall GetForeground (
    [out] interface IDXSurface **ppSurface,
    [out] long *pbTile,
    [out] struct tagPOINT *pOrigin
  );
  HRESULT __stdcall SetOpacity (
    [in] float Opacity
  );
  HRESULT __stdcall GetOpacity (
    [out] float *pOpacity
  );
  HRESULT __stdcall SetLookup (
    [in] interface IDXLookupTable *pLookupTable
  );
  HRESULT __stdcall GetLookup (
    [out] interface IDXLookupTable **ppLookupTable
  );
};
[
  uuid(01BAFC7F-9E63-11D1-9053-00C04FD9189D),
  helpstring("IDXLookupTable Interface")
]
interface IDXLookupTable : IDXBaseObject
{
  [id(1610743808)]
  HRESULT __stdcall GetTables (
    [out] UCHAR RedLUT[256],
    [out] UCHAR GreenLUT[256],
    [out] UCHAR BlueLUT[256],
    [out] UCHAR AlphaLUT[256]
  );
  HRESULT __stdcall IsChannelIdentity (
    [out] struct DXBASESAMPLE *pSampleBools
  );
  HRESULT __stdcall GetIndexValues (
    [in] UINT Index,
    [out] struct DXBASESAMPLE *pSample
  );
  HRESULT __stdcall ApplyTables (
    [in out] struct DXSAMPLE *pSamples,
    [in] UINT cSamples
  );
};
[
  uuid(B2024B51-EE77-11D1-9066-00C04FD9189D),
  helpstring("IDXGradient Interface")
]
interface IDXGradient : IDXTScaleOutput
{
  [id(1610743808)]
  HRESULT __stdcall SetGradient (
    struct DXSAMPLE StartColor,
    struct DXSAMPLE EndColor,
    long bHorizontal
  );
  HRESULT __stdcall GetOutputSize (
    [out] struct tagSIZE *pOutSize
  );
};
[
  uuid(B2024B50-EE77-11D1-9066-00C04FD9189D),
  helpstring("IDXTScaleOutput Interface")
]
interface IDXTScaleOutput : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall SetOutputSize (
    [in] struct tagSIZE OutSize,
    [in] long bMaintainAspect
  );
};

