/* Automated generated idl file <scplib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface ISCPSecureAuthenticate2;
interface ISCPSecureAuthenticate;
interface ISCPSecureQuery;
interface IMDSPStorageGlobals;
interface IWMDMProgress;
interface IMDSPDevice;
interface IMDSPEnumStorage;
interface IMDSPStorage;
interface ISCPSecureExchange;
interface ISCPSession;
interface IComponentAuthenticate;
interface ISCPSecureQuery2;
interface ISCPSecureQuery3;
interface IWMDMProgress3;
interface IWMDMProgress2;
interface ISCPSecureExchange2;
interface ISCPSecureExchange3;
interface IWMDRMDeviceApp;
interface IWMDMDevice;
interface IWMDMEnumStorage;
interface IWMDMStorage;
interface IWMDMStorageGlobals;

/* Structure forward declarations.  */
struct __WMDMID;
struct _tWAVEFORMATEX;
struct _WMDMDATETIME;
struct __WMDMRIGHTS;
struct __OPAQUECOMMAND;

/* Union record forward declarations.  */
coclass MSSCP;
coclass SCPTRANS;

/* Structure/union declarations.  */
struct __WMDMID
{
  unsigned int cbSize;
  UINT dwVendorID;
  UCHAR pID[128];
  unsigned int SerialNumberLength;
};
struct _tWAVEFORMATEX
{
  USHORT wFormatTag;
  USHORT nChannels;
  UINT nSamplesPerSec;
  UINT nAvgBytesPerSec;
  USHORT nBlockAlign;
  USHORT wBitsPerSample;
  USHORT cbSize;
};
struct _WMDMDATETIME
{
  USHORT wYear;
  USHORT wMonth;
  USHORT wDay;
  USHORT wHour;
  USHORT wMinute;
  USHORT wSecond;
};
struct __WMDMRIGHTS
{
  unsigned int cbSize;
  UINT dwContentType;
  UINT fuFlags;
  UINT fuRights;
  UINT dwAppSec;
  UINT dwPlaybackCount;
  struct _WMDMDATETIME ExpirationDate;
};
struct __OPAQUECOMMAND
{
  struct GUID guidCommand;
  UINT dwDataLen;
  UCHAR *pData;
  UCHAR abMac[20];
};

[
  uuid(32BAED35-34B5-11D3-9315-00C04F72D6CF),
  version(1.0),
  helpstring("scp 1.0 Type Library")
]
library scplib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(32BAED44-34B5-11D3-9315-00C04F72D6CF),
     helpstring("MSSCP Class"),
     cancreate
   ]
   coclass MSSCP
   {
     interface ISCPSecureAuthenticate2;
     interface IComponentAuthenticate;
     interface ISCPSecureAuthenticate;
   };
   [
     uuid(5C140836-43DE-11D3-847D-00C04F79DBC0),
     helpstring("SCPTrans Class"),
     cancreate
   ]
   coclass SCPTRANS
   {
     interface ISCPSecureQuery;
     interface ISCPSecureQuery2;
     interface ISCPSecureQuery3;
     interface ISCPSecureExchange;
     interface ISCPSecureExchange2;
     interface ISCPSecureExchange3;
     interface ISCPSession;
     interface IWMDRMDeviceApp;
   };

};

/* Interface declarations.  */
[
  uuid(B580CFAE-1672-47E2-ACAA-44BBECBCAE5B)
]
interface ISCPSecureAuthenticate2 : ISCPSecureAuthenticate
{
  [id(1610743808)]
  HRESULT __stdcall GetSCPSession (
    [out] interface ISCPSession **ppSCPSession
  );
};
[
  uuid(1DCB3A0F-33ED-11D3-8470-00C04F79DBC0)
]
interface ISCPSecureAuthenticate : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetSecureQuery (
    [out] interface ISCPSecureQuery **ppSecureQuery
  );
};
[
  uuid(1DCB3A0D-33ED-11D3-8470-00C04F79DBC0)
]
interface ISCPSecureQuery : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetDataDemands (
    [out] unsigned int *pfuFlags,
    [out] UINT *pdwMinRightsData,
    [out] UINT *pdwMinExamineData,
    [out] UINT *pdwMinDecideData,
    [in out] UCHAR abMac[8]
  );
  HRESULT __stdcall ExamineData (
    [in] unsigned int fuFlags,
    [in] LPWSTR pwszExtension,
    [in] UCHAR *pData,
    [in] UINT dwSize,
    [in out] UCHAR abMac[8]
  );
  HRESULT __stdcall MakeDecision (
    [in] unsigned int fuFlags,
    [in] UCHAR *pData,
    [in] UINT dwSize,
    [in] UINT dwAppSec,
    [in] UCHAR *pbSPSessionKey,
    [in] UINT dwSessionKeyLen,
    [in] interface IMDSPStorageGlobals *pStorageGlobals,
    [out] interface ISCPSecureExchange **ppExchange,
    [in out] UCHAR abMac[8]
  );
  HRESULT __stdcall GetRights (
    [in] UCHAR *pData,
    [in] UINT dwSize,
    [in] UCHAR *pbSPSessionKey,
    [in] UINT dwSessionKeyLen,
    [in] interface IMDSPStorageGlobals *pStgGlobals,
    [out] struct __WMDMRIGHTS **ppRights,
    [out] unsigned int *pnRightsCount,
    [in out] UCHAR abMac[8]
  );
};
[
  uuid(1DCB3A17-33ED-11D3-8470-00C04F79DBC0)
]
interface IMDSPStorageGlobals : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCapabilities (
    [out] UINT *pdwCapabilities
  );
  HRESULT __stdcall GetSerialNumber (
    [out] struct __WMDMID *pSerialNum,
    [in out] UCHAR abMac[8]
  );
  HRESULT __stdcall GetTotalSize (
    [out] UINT *pdwTotalSizeLow,
    [out] UINT *pdwTotalSizeHigh
  );
  HRESULT __stdcall GetTotalFree (
    [out] UINT *pdwFreeLow,
    [out] UINT *pdwFreeHigh
  );
  HRESULT __stdcall GetTotalBad (
    [out] UINT *pdwBadLow,
    [out] UINT *pdwBadHigh
  );
  HRESULT __stdcall GetStatus (
    [out] UINT *pdwStatus
  );
  HRESULT __stdcall Initialize (
    [in] unsigned int fuMode,
    [in] interface IWMDMProgress *pProgress
  );
  HRESULT __stdcall GetDevice (
    [out] interface IMDSPDevice **ppDevice
  );
  HRESULT __stdcall GetRootStorage (
    [out] interface IMDSPStorage **ppRoot
  );
};
[
  uuid(1DCB3A0C-33ED-11D3-8470-00C04F79DBC0)
]
interface IWMDMProgress : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Begin (
    [in] UINT dwEstimatedTicks
  );
  HRESULT __stdcall Progress (
    [in] UINT dwTranspiredTicks
  );
  HRESULT __stdcall End (void);
};
[
  uuid(1DCB3A12-33ED-11D3-8470-00C04F79DBC0)
]
interface IMDSPDevice : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetName (
    [out] LPWSTR pwszName,
    [in] unsigned int nMaxChars
  );
  HRESULT __stdcall GetManufacturer (
    [out] LPWSTR pwszName,
    [in] unsigned int nMaxChars
  );
  HRESULT __stdcall GetVersion (
    [out] UINT *pdwVersion
  );
  HRESULT __stdcall GetType (
    [out] UINT *pdwType
  );
  HRESULT __stdcall GetSerialNumber (
    [out] struct __WMDMID *pSerialNumber,
    [in out] UCHAR abMac[8]
  );
  HRESULT __stdcall GetPowerSource (
    [out] UINT *pdwPowerSource,
    [out] UINT *pdwPercentRemaining
  );
  HRESULT __stdcall GetStatus (
    [out] UINT *pdwStatus
  );
  HRESULT __stdcall GetDeviceIcon (
    [out] UINT *hIcon
  );
  HRESULT __stdcall EnumStorage (
    [out] interface IMDSPEnumStorage **ppEnumStorage
  );
  HRESULT __stdcall GetFormatSupport (
    [out] struct _tWAVEFORMATEX **pFormatEx,
    [out] unsigned int *pnFormatCount,
    [out] LPWSTR pppwszMimeType,
    [out] unsigned int *pnMimeTypeCount
  );
  HRESULT __stdcall SendOpaqueCommand (
    [in out] struct __OPAQUECOMMAND *pCommand
  );
};
[
  uuid(1DCB3A15-33ED-11D3-8470-00C04F79DBC0)
]
interface IMDSPEnumStorage : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT celt,
    [out] interface IMDSPStorage **ppStorage,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IMDSPEnumStorage **ppEnumStorage
  );
};
[
  uuid(1DCB3A16-33ED-11D3-8470-00C04F79DBC0)
]
interface IMDSPStorage : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall SetAttributes (
    [in] UINT dwAttributes,
    [in] struct _tWAVEFORMATEX *pFormat
  );
  HRESULT __stdcall GetStorageGlobals (
    [out] interface IMDSPStorageGlobals **ppStorageGlobals
  );
  HRESULT __stdcall GetAttributes (
    [out] UINT *pdwAttributes,
    [out] struct _tWAVEFORMATEX *pFormat
  );
  HRESULT __stdcall GetName (
    [out] LPWSTR pwszName,
    [in] unsigned int nMaxChars
  );
  HRESULT __stdcall GetDate (
    [out] struct _WMDMDATETIME *pDateTimeUTC
  );
  HRESULT __stdcall GetSize (
    [out] UINT *pdwSizeLow,
    [out] UINT *pdwSizeHigh
  );
  HRESULT __stdcall GetRights (
    [out] struct __WMDMRIGHTS **ppRights,
    [out] unsigned int *pnRightsCount,
    [in out] UCHAR abMac[8]
  );
  HRESULT __stdcall CreateStorage (
    [in] UINT dwAttributes,
    [in] struct _tWAVEFORMATEX *pFormat,
    [in] LPWSTR pwszName,
    [out] interface IMDSPStorage **ppNewStorage
  );
  HRESULT __stdcall EnumStorage (
    [out] interface IMDSPEnumStorage **ppEnumStorage
  );
  HRESULT __stdcall SendOpaqueCommand (
    [in out] struct __OPAQUECOMMAND *pCommand
  );
};
[
  uuid(1DCB3A0E-33ED-11D3-8470-00C04F79DBC0)
]
interface ISCPSecureExchange : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall TransferContainerData (
    [in] UCHAR *pData,
    [in] UINT dwSize,
    [out] unsigned int *pfuReadyFlags,
    [in out] UCHAR abMac[8]
  );
  HRESULT __stdcall ObjectData (
    [out] UCHAR *pData,
    [in out] UINT *pdwSize,
    [in out] UCHAR abMac[8]
  );
  HRESULT __stdcall TransferComplete (void);
};
[
  uuid(88A3E6ED-EEE4-4619-BBB3-FD4FB62715D1)
]
interface ISCPSession : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall BeginSession (
    [in] interface IMDSPDevice *pIDevice,
    [in] UCHAR *pCtx,
    [in] UINT dwSizeCtx
  );
  HRESULT __stdcall EndSession (
    [in] UCHAR *pCtx,
    [in] UINT dwSizeCtx
  );
  HRESULT __stdcall GetSecureQuery (
    [out] interface ISCPSecureQuery **ppSecureQuery
  );
};
[
  uuid(A9889C00-6D2B-11D3-8496-00C04F79DBC0)
]
interface IComponentAuthenticate : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall SACAuth (
    [in] UINT dwProtocolID,
    [in] UINT dwPass,
    [in] UCHAR *pbDataIn,
    [in] UINT dwDataInLen,
    [out] UCHAR *ppbDataOut,
    [out] UINT *pdwDataOutLen
  );
  HRESULT __stdcall SACGetProtocols (
    [out] UINT *ppdwProtocols,
    [out] UINT *pdwProtocolCount
  );
};
[
  uuid(EBE17E25-4FD7-4632-AF46-6D93D4FCC72E)
]
interface ISCPSecureQuery2 : ISCPSecureQuery
{
  [id(1610743808)]
  HRESULT __stdcall MakeDecision2 (
    [in] unsigned int fuFlags,
    [in] UCHAR *pData,
    [in] UINT dwSize,
    [in] UINT dwAppSec,
    [in] UCHAR *pbSPSessionKey,
    [in] UINT dwSessionKeyLen,
    [in] interface IMDSPStorageGlobals *pStorageGlobals,
    [in] UCHAR *pAppCertApp,
    [in] UINT dwAppCertAppLen,
    [in] UCHAR *pAppCertSP,
    [in] UINT dwAppCertSPLen,
    [in out] LPWSTR pszRevocationURL,
    [in out] UINT *pdwRevocationURLLen,
    [out] UINT *pdwRevocationBitFlag,
    [in out] ULONGLONG *pqwFileSize,
    [in] IUnknown * pUnknown,
    [out] interface ISCPSecureExchange **ppExchange,
    [in out] UCHAR abMac[8]
  );
};
[
  uuid(B7EDD1A2-4DAB-484B-B3C5-AD39B8B4C0B1)
]
interface ISCPSecureQuery3 : ISCPSecureQuery2
{
  [id(1610809344)]
  HRESULT __stdcall GetRightsOnClearChannel (
    [in] UCHAR *pData,
    [in] UINT dwSize,
    [in] UCHAR *pbSPSessionKey,
    [in] UINT dwSessionKeyLen,
    [in] interface IMDSPStorageGlobals *pStgGlobals,
    [in] interface IWMDMProgress3 *pProgressCallback,
    [out] struct __WMDMRIGHTS **ppRights,
    [out] unsigned int *pnRightsCount
  );
  HRESULT __stdcall MakeDecisionOnClearChannel (
    [in] unsigned int fuFlags,
    [in] UCHAR *pData,
    [in] UINT dwSize,
    [in] UINT dwAppSec,
    [in] UCHAR *pbSPSessionKey,
    [in] UINT dwSessionKeyLen,
    [in] interface IMDSPStorageGlobals *pStorageGlobals,
    [in] interface IWMDMProgress3 *pProgressCallback,
    [in] UCHAR *pAppCertApp,
    [in] UINT dwAppCertAppLen,
    [in] UCHAR *pAppCertSP,
    [in] UINT dwAppCertSPLen,
    [in out] LPWSTR pszRevocationURL,
    [in out] UINT *pdwRevocationURLLen,
    [out] UINT *pdwRevocationBitFlag,
    [in out] ULONGLONG *pqwFileSize,
    [in] IUnknown * pUnknown,
    [out] interface ISCPSecureExchange **ppExchange
  );
};
[
  uuid(21DE01CB-3BB4-4929-B21A-17AF3F80F658)
]
interface IWMDMProgress3 : IWMDMProgress2
{
  [id(1610809344)]
  HRESULT __stdcall Begin3 (
    [in] struct GUID EventId,
    [in] UINT dwEstimatedTicks,
    [in out] struct __OPAQUECOMMAND *pContext
  );
  HRESULT __stdcall Progress3 (
    [in] struct GUID EventId,
    [in] UINT dwTranspiredTicks,
    [in out] struct __OPAQUECOMMAND *pContext
  );
  HRESULT __stdcall End3 (
    [in] struct GUID EventId,
    [in] HRESULT hrCompletionCode,
    [in out] struct __OPAQUECOMMAND *pContext
  );
};
[
  uuid(3A43F550-B383-4E92-B04A-E6BBC660FEFC)
]
interface IWMDMProgress2 : IWMDMProgress
{
  [id(1610743808)]
  HRESULT __stdcall End2 (
    [in] HRESULT hrCompletionCode
  );
};
[
  uuid(6C62FC7B-2690-483F-9D44-0A20CB35577C)
]
interface ISCPSecureExchange2 : ISCPSecureExchange
{
  [id(1610743808)]
  HRESULT __stdcall TransferContainerData2 (
    [in] UCHAR *pData,
    [in] UINT dwSize,
    [in] interface IWMDMProgress3 *pProgressCallback,
    [out] unsigned int *pfuReadyFlags,
    [in out] UCHAR abMac[8]
  );
};
[
  uuid(AB4E77E4-8908-4B17-BD2A-B1DBE6DD69E1)
]
interface ISCPSecureExchange3 : ISCPSecureExchange2
{
  [id(1610809344)]
  HRESULT __stdcall TransferContainerDataOnClearChannel (
    [in] interface IMDSPDevice *pDevice,
    [in] UCHAR *pData,
    [in] UINT dwSize,
    [in] interface IWMDMProgress3 *pProgressCallback,
    [out] unsigned int *pfuReadyFlags
  );
  HRESULT __stdcall GetObjectDataOnClearChannel (
    [in] interface IMDSPDevice *pDevice,
    [out] UCHAR *pData,
    [in out] UINT *pdwSize
  );
  HRESULT __stdcall TransferCompleteForDevice (
    [in] interface IMDSPDevice *pDevice
  );
};
[
  uuid(93AFDB44-B1E1-411D-B89B-75AD4F97882B)
]
interface IWMDRMDeviceApp : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GenerateMeterChallenge (
    [in] interface IWMDMDevice *pDevice,
    [in] BSTR bstrMeterCert,
    [out] BSTR *pbstrMeterURL,
    [out] BSTR *pbstrMeterData
  );
  HRESULT __stdcall ProcessMeterResponse (
    [in] interface IWMDMDevice *pDevice,
    [in] UCHAR *pbResponse,
    [in] UINT cbResponse,
    [out] UINT *pdwFlags
  );
  HRESULT __stdcall QueryDeviceStatus (
    [in] interface IWMDMDevice *pDevice,
    [out] UINT *pdwStatus
  );
  HRESULT __stdcall AcquireDeviceData (
    [in] interface IWMDMDevice *pDevice,
    [in] interface IWMDMProgress3 *pProgressCallback,
    [in] UINT dwFlags,
    [out] UINT *pdwStatus
  );
  HRESULT __stdcall SynchronizeLicenses (
    [in] interface IWMDMDevice *pDevice,
    [in] interface IWMDMProgress3 *pProgressCallback,
    [in] UINT cMinCountThreshold,
    [in] UINT cMinHoursThreshold
  );
};
[
  uuid(1DCB3A02-33ED-11D3-8470-00C04F79DBC0)
]
interface IWMDMDevice : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetName (
    [out] LPWSTR pwszName,
    [in] unsigned int nMaxChars
  );
  HRESULT __stdcall GetManufacturer (
    [out] LPWSTR pwszName,
    [in] unsigned int nMaxChars
  );
  HRESULT __stdcall GetVersion (
    [out] UINT *pdwVersion
  );
  HRESULT __stdcall GetType (
    [out] UINT *pdwType
  );
  HRESULT __stdcall GetSerialNumber (
    [out] struct __WMDMID *pSerialNumber,
    [in out] UCHAR abMac[8]
  );
  HRESULT __stdcall GetPowerSource (
    [out] UINT *pdwPowerSource,
    [out] UINT *pdwPercentRemaining
  );
  HRESULT __stdcall GetStatus (
    [out] UINT *pdwStatus
  );
  HRESULT __stdcall GetDeviceIcon (
    [out] UINT *hIcon
  );
  HRESULT __stdcall EnumStorage (
    [out] interface IWMDMEnumStorage **ppEnumStorage
  );
  HRESULT __stdcall GetFormatSupport (
    [out] struct _tWAVEFORMATEX **ppFormatEx,
    [out] unsigned int *pnFormatCount,
    [out] LPWSTR pppwszMimeType,
    [out] unsigned int *pnMimeTypeCount
  );
  HRESULT __stdcall SendOpaqueCommand (
    [in out] struct __OPAQUECOMMAND *pCommand
  );
};
[
  uuid(1DCB3A05-33ED-11D3-8470-00C04F79DBC0)
]
interface IWMDMEnumStorage : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT celt,
    [out] interface IWMDMStorage **ppStorage,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IWMDMEnumStorage **ppEnumStorage
  );
};
[
  uuid(1DCB3A06-33ED-11D3-8470-00C04F79DBC0)
]
interface IWMDMStorage : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall SetAttributes (
    [in] UINT dwAttributes,
    [in] struct _tWAVEFORMATEX *pFormat
  );
  HRESULT __stdcall GetStorageGlobals (
    [out] interface IWMDMStorageGlobals **ppStorageGlobals
  );
  HRESULT __stdcall GetAttributes (
    [out] UINT *pdwAttributes,
    [in out] struct _tWAVEFORMATEX *pFormat
  );
  HRESULT __stdcall GetName (
    [out] LPWSTR pwszName,
    [in] unsigned int nMaxChars
  );
  HRESULT __stdcall GetDate (
    [out] struct _WMDMDATETIME *pDateTimeUTC
  );
  HRESULT __stdcall GetSize (
    [out] UINT *pdwSizeLow,
    [out] UINT *pdwSizeHigh
  );
  HRESULT __stdcall GetRights (
    [out] struct __WMDMRIGHTS **ppRights,
    [out] unsigned int *pnRightsCount,
    [in out] UCHAR abMac[8]
  );
  HRESULT __stdcall EnumStorage (
    [out] interface IWMDMEnumStorage **pEnumStorage
  );
  HRESULT __stdcall SendOpaqueCommand (
    [in out] struct __OPAQUECOMMAND *pCommand
  );
};
[
  uuid(1DCB3A07-33ED-11D3-8470-00C04F79DBC0)
]
interface IWMDMStorageGlobals : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCapabilities (
    [out] UINT *pdwCapabilities
  );
  HRESULT __stdcall GetSerialNumber (
    [out] struct __WMDMID *pSerialNum,
    [in out] UCHAR abMac[8]
  );
  HRESULT __stdcall GetTotalSize (
    [out] UINT *pdwTotalSizeLow,
    [out] UINT *pdwTotalSizeHigh
  );
  HRESULT __stdcall GetTotalFree (
    [out] UINT *pdwFreeLow,
    [out] UINT *pdwFreeHigh
  );
  HRESULT __stdcall GetTotalBad (
    [out] UINT *pdwBadLow,
    [out] UINT *pdwBadHigh
  );
  HRESULT __stdcall GetStatus (
    [out] UINT *pdwStatus
  );
  HRESULT __stdcall Initialize (
    [in] unsigned int fuMode,
    [in] interface IWMDMProgress *pProgress
  );
};

