/* Automated generated idl file <ciclib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Union record forward declarations.  */
dispinterface IMMCCtrl;
dispinterface IMMCCtrlEvent;
dispinterface IMMCTask;
dispinterface IMMCDisplayObject;
dispinterface IMMCListPadInfo;
dispinterface IListPad;
dispinterface _SysColorEvents;
dispinterface ISysColorCtrl;

/* Union record forward declarations.  */
coclass MMCCtrl;
coclass MMCTask;
coclass MMCDisplayObject;
coclass MMCListPadInfo;
coclass ListPad;
coclass SysColorCtrl;

/* Type definitions.  */
typedef LONGLONG LONG_PTR;

[
  uuid(3D5905E0-523C-11D1-9FEA-00600832DB4A),
  version(1.0),
  helpstring("cic 1.0 Type Library")
]
library ciclib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(545AE700-50BF-11D1-9FE9-00600832DB4A),
     helpstring("MMCCtrl Class"),
     cancreate
   ]
   coclass MMCCtrl
   {
     dispinterface IMMCCtrl;
     dispinterface IMMCCtrlEvent;
   };
   [
     uuid(3D112E22-62B2-11D1-9FEF-00600832DB4A),
     helpstring("MMCTask Class"),
     cancreate
   ]
   coclass MMCTask
   {
     dispinterface IMMCTask;
   };
   [
     uuid(995A890C-F4C9-11D1-A1BF-0000F875B132),
     helpstring("MMCDisplayObject Class")
   ]
   coclass MMCDisplayObject
   {
     dispinterface IMMCDisplayObject;
   };
   [
     uuid(09474572-B2FB-11D1-A1A1-0000F875B132),
     helpstring("MMCListPadInfo Class"),
     cancreate
   ]
   coclass MMCListPadInfo
   {
     dispinterface IMMCListPadInfo;
   };
   [
     uuid(289228DE-A31E-11D1-A19C-0000F875B132),
     helpstring("ListPad Class"),
     cancreate
   ]
   coclass ListPad
   {
     dispinterface IListPad;
   };
   [
     uuid(C47195EC-CD7A-11D1-8EA3-00C04F9900D7),
     helpstring("SysColorCtrl Class"),
     cancreate
   ]
   coclass SysColorCtrl
   {
     dispinterface ISysColorCtrl;
     dispinterface _SysColorEvents;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(3D5905ED-523C-11D1-9FEA-00600832DB4A),
     helpstring("IMMCCtrl Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMMCCtrl : IDispatch
   {
     [id(1)]
     HRESULT __stdcall TaskNotify (
       [in] BSTR szClsid,
       [in] VARIANT *pvArg,
       [in] VARIANT *pvParam
     );
     HRESULT __stdcall GetFirstTask (
       [in] BSTR szGroupText,
       [out retval] IDispatch **retval
     );
     HRESULT __stdcall GetNextTask (
       [out retval] IDispatch **retval
     );
     HRESULT __stdcall GetTitle (
       [in] BSTR szGroupText,
       [out retval] BSTR *retval
     );
     HRESULT __stdcall GetDescriptiveText (
       [in] BSTR szGroupText,
       [out retval] BSTR *retval
     );
     HRESULT __stdcall GetBackground (
       [in] BSTR szGroupText,
       [out retval] IDispatch **pDispatch
     );
     HRESULT __stdcall GetListPadInfo (
       [in] BSTR szGroupText,
       [out retval] IDispatch **pDispatch
     );
   };
   [
     uuid(69C7C394-905C-11D2-91AD-00C04FA37E1F),
     helpstring("IMMCCtrlEvent Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMMCCtrlEvent : IDispatch
   {
     [id(1)]
     HRESULT __stdcall TaskEnable (
       [in] long lTaskIndex,
       [in] long bEnable
     );
   };
   [
     uuid(3D112E21-62B2-11D1-9FEF-00600832DB4A),
     helpstring("IMMCTask Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMMCTask : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall DisplayObject (
       [out retval] IDispatch **pDispatch
     );
     [propget]
     HRESULT __stdcall Text (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall Help (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall ActionType (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall CommandID (
       [out retval] LONG_PTR *pVal
     );
     [propget]
     HRESULT __stdcall ActionURL (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall Script (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall Clsid (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall ScriptLanguage (
       [out retval] BSTR *pVal
     );
   };
   [
     uuid(995A890B-F4C9-11D1-A1BF-0000F875B132),
     helpstring("IMMCDisplayObject Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMMCDisplayObject : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall DisplayObjectType (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall FontFamilyName (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall URLtoEOT (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall SymbolString (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall MouseOverBitmap (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall MouseOffBitmap (
       [out retval] BSTR *pVal
     );
   };
   [
     uuid(09474571-B2FB-11D1-A1A1-0000F875B132),
     helpstring("IMMCListPadInfo Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMMCListPadInfo : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Title (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall Text (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall NotifyID (
       [out retval] LONG_PTR *pVal
     );
     [propget]
     HRESULT __stdcall Clsid (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall HasButton (
       [out retval] long *pVal
     );
   };
   [
     uuid(5D00F5B1-A357-11D1-A19C-0000F875B132),
     helpstring("IListPad Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IListPad : IDispatch
   {
   };
   [
     uuid(C47195ED-CD7A-11D1-8EA3-00C04F9900D7),
     helpstring("Event interface for SysColorCtrl"),
     dispatchable
   ]
   dispinterface _SysColorEvents
   {
     [id(1)]
     void __stdcall SysColorChange (void);
   };
   [
     uuid(C47195EB-CD7A-11D1-8EA3-00C04F9900D7),
     helpstring("ISysColorCtrl Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface ISysColorCtrl : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall HEXactiveborder (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBactiveborder (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXactivecaption (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBactivecaption (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXappworkspace (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBappworkspace (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXbackground (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBbackground (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXbuttonface (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBbuttonface (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXbuttonhighlight (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBbuttonhighlight (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXbuttonshadow (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBbuttonshadow (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXbuttontext (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBbuttontext (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXcaptiontext (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBcaptiontext (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXgraytext (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBgraytext (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXhighlight (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBhighlight (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXhighlighttext (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBhighlighttext (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXinactiveborder (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBinactiveborder (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXinactivecaption (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBinactivecaption (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXinactivecaptiontext (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBinactivecaptiontext (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXinfobackground (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBinfobackground (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXinfotext (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBinfotext (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXmenu (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBmenu (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXmenutext (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBmenutext (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXscrollbar (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBscrollbar (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXthreeddarkshadow (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBthreeddarkshadow (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXthreedface (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBthreedface (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXthreedhighlight (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBthreedhighlight (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXthreedlightshadow (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBthreedlightshadow (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXthreedshadow (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBthreedshadow (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXwindow (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBwindow (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXwindowframe (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBwindowframe (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall HEXwindowtext (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall RGBwindowtext (
       [out retval] long *pVal
     );
     HRESULT __stdcall ConvertRGBToHex (
       [in] long rgb,
       [out retval] BSTR *pszHex
     );
     HRESULT __stdcall ConvertHexToRGB (
       [in] BSTR szHex,
       [out retval] long *pRGB
     );
     HRESULT __stdcall GetRedFromRGB (
       [in] long rgb,
       [out retval] short *pVal
     );
     HRESULT __stdcall GetGreenFromRGB (
       [in] long rgb,
       [out retval] short *pVal
     );
     HRESULT __stdcall GetBlueFromRGB (
       [in] long rgb,
       [out retval] short *pVal
     );
     HRESULT __stdcall GetDerivedRGB (
       [in] BSTR pszFrom,
       [in] BSTR pszTo,
       [in] BSTR pszFormat,
       [in] short nPercent,
       [out retval] long *pVal
     );
     HRESULT __stdcall GetDerivedHex (
       [in] BSTR pszFrom,
       [in] BSTR pszTo,
       [in] BSTR pszFormat,
       [in] short nPercent,
       [out retval] BSTR *pVal
     );
     HRESULT __stdcall Get3QuarterLightRGB (
       [in] BSTR pszFrom,
       [in] BSTR pszFormat,
       [out retval] long *pVal
     );
     HRESULT __stdcall Get3QuarterLightHex (
       [in] BSTR pszFrom,
       [in] BSTR pszFormat,
       [out retval] BSTR *pVal
     );
     HRESULT __stdcall GetHalfLightRGB (
       [in] BSTR pszFrom,
       [in] BSTR pszFormat,
       [out retval] long *pVal
     );
     HRESULT __stdcall GetHalfLightHex (
       [in] BSTR pszFrom,
       [in] BSTR pszFormat,
       [out retval] BSTR *pVal
     );
     HRESULT __stdcall GetQuarterLightRGB (
       [in] BSTR pszFrom,
       [in] BSTR pszFormat,
       [out retval] long *pVal
     );
     HRESULT __stdcall GetQuarterLightHex (
       [in] BSTR pszFrom,
       [in] BSTR pszFormat,
       [out retval] BSTR *pVal
     );
     HRESULT __stdcall Get3QuarterDarkRGB (
       [in] BSTR pszFrom,
       [in] BSTR pszFormat,
       [out retval] long *pVal
     );
     HRESULT __stdcall Get3QuarterDarkHex (
       [in] BSTR pszFrom,
       [in] BSTR pszFormat,
       [out retval] BSTR *pVal
     );
     HRESULT __stdcall GetHalfDarkRGB (
       [in] BSTR pszFrom,
       [in] BSTR pszFormat,
       [out retval] long *pVal
     );
     HRESULT __stdcall GetHalfDarkHex (
       [in] BSTR pszFrom,
       [in] BSTR pszFormat,
       [out retval] BSTR *pVal
     );
     HRESULT __stdcall GetQuarterDarkRGB (
       [in] BSTR pszFrom,
       [in] BSTR pszFormat,
       [out retval] long *pVal
     );
     HRESULT __stdcall GetQuarterDarkHex (
       [in] BSTR pszFrom,
       [in] BSTR pszFormat,
       [out retval] BSTR *pVal
     );
   };

};

