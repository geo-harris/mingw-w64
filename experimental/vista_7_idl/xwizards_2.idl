/* Automated generated idl file <xwizard>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface IXWizard;
interface IEnumXWizardHost;
interface IEnumXWizardTask;
interface IEnumXWizardPage;

/* Structure forward declarations.  */
struct _XWIZARD_HOST_DISPLAY_TASK_INFO;
struct _RemotableHandle;

/* Union record forward declarations.  */
union __MIDL_IWinTypes_0009;

/* Union record forward declarations.  */
dispinterface IXMLDOMParseError;

/* Union record forward declarations.  */
coclass CXWizard;

/* Enumeration declarations.  */
enum tagXW_WIZARD_TYPE
{
  XW_WIZARD_TYPE_NONE = (int) 201326592,
  XW_WIZARD_TYPE_PROPERTYSHEET97 = (int) 201326593,
  XW_WIZARD_TYPE_WIZARD97 = (int) 201326594,
  XW_WIZARD_TYPE_AEROFIXED = (int) 201326624,
  XW_WIZARD_TYPE_AERORESIZE = (int) 201326656,
  XW_WIZARD_TYPE_DUIFIXED = (int) 201334784,
  XW_WIZARD_TYPE_DUIRESIZE = (int) 201342976
};

/* Structure/union declarations.  */
struct _XWIZARD_HOST_DISPLAY_TASK_INFO
{
  UINT dwVersion;
  UINT dwDisplayFlags;
  struct GUID guidTask;
  void *pfnLoadImage;
  void *hInstance;
  LPWSTR pszIcon;
  LPWSTR pszViewName;
  LPWSTR pszTooltipName;
};
struct _RemotableHandle
{
  long fContext;
  union __MIDL_IWinTypes_0009 u;
};
union __MIDL_IWinTypes_0009
{
  long hInproc;
  long hRemote;
};

/* Type definitions.  */
typedef struct _RemotableHandle * wireHWND;

[
  uuid(777BA800-2498-4875-933A-3067DE883070),
  version(1.0),
  helpstring("XWizard 1.0 Type Library")
]
library xwizard
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(777BA87C-2498-4875-933A-3067DE883070),
     helpstring("XWizard Class"),
     cancreate
   ]
   coclass CXWizard
   {
     interface IXWizard;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(3EFAA426-272F-11D2-836F-0000F87A7782),
     helpstring("structure for reporting parser errors"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IXMLDOMParseError : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall errorCode (
       [out retval] long *errorCode
     );
     [id(179), propget]
     HRESULT __stdcall url (
       [out retval] BSTR *urlString
     );
     [propget]
     HRESULT __stdcall reason (
       [out retval] BSTR *reasonString
     );
     [propget]
     HRESULT __stdcall srcText (
       [out retval] BSTR *sourceString
     );
     [propget]
     HRESULT __stdcall line (
       [out retval] long *lineNumber
     );
     [propget]
     HRESULT __stdcall linepos (
       [out retval] long *linePosition
     );
     [propget]
     HRESULT __stdcall filepos (
       [out retval] long *filePosition
     );
   };

};

/* Interface declarations.  */
[
  uuid(777BA87A-2498-4875-933A-3067DE883070),
  helpstring("IXWizard interface")
]
interface IXWizard : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RegisterHost (
    [in] struct GUID *pguidHost,
    [in] LPWSTR pszModuleFileName,
    [in] LPWSTR pszFriendlyName,
    [in] UINT dwBehaviorFlags
  );
  HRESULT __stdcall RegisterTaskWithHost (
    [in] struct GUID *pguidParentHost,
    [in] struct GUID *pguidChildTask,
    [in] LPWSTR pszChildModuleFileName,
    [in] LPWSTR pszFriendlyName,
    [in] UINT dwBehaviorFlags,
    [in] UINT dwUserFlags,
    [in] LPWSTR pszCommandLine
  );
  HRESULT __stdcall RegisterPageWithTask (
    [in] struct GUID *pguidParentTask,
    [in] struct GUID *pguidChildPage,
    [in] LPWSTR pszChildModuleFileName,
    [in] LPWSTR pszFriendlyName,
    [in] UINT dwBehaviorFlags,
    [in] UINT dwUserFlags,
    [in] LPWSTR pszCommandLine
  );
  HRESULT __stdcall RegisterPageWithPage (
    [in] struct GUID *pguidParentPage,
    [in] struct GUID *pguidChildPage,
    [in] LPWSTR pszChildModuleFileName,
    [in] LPWSTR pszFriendlyName,
    [in] UINT dwBehaviorFlags,
    [in] UINT dwUserFlags,
    [in] LPWSTR pszCommandLine
  );
  HRESULT __stdcall UnregisterHost (
    [in] struct GUID *pguidHost,
    [in] long fUnregisterFromCOM
  );
  HRESULT __stdcall UnregisterTask (
    [in] struct GUID *pguidTask,
    [in] long fUnregisterFromCOM
  );
  HRESULT __stdcall UnregisterPage (
    [in] struct GUID *pguidPage,
    [in] long fUnregisterFromCOM
  );
  HRESULT __stdcall UnregisterHostTaskLink (
    [in] struct GUID *pguidParentHost,
    [in] struct GUID *pguidChildTask
  );
  HRESULT __stdcall UnregisterTaskPageLink (
    [in] struct GUID *pguidParentTask,
    [in] struct GUID *pguidChildPage
  );
  HRESULT __stdcall UnregisterPagesLink (
    [in] struct GUID *pguidParentPage,
    [in] struct GUID *pguidChildPage
  );
  HRESULT __stdcall EnumHosts (
    [in] UINT dwEnumerationFlags,
    [out] interface IEnumXWizardHost **ppenum
  );
  HRESULT __stdcall EnumChildTasksOfHost (
    [in] struct GUID *pguidParentHost,
    [in] UINT dwEnumerationFlags,
    [out] interface IEnumXWizardTask **ppenum
  );
  HRESULT __stdcall EnumParentHostsOfTask (
    [in] struct GUID *pguidChildTask,
    [in] UINT dwEnumerationFlags,
    [out] interface IEnumXWizardHost **ppenum
  );
  HRESULT __stdcall EnumChildPagesOfTask (
    [in] struct GUID *pguidParentTask,
    [in] UINT dwEnumerationFlags,
    [out] interface IEnumXWizardPage **ppenum
  );
  HRESULT __stdcall EnumParentTasksOfPage (
    [in] struct GUID *pguidChildPage,
    [in] UINT dwEnumerationFlags,
    [out] interface IEnumXWizardTask **ppenum
  );
  HRESULT __stdcall EnumParentPagesOfPage (
    [in] struct GUID *pguidChildPage,
    [in] UINT dwEnumerationFlags,
    [out] interface IEnumXWizardPage **ppenum
  );
  HRESULT __stdcall EnumChildPagesOfPage (
    [in] struct GUID *pguidParentPage,
    [in] UINT dwEnumerationFlags,
    [out] interface IEnumXWizardPage **ppenum
  );
  HRESULT __stdcall GetWizardTypesSupported (
    [in] struct GUID *pguidTask,
    [out] UINT *pdwWizardTypes
  );
  HRESULT __stdcall GetHostInfo (
    [in] struct GUID *pguidParentHost,
    [in] struct GUID *pguidTask,
    [out] struct _XWIZARD_HOST_DISPLAY_TASK_INFO **ppHostDisplayData
  );
  HRESULT __stdcall RunWizard (
    [in] wireHWND hwndParent,
    [in] struct GUID *pguidParentHost,
    [in] struct GUID *pguidTask,
    [in] enum tagXW_WIZARD_TYPE eWizardType,
    [in] UINT dwUserFlags,
    [in] LPWSTR pszCommandLine,
    [in] void *hUserContext,
    [in] UINT dwContextFlags
  );
  HRESULT __stdcall ProcessXMLFile (
    [in] wireHWND hwndParent,
    [in] LPWSTR pszXMLFileName,
    [in] UINT dwImportFlags,
    [out] dispinterface IXMLDOMParseError **ppParseError
  );
  HRESULT __stdcall ExportXMLFile (
    [in] LPWSTR pszXMLFileName,
    [in] UINT dwExportFlags
  );
  HRESULT __stdcall GetWrapperCLSID (
    [in out] struct GUID *pclsidComponent
  );
  HRESULT __stdcall GetWrappedCLSID (
    [in out] struct GUID *pclsidComponent
  );
  HRESULT __stdcall SetInternalValue (
    [in] UINT dwValueIndex,
    [in] void *hValue
  );
  HRESULT __stdcall GetInternalValue (
    [in] UINT dwValueIndex,
    [out] void *phValue
  );
};
[
  uuid(777BA8AE-2498-4875-933A-3067DE883070),
  helpstring("IEnumXWizardHost interface")
]
interface IEnumXWizardHost : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT celt,
    [out] struct GUID **rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumXWizardHost **ppenum
  );
};
[
  uuid(777BA8BE-2498-4875-933A-3067DE883070),
  helpstring("IEnumXWizardTask interface")
]
interface IEnumXWizardTask : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT celt,
    [out] struct GUID **rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumXWizardTask **ppenum
  );
};
[
  uuid(777BA8CE-2498-4875-933A-3067DE883070),
  helpstring("IEnumXWizardPage interface")
]
interface IEnumXWizardPage : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT celt,
    [out] struct GUID **rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumXWizardPage **ppenum
  );
};

