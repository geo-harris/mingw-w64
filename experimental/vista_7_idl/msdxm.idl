/* Automated generated idl file <mediaplayer>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Union record forward declarations.  */
dispinterface _MediaPlayerEvents;
dispinterface IMediaPlayer2;
dispinterface IMediaPlayer;
dispinterface IMediaPlayerDvd;

/* Union record forward declarations.  */
coclass MediaPlayer;

/* Enumeration declarations.  */
[
  helpstring("Readiness State")
]
enum MPReadyStateConstants
{
  mpReadyStateUninitialized = (int) 201326592,
  mpReadyStateLoading = (int) 201326593,
  mpReadyStateInteractive = (int) 201326595,
  mpReadyStateComplete = (int) 201326596
};
[
  helpstring("State of playback")
]
enum MPPlayStateConstants
{
  mpStopped = (int) 201326592,
  mpPaused = (int) 201326593,
  mpPlaying = (int) 201326594,
  mpWaiting = (int) 201326595,
  mpScanForward = (int) 201326596,
  mpScanReverse = (int) 201326597,
  mpClosed = (int) 201326598
};
[
  helpstring("Media Information Display Size type")
]
enum MPDisplaySizeConstants
{
  mpDefaultSize = (int) 201326592,
  mpHalfSize = (int) 201326593,
  mpDoubleSize = (int) 201326594,
  mpFullScreen = (int) 201326595,
  mpFitToSize = (int) 201326596,
  mpOneSixteenthScreen = (int) 201326597,
  mpOneFourthScreen = (int) 201326598,
  mpOneHalfScreen = (int) 201326599
};
[
  helpstring("MediaPlayer Display Mode")
]
enum MPDisplayModeConstants
{
  mpTime = (int) 201326592,
  mpFrames = (int) 201326593
};
[
  helpstring("More Information URL type")
]
enum MPMoreInfoType
{
  mpShowURL = (int) 201326592,
  mpClipURL = (int) 201326593,
  mpBannerURL = (int) 201326594
};
[
  helpstring("Media Information String type")
]
enum MPMediaInfoType
{
  mpShowFilename = (int) 201326592,
  mpShowTitle = (int) 201326593,
  mpShowAuthor = (int) 201326594,
  mpShowCopyright = (int) 201326595,
  mpShowRating = (int) 201326596,
  mpShowDescription = (int) 201326597,
  mpShowLogoIcon = (int) 201326598,
  mpClipFilename = (int) 201326599,
  mpClipTitle = (int) 201326600,
  mpClipAuthor = (int) 201326601,
  mpClipCopyright = (int) 201326602,
  mpClipRating = (int) 201326603,
  mpClipDescription = (int) 201326604,
  mpClipLogoIcon = (int) 201326605,
  mpBannerImage = (int) 201326606,
  mpBannerMoreInfo = (int) 201326607,
  mpWatermark = (int) 201326608
};
[
  helpstring("DVD Menu ID constants")
]
enum DVDMenuIDConstants
{
  dvdMenu_Title = (int) 201326594,
  dvdMenu_Root = (int) 201326595,
  dvdMenu_Subpicture = (int) 201326596,
  dvdMenu_Audio = (int) 201326597,
  dvdMenu_Angle = (int) 201326598,
  dvdMenu_Chapter = (int) 201326599
};
[
  helpstring("Show Dialog Constants")
]
enum MPShowDialogConstants
{
  mpShowDialogHelp = (int) 201326592,
  mpShowDialogStatistics = (int) 201326593,
  mpShowDialogOptions = (int) 201326594,
  mpShowDialogContextMenu = (int) 201326595
};

[
  uuid(22D6F304-B0F6-11D0-94AB-0080C74C7E95),
  version(1.0),
  helpstring("Windows Media Player")
]
library mediaplayer
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(22D6F312-B0F6-11D0-94AB-0080C74C7E95),
     helpstring("Windows Media Player"),
     cancreate
   ]
   coclass MediaPlayer
   {
     dispinterface IMediaPlayer2;
     dispinterface _MediaPlayerEvents;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(2D3A4C40-E711-11D0-94AB-0080C74C7E95),
     helpstring("Event interface for Windows Media Player control"),
     hidden,
     dispatchable
   ]
   dispinterface _MediaPlayerEvents
   {
     [id(1505)]
     void __stdcall DVDNotify (
       [in] long EventCode,
       [in] long EventParam1,
       [in] long EventParam2
     );
     [id(3002)]
     void __stdcall EndOfStream (
       [in] long Result
     );
     [id(-602)]
     void __stdcall KeyDown (
       [in] short KeyCode,
       [in] short ShiftState
     );
     [id(-604)]
     void __stdcall KeyUp (
       [in] short KeyCode,
       [in] short ShiftState
     );
     void __stdcall KeyPress (
       [in] short CharacterCode
     );
     [id(-606)]
     void __stdcall MouseMove (
       [in] short Button,
       [in] short ShiftState,
       [in] OLE_XPOS_PIXELS x,
       [in] OLE_YPOS_PIXELS y
     );
     void __stdcall MouseDown (
       [in] short Button,
       [in] short ShiftState,
       [in] OLE_XPOS_PIXELS x,
       [in] OLE_YPOS_PIXELS y
     );
     [id(-607)]
     void __stdcall MouseUp (
       [in] short Button,
       [in] short ShiftState,
       [in] OLE_XPOS_PIXELS x,
       [in] OLE_YPOS_PIXELS y
     );
     [id(-600)]
     void __stdcall Click (
       [in] short Button,
       [in] short ShiftState,
       [in] OLE_XPOS_PIXELS x,
       [in] OLE_YPOS_PIXELS y
     );
     [id(-601)]
     void __stdcall DblClick (
       [in] short Button,
       [in] short ShiftState,
       [in] OLE_XPOS_PIXELS x,
       [in] OLE_YPOS_PIXELS y
     );
     [id(3011)]
     void __stdcall OpenStateChange (
       [in] long OldState,
       [in] long NewState
     );
     void __stdcall PlayStateChange (
       [in] long OldState,
       [in] long NewState
     );
     [id(3001)]
     void __stdcall ScriptCommand (
       [in] BSTR scType,
       [in] BSTR Param
     );
     [id(3003)]
     void __stdcall Buffering (
       [in] WINBOOL Start
     );
     [id(3010)]
     void __stdcall Error (void);
     [id(3006)]
     void __stdcall MarkerHit (
       [in] long MarkerNum
     );
     [id(3009)]
     void __stdcall Warning (
       [in] long WarningType,
       [in] long Param,
       [in] BSTR Description
     );
     [id(3008)]
     void __stdcall NewStream (void);
     [id(3004)]
     void __stdcall Disconnect (
       [in] long Result
     );
     [id(-609)]
     void __stdcall ReadyStateChange (
       [in] enum MPReadyStateConstants ReadyState
     );
   };
   [
     uuid(20D4F5E0-5475-11D2-9774-0000F80855E6),
     helpstring("IMediaPlayer2 Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMediaPlayer2 : IMediaPlayer
   {
     [id(1500), propget]
     HRESULT __stdcall DVD (
       [out retval] dispinterface IMediaPlayerDvd **ppdispatch
     );
     [id(2028)]
     HRESULT __stdcall GetMediaParameter (
       [in] long EntryNum,
       [in] BSTR bstrParameterName,
       [out retval] BSTR *pbstrParameterValue
     );
     HRESULT __stdcall GetMediaParameterName (
       [in] long EntryNum,
       [in] long Index,
       [out retval] BSTR *pbstrParameterName
     );
     [propget]
     HRESULT __stdcall EntryCount (
       [out retval] long *pNumberEntries
     );
     HRESULT __stdcall GetCurrentEntry (
       [out retval] long *pEntryNumber
     );
     HRESULT __stdcall SetCurrentEntry (
       [in] long EntryNumber
     );
     HRESULT __stdcall ShowDialog (
       [in] enum MPShowDialogConstants mpDialogIndex
     );
   };
   [
     uuid(22D6F311-B0F6-11D0-94AB-0080C74C7E95),
     helpstring("IMediaPlayer Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMediaPlayer : IDispatch
   {
     [id(1027), propget]
     HRESULT __stdcall CurrentPosition (
       [out retval] double *pCurrentPosition
     );
     [id(1027), propput]
     HRESULT __stdcall CurrentPosition (
       [in] double argNo1
     );
     [id(1003), propget]
     HRESULT __stdcall Duration (
       [out retval] double *pDuration
     );
     [id(1001), propget]
     HRESULT __stdcall ImageSourceWidth (
       [out retval] long *pWidth
     );
     [propget]
     HRESULT __stdcall ImageSourceHeight (
       [out retval] long *pHeight
     );
     [id(1010), propget]
     HRESULT __stdcall MarkerCount (
       [out retval] long *pMarkerCount
     );
     [propget]
     HRESULT __stdcall CanScan (
       [out retval] WINBOOL *pCanScan
     );
     [propget]
     HRESULT __stdcall CanSeek (
       [out retval] WINBOOL *pCanSeek
     );
     [id(1047), propget]
     HRESULT __stdcall CanSeekToMarkers (
       [out retval] WINBOOL *pCanSeekToMarkers
     );
     [id(1029), propget]
     HRESULT __stdcall CurrentMarker (
       [out retval] long *pCurrentMarker
     );
     [id(1029), propput]
     HRESULT __stdcall CurrentMarker (
       [in] long argNo1
     );
     [id(1026), propget]
     HRESULT __stdcall FileName (
       [out retval] BSTR *pbstrFileName
     );
     [id(1026), propput]
     HRESULT __stdcall FileName (
       [in] BSTR argNo1
     );
     [id(1009), propget]
     HRESULT __stdcall SourceLink (
       [out retval] BSTR *pbstrSourceLink
     );
     [id(1036), propget]
     HRESULT __stdcall CreationDate (
       [out retval] DATE *pCreationDate
     );
     [id(1038), propget]
     HRESULT __stdcall ErrorCorrection (
       [out retval] BSTR *pbstrErrorCorrection
     );
     [id(1037), propget]
     HRESULT __stdcall Bandwidth (
       [out retval] long *pBandwidth
     );
     [id(1060), propget]
     HRESULT __stdcall SourceProtocol (
       [out retval] long *pSourceProtocol
     );
     [id(1039), propget]
     HRESULT __stdcall ReceivedPackets (
       [out retval] long *pReceivedPackets
     );
     [propget]
     HRESULT __stdcall RecoveredPackets (
       [out retval] long *pRecoveredPackets
     );
     [propget]
     HRESULT __stdcall LostPackets (
       [out retval] long *pLostPackets
     );
     [propget]
     HRESULT __stdcall ReceptionQuality (
       [out retval] long *pReceptionQuality
     );
     [propget]
     HRESULT __stdcall BufferingCount (
       [out retval] long *pBufferingCount
     );
     [id(1058), propget]
     HRESULT __stdcall IsBroadcast (
       [out retval] WINBOOL *pIsBroadcast
     );
     [id(1080), propget]
     HRESULT __stdcall BufferingProgress (
       [out retval] long *pBufferingProgress
     );
     [id(1050), propget]
     HRESULT __stdcall ChannelName (
       [out retval] BSTR *pbstrChannelName
     );
     [propget]
     HRESULT __stdcall ChannelDescription (
       [out retval] BSTR *pbstrChannelDescription
     );
     [propget]
     HRESULT __stdcall ChannelURL (
       [out retval] BSTR *pbstrChannelURL
     );
     [propget]
     HRESULT __stdcall ContactAddress (
       [out retval] BSTR *pbstrContactAddress
     );
     [propget]
     HRESULT __stdcall ContactPhone (
       [out retval] BSTR *pbstrContactPhone
     );
     [propget]
     HRESULT __stdcall ContactEmail (
       [out retval] BSTR *pbstrContactEmail
     );
     [id(1070), propget]
     HRESULT __stdcall BufferingTime (
       [out retval] double *pBufferingTime
     );
     [id(1070), propput]
     HRESULT __stdcall BufferingTime (
       [in] double argNo1
     );
     [id(1017), propget]
     HRESULT __stdcall AutoStart (
       [out retval] WINBOOL *pAutoStart
     );
     [id(1017), propput]
     HRESULT __stdcall AutoStart (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall AutoRewind (
       [out retval] WINBOOL *pAutoRewind
     );
     [id(1018), propput]
     HRESULT __stdcall AutoRewind (
       [in] WINBOOL argNo1
     );
     [id(1028), propget]
     HRESULT __stdcall Rate (
       [out retval] double *pRate
     );
     [id(1028), propput]
     HRESULT __stdcall Rate (
       [in] double argNo1
     );
     [id(1013), propget]
     HRESULT __stdcall SendKeyboardEvents (
       [out retval] WINBOOL *pSendKeyboardEvents
     );
     [id(1013), propput]
     HRESULT __stdcall SendKeyboardEvents (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall SendMouseClickEvents (
       [out retval] WINBOOL *pSendMouseClickEvents
     );
     [id(1014), propput]
     HRESULT __stdcall SendMouseClickEvents (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall SendMouseMoveEvents (
       [out retval] WINBOOL *pSendMouseMoveEvents
     );
     [id(1015), propput]
     HRESULT __stdcall SendMouseMoveEvents (
       [in] WINBOOL argNo1
     );
     [id(1030), propget]
     HRESULT __stdcall PlayCount (
       [out retval] long *pPlayCount
     );
     [id(1030), propput]
     HRESULT __stdcall PlayCount (
       [in] long argNo1
     );
     [id(1025), propget]
     HRESULT __stdcall ClickToPlay (
       [out retval] WINBOOL *pClickToPlay
     );
     [id(1025), propput]
     HRESULT __stdcall ClickToPlay (
       [in] WINBOOL argNo1
     );
     [id(1035), propget]
     HRESULT __stdcall AllowScan (
       [out retval] WINBOOL *pAllowScan
     );
     [id(1035), propput]
     HRESULT __stdcall AllowScan (
       [in] WINBOOL argNo1
     );
     [id(1021), propget]
     HRESULT __stdcall EnableContextMenu (
       [out retval] WINBOOL *pEnableContextMenu
     );
     [id(1021), propput]
     HRESULT __stdcall EnableContextMenu (
       [in] WINBOOL argNo1
     );
     [id(1044), propget]
     HRESULT __stdcall CursorType (
       [out retval] long *pCursorType
     );
     [id(1044), propput]
     HRESULT __stdcall CursorType (
       [in] long argNo1
     );
     [id(1057), propget]
     HRESULT __stdcall CodecCount (
       [out retval] long *pCodecCount
     );
     [id(1056), propget]
     HRESULT __stdcall AllowChangeDisplaySize (
       [out retval] WINBOOL *pAllowChangeDisplaySize
     );
     [id(1056), propput]
     HRESULT __stdcall AllowChangeDisplaySize (
       [in] WINBOOL argNo1
     );
     [id(1059), propget]
     HRESULT __stdcall IsDurationValid (
       [out retval] WINBOOL *pIsDurationValid
     );
     [id(1061), propget]
     HRESULT __stdcall OpenState (
       [out retval] long *pOpenState
     );
     [propget]
     HRESULT __stdcall SendOpenStateChangeEvents (
       [out retval] WINBOOL *pSendOpenStateChangeEvents
     );
     [id(1062), propput]
     HRESULT __stdcall SendOpenStateChangeEvents (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall SendWarningEvents (
       [out retval] WINBOOL *pSendWarningEvents
     );
     [id(1063), propput]
     HRESULT __stdcall SendWarningEvents (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall SendErrorEvents (
       [out retval] WINBOOL *pSendErrorEvents
     );
     [id(1064), propput]
     HRESULT __stdcall SendErrorEvents (
       [in] WINBOOL argNo1
     );
     [id(1068), propget]
     HRESULT __stdcall PlayState (
       [out retval] enum MPPlayStateConstants *pPlayState
     );
     [propget]
     HRESULT __stdcall SendPlayStateChangeEvents (
       [out retval] WINBOOL *pSendPlayStateChangeEvents
     );
     [id(1069), propput]
     HRESULT __stdcall SendPlayStateChangeEvents (
       [in] WINBOOL argNo1
     );
     [id(1032), propget]
     HRESULT __stdcall DisplaySize (
       [out retval] enum MPDisplaySizeConstants *pDisplaySize
     );
     [id(1032), propput]
     HRESULT __stdcall DisplaySize (
       [in] enum MPDisplaySizeConstants argNo1
     );
     [id(1020), propget]
     HRESULT __stdcall InvokeURLs (
       [out retval] WINBOOL *pInvokeURLs
     );
     [id(1020), propput]
     HRESULT __stdcall InvokeURLs (
       [in] WINBOOL argNo1
     );
     [id(1082), propget]
     HRESULT __stdcall BaseURL (
       [out retval] BSTR *pbstrBaseURL
     );
     [id(1082), propput]
     HRESULT __stdcall BaseURL (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall DefaultFrame (
       [out retval] BSTR *pbstrDefaultFrame
     );
     [id(1083), propput]
     HRESULT __stdcall DefaultFrame (
       [in] BSTR argNo1
     );
     [id(1065), propget]
     HRESULT __stdcall HasError (
       [out retval] WINBOOL *pHasError
     );
     [propget]
     HRESULT __stdcall ErrorDescription (
       [out retval] BSTR *pbstrErrorDescription
     );
     [propget]
     HRESULT __stdcall ErrorCode (
       [out retval] long *pErrorCode
     );
     [id(1045), propget]
     HRESULT __stdcall AnimationAtStart (
       [out retval] WINBOOL *pAnimationAtStart
     );
     [id(1045), propput]
     HRESULT __stdcall AnimationAtStart (
       [in] WINBOOL argNo1
     );
     [id(1022), propget]
     HRESULT __stdcall TransparentAtStart (
       [out retval] WINBOOL *pTransparentAtStart
     );
     [id(1022), propput]
     HRESULT __stdcall TransparentAtStart (
       [in] WINBOOL argNo1
     );
     [id(19), propget]
     HRESULT __stdcall Volume (
       [out retval] long *pVolume
     );
     [id(19), propput]
     HRESULT __stdcall Volume (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall Balance (
       [out retval] long *pBalance
     );
     [id(20), propput]
     HRESULT __stdcall Balance (
       [in] long argNo1
     );
     [id(-525), propget]
     HRESULT __stdcall ReadyState (
       [out retval] enum MPReadyStateConstants *pValue
     );
     [id(15), propget]
     HRESULT __stdcall SelectionStart (
       [out retval] double *pValue
     );
     [id(15), propput]
     HRESULT __stdcall SelectionStart (
       [in] double argNo1
     );
     [propget]
     HRESULT __stdcall SelectionEnd (
       [out retval] double *pValue
     );
     [id(16), propput]
     HRESULT __stdcall SelectionEnd (
       [in] double argNo1
     );
     [id(22), propget]
     HRESULT __stdcall ShowDisplay (
       [out retval] WINBOOL *Show
     );
     [id(22), propput]
     HRESULT __stdcall ShowDisplay (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall ShowControls (
       [out retval] WINBOOL *Show
     );
     [id(23), propput]
     HRESULT __stdcall ShowControls (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall ShowPositionControls (
       [out retval] WINBOOL *Show
     );
     [id(24), propput]
     HRESULT __stdcall ShowPositionControls (
       [in] WINBOOL argNo1
     );
     [id(26), propget]
     HRESULT __stdcall ShowTracker (
       [out retval] WINBOOL *Show
     );
     [id(26), propput]
     HRESULT __stdcall ShowTracker (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall EnablePositionControls (
       [out retval] WINBOOL *Enable
     );
     [id(27), propput]
     HRESULT __stdcall EnablePositionControls (
       [in] WINBOOL argNo1
     );
     [id(29), propget]
     HRESULT __stdcall EnableTracker (
       [out retval] WINBOOL *Enable
     );
     [id(29), propput]
     HRESULT __stdcall EnableTracker (
       [in] WINBOOL argNo1
     );
     [id(-514), propget]
     HRESULT __stdcall Enabled (
       [out retval] WINBOOL *pEnabled
     );
     [id(-514), propput]
     HRESULT __stdcall Enabled (
       [in] WINBOOL argNo1
     );
     [id(36), propget]
     HRESULT __stdcall DisplayForeColor (
       [out retval] OLE_COLOR *ForeColor
     );
     [id(36), propput]
     HRESULT __stdcall DisplayForeColor (
       [in] OLE_COLOR argNo1
     );
     [propget]
     HRESULT __stdcall DisplayBackColor (
       [out retval] OLE_COLOR *BackColor
     );
     [id(37), propput]
     HRESULT __stdcall DisplayBackColor (
       [in] OLE_COLOR argNo1
     );
     [id(32), propget]
     HRESULT __stdcall DisplayMode (
       [out retval] enum MPDisplayModeConstants *pValue
     );
     [id(32), propput]
     HRESULT __stdcall DisplayMode (
       [in] enum MPDisplayModeConstants argNo1
     );
     [id(1103), propget]
     HRESULT __stdcall VideoBorder3D (
       [out retval] WINBOOL *pVideoBorderWidth
     );
     [id(1103), propput]
     HRESULT __stdcall VideoBorder3D (
       [in] WINBOOL argNo1
     );
     [id(1101), propget]
     HRESULT __stdcall VideoBorderWidth (
       [out retval] long *pVideoBorderWidth
     );
     [id(1101), propput]
     HRESULT __stdcall VideoBorderWidth (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall VideoBorderColor (
       [out retval] OLE_COLOR *pVideoBorderWidth
     );
     [id(1102), propput]
     HRESULT __stdcall VideoBorderColor (
       [in] OLE_COLOR argNo1
     );
     [id(1088), propget]
     HRESULT __stdcall ShowGotoBar (
       [out retval] WINBOOL *pbool
     );
     [id(1088), propput]
     HRESULT __stdcall ShowGotoBar (
       [in] WINBOOL argNo1
     );
     [id(1086), propget]
     HRESULT __stdcall ShowStatusBar (
       [out retval] WINBOOL *pbool
     );
     [id(1086), propput]
     HRESULT __stdcall ShowStatusBar (
       [in] WINBOOL argNo1
     );
     [id(1084), propget]
     HRESULT __stdcall ShowCaptioning (
       [out retval] WINBOOL *pbool
     );
     [id(1084), propput]
     HRESULT __stdcall ShowCaptioning (
       [in] WINBOOL argNo1
     );
     [id(1107), propget]
     HRESULT __stdcall ShowAudioControls (
       [out retval] WINBOOL *pbool
     );
     [id(1107), propput]
     HRESULT __stdcall ShowAudioControls (
       [in] WINBOOL argNo1
     );
     [id(1085), propget]
     HRESULT __stdcall CaptioningID (
       [out retval] BSTR *pstrText
     );
     [id(1085), propput]
     HRESULT __stdcall CaptioningID (
       [in] BSTR argNo1
     );
     [id(1089), propget]
     HRESULT __stdcall Mute (
       [out retval] WINBOOL *vbool
     );
     [id(1089), propput]
     HRESULT __stdcall Mute (
       [in] WINBOOL argNo1
     );
     [id(1093), propget]
     HRESULT __stdcall CanPreview (
       [out retval] WINBOOL *pCanPreview
     );
     [id(1091), propget]
     HRESULT __stdcall PreviewMode (
       [out retval] WINBOOL *pPreviewMode
     );
     [id(1091), propput]
     HRESULT __stdcall PreviewMode (
       [in] WINBOOL argNo1
     );
     [id(1094), propget]
     HRESULT __stdcall HasMultipleItems (
       [out retval] WINBOOL *pHasMuliItems
     );
     [propget]
     HRESULT __stdcall Language (
       [out retval] long *pLanguage
     );
     [id(1095), propput]
     HRESULT __stdcall Language (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall AudioStream (
       [out retval] long *pStream
     );
     [id(1096), propput]
     HRESULT __stdcall AudioStream (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall SAMIStyle (
       [out retval] BSTR *pbstrStyle
     );
     [id(1097), propput]
     HRESULT __stdcall SAMIStyle (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall SAMILang (
       [out retval] BSTR *pbstrLang
     );
     [id(1098), propput]
     HRESULT __stdcall SAMILang (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall SAMIFileName (
       [out retval] BSTR *pbstrFileName
     );
     [id(1099), propput]
     HRESULT __stdcall SAMIFileName (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall StreamCount (
       [out retval] long *pStreamCount
     );
     [id(1106), propget]
     HRESULT __stdcall ClientId (
       [out retval] BSTR *pbstrClientId
     );
     [id(1113), propget]
     HRESULT __stdcall ConnectionSpeed (
       [out retval] long *plConnectionSpeed
     );
     [id(-500), propget]
     HRESULT __stdcall AutoSize (
       [out retval] WINBOOL *pbool
     );
     [id(-500), propput]
     HRESULT __stdcall AutoSize (
       [in] WINBOOL argNo1
     );
     [id(1108), propget]
     HRESULT __stdcall EnableFullScreenControls (
       [out retval] WINBOOL *pbVal
     );
     [id(1108), propput]
     HRESULT __stdcall EnableFullScreenControls (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall ActiveMovie (
       [out retval] IDispatch **ppdispatch
     );
     [propget]
     HRESULT __stdcall NSPlay (
       [out retval] IDispatch **ppdispatch
     );
     [id(1112), propget]
     HRESULT __stdcall WindowlessVideo (
       [out retval] WINBOOL *pbool
     );
     [id(1112), propput]
     HRESULT __stdcall WindowlessVideo (
       [in] WINBOOL argNo1
     );
     [id(2001)]
     HRESULT __stdcall Play (void);
     [id(2003)]
     HRESULT __stdcall Stop (void);
     [id(2002)]
     HRESULT __stdcall Pause (void);
     [id(2004)]
     HRESULT __stdcall GetMarkerTime (
       [in] long MarkerNum,
       [out retval] double *pMarkerTime
     );
     HRESULT __stdcall GetMarkerName (
       [in] long MarkerNum,
       [out retval] BSTR *pbstrMarkerName
     );
     [id(-552)]
     HRESULT __stdcall AboutBox (void);
     [id(2007)]
     HRESULT __stdcall GetCodecInstalled (
       [in] long CodecNum,
       [out retval] WINBOOL *pCodecInstalled
     );
     HRESULT __stdcall GetCodecDescription (
       [in] long CodecNum,
       [out retval] BSTR *pbstrCodecDescription
     );
     HRESULT __stdcall GetCodecURL (
       [in] long CodecNum,
       [out retval] BSTR *pbstrCodecURL
     );
     [id(2011)]
     HRESULT __stdcall GetMoreInfoURL (
       [in] enum MPMoreInfoType MoreInfoType,
       [out retval] BSTR *pbstrMoreInfoURL
     );
     [id(2016)]
     HRESULT __stdcall GetMediaInfoString (
       [in] enum MPMediaInfoType MediaInfoType,
       [out retval] BSTR *pbstrMediaInfo
     );
     [id(2006)]
     HRESULT __stdcall Cancel (void);
     [id(2010)]
     HRESULT __stdcall Open (
       [in] BSTR bstrFileName
     );
     [id(53)]
     HRESULT __stdcall IsSoundCardEnabled (
       [out retval] WINBOOL *pbSoundCard
     );
     [id(2023)]
     HRESULT __stdcall Next (void);
     [id(2022)]
     HRESULT __stdcall Previous (void);
     [id(2015)]
     HRESULT __stdcall StreamSelect (
       [in] long StreamNum
     );
     [id(2024)]
     HRESULT __stdcall FastForward (void);
     HRESULT __stdcall FastReverse (void);
     [id(2019)]
     HRESULT __stdcall GetStreamName (
       [in] long StreamNum,
       [out retval] BSTR *pbstrStreamName
     );
     HRESULT __stdcall GetStreamGroup (
       [in] long StreamNum,
       [out retval] long *pStreamGroup
     );
     HRESULT __stdcall GetStreamSelected (
       [in] long StreamNum,
       [out retval] WINBOOL *pStreamSelected
     );
   };
   [
     uuid(746EB440-3835-11D2-9774-0000F80855E6),
     helpstring("MediaPlayer DVD interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMediaPlayerDvd : IDispatch
   {
     [id(1526)]
     HRESULT __stdcall ButtonSelectAndActivate (
       [in] UINT uiButton
     );
     [id(1521)]
     HRESULT __stdcall UpperButtonSelect (void);
     HRESULT __stdcall LowerButtonSelect (void);
     HRESULT __stdcall LeftButtonSelect (void);
     HRESULT __stdcall RightButtonSelect (void);
     HRESULT __stdcall ButtonActivate (void);
     [id(1517)]
     HRESULT __stdcall ForwardScan (
       [in] double dwSpeed
     );
     HRESULT __stdcall BackwardScan (
       [in] double dwSpeed
     );
     [id(1514)]
     HRESULT __stdcall PrevPGSearch (void);
     HRESULT __stdcall TopPGSearch (void);
     HRESULT __stdcall NextPGSearch (void);
     [id(1507)]
     HRESULT __stdcall TitlePlay (
       [in] UINT uiTitle
     );
     HRESULT __stdcall ChapterPlay (
       [in] UINT uiTitle,
       [in] UINT uiChapter
     );
     [id(1513)]
     HRESULT __stdcall ChapterSearch (
       [in] UINT Chapter
     );
     [id(1519)]
     HRESULT __stdcall MenuCall (
       [in] enum DVDMenuIDConstants MenuID
     );
     HRESULT __stdcall ResumeFromMenu (void);
     [id(1509)]
     HRESULT __stdcall TimePlay (
       [in] UINT uiTitle,
       [in] BSTR bstrTime
     );
     [id(1512)]
     HRESULT __stdcall TimeSearch (
       [in] BSTR bstrTime
     );
     [id(1541)]
     HRESULT __stdcall ChapterPlayAutoStop (
       [in] UINT ulTitle,
       [in] UINT ulChapter,
       [in] UINT ulChaptersToPlay
     );
     [id(1527)]
     HRESULT __stdcall StillOff (void);
     [id(1511)]
     HRESULT __stdcall GoUp (void);
     [id(1582), propget]
     HRESULT __stdcall TotalTitleTime (
       [out retval] BSTR *bstrTime
     );
     [id(1550)]
     HRESULT __stdcall GetNumberOfChapters (
       [in] UINT ulTitle,
       [out retval] UINT *ulNumChapters
     );
     HRESULT __stdcall GetAudioLanguage (
       [in] UINT ulStream,
       [out retval] BSTR *bstrAudioLang
     );
     [id(1555)]
     HRESULT __stdcall GetSubpictureLanguage (
       [in] UINT ulStream,
       [out retval] BSTR *bstrSubpictureLang
     );
     [id(1560)]
     HRESULT __stdcall GetAllGPRMs (
       [out retval] VARIANT *vtGPRM
     );
     [id(1559)]
     HRESULT __stdcall GetAllSPRMs (
       [out retval] VARIANT *vtSPRM
     );
     [id(1579)]
     HRESULT __stdcall UOPValid (
       [in] UINT ulUOP,
       [out retval] WINBOOL *bValid
     );
     [id(1571), propget]
     HRESULT __stdcall ButtonsAvailable (
       [out retval] UINT *ulButtonsAvailable
     );
     [id(1570), propget]
     HRESULT __stdcall CurrentButton (
       [out retval] UINT *ulCurrentButton
     );
     [id(1543), propget]
     HRESULT __stdcall AudioStreamsAvailable (
       [out retval] UINT *ulAudioStreamsAvailable
     );
     [propget]
     HRESULT __stdcall CurrentAudioStream (
       [out retval] UINT *ulAudioStream
     );
     [id(1544), propput]
     HRESULT __stdcall CurrentAudioStream (
       [in] UINT argNo1
     );
     [propget]
     HRESULT __stdcall CurrentSubpictureStream (
       [out retval] UINT *ulSubpictureStream
     );
     [id(1545), propput]
     HRESULT __stdcall CurrentSubpictureStream (
       [in] UINT argNo1
     );
     [propget]
     HRESULT __stdcall SubpictureStreamsAvailable (
       [out retval] UINT *ulNumSubpictureStreams
     );
     [propget]
     HRESULT __stdcall SubpictureOn (
       [out retval] WINBOOL *bSubpictureON
     );
     [id(1547), propput]
     HRESULT __stdcall SubpictureOn (
       [in] WINBOOL argNo1
     );
     [id(1549), propget]
     HRESULT __stdcall AnglesAvailable (
       [out retval] UINT *ulAnglesAvailable
     );
     [id(1548), propget]
     HRESULT __stdcall CurrentAngle (
       [out retval] UINT *ulAngle
     );
     [id(1548), propput]
     HRESULT __stdcall CurrentAngle (
       [in] UINT argNo1
     );
     [id(1567), propget]
     HRESULT __stdcall CurrentTitle (
       [out retval] UINT *ulTitle
     );
     [propget]
     HRESULT __stdcall CurrentChapter (
       [out retval] UINT *ulChapter
     );
     [propget]
     HRESULT __stdcall CurrentTime (
       [out retval] BSTR *bstrTime
     );
     [id(1538), propput]
     HRESULT __stdcall Root (
       [in] BSTR argNo1
     );
     [id(1538), propget]
     HRESULT __stdcall Root (
       [out retval] BSTR *pbstrPath
     );
     [id(1573), propget]
     HRESULT __stdcall FramesPerSecond (
       [out retval] UINT *ulFps
     );
     [propget]
     HRESULT __stdcall CurrentDomain (
       [out retval] UINT *ulDomain
     );
     [propget]
     HRESULT __stdcall TitlesAvailable (
       [out retval] UINT *ulTitles
     );
     [propget]
     HRESULT __stdcall VolumesAvailable (
       [out retval] UINT *pulVolumes
     );
     [propget]
     HRESULT __stdcall CurrentVolume (
       [out retval] UINT *pulVolume
     );
     [propget]
     HRESULT __stdcall CurrentDiscSide (
       [out retval] UINT *pulDiscSide
     );
     [id(1581), propget]
     HRESULT __stdcall CCActive (
       [out retval] WINBOOL *bCCActive
     );
     [id(1581), propput]
     HRESULT __stdcall CCActive (
       [in] WINBOOL argNo1
     );
     [id(1580), propget]
     HRESULT __stdcall CurrentCCService (
       [out retval] UINT *pulService
     );
     [id(1580), propput]
     HRESULT __stdcall CurrentCCService (
       [in] UINT argNo1
     );
     [id(1584), propget]
     HRESULT __stdcall UniqueID (
       [out retval] BSTR *pvtUniqueID
     );
     [propget]
     HRESULT __stdcall ColorKey (
       [out retval] UINT *pClr
     );
     [id(1585), propput]
     HRESULT __stdcall ColorKey (
       [in] UINT argNo1
     );
   };

};

