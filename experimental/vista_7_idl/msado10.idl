/* Automated generated idl file <adodb>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface ICADOConnection;
interface IADORecordsetConstruction;

/* Union record forward declarations.  */
dispinterface _Collection;
dispinterface _DynaCollection;
dispinterface _ADO;
dispinterface Properties;
dispinterface Property;
dispinterface Error;
dispinterface Errors;
dispinterface _Command;
dispinterface _Connection;
dispinterface _Recordset;
dispinterface Fields;
dispinterface Field;
dispinterface _Parameter;
dispinterface Parameters;

/* Union record forward declarations.  */
coclass Recordset;
coclass Connection;
coclass Command;
coclass Parameter;

/* Enumeration declarations.  */
[
  uuid(00000296-0000-0010-8000-00AA006D2EA4)
]
enum CursorTypeEnum
{
  adOpenUnspecified = (int) -1,
  adOpenForwardOnly = (int) 201326592,
  adOpenKeyset = (int) 201326593,
  adOpenDynamic = (int) 201326594,
  adOpenStatic = (int) 201326595
};
[
  uuid(00000297-0000-0010-8000-00AA006D2EA4)
]
enum CursorOptionEnum
{
  adHoldRecords = (int) 201326848,
  adMovePrevious = (int) 201327104,
  adAddNew = (int) 218104832,
  adDelete = (int) 218105856,
  adUpdate = (int) 218136576,
  adBookmark = (int) 201334784,
  adApproxPosition = (int) 201342976,
  adUpdateBatch = (int) 201392128,
  adResync = (int) 201457664
};
[
  uuid(00000298-0000-0010-8000-00AA006D2EA4)
]
enum LockTypeEnum
{
  adLockUnspecified = (int) -1,
  adLockReadOnly = (int) 201326593,
  adLockPessimistic = (int) 201326594,
  adLockOptimistic = (int) 201326595,
  adLockBatchOptimistic = (int) 201326596
};
[
  uuid(000002AA-0000-0010-8000-00AA006D2EA4),
  hidden
]
enum CursorLocationEnum
{
  adUseClient = (int) 201326593,
  adUseServer = (int) 201326594,
  adUseClientBatch = (int) 201326595
};
[
  uuid(0000029A-0000-0010-8000-00AA006D2EA4)
]
enum DataTypeEnum
{
  adEmpty = (int) 201326592,
  adTinyInt = (int) 201326608,
  adSmallInt = (int) 201326594,
  adInteger = (int) 201326595,
  adBigInt = (int) 201326612,
  adUnsignedTinyInt = (int) 201326609,
  adUnsignedSmallInt = (int) 201326610,
  adUnsignedInt = (int) 201326611,
  adUnsignedBigInt = (int) 201326613,
  adSingle = (int) 201326596,
  adDouble = (int) 201326597,
  adCurrency = (int) 201326598,
  adDecimal = (int) 201326606,
  adNumeric = (int) 201326723,
  adBoolean = (int) 201326603,
  adError = (int) 201326602,
  adUserDefined = (int) 201326724,
  adVariant = (int) 201326604,
  adIDispatch = (int) 201326601,
  adIUnknown = (int) 201326605,
  adGUID = (int) 201326664,
  adDate = (int) 201326599,
  adDBDate = (int) 201326725,
  adDBTime = (int) 201326726,
  adDBTimeStamp = (int) 201326727,
  adBSTR = (int) 201326600,
  adChar = (int) 201326721,
  adVarChar = (int) 201326792,
  adLongVarChar = (int) 201326793,
  adWChar = (int) 201326722,
  adVarWChar = (int) 201326794,
  adLongVarWChar = (int) 201326795,
  adBinary = (int) 201326720,
  adVarBinary = (int) 201326796,
  adLongVarBinary = (int) 201326797
};
[
  uuid(000002A0-0000-0010-8000-00AA006D2EA4)
]
enum FieldAttributeEnum
{
  adFldMayDefer = (int) 201326594,
  adFldUpdatable = (int) 201326596,
  adFldUnknownUpdatable = (int) 201326600,
  adFldFixed = (int) 201326608,
  adFldIsNullable = (int) 201326624,
  adFldMayBeNull = (int) 201326656,
  adFldLong = (int) 201326720,
  adFldRowID = (int) 201326848,
  adFldRowVersion = (int) 201327104,
  adFldCacheDeferred = (int) 201330688
};
[
  uuid(000002A1-0000-0010-8000-00AA006D2EA4)
]
enum EditModeEnum
{
  adEditNone = (int) 201326592,
  adEditInProgress = (int) 201326593,
  adEditAdd = (int) 201326594
};
[
  uuid(000002A2-0000-0010-8000-00AA006D2EA4)
]
enum RecordStatusEnum
{
  adRecOK = (int) 201326592,
  adRecNew = (int) 201326593,
  adRecModified = (int) 201326594,
  adRecDeleted = (int) 201326596,
  adRecUnmodified = (int) 201326600,
  adRecInvalid = (int) 201326608,
  adRecMultipleChanges = (int) 201326656,
  adRecPendingChanges = (int) 201326720,
  adRecCanceled = (int) 201326848,
  adRecCantRelease = (int) 201327616,
  adRecConcurrencyViolation = (int) 201328640,
  adRecIntegrityViolation = (int) 201330688,
  adRecMaxChangesExceeded = (int) 201334784,
  adRecObjectOpen = (int) 201342976,
  adRecOutOfMemory = (int) 201359360,
  adRecPermissionDenied = (int) 201392128,
  adRecSchemaViolation = (int) 201457664,
  adRecDBDeleted = (int) 201588736
};
enum GetRowsOptionEnum
{
  adGetRowsRest = (int) -1
};
[
  uuid(000002A3-0000-0010-8000-00AA006D2EA4)
]
enum PositionEnum
{
  adPosUnknown = (int) -1,
  adPosBOF = (int) -2,
  adPosEOF = (int) -3
};
enum AffectEnum
{
  adAffectCurrent = (int) 201326593,
  adAffectGroup = (int) 201326594,
  adAffectAll = (int) 201326595
};
enum FilterGroupEnum
{
  adFilterNone = (int) 201326592,
  adFilterPendingRecords = (int) 201326593,
  adFilterAffectedRecords = (int) 201326594,
  adFilterFetchedRecords = (int) 201326595,
  adFilterPredicate = (int) 201326596
};
[
  uuid(0000029B-0000-0010-8000-00AA006D2EA4)
]
enum ConnectPromptEnum
{
  adPromptAlways = (int) 201326593,
  adPromptComplete = (int) 201326594,
  adPromptCompleteRequired = (int) 201326595,
  adPromptNever = (int) 201326596
};
[
  uuid(0000029C-0000-0010-8000-00AA006D2EA4)
]
enum ConnectModeEnum
{
  adModeUnknown = (int) 201326592,
  adModeRead = (int) 201326593,
  adModeWrite = (int) 201326594,
  adModeReadWrite = (int) 201326595,
  adModeShareDenyRead = (int) 201326596,
  adModeShareDenyWrite = (int) 201326600,
  adModeShareExclusive = (int) 201326604,
  adModeShareDenyNone = (int) 201326608
};
[
  uuid(0000029E-0000-0010-8000-00AA006D2EA4)
]
enum IsolationLevelEnum
{
  adXactUnspecified = (int) -1,
  adXactChaos = (int) 201326608,
  adXactReadUncommitted = (int) 201326848,
  adXactBrowse = (int) 201326848,
  adXactCursorStability = (int) 201330688,
  adXactReadCommitted = (int) 201330688,
  adXactRepeatableRead = (int) 201392128,
  adXactSerializable = (int) 202375168,
  adXactIsolated = (int) 202375168
};
[
  uuid(0000029F-0000-0010-8000-00AA006D2EA4)
]
enum XactAttributeEnum
{
  adXactCommitRetaining = (int) 201457664,
  adXactAbortRetaining = (int) 201588736
};
[
  uuid(000002A4-0000-0010-8000-00AA006D2EA4)
]
enum PropertyAttributesEnum
{
  adPropNotSupported = (int) 201326592,
  adPropRequired = (int) 201326593,
  adPropOptional = (int) 201326594,
  adPropRead = (int) 201327104,
  adPropWrite = (int) 201327616
};
[
  uuid(000002A5-0000-0010-8000-00AA006D2EA4)
]
enum ErrorValueEnum
{
  adErrInvalidArgument = (int) 201329593,
  adErrNoCurrentRecord = (int) 201329613,
  adErrIllegalOperation = (int) 201329811,
  adErrInTransaction = (int) 201329838,
  adErrFeatureNotAvailable = (int) 201329843,
  adErrItemNotFound = (int) 201329857,
  adErrObjectInCollection = (int) 201329959,
  adErrObjectNotSet = (int) 201330012,
  adErrDataConversion = (int) 201330013,
  adErrObjectClosed = (int) 201330296,
  adErrObjectOpen = (int) 201330297,
  adErrProviderNotFound = (int) 201330298,
  adErrBoundToCommand = (int) 201330299,
  adErrInvalidParamInfo = (int) 201330300,
  adErrInvalidConnection = (int) 201330301
};
[
  uuid(000002A6-0000-0010-8000-00AA006D2EA4)
]
enum ParameterAttributesEnum
{
  adParamSigned = (int) 201326608,
  adParamNullable = (int) 201326656,
  adParamLong = (int) 201326720
};
[
  uuid(000002A7-0000-0010-8000-00AA006D2EA4)
]
enum ParameterDirectionEnum
{
  adParamUnknown = (int) 201326592,
  adParamInput = (int) 201326593,
  adParamOutput = (int) 201326594,
  adParamInputOutput = (int) 201326595,
  adParamReturnValue = (int) 201326596
};
[
  uuid(000002A9-0000-0010-8000-00AA006D2EA4)
]
enum CommandTypeEnum
{
  adCmdUnspecified = (int) -1,
  adCmdUnknown = (int) 201326600,
  adCmdText = (int) 201326593,
  adCmdTable = (int) 201326594,
  adCmdStoredProc = (int) 201326596
};

[
  uuid(00000200-0000-0010-8000-00AA006D2EA4),
  version(1.0),
  helpstring("Microsoft OLE DB ActiveX Data Objects 1.0 Library"),
  helpfile("msADO10.hlp")
]
library adodb
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(00000281-0000-0010-8000-00AA006D2EA4),
     cancreate,
     licensed
   ]
   coclass Recordset
   {
     dispinterface _Recordset;
   };
   [
     uuid(00000293-0000-0010-8000-00AA006D2EA4),
     cancreate,
     licensed
   ]
   coclass Connection
   {
     dispinterface _Connection;
     interface ICADOConnection;
   };
   [
     uuid(0000022C-0000-0010-8000-00AA006D2EA4),
     cancreate,
     licensed
   ]
   coclass Command
   {
     dispinterface _Command;
   };
   [
     uuid(00000231-0000-0010-8000-00AA006D2EA4),
     cancreate,
     licensed
   ]
   coclass Parameter
   {
     dispinterface _Parameter;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(00000254-0000-0010-8000-00AA006D2EA4),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface _Collection : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Count (
       [out retval] long *c
     );
     [id(-4), restricted]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppvObject
     );
     [id(1610743810)]
     HRESULT __stdcall Refresh (void);
   };
   [
     uuid(00000255-0000-0010-8000-00AA006D2EA4),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface _DynaCollection : _Collection
   {
     [id(1610809344)]
     HRESULT __stdcall Append (
       [in] IDispatch * Object
     );
     HRESULT __stdcall Delete (
       [in] VARIANT Index
     );
   };
   [
     uuid(00000258-0000-0010-8000-00AA006D2EA4),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface _ADO : IDispatch
   {
     [id(500), propget]
     HRESULT __stdcall Properties (
       [out retval] dispinterface Properties **ppvObject
     );
   };
   [
     uuid(0000020A-0000-0010-8000-00AA006D2EA4),
     helpstring("Collection of Property objects"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface Properties : _Collection
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT Index,
       [out retval] dispinterface Property **ppvObject
     );
   };
   [
     uuid(00000209-0000-0010-8000-00AA006D2EA4),
     helpstring("Built in or user defined property"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface Property : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Value (
       [out retval] VARIANT *pval
     );
     [id(0), propput]
     HRESULT __stdcall Value (
       [in] VARIANT argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstr
     );
     [propget]
     HRESULT __stdcall Type (
       [out retval] enum DataTypeEnum *ptype
     );
     [propget]
     HRESULT __stdcall Attributes (
       [out retval] long *plAttributes
     );
     [id(1610743812), propput]
     HRESULT __stdcall Attributes (
       [in] long argNo1
     );
   };
   [
     uuid(00000205-0000-0010-8000-00AA006D2EA4),
     helpstring("Object containing details of errors for a single operation involving ADO"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface Error : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Number (
       [out retval] long *pl
     );
     [propget]
     HRESULT __stdcall Source (
       [out retval] BSTR *pbstr
     );
     [id(0), propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *pbstr
     );
     [id(1610743811), propget]
     HRESULT __stdcall HelpFile (
       [out retval] BSTR *pbstr
     );
     [propget]
     HRESULT __stdcall HelpContext (
       [out retval] long *pl
     );
     [propget]
     HRESULT __stdcall SQLState (
       [out retval] BSTR *pbstr
     );
     [propget]
     HRESULT __stdcall NativeError (
       [out retval] long *pl
     );
   };
   [
     uuid(00000206-0000-0010-8000-00AA006D2EA4),
     helpstring("Collection of Error objects"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface Errors : _Collection
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT Index,
       [out retval] dispinterface Error **ppvObject
     );
     [id(1610809345)]
     HRESULT __stdcall Clear (void);
   };
   [
     uuid(0000022D-0000-0010-8000-00AA006D2EA4),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface _Command : _ADO
   {
     [id(1610809344), propget]
     HRESULT __stdcall ActiveConnection (
       [out retval] dispinterface _Connection **ppvObject
     );
     [id(1610809344), propputref]
     HRESULT __stdcall ActiveConnection (
       [in] dispinterface _Connection *argNo1
     );
     [id(1610809344), propput]
     HRESULT __stdcall ActiveConnection (
       [in] BSTR argNo1
     );
     [id(1610809347), propget]
     HRESULT __stdcall CommandText (
       [out retval] BSTR *pbstr
     );
     [id(1610809347), propput]
     HRESULT __stdcall CommandText (
       [in] BSTR argNo1
     );
     [id(1610809349), propget]
     HRESULT __stdcall CommandTimeout (
       [out retval] long *pl
     );
     [id(1610809349), propput]
     HRESULT __stdcall CommandTimeout (
       [in] long argNo1
     );
     [id(1610809351), propget]
     HRESULT __stdcall Prepared (
       [out retval] WINBOOL *pfPrepared
     );
     [id(1610809351), propput]
     HRESULT __stdcall Prepared (
       [in] WINBOOL argNo1
     );
     [id(1610809353)]
     HRESULT __stdcall Execute (
       [out opt] VARIANT *RecordsAffected,
       [in opt] VARIANT *Parameters,
       [in opt] long Options = (int) -1,
       [out retval] coclass Recordset **ppiRs
     );
     HRESULT __stdcall CreateParameter (
       [in opt] BSTR Name = L"",
       [in opt] enum DataTypeEnum Type = (int) 201326592,
       [in opt] enum ParameterDirectionEnum Direction = (int) 201326593,
       [in opt] long Size = (int) 201326592,
       [in opt] VARIANT Value,
       [out retval] dispinterface _Parameter **ppiprm
     );
     [id(0), propget]
     HRESULT __stdcall Parameters (
       [out retval] dispinterface Parameters **ppvObject
     );
     [id(1610809356), propput]
     HRESULT __stdcall CommandType (
       [in] enum CommandTypeEnum argNo1
     );
     [id(1610809356), propget]
     HRESULT __stdcall CommandType (
       [out retval] enum CommandTypeEnum *plCmdType
     );
   };
   [
     uuid(00000274-0000-0010-8000-00AA006D2EA4),
     helpstring("Representation of an open connection to an OLE DB data source"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface _Connection : _ADO
   {
     [id(0), propget]
     HRESULT __stdcall ConnectionString (
       [out retval] BSTR *pbstr
     );
     [id(0), propput]
     HRESULT __stdcall ConnectionString (
       [in] BSTR argNo1
     );
     [id(2), propget]
     HRESULT __stdcall CommandTimeout (
       [out retval] long *plTimeout
     );
     [id(2), propput]
     HRESULT __stdcall CommandTimeout (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall ConnectionTimeout (
       [out retval] long *plTimeout
     );
     [id(3), propput]
     HRESULT __stdcall ConnectionTimeout (
       [in] long argNo1
     );
     [id(1610809350), propget]
     HRESULT __stdcall Version (
       [out retval] BSTR *pbstr
     );
     [id(5)]
     HRESULT __stdcall Close (void);
     HRESULT __stdcall Execute (
       [in] BSTR CommandText,
       [out opt] VARIANT *RecordsAffected,
       [in opt] long Options = (int) -1,
       [out retval] coclass Recordset **ppiRset
     );
     HRESULT __stdcall BeginTrans (
       [out retval] long *TransactionLevel
     );
     HRESULT __stdcall CommitTrans (void);
     HRESULT __stdcall RollbackTrans (void);
     [id(21)]
     HRESULT __stdcall Open (
       [in opt] BSTR ConnectionString = L"",
       [in opt] BSTR UserID = L"",
       [in opt] BSTR Password = L""
     );
     [id(10), propget]
     HRESULT __stdcall Errors (
       [out retval] dispinterface Errors **ppvObject
     );
     [propget]
     HRESULT __stdcall DefaultDatabase (
       [out retval] BSTR *pbstr
     );
     [id(11), propput]
     HRESULT __stdcall DefaultDatabase (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall IsolationLevel (
       [out retval] enum IsolationLevelEnum *Level
     );
     [id(12), propput]
     HRESULT __stdcall IsolationLevel (
       [in] enum IsolationLevelEnum argNo1
     );
     [id(14), propget]
     HRESULT __stdcall Attributes (
       [out retval] long *plAttr
     );
     [id(14), propput]
     HRESULT __stdcall Attributes (
       [in] long argNo1
     );
     [id(1051), propget, hidden]
     HRESULT __stdcall CursorLocation (
       [out retval] enum CursorLocationEnum *plCursorLoc
     );
     [id(1051), propput, hidden]
     HRESULT __stdcall CursorLocation (
       [in] enum CursorLocationEnum argNo1
     );
     [id(17), propget]
     HRESULT __stdcall Mode (
       [out retval] enum ConnectModeEnum *plMode
     );
     [id(17), propput]
     HRESULT __stdcall Mode (
       [in] enum ConnectModeEnum argNo1
     );
     [id(20), propget]
     HRESULT __stdcall Provider (
       [out retval] BSTR *pbstr
     );
     [id(20), propput]
     HRESULT __stdcall Provider (
       [in] BSTR argNo1
     );
   };
   [
     uuid(00000243-0000-0010-8000-00AA006D2EA4),
     helpstring("Data cursor representing a record in a base table or command results"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface _Recordset : _ADO
   {
     [id(1000), propget]
     HRESULT __stdcall AbsolutePosition (
       [out retval] enum PositionEnum *pl
     );
     [id(1000), propput]
     HRESULT __stdcall AbsolutePosition (
       [in] enum PositionEnum argNo1
     );
     [propputref]
     HRESULT __stdcall ActiveConnection (
       [in] IDispatch * argNo1
     );
     [id(1001), propput]
     HRESULT __stdcall ActiveConnection (
       [in] BSTR argNo1
     );
     [id(1001), propget]
     HRESULT __stdcall ActiveConnection (
       [out retval] IDispatch **ppConn
     );
     [propget]
     HRESULT __stdcall BOF (
       [out retval] WINBOOL *pb
     );
     [propget]
     HRESULT __stdcall Bookmark (
       [out retval] VARIANT *pvBookmark
     );
     [id(1003), propput]
     HRESULT __stdcall Bookmark (
       [in] VARIANT argNo1
     );
     [propget]
     HRESULT __stdcall CacheSize (
       [out retval] long *pl
     );
     [id(1004), propput]
     HRESULT __stdcall CacheSize (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall CursorType (
       [out retval] enum CursorTypeEnum *plCursorType
     );
     [id(1005), propput]
     HRESULT __stdcall CursorType (
       [in] enum CursorTypeEnum argNo1
     );
     [propget]
     HRESULT __stdcall EOF (
       [out retval] WINBOOL *pb
     );
     [id(0), propget]
     HRESULT __stdcall Fields (
       [out retval] dispinterface Fields **ppvObject
     );
     [id(1008), propget]
     HRESULT __stdcall LockType (
       [out retval] enum LockTypeEnum *plLockType
     );
     [id(1008), propput]
     HRESULT __stdcall LockType (
       [in] enum LockTypeEnum argNo1
     );
     [propget]
     HRESULT __stdcall MaxRecords (
       [out retval] long *plMaxRecords
     );
     [id(1009), propput]
     HRESULT __stdcall MaxRecords (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall RecordCount (
       [out retval] long *pl
     );
     [propputref]
     HRESULT __stdcall Source (
       [in] IDispatch * argNo1
     );
     [id(1011), propput]
     HRESULT __stdcall Source (
       [in] BSTR argNo1
     );
     [id(1011), propget]
     HRESULT __stdcall Source (
       [out retval] VARIANT *pvSource
     );
     HRESULT __stdcall AddNew (
       [in opt] VARIANT FieldList,
       [in opt] VARIANT Values
     );
     HRESULT __stdcall CancelUpdate (void);
     HRESULT __stdcall Close (void);
     HRESULT __stdcall Delete (
       [in opt] enum AffectEnum AffectRecords = (int) 201326593
     );
     HRESULT __stdcall GetRows (
       [in opt] long Rows = (int) -1,
       [in opt] VARIANT Start,
       [in opt] VARIANT Fields,
       [out retval] VARIANT *pvar
     );
     HRESULT __stdcall Move (
       [in] long NumRecords,
       [in opt] VARIANT Start
     );
     HRESULT __stdcall MoveNext (void);
     HRESULT __stdcall MovePrevious (void);
     HRESULT __stdcall MoveFirst (void);
     HRESULT __stdcall MoveLast (void);
     HRESULT __stdcall Open (
       [in opt] VARIANT Source,
       [in opt] VARIANT ActiveConnection,
       [in opt] enum CursorTypeEnum CursorType = (int) -1,
       [in opt] enum LockTypeEnum LockType = (int) -1,
       [in opt] long Options = (int) -1
     );
     HRESULT __stdcall Requery (void);
     HRESULT __stdcall Resync (
       [in opt] enum AffectEnum AffectRecords = (int) 201326595
     );
     HRESULT __stdcall Update (
       [in opt] VARIANT Fields,
       [in opt] VARIANT Values
     );
     [id(1047), propget]
     HRESULT __stdcall AbsolutePage (
       [out retval] enum PositionEnum *pl
     );
     [id(1047), propput]
     HRESULT __stdcall AbsolutePage (
       [in] enum PositionEnum argNo1
     );
     [id(1026), propget]
     HRESULT __stdcall EditMode (
       [out retval] enum EditModeEnum *pl
     );
     [id(1030), propget]
     HRESULT __stdcall Filter (
       [out retval] VARIANT *Criteria
     );
     [id(1030), propput]
     HRESULT __stdcall Filter (
       [in] VARIANT argNo1
     );
     [id(1050), propget]
     HRESULT __stdcall PageCount (
       [out retval] long *pl
     );
     [id(1048), propget]
     HRESULT __stdcall PageSize (
       [out retval] long *pl
     );
     [id(1048), propput]
     HRESULT __stdcall PageSize (
       [in] long argNo1
     );
     [id(1029), propget]
     HRESULT __stdcall Status (
       [out retval] long *pl
     );
     [id(1034)]
     HRESULT __stdcall Clone (
       [out retval] coclass Recordset **ppvObject
     );
     HRESULT __stdcall UpdateBatch (
       [in opt] enum AffectEnum AffectRecords = (int) 201326595
     );
     [id(1049)]
     HRESULT __stdcall CancelBatch (
       [in opt] enum AffectEnum AffectRecords = (int) 201326595
     );
     [id(1051), propget, hidden]
     HRESULT __stdcall CursorLocation (
       [out retval] enum CursorLocationEnum *plCursorLoc
     );
     [id(1051), propput, hidden]
     HRESULT __stdcall CursorLocation (
       [in] enum CursorLocationEnum argNo1
     );
     HRESULT __stdcall NextRecordset (
       [out opt] VARIANT *RecordsAffected,
       [out retval] dispinterface _Recordset **ppiRs
     );
     [id(1036)]
     HRESULT __stdcall Supports (
       [in] enum CursorOptionEnum CursorOptions,
       [out retval] WINBOOL *pb
     );
     [id(-8), propget, hidden]
     HRESULT __stdcall Collect (
       [in] VARIANT Index,
       [out retval] VARIANT *pvar
     );
     [id(-8), propput, hidden]
     HRESULT __stdcall Collect (
       [in] VARIANT Index,
       [in] VARIANT argNo2
     );
   };
   [
     uuid(00000218-0000-0010-8000-00AA006D2EA4),
     helpstring("Collection of Field objects"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface Fields : _Collection
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT Index,
       [out retval] dispinterface Field **ppvObject
     );
   };
   [
     uuid(00000216-0000-0010-8000-00AA006D2EA4),
     helpstring("Representation of a 'column' of data"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface Field : _ADO
   {
     [id(1109), propget]
     HRESULT __stdcall ActualSize (
       [out retval] long *pl
     );
     [id(1036), propget]
     HRESULT __stdcall Attributes (
       [out retval] long *pl
     );
     [id(1103), propget]
     HRESULT __stdcall DefinedSize (
       [out retval] long *pl
     );
     [id(1100), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstr
     );
     [id(1102), propget]
     HRESULT __stdcall Type (
       [out retval] enum DataTypeEnum *pDataType
     );
     [id(0), propget]
     HRESULT __stdcall Value (
       [out retval] VARIANT *pvar
     );
     [id(0), propput]
     HRESULT __stdcall Value (
       [in] VARIANT argNo1
     );
     [id(1610809351), propget]
     HRESULT __stdcall Precision (
       [out retval] UCHAR *pbPrecision
     );
     [propget]
     HRESULT __stdcall NumericScale (
       [out retval] UCHAR *pbNumericScale
     );
     [id(1107)]
     HRESULT __stdcall AppendChunk (
       [in] VARIANT Data
     );
     HRESULT __stdcall GetChunk (
       [in] long Length,
       [out retval] VARIANT *pvar
     );
     [id(1104), propget]
     HRESULT __stdcall OriginalValue (
       [out retval] VARIANT *pvar
     );
     [propget]
     HRESULT __stdcall UnderlyingValue (
       [out retval] VARIANT *pvar
     );
   };
   [
     uuid(00000232-0000-0010-8000-00AA006D2EA4),
     helpstring("Argument associated with a Command Object based on a parameterized query/SP"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface _Parameter : _ADO
   {
     [id(1610809344), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstr
     );
     [id(1610809344), propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [id(0), propget]
     HRESULT __stdcall Value (
       [out retval] VARIANT *pvar
     );
     [id(0), propput]
     HRESULT __stdcall Value (
       [in] VARIANT argNo1
     );
     [id(1610809348), propget]
     HRESULT __stdcall Type (
       [out retval] enum DataTypeEnum *psDataType
     );
     [id(1610809348), propput]
     HRESULT __stdcall Type (
       [in] enum DataTypeEnum argNo1
     );
     [id(1610809350), propput]
     HRESULT __stdcall Direction (
       [in] enum ParameterDirectionEnum argNo1
     );
     [id(1610809350), propget]
     HRESULT __stdcall Direction (
       [out retval] enum ParameterDirectionEnum *plParmDirection
     );
     [id(1610809352), propput]
     HRESULT __stdcall Precision (
       [in] UCHAR argNo1
     );
     [id(1610809352), propget]
     HRESULT __stdcall Precision (
       [out retval] UCHAR *pbPrecision
     );
     [id(1610809354), propput]
     HRESULT __stdcall NumericScale (
       [in] UCHAR argNo1
     );
     [id(1610809354), propget]
     HRESULT __stdcall NumericScale (
       [out retval] UCHAR *pbScale
     );
     [id(1610809356), propput]
     HRESULT __stdcall Size (
       [in] long argNo1
     );
     [id(1610809356), propget]
     HRESULT __stdcall Size (
       [out retval] long *pl
     );
     [id(1610809358)]
     HRESULT __stdcall AppendChunk (
       [in] VARIANT Val
     );
     [propget]
     HRESULT __stdcall Attributes (
       [out retval] long *plParmAttribs
     );
     [id(1610809359), propput]
     HRESULT __stdcall Attributes (
       [in] long argNo1
     );
   };
   [
     uuid(00000233-0000-0010-8000-00AA006D2EA4),
     helpstring("Collection of Parameter objects"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface Parameters : _DynaCollection
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT Index,
       [out retval] dispinterface _Parameter **ppvObject
     );
   };

};

/* Interface declarations.  */
[
  uuid(00000275-0000-0010-8000-00AA006D2EA4),
  restricted
]
interface ICADOConnection : IUnknown
{
  [id(1610678272), propget]
  HRESULT __stdcall DSO (
    [out retval] IUnknown **ppDSO
  );
};
[
  uuid(00000283-0000-0010-8000-00AA006D2EA4),
  restricted,
  dispatchable
]
interface IADORecordsetConstruction : IDispatch
{
  [id(1610743808), propget]
  HRESULT __stdcall Rowset (
    [out retval] IUnknown **ppRowset
  );
  [id(1610743808), propput]
  HRESULT __stdcall Rowset (
    [in] IUnknown * argNo1
  );
  [id(1610743810), propget]
  HRESULT __stdcall Chapter (
    [out retval] long *plChapter
  );
  [id(1610743810), propput]
  HRESULT __stdcall Chapter (
    [in] long argNo1
  );
  [id(1610743812), propget]
  HRESULT __stdcall RowPosition (
    [out retval] IUnknown **ppRowPos
  );
  [id(1610743812), propput]
  HRESULT __stdcall RowPosition (
    [in] IUnknown * argNo1
  );
};

/* Module declarations.  */
[
  hidden
]
module SchemaQueries
{
  [id(1073741824)]
  CONST LPSTR adSchemaAssertions = L"~SCHEMA c8b52210-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaCatalogs = L"~SCHEMA c8b52211-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaCharacterSets = L"~SCHEMA c8b52212-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaCollations = L"~SCHEMA c8b52213-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaColumns = L"~SCHEMA c8b52214-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaCheckConstraints = L"~SCHEMA c8b52215-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaConstraintColumnUsage = L"~SCHEMA c8b52216-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaConstraintTableUsage = L"~SCHEMA c8b52217-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaKeyColumnUsage = L"~SCHEMA c8b52218-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaReferentialContraints = L"~SCHEMA c8b52219-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaTableConstrains = L"~SCHEMA c8b5221a-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaColumnsDomainUsage = L"~SCHEMA c8b5221b-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaIndexes = L"~SCHEMA c8b5221e-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaColumnPrivileges = L"~SCHEMA c8b52221-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaTablePrivileges = L"~SCHEMA c8b52222-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaUsagePrivileges = L"~SCHEMA c8b52223-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaProcedures = L"~SCHEMA c8b52224-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaSchemata = L"~SCHEMA c8b52225-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaSQLLanguages = L"~SCHEMA c8b52226-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaStatistics = L"~SCHEMA c8b52227-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaTables = L"~SCHEMA c8b52229-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaTranslations = L"~SCHEMA c8b5222a-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaProviderTypes = L"~SCHEMA c8b5222c-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaViews = L"~SCHEMA c8b5222d-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaViewColumnUsage = L"~SCHEMA c8b5222e-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaViewTableUsage = L"~SCHEMA c8b5222f-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaProcedureParameters = L"~SCHEMA c8b522b8-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaForeignKeys = L"~SCHEMA c8b522c4-5cf3-11ce-ade5-00aa0044773d ";
  CONST LPSTR adSchemaPrimaryKeys = L"~SCHEMA c8b522c5-5cf3-11ce-ade5-00aa0044773d ";
};

