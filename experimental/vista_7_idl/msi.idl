/* Automated generated idl file <windowsinstaller>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Union record forward declarations.  */
dispinterface Installer;
dispinterface Record;
dispinterface Session;
dispinterface Database;
dispinterface SummaryInfo;
dispinterface View;
dispinterface UIPreview;
dispinterface FeatureInfo;
dispinterface RecordList;
dispinterface StringList;
dispinterface Product;
dispinterface Patch;
dispinterface ComponentPath;
dispinterface Component;
dispinterface ComponentClient;

/* Enumeration declarations.  */
enum MsiUILevel
{
  msiUILevelNoChange = (int) 201326592,
  msiUILevelDefault = (int) 201326593,
  msiUILevelNone = (int) 201326594,
  msiUILevelBasic = (int) 201326595,
  msiUILevelReduced = (int) 201326596,
  msiUILevelFull = (int) 201326597,
  msiUILevelHideCancel = (int) 201326624,
  msiUILevelProgressOnly = (int) 201326656,
  msiUILevelEndDialog = (int) 201326720,
  msiUILevelSourceResOnly = (int) 201326848
};
enum MsiReadStream
{
  msiReadStreamInteger = (int) 201326592,
  msiReadStreamBytes = (int) 201326593,
  msiReadStreamAnsi = (int) 201326594,
  msiReadStreamDirect = (int) 201326595
};
enum MsiRunMode
{
  msiRunModeAdmin = (int) 201326592,
  msiRunModeAdvertise = (int) 201326593,
  msiRunModeMaintenance = (int) 201326594,
  msiRunModeRollbackEnabled = (int) 201326595,
  msiRunModeLogEnabled = (int) 201326596,
  msiRunModeOperations = (int) 201326597,
  msiRunModeRebootAtEnd = (int) 201326598,
  msiRunModeRebootNow = (int) 201326599,
  msiRunModeCabinet = (int) 201326600,
  msiRunModeSourceShortNames = (int) 201326601,
  msiRunModeTargetShortNames = (int) 201326602,
  msiRunModeWindows9x = (int) 201326604,
  msiRunModeZawEnabled = (int) 201326605,
  msiRunModeScheduled = (int) 201326608,
  msiRunModeRollback = (int) 201326609,
  msiRunModeCommit = (int) 201326610
};
enum MsiDatabaseState
{
  msiDatabaseStateRead = (int) 201326592,
  msiDatabaseStateWrite = (int) 201326593
};
enum MsiViewModify
{
  msiViewModifySeek = (int) -1,
  msiViewModifyRefresh = (int) 201326592,
  msiViewModifyInsert = (int) 201326593,
  msiViewModifyUpdate = (int) 201326594,
  msiViewModifyAssign = (int) 201326595,
  msiViewModifyReplace = (int) 201326596,
  msiViewModifyMerge = (int) 201326597,
  msiViewModifyDelete = (int) 201326598,
  msiViewModifyInsertTemporary = (int) 201326599,
  msiViewModifyValidate = (int) 201326600,
  msiViewModifyValidateNew = (int) 201326601,
  msiViewModifyValidateField = (int) 201326602,
  msiViewModifyValidateDelete = (int) 201326603
};
enum MsiColumnInfo
{
  msiColumnInfoNames = (int) 201326592,
  msiColumnInfoTypes = (int) 201326593
};
enum MsiTransformError
{
  msiTransformErrorNone = (int) 201326592,
  msiTransformErrorAddExistingRow = (int) 201326593,
  msiTransformErrorDeleteNonExistingRow = (int) 201326594,
  msiTransformErrorAddExistingTable = (int) 201326596,
  msiTransformErrorDeleteNonExistingTable = (int) 201326600,
  msiTransformErrorUpdateNonExistingRow = (int) 201326608,
  msiTransformErrorChangeCodePage = (int) 201326624,
  msiTransformErrorViewTransform = (int) 201326848
};
enum MsiEvaluateCondition
{
  msiEvaluateConditionFalse = (int) 201326592,
  msiEvaluateConditionTrue = (int) 201326593,
  msiEvaluateConditionNone = (int) 201326594,
  msiEvaluateConditionError = (int) 201326595
};
enum MsiTransformValidation
{
  msiTransformValidationNone = (int) 201326592,
  msiTransformValidationLanguage = (int) 201326593,
  msiTransformValidationProduct = (int) 201326594,
  msiTransformValidationPlatform = (int) 201326596,
  msiTransformValidationMajorVer = (int) 201326600,
  msiTransformValidationMinorVer = (int) 201326608,
  msiTransformValidationUpdateVer = (int) 201326624,
  msiTransformValidationLess = (int) 201326656,
  msiTransformValidationLessOrEqual = (int) 201326720,
  msiTransformValidationEqual = (int) 201326848,
  msiTransformValidationGreaterOrEqual = (int) 201327104,
  msiTransformValidationGreater = (int) 201327616,
  msiTransformValidationUpgradeCode = (int) 201328640
};
enum MsiDoActionStatus
{
  msiDoActionStatusNoAction = (int) 201326592,
  msiDoActionStatusSuccess = (int) 201326593,
  msiDoActionStatusUserExit = (int) 201326594,
  msiDoActionStatusFailure = (int) 201326595,
  msiDoActionStatusSuspend = (int) 201326596,
  msiDoActionStatusFinished = (int) 201326597,
  msiDoActionStatusWrongState = (int) 201326598,
  msiDoActionStatusBadActionData = (int) 201326599
};
enum MsiMessageStatus
{
  msiMessageStatusError = (int) -1,
  msiMessageStatusNone = (int) 201326592,
  msiMessageStatusOk = (int) 201326593,
  msiMessageStatusCancel = (int) 201326594,
  msiMessageStatusAbort = (int) 201326595,
  msiMessageStatusRetry = (int) 201326596,
  msiMessageStatusIgnore = (int) 201326597,
  msiMessageStatusYes = (int) 201326598,
  msiMessageStatusNo = (int) 201326599
};
enum MsiMessageType
{
  msiMessageTypeFatalExit = (int) 201326592,
  msiMessageTypeError = (int) 218103808,
  msiMessageTypeWarning = (int) 234881024,
  msiMessageTypeUser = (int) 251658240,
  msiMessageTypeInfo = (int) 67108864,
  msiMessageTypeFilesInUse = (int) 83886080,
  msiMessageTypeResolveSource = (int) 100663296,
  msiMessageTypeOutOfDiskSpace = (int) 117440512,
  msiMessageTypeActionStart = (int) 134217728,
  msiMessageTypeActionData = (int) 150994944,
  msiMessageTypeProgress = (int) 167772160,
  msiMessageTypeCommonData = (int) 184549376,
  msiMessageTypeOk = (int) 201326592,
  msiMessageTypeOkCancel = (int) 201326593,
  msiMessageTypeAbortRetryIgnore = (int) 201326594,
  msiMessageTypeYesNoCancel = (int) 201326595,
  msiMessageTypeYesNo = (int) 201326596,
  msiMessageTypeRetryCancel = (int) 201326597,
  msiMessageTypeDefault1 = (int) 201326592,
  msiMessageTypeDefault2 = (int) 201326848,
  msiMessageTypeDefault3 = (int) 201327104
};
enum MsiInstallState
{
  msiInstallStateNotUsed = (int) -7,
  msiInstallStateBadConfig = (int) -6,
  msiInstallStateIncomplete = (int) -5,
  msiInstallStateSourceAbsent = (int) -4,
  msiInstallStateInvalidArg = (int) -2,
  msiInstallStateUnknown = (int) -1,
  msiInstallStateBroken = (int) 201326592,
  msiInstallStateAdvertised = (int) 201326593,
  msiInstallStateRemoved = (int) 201326593,
  msiInstallStateAbsent = (int) 201326594,
  msiInstallStateLocal = (int) 201326595,
  msiInstallStateSource = (int) 201326596,
  msiInstallStateDefault = (int) 201326597
};
enum MsiCostTree
{
  msiCostTreeSelfOnly = (int) 201326592,
  msiCostTreeChildren = (int) 201326593,
  msiCostTreeParents = (int) 201326594
};
enum MsiReinstallMode
{
  msiReinstallModeFileMissing = (int) 201326594,
  msiReinstallModeFileOlderVersion = (int) 201326596,
  msiReinstallModeFileEqualVersion = (int) 201326600,
  msiReinstallModeFileExact = (int) 201326608,
  msiReinstallModeFileVerify = (int) 201326624,
  msiReinstallModeFileReplace = (int) 201326656,
  msiReinstallModeMachineData = (int) 201326720,
  msiReinstallModeUserData = (int) 201326848,
  msiReinstallModeShortcut = (int) 201327104,
  msiReinstallModePackage = (int) 201327616
};
enum MsiInstallType
{
  msiInstallTypeDefault = (int) 201326592,
  msiInstallTypeNetworkImage = (int) 201326593,
  msiInstallTypeSingleInstance = (int) 201326594
};
enum MsiInstallMode
{
  msiInstallModeNoSourceResolution = (int) -3,
  msiInstallModeNoDetection = (int) -2,
  msiInstallModeExisting = (int) -1,
  msiInstallModeDefault = (int) 201326592
};
enum MsiSignatureInfo
{
  msiSignatureInfoCertificate = (int) 201326592,
  msiSignatureInfoHash = (int) 201326593
};
enum MsiInstallContext
{
  msiInstallContextFirstVisible = (int) 201326592,
  msiInstallContextUserManaged = (int) 201326593,
  msiInstallContextUser = (int) 201326594,
  msiInstallContextMachine = (int) 201326596,
  msiInstallContextAllUserManaged = (int) 201326600
};
enum MsiInstallSourceType
{
  msiInstallSourceTypeUnknown = (int) 201326592,
  msiInstallSourceTypeNetwork = (int) 201326593,
  msiInstallSourceTypeURL = (int) 201326594,
  msiInstallSourceTypeMedia = (int) 201326596
};
enum MsiAssemblyType
{
  msiProvideAssemblyNet = (int) 201326592,
  msiProvideAssemblyWin32 = (int) 201326593
};
enum MsiProductScriptInfo
{
  msiProductScriptInfoProductCode = (int) 201326592,
  msiProductScriptInfoProductLanguage = (int) 201326593,
  msiProductScriptInfoProductVersion = (int) 201326594,
  msiProductScriptInfoProductName = (int) 201326595,
  msiProductScriptInfoPackageName = (int) 201326596
};
enum MsiAdvertiseProductContext
{
  msiAdvertiseProductMachine = (int) 201326592,
  msiAdvertiseProductUser = (int) 201326593
};
enum Constants
{
  msiDatabaseNullInteger = (int) -2147483648
};
enum MsiOpenDatabaseMode
{
  msiOpenDatabaseModeReadOnly = (int) 201326592,
  msiOpenDatabaseModeTransact = (int) 201326593,
  msiOpenDatabaseModeDirect = (int) 201326594,
  msiOpenDatabaseModeCreate = (int) 201326595,
  msiOpenDatabaseModeCreateDirect = (int) 201326596,
  msiOpenDatabaseModePatchFile = (int) 201326624
};
enum MsiSignatureOption
{
  msiSignatureOptionInvalidHashFatal = (int) 201326593
};
enum MsiAdvertiseProductPlatform
{
  msiAdvertiseCurrentPlatform = (int) 201326592,
  msiAdvertiseX86Platform = (int) 201326593,
  msiAdvertiseIA64Platform = (int) 201326594,
  msiAdvertiseX64Platform = (int) 201326596
};
enum MsiAdvertiseProductOptions
{
  msiAdvertiseDefault = (int) 201326592,
  msiAdvertiseSingleInstance = (int) 201326593
};
enum MsiAdvertiseScriptFlags
{
  msiAdvertiseScriptCacheInfo = (int) 201326593,
  msiAdvertiseScriptShortcuts = (int) 201326596,
  msiAdvertiseScriptMachineAssign = (int) 201326600,
  msiAdvertiseScriptConfigurationRegistration = (int) 201326624,
  msiAdvertiseScriptValidateTransformsList = (int) 201326656,
  msiAdvertiseScriptClassInfoRegistration = (int) 201326720,
  msiAdvertiseScriptExtensionInfoRegistration = (int) 201326848,
  msiAdvertiseScriptAppInfo = (int) 201326976,
  msiAdvertiseScriptRegData = (int) 201327008
};

[
  uuid(000C1092-0000-0000-C000-000000000046),
  version(1.0),
  helpstring("Microsoft Windows Installer Object Library"),
  helpfile("Msi.CHM")
]
library windowsinstaller
{
  importlib("stdole2.tlb");

   /* Dispatch interface declarations.  */
   [
     uuid(000C1090-0000-0000-C000-000000000046),
     dispatchable
   ]
   dispinterface Installer
   {
     [id(1)]
     dispinterface Record * __stdcall CreateRecord (
       [in] long Count
     );
     dispinterface Session * __stdcall OpenPackage (
       [in] VARIANT PackagePath,
       [in opt] long Options = (int) 201326592
     );
     dispinterface Session * __stdcall OpenProduct (
       [in] BSTR ProductCode
     );
     dispinterface Database * __stdcall OpenDatabase (
       [in] BSTR DatabasePath,
       [in] VARIANT OpenMode
     );
     [propget]
     dispinterface SummaryInfo * __stdcall SummaryInformation (
       [in] BSTR PackagePath,
       [in opt] long UpdateCount = (int) 201326592
     );
     [id(7)]
     void __stdcall EnableLog (
       [in] BSTR LogMode,
       [in] BSTR LogFile
     );
     void __stdcall InstallProduct (
       [in] BSTR PackagePath,
       [in opt] BSTR PropertyValues = L"0"
     );
     [propget]
     BSTR __stdcall Version (void);
     dispinterface Record * __stdcall LastErrorRecord (void);
     BSTR __stdcall RegistryValue (
       [in] VARIANT Root,
       [in] BSTR Key,
       [in opt] VARIANT Value
     );
     [id(13)]
     long __stdcall FileAttributes (
       [in] BSTR FilePath
     );
     [id(15)]
     long __stdcall FileSize (
       [in] BSTR FilePath
     );
     BSTR __stdcall FileVersion (
       [in] BSTR FilePath,
       [in opt] VARIANT Language
     );
     [id(12), propget]
     BSTR __stdcall Environment (
       [in] BSTR Variable
     );
     [id(12), propput]
     void __stdcall Environment (
       [in] BSTR Variable,
       [in] BSTR argNo2
     );
     [id(17), propget]
     enum MsiInstallState __stdcall ProductState (
       [in] BSTR Product
     );
     [propget]
     BSTR __stdcall ProductInfo (
       [in] BSTR Product,
       [in] BSTR Attribute
     );
     void __stdcall ConfigureProduct (
       [in] BSTR Product,
       [in] long InstallLevel,
       [in] enum MsiInstallState InstallState
     );
     void __stdcall ReinstallProduct (
       [in] BSTR Product,
       [in] enum MsiReinstallMode ReinstallMode
     );
     void __stdcall CollectUserInfo (
       [in] BSTR Product
     );
     void __stdcall ApplyPatch (
       [in] BSTR PatchPackage,
       [in] BSTR InstallPackage,
       [in] enum MsiInstallType InstallType,
       [in] BSTR CommandLine
     );
     [propget]
     BSTR __stdcall FeatureParent (
       [in] BSTR Product,
       [in] BSTR Feature
     );
     [propget]
     enum MsiInstallState __stdcall FeatureState (
       [in] BSTR Product,
       [in] BSTR Feature
     );
     void __stdcall UseFeature (
       [in] BSTR Product,
       [in] BSTR Feature,
       [in] enum MsiInstallMode InstallMode
     );
     [propget]
     long __stdcall FeatureUsageCount (
       [in] BSTR Product,
       [in] BSTR Feature
     );
     [propget]
     DATE __stdcall FeatureUsageDate (
       [in] BSTR Product,
       [in] BSTR Feature
     );
     void __stdcall ConfigureFeature (
       [in] BSTR Product,
       [in] BSTR Feature,
       [in] enum MsiInstallState InstallState
     );
     void __stdcall ReinstallFeature (
       [in] BSTR Product,
       [in] BSTR Feature,
       [in] enum MsiReinstallMode ReinstallMode
     );
     BSTR __stdcall ProvideComponent (
       [in] BSTR Product,
       [in] BSTR Feature,
       [in] BSTR Component,
       [in] long InstallMode
     );
     [propget]
     BSTR __stdcall ComponentPath (
       [in] BSTR Product,
       [in] BSTR Component
     );
     BSTR __stdcall ProvideQualifiedComponent (
       [in] BSTR Category,
       [in] BSTR Qualifier,
       [in] long InstallMode
     );
     [propget]
     BSTR __stdcall QualifierDescription (
       [in] BSTR Category,
       [in] BSTR Qualifier
     );
     [propget]
     dispinterface StringList * __stdcall ComponentQualifiers (
       [in] BSTR Category
     );
     [propget]
     dispinterface StringList * __stdcall Products (void);
     [propget]
     dispinterface StringList * __stdcall Features (
       [in] BSTR Product
     );
     [propget]
     dispinterface StringList * __stdcall Components (void);
     [propget]
     dispinterface StringList * __stdcall ComponentClients (
       [in] BSTR Component
     );
     [propget]
     dispinterface StringList * __stdcall Patches (
       [in] BSTR Product
     );
     [propget]
     dispinterface StringList * __stdcall RelatedProducts (
       [in] BSTR UpgradeCode
     );
     [propget]
     BSTR __stdcall PatchInfo (
       [in] BSTR Patch,
       [in] BSTR Attribute
     );
     [propget]
     BSTR __stdcall PatchTransforms (
       [in] BSTR Product,
       [in] BSTR Patch
     );
     void __stdcall AddSource (
       [in] BSTR Product,
       [in] BSTR User,
       [in] BSTR Source
     );
     void __stdcall ClearSourceList (
       [in] BSTR Product,
       [in] BSTR User
     );
     void __stdcall ForceSourceListResolution (
       [in] BSTR Product,
       [in] BSTR User
     );
     [propget]
     dispinterface Record * __stdcall GetShortcutTarget (
       [in] BSTR ShortcutPath
     );
     dispinterface Record * __stdcall FileHash (
       [in] BSTR FilePath,
       [in] long Options
     );
     UCHAR[] __stdcall FileSignatureInfo (
       [in] BSTR FilePath,
       [in] long Options,
       [in] enum MsiSignatureInfo Format
     );
     void __stdcall RemovePatches (
       [in] BSTR PatchList,
       [in] BSTR Product,
       [in] enum MsiInstallType UninstallType,
       [in opt] BSTR PropertyList = L"0"
     );
     [id(51)]
     void __stdcall ApplyMultiplePatches (
       [in] BSTR PatchPackage,
       [in] BSTR Product,
       [in] BSTR PropertiesList
     );
     [id(53), propget]
     HRESULT __stdcall Product (
       [in] BSTR Product,
       [in] BSTR UserSid,
       [in] enum MsiInstallContext iContext,
       [out retval] dispinterface Product **retval
     );
     [id(56), propget]
     HRESULT __stdcall Patch (
       [in] BSTR PatchCode,
       [in] BSTR ProductCode,
       [in] BSTR UserSid,
       [in] enum MsiInstallContext iContext,
       [out retval] dispinterface Patch **retval
     );
     [id(52), propget]
     dispinterface RecordList * __stdcall ProductsEx (
       [in] BSTR Product,
       [in] BSTR UserSid,
       [in] long Contexts
     );
     [id(55), propget]
     dispinterface RecordList * __stdcall PatchesEx (
       [in] BSTR Product,
       [in] BSTR UserSid,
       [in] long Contexts,
       [in] long filter
     );
     [id(57)]
     BSTR __stdcall ExtractPatchXMLData (
       [in] BSTR PatchPath
     );
     [propget]
     BSTR __stdcall ProductCode (
       [in] BSTR Component
     );
     [propget]
     WINBOOL __stdcall ProductElevated (
       [in] BSTR Product
     );
     BSTR __stdcall ProvideAssembly (
       [in] BSTR Assembly,
       [in] BSTR Context,
       [in] long InstallMode,
       [in] enum MsiAssemblyType AssemblyInfo
     );
     [propget]
     VARIANT __stdcall ProductInfoFromScript (
       [in] BSTR ScriptFile,
       [in] enum MsiProductScriptInfo ProductInfo
     );
     void __stdcall AdvertiseProduct (
       [in] BSTR PackagePath,
       [in] enum MsiAdvertiseProductContext iContext,
       [in opt] BSTR Transforms = L"0",
       [in opt] long Language = (int) 201326592,
       [in opt] long Options = (int) 201326592
     );
     void __stdcall CreateAdvertiseScript (
       [in] BSTR PackagePath,
       [in] BSTR ScriptFilePath,
       [in opt] BSTR Transforms = L"0",
       [in opt] long Language = (int) 201326592,
       [in opt] long Platform = (int) 201326592,
       [in opt] long Options = (int) 201326592
     );
     void __stdcall AdvertiseScript (
       [in] BSTR ScriptPath,
       [in] long ScriptFlags,
       [in] WINBOOL RemoveItems
     );
     [propget]
     dispinterface StringList * __stdcall PatchFiles (
       [in] BSTR Product,
       [in] BSTR PatchPackages
     );
     [propget]
     dispinterface RecordList * __stdcall ComponentsEx (
       [in] BSTR UserSid,
       [in] long Context
     );
     [propget]
     dispinterface RecordList * __stdcall ComponentClientsEx (
       [in] BSTR ComponentCode,
       [in] BSTR UserSid,
       [in] long Context
     );
     [id(9068), propget]
     dispinterface ComponentPath * __stdcall ComponentPathEx (
       [in] BSTR ProductCode,
       [in] BSTR ComponentCode,
       [in] BSTR UserSid,
       [in] long Context
     );
     [id(6)]
     enum MsiUILevel UILevel;
   };
   [
     uuid(000C1093-0000-0000-C000-000000000046),
     dispatchable
   ]
   dispinterface Record
   {
     [id(1), propget]
     BSTR __stdcall StringData (
       [in] long Field
     );
     [id(1), propput]
     void __stdcall StringData (
       [in] long Field,
       [in] BSTR argNo2
     );
     [propget]
     long __stdcall IntegerData (
       [in] long Field
     );
     [id(2), propput]
     void __stdcall IntegerData (
       [in] long Field,
       [in] long argNo2
     );
     void __stdcall SetStream (
       [in] long Field,
       [in] BSTR FilePath
     );
     BSTR __stdcall ReadStream (
       [in] long Field,
       [in] long Length,
       [in] enum MsiReadStream Format
     );
     [id(0), propget]
     long __stdcall FieldCount (void);
     [id(6), propget]
     WINBOOL __stdcall IsNull (
       [in] long Field
     );
     [id(5), propget]
     long __stdcall DataSize (
       [in] long Field
     );
     [id(7)]
     void __stdcall ClearData (void);
     BSTR __stdcall FormatText (void);
   };
   [
     uuid(000C109E-0000-0000-C000-000000000046),
     dispatchable
   ]
   dispinterface Session
   {
     [id(1), propget]
     dispinterface Installer * __stdcall Installer (void);
     [propget]
     BSTR __stdcall Property (
       [in] BSTR Name
     );
     [id(2), propput]
     void __stdcall Property (
       [in] BSTR Name,
       [in] BSTR argNo2
     );
     [propget]
     long __stdcall Language (void);
     [propget]
     WINBOOL __stdcall Mode (
       [in] enum MsiRunMode Flag
     );
     [id(4), propput]
     void __stdcall Mode (
       [in] enum MsiRunMode Flag,
       [in] WINBOOL argNo2
     );
     [propget]
     dispinterface Database * __stdcall Database (void);
     [propget]
     BSTR __stdcall SourcePath (
       [in] BSTR Folder
     );
     [propget]
     BSTR __stdcall TargetPath (
       [in] BSTR Folder
     );
     [id(7), propput]
     void __stdcall TargetPath (
       [in] BSTR Folder,
       [in] BSTR argNo2
     );
     enum MsiDoActionStatus __stdcall DoAction (
       [in] BSTR Action
     );
     enum MsiDoActionStatus __stdcall Sequence (
       [in] BSTR Table,
       [in opt] VARIANT Mode
     );
     enum MsiEvaluateCondition __stdcall EvaluateCondition (
       [in] BSTR Expression
     );
     BSTR __stdcall FormatRecord (
       [in] dispinterface Record *Record
     );
     enum MsiMessageStatus __stdcall Message (
       [in] enum MsiMessageType Kind,
       [in] dispinterface Record *Record
     );
     [propget]
     enum MsiInstallState __stdcall FeatureCurrentState (
       [in] BSTR Feature
     );
     [propget]
     enum MsiInstallState __stdcall FeatureRequestState (
       [in] BSTR Feature
     );
     [id(14), propput]
     void __stdcall FeatureRequestState (
       [in] BSTR Feature,
       [in] enum MsiInstallState argNo2
     );
     [propget]
     long __stdcall FeatureValidStates (
       [in] BSTR Feature
     );
     [propget]
     long __stdcall FeatureCost (
       [in] BSTR Feature,
       [in] enum MsiCostTree CostTree,
       [in] enum MsiInstallState State
     );
     [propget]
     enum MsiInstallState __stdcall ComponentCurrentState (
       [in] BSTR Component
     );
     [propget]
     enum MsiInstallState __stdcall ComponentRequestState (
       [in] BSTR Component
     );
     [id(18), propput]
     void __stdcall ComponentRequestState (
       [in] BSTR Component,
       [in] enum MsiInstallState argNo2
     );
     void __stdcall SetInstallLevel (
       [in] long Level
     );
     [propget]
     WINBOOL __stdcall VerifyDiskSpace (void);
     [propget]
     BSTR __stdcall ProductProperty (
       [in] BSTR Property
     );
     [propget]
     dispinterface FeatureInfo * __stdcall FeatureInfo (
       [in] BSTR Feature
     );
     [propget]
     dispinterface RecordList * __stdcall ComponentCosts (
       [in] BSTR Component,
       [in] enum MsiInstallState State
     );
   };
   [
     uuid(000C109D-0000-0000-C000-000000000046),
     dispatchable
   ]
   dispinterface Database
   {
     [id(1), propget]
     enum MsiDatabaseState __stdcall DatabaseState (void);
     [propget]
     dispinterface SummaryInfo * __stdcall SummaryInformation (
       [in opt] long UpdateCount = (int) 201326592
     );
     dispinterface View * __stdcall OpenView (
       [in] BSTR Sql
     );
     void __stdcall Commit (void);
     [propget]
     dispinterface Record * __stdcall PrimaryKeys (
       [in] BSTR Table
     );
     void __stdcall Import (
       [in] BSTR Folder,
       [in] BSTR File
     );
     void __stdcall Export (
       [in] BSTR Table,
       [in] BSTR Folder,
       [in] BSTR File
     );
     WINBOOL __stdcall Merge (
       [in] dispinterface Database *Database,
       [in opt] BSTR ErrorTable = L"0"
     );
     WINBOOL __stdcall GenerateTransform (
       [in] dispinterface Database *ReferenceDatabase,
       [in opt] BSTR TransformFile = L"0"
     );
     void __stdcall ApplyTransform (
       [in] BSTR TransformFile,
       [in] enum MsiTransformError ErrorConditions
     );
     dispinterface UIPreview * __stdcall EnableUIPreview (void);
     [propget]
     enum MsiEvaluateCondition __stdcall TablePersistent (
       [in] BSTR Table
     );
     void __stdcall CreateTransformSummaryInfo (
       [in] dispinterface Database *ReferenceDatabase,
       [in] BSTR TransformFile,
       [in] enum MsiTransformError ErrorConditions,
       [in] enum MsiTransformValidation Validation
     );
   };
   [
     uuid(000C109B-0000-0000-C000-000000000046),
     dispatchable
   ]
   dispinterface SummaryInfo
   {
     [id(1), propget]
     VARIANT __stdcall Property (
       [in] long Pid
     );
     [id(1), propput]
     void __stdcall Property (
       [in] long Pid,
       [in] VARIANT argNo2
     );
     [propget]
     long __stdcall PropertyCount (void);
     void __stdcall Persist (void);
   };
   [
     uuid(000C109C-0000-0000-C000-000000000046),
     dispatchable
   ]
   dispinterface View
   {
     [id(1)]
     void __stdcall Execute (
       [in opt] dispinterface Record *Params = (int) 201326592
     );
     dispinterface Record * __stdcall Fetch (void);
     void __stdcall Modify (
       [in] enum MsiViewModify Mode,
       dispinterface Record *Record
     );
     [id(5), propget]
     dispinterface Record * __stdcall ColumnInfo (
       [in] enum MsiColumnInfo Info
     );
     [id(4)]
     void __stdcall Close (void);
     [id(6)]
     BSTR __stdcall GetError (void);
   };
   [
     uuid(000C109A-0000-0000-C000-000000000046),
     dispatchable
   ]
   dispinterface UIPreview
   {
     [id(1), propget]
     BSTR __stdcall Property (
       [in] BSTR Name
     );
     [id(1), propput]
     void __stdcall Property (
       [in] BSTR Name,
       [in] BSTR argNo2
     );
     void __stdcall ViewDialog (
       [in] BSTR Dialog
     );
     void __stdcall ViewBillboard (
       [in] BSTR Control,
       [in] BSTR Billboard
     );
   };
   [
     uuid(000C109F-0000-0000-C000-000000000046),
     dispatchable
   ]
   dispinterface FeatureInfo
   {
     [id(1), propget]
     BSTR __stdcall Title (void);
     [propget]
     BSTR __stdcall Description (void);
     long Attributes;
   };
   [
     uuid(000C1096-0000-0000-C000-000000000046),
     dispatchable
   ]
   dispinterface RecordList
   {
     [id(-4)]
     IUnknown * __stdcall _NewEnum (void);
     [id(0), propget]
     dispinterface Record * __stdcall Item (
       long Index
     );
     [propget]
     long __stdcall Count (void);
   };
   [
     uuid(000C1095-0000-0000-C000-000000000046),
     dispatchable
   ]
   dispinterface StringList
   {
     [id(-4)]
     IUnknown * __stdcall _NewEnum (void);
     [id(0), propget]
     BSTR __stdcall Item (
       long Index
     );
     [propget]
     long __stdcall Count (void);
   };
   [
     uuid(000C10A0-0000-0000-C000-000000000046),
     dispatchable
   ]
   dispinterface Product
   {
     [id(1), propget]
     HRESULT __stdcall ProductCode (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall UserSid (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall Context (
       [out retval] enum MsiInstallContext *retval
     );
     [propget]
     HRESULT __stdcall State (
       [out retval] enum MsiInstallState *retval
     );
     [propget]
     HRESULT __stdcall InstallProperty (
       [in] BSTR Name,
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall ComponentState (
       [in] BSTR Component,
       [out retval] enum MsiInstallState *retval
     );
     [propget]
     HRESULT __stdcall FeatureState (
       [in] BSTR Feature,
       [out retval] enum MsiInstallState *retval
     );
     [id(14), propget]
     HRESULT __stdcall Sources (
       [in] long SourceType,
       [out retval] dispinterface StringList **retval
     );
     [propget]
     HRESULT __stdcall MediaDisks (
       [out retval] dispinterface RecordList **retval
     );
     [id(8)]
     HRESULT __stdcall SourceListAddSource (
       [in] enum MsiInstallSourceType iSourceType,
       [in] BSTR Source,
       [in] long dwIndex
     );
     HRESULT __stdcall SourceListAddMediaDisk (
       [in] long dwDiskId,
       [in] BSTR VolumeLabel,
       [in] BSTR DiskPrompt
     );
     HRESULT __stdcall SourceListClearSource (
       [in] enum MsiInstallSourceType iSourceType,
       [in] BSTR Source
     );
     HRESULT __stdcall SourceListClearMediaDisk (
       [in] long iDiskId
     );
     HRESULT __stdcall SourceListClearAll (
       [in] enum MsiInstallSourceType iSourceType
     );
     HRESULT __stdcall SourceListForceResolution (void);
     [id(16), propget]
     HRESULT __stdcall SourceListInfo (
       [in] BSTR Property,
       [out retval] BSTR *retval
     );
     [id(16), propput]
     HRESULT __stdcall SourceListInfo (
       [in] BSTR Property,
       [in] BSTR argNo2
     );
   };
   [
     uuid(000C10A1-0000-0000-C000-000000000046),
     dispatchable
   ]
   dispinterface Patch
   {
     [id(1), propget]
     HRESULT __stdcall PatchCode (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall ProductCode (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall UserSid (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall Context (
       [out retval] enum MsiInstallContext *retval
     );
     [propget]
     HRESULT __stdcall State (
       [out retval] enum MsiInstallState *retval
     );
     [id(12), propget]
     HRESULT __stdcall Sources (
       [in] long SourceType,
       [out retval] dispinterface StringList **retval
     );
     [propget]
     HRESULT __stdcall MediaDisks (
       [out retval] dispinterface RecordList **retval
     );
     [id(6)]
     HRESULT __stdcall SourceListAddSource (
       [in] enum MsiInstallSourceType iSourceType,
       [in] BSTR Source,
       [in] long dwIndex
     );
     HRESULT __stdcall SourceListAddMediaDisk (
       [in] long dwDiskId,
       [in] BSTR VolumeLabel,
       [in] BSTR DiskPrompt
     );
     HRESULT __stdcall SourceListClearSource (
       [in] enum MsiInstallSourceType iSourceType,
       [in] BSTR Source
     );
     HRESULT __stdcall SourceListClearMediaDisk (
       [in] long iDiskId
     );
     HRESULT __stdcall SourceListClearAll (
       [in] enum MsiInstallSourceType iSourceType
     );
     HRESULT __stdcall SourceListForceResolution (void);
     [id(14), propget]
     HRESULT __stdcall SourceListInfo (
       [in] BSTR Property,
       [out retval] BSTR *retval
     );
     [id(14), propput]
     HRESULT __stdcall SourceListInfo (
       [in] BSTR Property,
       [in] BSTR argNo2
     );
     [propget]
     HRESULT __stdcall PatchProperty (
       [in] BSTR Property,
       [out retval] BSTR *Value
     );
   };
   [
     uuid(000C1099-0000-0000-C000-000000000046),
     dispatchable
   ]
   dispinterface ComponentPath
   {
     [id(1), propget]
     HRESULT __stdcall ComponentCode (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall Path (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall State (
       [out retval] enum MsiInstallState *retval
     );
   };
   [
     uuid(000C1097-0000-0000-C000-000000000046),
     dispatchable
   ]
   dispinterface Component
   {
     [id(1), propget]
     HRESULT __stdcall ComponentCode (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall UserSid (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall Context (
       [out retval] enum MsiInstallContext *retval
     );
   };
   [
     uuid(000C1098-0000-0000-C000-000000000046),
     dispatchable
   ]
   dispinterface ComponentClient
   {
     [id(2), propget]
     HRESULT __stdcall ProductCode (
       [out retval] BSTR *retval
     );
     [id(1), propget]
     HRESULT __stdcall ComponentCode (
       [out retval] BSTR *retval
     );
     [id(3), propget]
     HRESULT __stdcall UserSid (
       [out retval] BSTR *retval
     );
     [propget]
     HRESULT __stdcall Context (
       [out retval] enum MsiInstallContext *retval
     );
   };

};

