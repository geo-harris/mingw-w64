/* Automated generated idl file <msvidctllib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface IEnumGUID;
interface IEnumMoniker;
interface IMoniker;
interface IPersistStream;
interface IPersist;
interface IStream;
interface ISequentialStream;
interface IBindCtx;
interface IRunningObjectTable;
interface IEnumString;
interface IEnumComponentTypes;
interface IEnumComponents;
interface IMSVidAnalogTunerEvent;
interface IMSVidTunerEvent;
interface IMSVidInputDeviceEvent;
interface IMSVidGraphSegment;
interface IEnumFilters;
interface IBaseFilter;
interface IMediaFilter;
interface IReferenceClock;
interface IEnumPins;
interface IPin;
interface IEnumMediaTypes;
interface IFilterGraph;
interface IMSVidGraphSegmentContainer;
interface IGraphBuilder;
interface IEnumMSVidGraphSegment;
interface IMSVidFilePlaybackEvent;
interface IMSVidPlaybackEvent;
interface IMSVidRect;
interface IMSVidWebDVDEvent;
interface IVMRImageCompositor;
interface IVMRMixerBitmap;
interface IVMRSurfaceAllocator;
interface IVMRSurfaceAllocatorNotify;
interface IMSVidVideoRendererEvent;
interface IMSVidOutputDeviceEvent;
interface IMSVidDeviceEvent;
interface IMFVideoPresenter;
interface IMFClockStateSink;
interface IMFVideoMediaType;
interface IMFMediaType;
interface IMFAttributes;
interface IStorage;
interface IEnumSTATSTG;
interface IRecordInfo;
interface ITypeInfo;
interface ITypeComp;
interface ITypeLib;
interface IMSVidEVREvent;
interface IMSVidAudioRendererEvent;
interface IMSVidGenericSink2;
interface IMSVidGenericSink;
interface IMSVidStreamBufferSinkEvent4;
interface IMSVidStreamBufferSinkEvent3;
interface IMSVidStreamBufferSinkEvent2;
interface IMSVidStreamBufferSinkEvent;
interface IMSVidStreamBufferSourceEvent;
interface IMSVidStreamBufferSourceEvent2;
interface IMSVidStreamBufferSourceEvent3;
interface IMSVidStreamBufferV2SourceEvent;
interface IMSVidXDSEvent;
interface IMSVidFeatureEvent;
interface IMSVidCompositionSegment;

/* Structure forward declarations.  */
struct _LARGE_INTEGER;
struct _ULARGE_INTEGER;
struct tagSTATSTG;
struct _FILETIME;
struct tagBIND_OPTS2;
struct _COSERVERINFO;
struct _COAUTHINFO;
struct _COAUTHIDENTITY;
struct _AMMediaType;
struct _PinInfo;
struct _FilterInfo;
struct _RemotableHandle;
struct _VMRVIDEOSTREAMINFO;
struct DDCOLORKEY;
struct _NORMALIZEDRECT;
struct _VMRALPHABITMAP;
struct tagRECT;
struct tagVMRALLOCATIONINFO;
struct tagSIZE;
struct tag_inner_PROPVARIANT;
struct tagCLIPDATA;
struct tagBSTRBLOB;
struct tagBLOB;
struct tagRemSNB;
struct tagVersionedStream;
struct _wireSAFEARRAY;
struct _wireSAFEARRAY_UNION;
struct _wireSAFEARR_BSTR;
struct _FLAGGED_WORD_BLOB;
struct _wireSAFEARR_UNKNOWN;
struct _wireSAFEARR_DISPATCH;
struct _wireSAFEARR_VARIANT;
struct _wireVARIANT;
struct _wireBRECORD;
struct tagTYPEATTR;
struct tagTYPEDESC;
struct tagARRAYDESC;
struct tagSAFEARRAYBOUND;
struct tagIDLDESC;
struct tagFUNCDESC;
struct tagELEMDESC;
struct tagPARAMDESC;
struct tagPARAMDESCEX;
struct tagVARDESC;
struct tagTLIBATTR;
struct _wireSAFEARR_BRECORD;
struct _wireSAFEARR_HAVEIID;
struct _BYTE_SIZEDARR;
struct _SHORT_SIZEDARR;
struct _LONG_SIZEDARR;
struct _HYPER_SIZEDARR;
struct tagCAC;
struct tagCAUB;
struct tagCAI;
struct tagCAUI;
struct tagCAL;
struct tagCAUL;
struct tagCAH;
struct tagCAUH;
struct tagCAFLT;
struct tagCADBL;
struct tagCABOOL;
struct tagCASCODE;
struct tagCACY;
struct tagCADATE;
struct tagCAFILETIME;
struct tagCACLSID;
struct tagCACLIPDATA;
struct tagCABSTR;
struct tagCABSTRBLOB;
struct tagCALPSTR;
struct tagCALPWSTR;
struct tagCAPROPVARIANT;
struct _MFVIDEOFORMAT;
struct _MFVideoInfo;
struct _MFRatio;
struct _MFVideoArea;
struct _MFOffset;
struct _MFVideoCompressedInfo;
struct _MFVideoSurfaceInfo;
struct _MFARGB;
struct __MFAYUVSample;

/* Union record forward declarations.  */
union __MIDL_IWinTypes_0009;
union __MIDL___MIDL_itf_msvidctl_0003_0193_0001;
union __MIDL_IOleAutomationTypes_0001;
union __MIDL_IOleAutomationTypes_0004;
union __MIDL_IOleAutomationTypes_0005;
union __MIDL_IOleAutomationTypes_0006;
union _MFPaletteEntry;

/* Union record forward declarations.  */
dispinterface _IMSVidCtlEvents;
dispinterface IMSVidAnalogTuner2;
dispinterface IMSVidAnalogTuner;
dispinterface IMSVidTuner;
dispinterface IMSVidVideoInputDevice;
dispinterface IMSVidInputDevice;
dispinterface IMSVidDevice;
dispinterface ITuneRequest;
dispinterface ITuningSpace;
dispinterface IComponentTypes;
dispinterface IComponentType;
dispinterface ILocator;
dispinterface IComponents;
dispinterface IComponent;
dispinterface IMSVidFilePlayback2;
dispinterface IMSVidFilePlayback;
dispinterface IMSVidPlayback;
dispinterface IMSVidWebDVD;
dispinterface IMSVidWebDVDAdm;
dispinterface IMSVidVideoRenderer2;
dispinterface IMSVidVideoRenderer;
dispinterface IMSVidOutputDevice;
dispinterface IMSVidVMR9;
dispinterface IMSVidEVR;
dispinterface IMSVidAudioRenderer;
dispinterface IMSVidStreamBufferSink3;
dispinterface IMSVidStreamBufferSink2;
dispinterface IMSVidStreamBufferSink;
dispinterface IMSVidStreamBufferRecordingControl;
dispinterface IMSVidStreamBufferSource;
dispinterface IMSVidStreamBufferSource2;
dispinterface IMSVidEncoder;
dispinterface IMSVidFeature;
dispinterface IMSVidClosedCaptioning3;
dispinterface IMSVidClosedCaptioning2;
dispinterface IMSVidClosedCaptioning;
dispinterface IMSVidDataServices;
dispinterface IMSVidXDS;
dispinterface IMSVidCtl;
dispinterface IMSVidInputDevices;
dispinterface IMSVidOutputDevices;
dispinterface IMSVidVideoRendererDevices;
dispinterface IMSVidAudioRendererDevices;
dispinterface IMSVidFeatures;
dispinterface IMSEventBinder;
dispinterface IMSVidDevice2;

/* Union record forward declarations.  */
coclass MSVidAnalogTunerDevice;
coclass MSVidBDATunerDevice;
coclass MSVidFilePlaybackDevice;
coclass MSVidWebDVD;
coclass MSVidWebDVDAdm;
coclass MSVidVideoRenderer;
coclass MSVidVMR9;
coclass MSVidEVR;
coclass MSVidAudioRenderer;
coclass MSVidGenericSink;
coclass MSVidStreamBufferSink;
coclass MSVidStreamBufferSource;
coclass MSVidStreamBufferV2Source;
coclass MSVidEncoder;
coclass MSVidITVCapture;
coclass MSVidITVPlayback;
coclass MSVidCCA;
coclass MSVidClosedCaptioning;
coclass MSVidClosedCaptioningSI;
coclass MSVidDataServices;
coclass MSVidXDS;
coclass MSVidAnalogCaptureToDataServices;
coclass MSVidDataServicesToStreamBufferSink;
coclass MSVidDataServicesToXDS;
coclass MSVidAnalogCaptureToXDS;
coclass MSVidCtl;
coclass MSVidInputDevices;
coclass MSVidOutputDevices;
coclass MSVidVideoRendererDevices;
coclass MSVidAudioRendererDevices;
coclass MSVidFeatures;
coclass MSVidGenericComposite;
coclass MSVidAnalogCaptureToOverlayMixer;
coclass MSVidWebDVDToVideoRenderer;
coclass MSVidWebDVDToAudioRenderer;
coclass MSVidMPEG2DecoderToClosedCaptioning;
coclass MSVidAnalogCaptureToStreamBufferSink;
coclass MSVidDigitalCaptureToStreamBufferSink;
coclass MSVidITVToStreamBufferSink;
coclass MSVidCCAToStreamBufferSink;
coclass MSVidEncoderToStreamBufferSink;
coclass MSVidFilePlaybackToVideoRenderer;
coclass MSVidFilePlaybackToAudioRenderer;
coclass MSVidAnalogTVToEncoder;
coclass MSVidStreamBufferSourceToVideoRenderer;
coclass MSVidAnalogCaptureToCCA;
coclass MSVidDigitalCaptureToCCA;
coclass MSVidDigitalCaptureToITV;
coclass MSVidSBESourceToITV;
coclass MSVidSBESourceToCC;
coclass MSVidSBESourceToGenericSink;
coclass MSVidCCToVMR;
coclass MSVidCCToAR;
coclass MSEventBinder;
coclass MSVidStreamBufferRecordingControl;
coclass MSVidRect;
coclass MSVidDevice;
coclass MSVidDevice2;
coclass MSVidInputDevice;
coclass MSVidVideoInputDevice;
coclass MSVidVideoPlaybackDevice;
coclass MSVidFeature;
coclass MSVidOutput;

/* Enumeration declarations.  */
enum MSVidCtlStateList
{
  STATE_UNBUILT = (int) -1,
  STATE_STOP = (int) 201326592,
  STATE_PAUSE = (int) 201326593,
  STATE_PLAY = (int) 201326594
};
enum ComponentCategory
{
  CategoryNotSet = (int) -1,
  CategoryOther = (int) 201326592,
  CategoryVideo = (int) 201326593,
  CategoryAudio = (int) 201326594,
  CategoryText = (int) 201326595,
  CategorySubtitles = (int) 201326596,
  CategoryCaptions = (int) 201326597,
  CategorySuperimpose = (int) 201326598,
  CategoryData = (int) 201326599,
  CATEGORY_COUNT = (int) 201326600
};
enum FECMethod
{
  BDA_FEC_METHOD_NOT_SET = (int) -1,
  BDA_FEC_METHOD_NOT_DEFINED = (int) 201326592,
  BDA_FEC_VITERBI = (int) 201326593,
  BDA_FEC_RS_204_188 = (int) 201326594,
  BDA_FEC_LDPC = (int) 201326595,
  BDA_FEC_BCH = (int) 201326596,
  BDA_FEC_RS_147_130 = (int) 201326597,
  BDA_FEC_MAX = (int) 201326598
};
enum BinaryConvolutionCodeRate
{
  BDA_BCC_RATE_NOT_SET = (int) -1,
  BDA_BCC_RATE_NOT_DEFINED = (int) 201326592,
  BDA_BCC_RATE_1_2 = (int) 201326593,
  BDA_BCC_RATE_2_3 = (int) 201326594,
  BDA_BCC_RATE_3_4 = (int) 201326595,
  BDA_BCC_RATE_3_5 = (int) 201326596,
  BDA_BCC_RATE_4_5 = (int) 201326597,
  BDA_BCC_RATE_5_6 = (int) 201326598,
  BDA_BCC_RATE_5_11 = (int) 201326599,
  BDA_BCC_RATE_7_8 = (int) 201326600,
  BDA_BCC_RATE_1_4 = (int) 201326601,
  BDA_BCC_RATE_1_3 = (int) 201326602,
  BDA_BCC_RATE_2_5 = (int) 201326603,
  BDA_BCC_RATE_6_7 = (int) 201326604,
  BDA_BCC_RATE_8_9 = (int) 201326605,
  BDA_BCC_RATE_9_10 = (int) 201326606,
  BDA_BCC_RATE_MAX = (int) 201326607
};
enum ModulationType
{
  BDA_MOD_NOT_SET = (int) -1,
  BDA_MOD_NOT_DEFINED = (int) 201326592,
  BDA_MOD_16QAM = (int) 201326593,
  BDA_MOD_32QAM = (int) 201326594,
  BDA_MOD_64QAM = (int) 201326595,
  BDA_MOD_80QAM = (int) 201326596,
  BDA_MOD_96QAM = (int) 201326597,
  BDA_MOD_112QAM = (int) 201326598,
  BDA_MOD_128QAM = (int) 201326599,
  BDA_MOD_160QAM = (int) 201326600,
  BDA_MOD_192QAM = (int) 201326601,
  BDA_MOD_224QAM = (int) 201326602,
  BDA_MOD_256QAM = (int) 201326603,
  BDA_MOD_320QAM = (int) 201326604,
  BDA_MOD_384QAM = (int) 201326605,
  BDA_MOD_448QAM = (int) 201326606,
  BDA_MOD_512QAM = (int) 201326607,
  BDA_MOD_640QAM = (int) 201326608,
  BDA_MOD_768QAM = (int) 201326609,
  BDA_MOD_896QAM = (int) 201326610,
  BDA_MOD_1024QAM = (int) 201326611,
  BDA_MOD_QPSK = (int) 201326612,
  BDA_MOD_BPSK = (int) 201326613,
  BDA_MOD_OQPSK = (int) 201326614,
  BDA_MOD_8VSB = (int) 201326615,
  BDA_MOD_16VSB = (int) 201326616,
  BDA_MOD_ANALOG_AMPLITUDE = (int) 201326617,
  BDA_MOD_ANALOG_FREQUENCY = (int) 201326618,
  BDA_MOD_8PSK = (int) 201326619,
  BDA_MOD_RF = (int) 201326620,
  BDA_MOD_16APSK = (int) 201326621,
  BDA_MOD_32APSK = (int) 201326622,
  BDA_MOD_NBC_QPSK = (int) 201326623,
  BDA_MOD_NBC_8PSK = (int) 201326624,
  BDA_MOD_DIRECTV = (int) 201326625,
  BDA_MOD_ISDB_T_TMCC = (int) 201326626,
  BDA_MOD_ISDB_S_TMCC = (int) 201326627,
  BDA_MOD_MAX = (int) 201326628
};
enum ComponentStatus
{
  StatusActive = (int) 201326592,
  StatusInactive = (int) 201326593,
  StatusUnavailable = (int) 201326594
};
enum _FilterState
{
  State_Stopped = (int) 201326592,
  State_Paused = (int) 201326593,
  State_Running = (int) 201326594
};
enum _PinDirection
{
  PINDIR_INPUT = (int) 201326592,
  PINDIR_OUTPUT = (int) 201326593
};
enum MSVidSegmentType
{
  MSVidSEG_SOURCE = (int) 201326592,
  MSVidSEG_XFORM = (int) 201326593,
  MSVidSEG_DEST = (int) 201326594
};
enum PositionModeList
{
  FrameMode = (int) 201326592,
  TenthsSecondsMode = (int) 201326593
};
enum DVDMenuIDConstants
{
  dvdMenu_Title = (int) 201326594,
  dvdMenu_Root = (int) 201326595,
  dvdMenu_Subpicture = (int) 201326596,
  dvdMenu_Audio = (int) 201326597,
  dvdMenu_Angle = (int) 201326598,
  dvdMenu_Chapter = (int) 201326599
};
enum DVDTextStringType
{
  dvdStruct_Volume = (int) 201326593,
  dvdStruct_Title = (int) 201326594,
  dvdStruct_ParentalID = (int) 201326595,
  dvdStruct_PartOfTitle = (int) 201326596,
  dvdStruct_Cell = (int) 201326597,
  dvdStream_Audio = (int) 201326608,
  dvdStream_Subpicture = (int) 201326609,
  dvdStream_Angle = (int) 201326610,
  dvdChannel_Audio = (int) 201326624,
  dvdGeneral_Name = (int) 201326640,
  dvdGeneral_Comments = (int) 201326641,
  dvdTitle_Series = (int) 201326648,
  dvdTitle_Movie = (int) 201326649,
  dvdTitle_Video = (int) 201326650,
  dvdTitle_Album = (int) 201326651,
  dvdTitle_Song = (int) 201326652,
  dvdTitle_Other = (int) 201326655,
  dvdTitle_Sub_Series = (int) 201326656,
  dvdTitle_Sub_Movie = (int) 201326657,
  dvdTitle_Sub_Video = (int) 201326658,
  dvdTitle_Sub_Album = (int) 201326659,
  dvdTitle_Sub_Song = (int) 201326660,
  dvdTitle_Sub_Other = (int) 201326663,
  dvdTitle_Orig_Series = (int) 201326664,
  dvdTitle_Orig_Movie = (int) 201326665,
  dvdTitle_Orig_Video = (int) 201326666,
  dvdTitle_Orig_Album = (int) 201326667,
  dvdTitle_Orig_Song = (int) 201326668,
  dvdTitle_Orig_Other = (int) 201326671,
  dvdOther_Scene = (int) 201326672,
  dvdOther_Cut = (int) 201326673,
  dvdOther_Take = (int) 201326674
};
enum DVDSPExt
{
  dvdSPExt_NotSpecified = (int) 201326592,
  dvdSPExt_Caption_Normal = (int) 201326593,
  dvdSPExt_Caption_Big = (int) 201326594,
  dvdSPExt_Caption_Children = (int) 201326595,
  dvdSPExt_CC_Normal = (int) 201326597,
  dvdSPExt_CC_Big = (int) 201326598,
  dvdSPExt_CC_Children = (int) 201326599,
  dvdSPExt_Forced = (int) 201326601,
  dvdSPExt_DirectorComments_Normal = (int) 201326605,
  dvdSPExt_DirectorComments_Big = (int) 201326606,
  dvdSPExt_DirectorComments_Children = (int) 201326607
};
enum SourceSizeList
{
  sslFullSize = (int) 201326592,
  sslClipByOverScan = (int) 201326593,
  sslClipByClipRect = (int) 201326594
};
enum MFVP_MESSAGE_TYPE
{
  MFVP_MESSAGE_FLUSH = (int) 201326592,
  MFVP_MESSAGE_INVALIDATEMEDIATYPE = (int) 201326593,
  MFVP_MESSAGE_PROCESSINPUTNOTIFY = (int) 201326594,
  MFVP_MESSAGE_BEGINSTREAMING = (int) 201326595,
  MFVP_MESSAGE_ENDSTREAMING = (int) 201326596,
  MFVP_MESSAGE_ENDOFSTREAM = (int) 201326597,
  MFVP_MESSAGE_STEP = (int) 201326598,
  MFVP_MESSAGE_CANCELSTEP = (int) 201326599
};
enum tagTYPEKIND
{
  TKIND_ENUM = (int) 201326592,
  TKIND_RECORD = (int) 201326593,
  TKIND_MODULE = (int) 201326594,
  TKIND_INTERFACE = (int) 201326595,
  TKIND_DISPATCH = (int) 201326596,
  TKIND_COCLASS = (int) 201326597,
  TKIND_ALIAS = (int) 201326598,
  TKIND_UNION = (int) 201326599,
  TKIND_MAX = (int) 201326600
};
enum tagDESCKIND
{
  DESCKIND_NONE = (int) 201326592,
  DESCKIND_FUNCDESC = (int) 201326593,
  DESCKIND_VARDESC = (int) 201326594,
  DESCKIND_TYPECOMP = (int) 201326595,
  DESCKIND_IMPLICITAPPOBJ = (int) 201326596,
  DESCKIND_MAX = (int) 201326597
};
enum tagFUNCKIND
{
  FUNC_VIRTUAL = (int) 201326592,
  FUNC_PUREVIRTUAL = (int) 201326593,
  FUNC_NONVIRTUAL = (int) 201326594,
  FUNC_STATIC = (int) 201326595,
  FUNC_DISPATCH = (int) 201326596
};
enum tagINVOKEKIND
{
  INVOKE_FUNC = (int) 201326593,
  INVOKE_PROPERTYGET = (int) 201326594,
  INVOKE_PROPERTYPUT = (int) 201326596,
  INVOKE_PROPERTYPUTREF = (int) 201326600
};
enum tagCALLCONV
{
  CC_FASTCALL = (int) 201326592,
  CC_CDECL = (int) 201326593,
  CC_MSCPASCAL = (int) 201326594,
  CC_PASCAL = (int) 201326594,
  CC_MACPASCAL = (int) 201326595,
  CC_STDCALL = (int) 201326596,
  CC_FPFASTCALL = (int) 201326597,
  CC_SYSCALL = (int) 201326598,
  CC_MPWCDECL = (int) 201326599,
  CC_MPWPASCAL = (int) 201326600,
  CC_MAX = (int) 201326601
};
enum tagVARKIND
{
  VAR_PERINSTANCE = (int) 201326592,
  VAR_STATIC = (int) 201326593,
  VAR_CONST = (int) 201326594,
  VAR_DISPATCH = (int) 201326595
};
enum tagSYSKIND
{
  SYS_WIN16 = (int) 201326592,
  SYS_WIN32 = (int) 201326593,
  SYS_MAC = (int) 201326594,
  SYS_WIN64 = (int) 201326595
};
enum _MF_ATTRIBUTE_TYPE
{
  MF_ATTRIBUTE_UINT32 = (int) 201326611,
  MF_ATTRIBUTE_UINT64 = (int) 201326613,
  MF_ATTRIBUTE_DOUBLE = (int) 201326597,
  MF_ATTRIBUTE_GUID = (int) 201326664,
  MF_ATTRIBUTE_STRING = (int) 201326623,
  MF_ATTRIBUTE_BLOB = (int) 201330705,
  MF_ATTRIBUTE_IUNKNOWN = (int) 201326605
};
enum _MF_ATTRIBUTES_MATCH_TYPE
{
  MF_ATTRIBUTES_MATCH_OUR_ITEMS = (int) 201326592,
  MF_ATTRIBUTES_MATCH_THEIR_ITEMS = (int) 201326593,
  MF_ATTRIBUTES_MATCH_ALL_ITEMS = (int) 201326594,
  MF_ATTRIBUTES_MATCH_INTERSECTION = (int) 201326595,
  MF_ATTRIBUTES_MATCH_SMALLER = (int) 201326596
};
enum _MFVideoChromaSubsampling
{
  MFVideoChromaSubsampling_Unknown = (int) 201326592,
  MFVideoChromaSubsampling_ProgressiveChroma = (int) 201326600,
  MFVideoChromaSubsampling_Horizontally_Cosited = (int) 201326596,
  MFVideoChromaSubsampling_Vertically_Cosited = (int) 201326594,
  MFVideoChromaSubsampling_Vertically_AlignedChromaPlanes = (int) 201326593,
  MFVideoChromaSubsampling_MPEG2 = (int) 201326597,
  MFVideoChromaSubsampling_MPEG1 = (int) 201326593,
  MFVideoChromaSubsampling_DV_PAL = (int) 201326598,
  MFVideoChromaSubsampling_Cosited = (int) 201326599,
  MFVideoChromaSubsampling_Last = (int) 201326600,
  MFVideoChromaSubsampling_ForceDWORD = (int) 2147483647
};
enum _MFVideoInterlaceMode
{
  MFVideoInterlace_Unknown = (int) 201326592,
  MFVideoInterlace_Progressive = (int) 201326594,
  MFVideoInterlace_FieldInterleavedUpperFirst = (int) 201326595,
  MFVideoInterlace_FieldInterleavedLowerFirst = (int) 201326596,
  MFVideoInterlace_FieldSingleUpper = (int) 201326597,
  MFVideoInterlace_FieldSingleLower = (int) 201326598,
  MFVideoInterlace_MixedInterlaceOrProgressive = (int) 201326599,
  MFVideoInterlace_Last = (int) 201326600,
  MFVideoInterlace_ForceDWORD = (int) 2147483647
};
enum _MFVideoTransferFunction
{
  MFVideoTransFunc_Unknown = (int) 201326592,
  MFVideoTransFunc_10 = (int) 201326593,
  MFVideoTransFunc_18 = (int) 201326594,
  MFVideoTransFunc_20 = (int) 201326595,
  MFVideoTransFunc_22 = (int) 201326596,
  MFVideoTransFunc_709 = (int) 201326597,
  MFVideoTransFunc_240M = (int) 201326598,
  MFVideoTransFunc_sRGB = (int) 201326599,
  MFVideoTransFunc_28 = (int) 201326600,
  MFVideoTransFunc_Log_100 = (int) 201326601,
  MFVideoTransFunc_Log_316 = (int) 201326602,
  MFVideoTransFunc_709_sym = (int) 201326603,
  MFVideoTransFunc_Last = (int) 201326604,
  MFVideoTransFunc_ForceDWORD = (int) 2147483647
};
enum _MFVideoPrimaries
{
  MFVideoPrimaries_Unknown = (int) 201326592,
  MFVideoPrimaries_reserved = (int) 201326593,
  MFVideoPrimaries_BT709 = (int) 201326594,
  MFVideoPrimaries_BT470_2_SysM = (int) 201326595,
  MFVideoPrimaries_BT470_2_SysBG = (int) 201326596,
  MFVideoPrimaries_SMPTE170M = (int) 201326597,
  MFVideoPrimaries_SMPTE240M = (int) 201326598,
  MFVideoPrimaries_EBU3213 = (int) 201326599,
  MFVideoPrimaries_SMPTE_C = (int) 201326600,
  MFVideoPrimaries_Last = (int) 201326601,
  MFVideoPrimaries_ForceDWORD = (int) 2147483647
};
enum _MFVideoTransferMatrix
{
  MFVideoTransferMatrix_Unknown = (int) 201326592,
  MFVideoTransferMatrix_BT709 = (int) 201326593,
  MFVideoTransferMatrix_BT601 = (int) 201326594,
  MFVideoTransferMatrix_SMPTE240M = (int) 201326595,
  MFVideoTransferMatrix_Last = (int) 201326596,
  MFVideoTransferMatrix_ForceDWORD = (int) 2147483647
};
enum _MFVideoLighting
{
  MFVideoLighting_Unknown = (int) 201326592,
  MFVideoLighting_bright = (int) 201326593,
  MFVideoLighting_office = (int) 201326594,
  MFVideoLighting_dim = (int) 201326595,
  MFVideoLighting_dark = (int) 201326596,
  MFVideoLighting_Last = (int) 201326597,
  MFVideoLighting_ForceDWORD = (int) 2147483647
};
enum _MFNominalRange
{
  MFNominalRange_Unknown = (int) 201326592,
  MFNominalRange_Normal = (int) 201326593,
  MFNominalRange_Wide = (int) 201326594,
  MFNominalRange_0_255 = (int) 201326593,
  MFNominalRange_16_235 = (int) 201326594,
  MFNominalRange_48_208 = (int) 201326595,
  MFNominalRange_64_127 = (int) 201326596,
  MFNominalRange_Last = (int) 201326597,
  MFNominalRange_ForceDWORD = (int) 2147483647
};
enum MSVidSinkStreams
{
  MSVidSink_Video = (int) 201326593,
  MSVidSink_Audio = (int) 201326594,
  MSVidSink_Other = (int) 201326596
};
enum RecordingType
{
  CONTENT = (int) 201326592,
  REFERENCE = (int) 201326593
};
enum EnTvRat_System
{
  MPAA = (int) 201326592,
  US_TV = (int) 201326593,
  Canadian_English = (int) 201326594,
  Canadian_French = (int) 201326595,
  Reserved4 = (int) 201326596,
  System5 = (int) 201326597,
  System6 = (int) 201326598,
  Reserved7 = (int) 201326599,
  PBDA = (int) 201326600,
  AgeBased = (int) 201326601,
  TvRat_kSystems = (int) 201326602,
  TvRat_SystemDontKnow = (int) 201326847
};
enum EnTvRat_GenericLevel
{
  TvRat_0 = (int) 201326592,
  TvRat_1 = (int) 201326593,
  TvRat_2 = (int) 201326594,
  TvRat_3 = (int) 201326595,
  TvRat_4 = (int) 201326596,
  TvRat_5 = (int) 201326597,
  TvRat_6 = (int) 201326598,
  TvRat_7 = (int) 201326599,
  TvRat_8 = (int) 201326600,
  TvRat_9 = (int) 201326601,
  TvRat_10 = (int) 201326602,
  TvRat_11 = (int) 201326603,
  TvRat_12 = (int) 201326604,
  TvRat_13 = (int) 201326605,
  TvRat_14 = (int) 201326606,
  TvRat_15 = (int) 201326607,
  TvRat_16 = (int) 201326608,
  TvRat_17 = (int) 201326609,
  TvRat_18 = (int) 201326610,
  TvRat_19 = (int) 201326611,
  TvRat_20 = (int) 201326612,
  TvRat_21 = (int) 201326613,
  TvRat_kLevels = (int) 201326614,
  TvRat_Unblock = (int) -1,
  TvRat_LevelDontKnow = (int) 201326847
};
enum MSVidCCService
{
  None = (int) 201326592,
  Caption1 = (int) 201326593,
  Caption2 = (int) 201326594,
  Text1 = (int) 201326595,
  Text2 = (int) 201326596,
  XDS = (int) 201326597
};
enum BfEnTvRat_GenericAttributes
{
  BfAttrNone = (int) 201326592,
  BfIsBlocked = (int) 201326593,
  BfIsAttr_1 = (int) 201326594,
  BfIsAttr_2 = (int) 201326596,
  BfIsAttr_3 = (int) 201326600,
  BfIsAttr_4 = (int) 201326608,
  BfIsAttr_5 = (int) 201326624,
  BfIsAttr_6 = (int) 201326656,
  BfIsAttr_7 = (int) 201326720,
  BfValidAttrSubmask = (int) 201326847
};
enum DisplaySizeList
{
  dslDefaultSize = (int) 201326592,
  dslSourceSize = (int) 201326592,
  dslHalfSourceSize = (int) 201326593,
  dslDoubleSourceSize = (int) 201326594,
  dslFullScreen = (int) 201326595,
  dslHalfScreen = (int) 201326596,
  dslQuarterScreen = (int) 201326597,
  dslSixteenthScreen = (int) 201326598
};

/* Structure/union declarations.  */
struct _LARGE_INTEGER
{
  LONGLONG QuadPart;
};
struct _ULARGE_INTEGER
{
  ULONGLONG QuadPart;
};
struct tagSTATSTG
{
  LPWSTR pwcsName;
  UINT type;
  struct _ULARGE_INTEGER cbSize;
  struct _FILETIME mtime;
  struct _FILETIME ctime;
  struct _FILETIME atime;
  UINT grfMode;
  UINT grfLocksSupported;
  struct GUID Clsid;
  UINT grfStateBits;
  UINT reserved;
};
struct _FILETIME
{
  UINT dwLowDateTime;
  UINT dwHighDateTime;
};
struct tagBIND_OPTS2
{
  UINT cbStruct;
  UINT grfFlags;
  UINT grfMode;
  UINT dwTickCountDeadline;
  UINT dwTrackFlags;
  UINT dwClassContext;
  UINT locale;
  struct _COSERVERINFO *pServerInfo;
};
struct _COSERVERINFO
{
  UINT dwReserved1;
  LPWSTR pwszName;
  struct _COAUTHINFO *pAuthInfo;
  UINT dwReserved2;
};
struct _COAUTHINFO
{
  UINT dwAuthnSvc;
  UINT dwAuthzSvc;
  LPWSTR pwszServerPrincName;
  UINT dwAuthnLevel;
  UINT dwImpersonationLevel;
  struct _COAUTHIDENTITY *pAuthIdentityData;
  UINT dwCapabilities;
};
struct _COAUTHIDENTITY
{
  USHORT *User;
  UINT UserLength;
  USHORT *Domain;
  UINT DomainLength;
  USHORT *Password;
  UINT PasswordLength;
  UINT Flags;
};
struct _AMMediaType
{
  struct GUID majortype;
  struct GUID subtype;
  long bFixedSizeSamples;
  long bTemporalCompression;
  UINT lSampleSize;
  struct GUID formattype;
  IUnknown * punk;
  UINT cbFormat;
  UCHAR *pbFormat;
};
struct _PinInfo
{
  interface IBaseFilter *pFilter;
  enum _PinDirection dir;
  USHORT achName[128];
};
struct _FilterInfo
{
  USHORT achName[128];
  interface IFilterGraph *pGraph;
};
struct _RemotableHandle
{
  long fContext;
  union __MIDL_IWinTypes_0009 u;
};
union __MIDL_IWinTypes_0009
{
  long hInproc;
  long hRemote;
};
struct _VMRVIDEOSTREAMINFO
{
  UINT *pddsVideoSurface;
  UINT dwWidth;
  UINT dwHeight;
  UINT dwStrmID;
  float fAlpha;
  struct DDCOLORKEY ddClrKey;
  struct _NORMALIZEDRECT rNormal;
};
struct DDCOLORKEY
{
  UINT dw1;
  UINT dw2;
};
struct _NORMALIZEDRECT
{
  float Left;
  float Top;
  float right;
  float bottom;
};
struct _VMRALPHABITMAP
{
  UINT dwFlags;
  wireHDC hdc;
  UINT *pDDS;
  struct tagRECT rSrc;
  struct _NORMALIZEDRECT rDest;
  float fAlpha;
  UINT clrSrcKey;
};
struct tagRECT
{
  long Left;
  long Top;
  long right;
  long bottom;
};
struct tagVMRALLOCATIONINFO
{
  UINT dwFlags;
  UINT *lpHdr;
  UINT *lpPixFmt;
  struct tagSIZE szAspectRatio;
  UINT dwMinBuffers;
  UINT dwMaxBuffers;
  UINT dwInterlaceFlags;
  struct tagSIZE szNativeSize;
};
struct tagSIZE
{
  long cx;
  long cy;
};
struct tag_inner_PROPVARIANT
{
  USHORT vt;
  UCHAR wReserved1;
  UCHAR wReserved2;
  UINT wReserved3;
  union __MIDL___MIDL_itf_msvidctl_0003_0193_0001 __MIDL____MIDL_itf_msvidctl_0003_01930001;
};
union __MIDL___MIDL_itf_msvidctl_0003_0193_0001
{
  UCHAR cVal;
  UCHAR bVal;
  short iVal;
  USHORT uiVal;
  long lVal;
  UINT ulVal;
  int intVal;
  unsigned int uintVal;
  struct _LARGE_INTEGER hVal;
  struct _ULARGE_INTEGER uhVal;
  float fltVal;
  double dblVal;
  WINBOOL boolVal;
  WINBOOL bool;
  SCODE Scode;
  CY cyVal;
  DATE date;
  struct _FILETIME filetime;
  struct GUID *puuid;
  struct tagCLIPDATA *pClipData;
  BSTR bstrVal;
  struct tagBSTRBLOB bstrblobVal;
  struct tagBLOB blob;
  LPSTR pszVal;
  LPWSTR pwszVal;
  IUnknown * punkVal;
  IDispatch * pdispVal;
  interface IStream *pStream;
  interface IStorage *pStorage;
  struct tagVersionedStream *pVersionedStream;
  wirePSAFEARRAY parray;
  struct tagCAC cac;
  struct tagCAUB caub;
  struct tagCAI cai;
  struct tagCAUI caui;
  struct tagCAL cal;
  struct tagCAUL caul;
  struct tagCAH cah;
  struct tagCAUH cauh;
  struct tagCAFLT caflt;
  struct tagCADBL cadbl;
  struct tagCABOOL cabool;
  struct tagCASCODE cascode;
  struct tagCACY cacy;
  struct tagCADATE cadate;
  struct tagCAFILETIME cafiletime;
  struct tagCACLSID cauuid;
  struct tagCACLIPDATA caclipdata;
  struct tagCABSTR cabstr;
  struct tagCABSTRBLOB cabstrblob;
  struct tagCALPSTR calpstr;
  struct tagCALPWSTR calpwstr;
  struct tagCAPROPVARIANT capropvar;
  UCHAR *pcVal;
  UCHAR *pbVal;
  short *piVal;
  USHORT *puiVal;
  long *plVal;
  UINT *pulVal;
  int *pintVal;
  unsigned int *puintVal;
  float *pfltVal;
  double *pdblVal;
  WINBOOL *pboolVal;
  DECIMAL *pdecVal;
  SCODE *pscode;
  CY *pcyVal;
  DATE *pdate;
  BSTR *pbstrVal;
  IUnknown **ppunkVal;
  IDispatch **ppdispVal;
  wirePSAFEARRAY *pparray;
  struct tag_inner_PROPVARIANT *pvarVal;
};
struct tagCLIPDATA
{
  UINT cbSize;
  long ulClipFmt;
  UCHAR *pClipData;
};
struct tagBSTRBLOB
{
  UINT cbSize;
  UCHAR *pData;
};
struct tagBLOB
{
  UINT cbSize;
  UCHAR *pBlobData;
};
struct tagRemSNB
{
  UINT ulCntStr;
  UINT ulCntChar;
  USHORT *rgString;
};
struct tagVersionedStream
{
  struct GUID guidVersion;
  interface IStream *pStream;
};
struct _wireSAFEARRAY
{
  USHORT cDims;
  USHORT fFeatures;
  UINT cbElements;
  UINT cLocks;
  struct _wireSAFEARRAY_UNION uArrayStructs;
  struct tagSAFEARRAYBOUND *rgsabound;
};
struct _wireSAFEARRAY_UNION
{
  UINT sfType;
  union __MIDL_IOleAutomationTypes_0001 u;
};
union __MIDL_IOleAutomationTypes_0001
{
  struct _wireSAFEARR_BSTR BstrStr;
  struct _wireSAFEARR_UNKNOWN UnknownStr;
  struct _wireSAFEARR_DISPATCH DispatchStr;
  struct _wireSAFEARR_VARIANT VariantStr;
  struct _wireSAFEARR_BRECORD RecordStr;
  struct _wireSAFEARR_HAVEIID HaveIidStr;
  struct _BYTE_SIZEDARR ByteStr;
  struct _SHORT_SIZEDARR WordStr;
  struct _LONG_SIZEDARR LongStr;
  struct _HYPER_SIZEDARR HyperStr;
};
struct _wireSAFEARR_BSTR
{
  UINT Size;
  struct _FLAGGED_WORD_BLOB **aBstr;
};
struct _FLAGGED_WORD_BLOB
{
  UINT fFlags;
  UINT clSize;
  USHORT *asData;
};
struct _wireSAFEARR_UNKNOWN
{
  UINT Size;
  IUnknown **apUnknown;
};
struct _wireSAFEARR_DISPATCH
{
  UINT Size;
  IDispatch **apDispatch;
};
struct _wireSAFEARR_VARIANT
{
  UINT Size;
  struct _wireVARIANT **aVariant;
};
struct _wireVARIANT
{
  UINT clSize;
  UINT rpcReserved;
  USHORT vt;
  USHORT wReserved1;
  USHORT wReserved2;
  USHORT wReserved3;
  union __MIDL_IOleAutomationTypes_0004 DUMMYUNIONNAME;
};
union __MIDL_IOleAutomationTypes_0004
{
  LONGLONG llVal;
  long lVal;
  UCHAR bVal;
  short iVal;
  float fltVal;
  double dblVal;
  WINBOOL boolVal;
  SCODE Scode;
  CY cyVal;
  DATE date;
  struct _FLAGGED_WORD_BLOB *bstrVal;
  IUnknown * punkVal;
  IDispatch * pdispVal;
  struct _wireSAFEARRAY **parray;
  struct _wireBRECORD *brecVal;
  UCHAR *pbVal;
  short *piVal;
  long *plVal;
  LONGLONG *pllVal;
  float *pfltVal;
  double *pdblVal;
  WINBOOL *pboolVal;
  SCODE *pscode;
  CY *pcyVal;
  DATE *pdate;
  struct _FLAGGED_WORD_BLOB **pbstrVal;
  IUnknown **ppunkVal;
  IDispatch **ppdispVal;
  struct _wireSAFEARRAY ***pparray;
  struct _wireVARIANT **pvarVal;
  UCHAR cVal;
  USHORT uiVal;
  UINT ulVal;
  ULONGLONG ullVal;
  int intVal;
  unsigned int uintVal;
  DECIMAL decVal;
  DECIMAL *pdecVal;
  UCHAR *pcVal;
  USHORT *puiVal;
  UINT *pulVal;
  ULONGLONG *pullVal;
  int *pintVal;
  unsigned int *puintVal;
};
struct _wireBRECORD
{
  UINT fFlags;
  UINT clSize;
  interface IRecordInfo *pRecInfo;
  UCHAR *pRecord;
};
struct tagTYPEATTR
{
  struct GUID Guid;
  UINT lcid;
  UINT dwReserved;
  long memidConstructor;
  long memidDestructor;
  LPWSTR lpstrSchema;
  UINT cbSizeInstance;
  enum tagTYPEKIND typekind;
  USHORT cFuncs;
  USHORT cVars;
  USHORT cImplTypes;
  USHORT cbSizeVft;
  USHORT cbAlignment;
  USHORT wTypeFlags;
  USHORT wMajorVerNum;
  USHORT wMinorVerNum;
  struct tagTYPEDESC tdescAlias;
  struct tagIDLDESC idldescType;
};
struct tagTYPEDESC
{
  union __MIDL_IOleAutomationTypes_0005 DUMMYUNIONNAME;
  USHORT vt;
};
union __MIDL_IOleAutomationTypes_0005
{
  struct tagTYPEDESC *lptdesc;
  struct tagARRAYDESC *lpadesc;
  UINT hreftype;
};
struct tagARRAYDESC
{
  struct tagTYPEDESC tdescElem;
  USHORT cDims;
  struct tagSAFEARRAYBOUND *rgbounds;
};
struct tagSAFEARRAYBOUND
{
  UINT cElements;
  long lLbound;
};
struct tagIDLDESC
{
  ULONG_PTR dwReserved;
  USHORT wIDLFlags;
};
struct tagFUNCDESC
{
  long memid;
  SCODE *lprgscode;
  struct tagELEMDESC *lprgelemdescParam;
  enum tagFUNCKIND funckind;
  enum tagINVOKEKIND invkind;
  enum tagCALLCONV callconv;
  short cParams;
  short cParamsOpt;
  short oVft;
  short cScodes;
  struct tagELEMDESC elemdescFunc;
  USHORT wFuncFlags;
};
struct tagELEMDESC
{
  struct tagTYPEDESC tdesc;
  struct tagPARAMDESC paramdesc;
};
struct tagPARAMDESC
{
  struct tagPARAMDESCEX *pparamdescex;
  USHORT wParamFlags;
};
struct tagPARAMDESCEX
{
  UINT cBytes;
  VARIANT varDefaultValue;
};
struct tagVARDESC
{
  long memid;
  LPWSTR lpstrSchema;
  union __MIDL_IOleAutomationTypes_0006 DUMMYUNIONNAME;
  struct tagELEMDESC elemdescVar;
  USHORT wVarFlags;
  enum tagVARKIND varkind;
};
union __MIDL_IOleAutomationTypes_0006
{
  UINT oInst;
  VARIANT *lpvarValue;
};
struct tagTLIBATTR
{
  struct GUID Guid;
  UINT lcid;
  enum tagSYSKIND syskind;
  USHORT wMajorVerNum;
  USHORT wMinorVerNum;
  USHORT wLibFlags;
};
struct _wireSAFEARR_BRECORD
{
  UINT Size;
  struct _wireBRECORD **aRecord;
};
struct _wireSAFEARR_HAVEIID
{
  UINT Size;
  IUnknown **apUnknown;
  struct GUID iid;
};
struct _BYTE_SIZEDARR
{
  UINT clSize;
  UCHAR *pData;
};
struct _SHORT_SIZEDARR
{
  UINT clSize;
  USHORT *pData;
};
struct _LONG_SIZEDARR
{
  UINT clSize;
  UINT *pData;
};
struct _HYPER_SIZEDARR
{
  UINT clSize;
  LONGLONG *pData;
};
struct tagCAC
{
  UINT cElems;
  UCHAR *pElems;
};
struct tagCAUB
{
  UINT cElems;
  UCHAR *pElems;
};
struct tagCAI
{
  UINT cElems;
  short *pElems;
};
struct tagCAUI
{
  UINT cElems;
  USHORT *pElems;
};
struct tagCAL
{
  UINT cElems;
  long *pElems;
};
struct tagCAUL
{
  UINT cElems;
  UINT *pElems;
};
struct tagCAH
{
  UINT cElems;
  struct _LARGE_INTEGER *pElems;
};
struct tagCAUH
{
  UINT cElems;
  struct _ULARGE_INTEGER *pElems;
};
struct tagCAFLT
{
  UINT cElems;
  float *pElems;
};
struct tagCADBL
{
  UINT cElems;
  double *pElems;
};
struct tagCABOOL
{
  UINT cElems;
  WINBOOL *pElems;
};
struct tagCASCODE
{
  UINT cElems;
  SCODE *pElems;
};
struct tagCACY
{
  UINT cElems;
  CY *pElems;
};
struct tagCADATE
{
  UINT cElems;
  DATE *pElems;
};
struct tagCAFILETIME
{
  UINT cElems;
  struct _FILETIME *pElems;
};
struct tagCACLSID
{
  UINT cElems;
  struct GUID *pElems;
};
struct tagCACLIPDATA
{
  UINT cElems;
  struct tagCLIPDATA *pElems;
};
struct tagCABSTR
{
  UINT cElems;
  BSTR *pElems;
};
struct tagCABSTRBLOB
{
  UINT cElems;
  struct tagBSTRBLOB *pElems;
};
struct tagCALPSTR
{
  UINT cElems;
  LPSTR pElems;
};
struct tagCALPWSTR
{
  UINT cElems;
  LPWSTR pElems;
};
struct tagCAPROPVARIANT
{
  UINT cElems;
  struct tag_inner_PROPVARIANT *pElems;
};
struct _MFVIDEOFORMAT
{
  UINT dwSize;
  struct _MFVideoInfo videoInfo;
  struct GUID guidFormat;
  struct _MFVideoCompressedInfo compressedInfo;
  struct _MFVideoSurfaceInfo surfaceInfo;
};
struct _MFVideoInfo
{
  UINT dwWidth;
  UINT dwHeight;
  struct _MFRatio PixelAspectRatio;
  enum _MFVideoChromaSubsampling SourceChromaSubsampling;
  enum _MFVideoInterlaceMode InterlaceMode;
  enum _MFVideoTransferFunction TransferFunction;
  enum _MFVideoPrimaries ColorPrimaries;
  enum _MFVideoTransferMatrix TransferMatrix;
  enum _MFVideoLighting SourceLighting;
  struct _MFRatio FramesPerSecond;
  enum _MFNominalRange NominalRange;
  struct _MFVideoArea GeometricAperture;
  struct _MFVideoArea MinimumDisplayAperture;
  struct _MFVideoArea PanScanAperture;
  ULONGLONG VideoFlags;
};
struct _MFRatio
{
  UINT Numerator;
  UINT Denominator;
};
struct _MFVideoArea
{
  struct _MFOffset OffsetX;
  struct _MFOffset OffsetY;
  struct tagSIZE Area;
};
struct _MFOffset
{
  USHORT fract;
  short Value;
};
struct _MFVideoCompressedInfo
{
  LONGLONG AvgBitrate;
  LONGLONG AvgBitErrorRate;
  UINT MaxKeyFrameSpacing;
};
struct _MFVideoSurfaceInfo
{
  UINT Format;
  UINT PaletteEntries;
  union _MFPaletteEntry *Palette;
};
union _MFPaletteEntry
{
  struct _MFARGB ARGB;
  struct __MFAYUVSample AYCbCr;
};
struct _MFARGB
{
  UCHAR rgbBlue;
  UCHAR rgbGreen;
  UCHAR rgbRed;
  UCHAR rgbAlpha;
};
struct __MFAYUVSample
{
  UCHAR bCrValue;
  UCHAR bCbValue;
  UCHAR bYValue;
  UCHAR bSampleAlpha8;
};

/* Type definitions.  */
typedef ULONGLONG ULONG_PTR;
typedef LONGLONG LONG_PTR;
typedef struct _RemotableHandle * wireHWND;
typedef struct _RemotableHandle * wireHDC;
typedef struct tagRemSNB * wireSNB;
typedef struct _wireSAFEARRAY ** wirePSAFEARRAY;
typedef UINT DWORD;

[
  uuid(B0EDF154-910A-11D2-B632-00C04F79498E),
  version(1.0),
  helpstring("MS Video Control 1.0 Type Library")
]
library msvidctllib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(1C15D484-911D-11D2-B632-00C04F79498E),
     helpstring("MS Video Control Analog TV Tuner Device Class"),
     cancreate
   ]
   coclass MSVidAnalogTunerDevice
   {
     dispinterface IMSVidAnalogTuner2;
     dispinterface IMSVidAnalogTuner;
     interface IMSVidAnalogTunerEvent;
     interface IMSVidGraphSegment;
   };
   [
     uuid(A2E3074E-6C3D-11D3-B653-00C04F79498E),
     helpstring("MS Video Control BDA Tuner Device Class"),
     cancreate
   ]
   coclass MSVidBDATunerDevice
   {
     dispinterface IMSVidTuner;
     interface IMSVidTunerEvent;
     interface IMSVidGraphSegment;
   };
   [
     uuid(37B0353C-A4C8-11D2-B634-00C04F79498E),
     helpstring("MS Video Control File Playback Device Class"),
     cancreate
   ]
   coclass MSVidFilePlaybackDevice
   {
     dispinterface IMSVidFilePlayback2;
     dispinterface IMSVidFilePlayback;
     interface IMSVidFilePlaybackEvent;
     interface IMSVidGraphSegment;
   };
   [
     uuid(011B3619-FE63-4814-8A84-15A194CE9CE3),
     helpstring("MSVidWebDVD Class"),
     cancreate
   ]
   coclass MSVidWebDVD
   {
     dispinterface IMSVidWebDVD;
     interface IMSVidWebDVDEvent;
     interface IMSVidGraphSegment;
   };
   [
     uuid(FA7C375B-66A7-4280-879D-FD459C84BB02),
     helpstring("MSVidWebDVDAdm Class"),
     cancreate
   ]
   coclass MSVidWebDVDAdm
   {
     dispinterface IMSVidWebDVDAdm;
   };
   [
     uuid(37B03543-A4C8-11D2-B634-00C04F79498E),
     helpstring("MS Video Control Video Renderer(DX7/8) Class"),
     cancreate
   ]
   coclass MSVidVideoRenderer
   {
     dispinterface IMSVidVideoRenderer2;
     dispinterface IMSVidVideoRenderer;
     interface IMSVidVideoRendererEvent;
     interface IMSVidGraphSegment;
   };
   [
     uuid(24DC3975-09BF-4231-8655-3EE71F43837D),
     helpstring("MS Video Control Video Renderer 9(DX9) Class"),
     cancreate
   ]
   coclass MSVidVMR9
   {
     dispinterface IMSVidVMR9;
     interface IMSVidGraphSegment;
   };
   [
     uuid(C45268A2-FA81-4E19-B1E3-72EDBD60AEDA),
     helpstring("MS Video Control Enhanced Video Renderer(DX10) Class"),
     cancreate
   ]
   coclass MSVidEVR
   {
     dispinterface IMSVidEVR;
     interface IMSVidEVREvent;
     interface IMSVidGraphSegment;
   };
   [
     uuid(37B03544-A4C8-11D2-B634-00C04F79498E),
     helpstring("MS Video Control Audio Renderer Class"),
     cancreate
   ]
   coclass MSVidAudioRenderer
   {
     dispinterface IMSVidAudioRenderer;
     interface IMSVidAudioRendererEvent;
     interface IMSVidGraphSegment;
   };
   [
     uuid(4A5869CF-929D-4040-AE03-FCAFC5B9CD42),
     helpstring("MS Video Control Stream Buffer Engine Sink Class"),
     cancreate
   ]
   coclass MSVidGenericSink
   {
     interface IMSVidGenericSink2;
     interface IMSVidGenericSink;
     interface IMSVidGraphSegment;
     interface IMSVidDeviceEvent;
   };
   [
     uuid(9E77AAC4-35E5-42A1-BDC2-8F3FF399847C),
     helpstring("MS Video Control Stream Buffer Engine Sink Class"),
     cancreate
   ]
   coclass MSVidStreamBufferSink
   {
     dispinterface IMSVidStreamBufferSink3;
     dispinterface IMSVidStreamBufferSink2;
     dispinterface IMSVidStreamBufferSink;
     interface IMSVidStreamBufferSinkEvent4;
     interface IMSVidStreamBufferSinkEvent3;
     interface IMSVidStreamBufferSinkEvent2;
     interface IMSVidStreamBufferSinkEvent;
     interface IMSVidGraphSegment;
   };
   [
     uuid(AD8E510D-217F-409B-8076-29C5E73B98E8),
     helpstring("MS Video Control Stream Buffer Engine Playback Device Class"),
     cancreate
   ]
   coclass MSVidStreamBufferSource
   {
     dispinterface IMSVidStreamBufferSource;
     dispinterface IMSVidStreamBufferSource2;
     interface IMSVidStreamBufferSourceEvent;
     interface IMSVidStreamBufferSourceEvent2;
     interface IMSVidStreamBufferSourceEvent3;
     interface IMSVidGraphSegment;
   };
   [
     uuid(FD351EA1-4173-4AF4-821D-80D4AE979048),
     helpstring("MS Video Control Stream Buffer Engine V2 Playback Device Class"),
     cancreate
   ]
   coclass MSVidStreamBufferV2Source
   {
     dispinterface IMSVidStreamBufferSource;
     dispinterface IMSVidStreamBufferSource2;
     interface IMSVidStreamBufferV2SourceEvent;
     interface IMSVidGraphSegment;
   };
   [
     uuid(BB530C63-D9DF-4B49-9439-63453962E598),
     helpstring("MS Video Control Encoder"),
     cancreate
   ]
   coclass MSVidEncoder
   {
     dispinterface IMSVidEncoder;
   };
   [
     uuid(5740A302-EF0B-45CE-BF3B-4470A14A8980),
     helpstring("MS Video Control iTV Capture"),
     cancreate
   ]
   coclass MSVidITVCapture
   {
     interface IMSVidGraphSegment;
     dispinterface IMSVidFeature;
   };
   [
     uuid(9E797ED0-5253-4243-A9B7-BD06C58F8EF3),
     helpstring("MS Video Control iTV Playback"),
     cancreate
   ]
   coclass MSVidITVPlayback
   {
     interface IMSVidGraphSegment;
     dispinterface IMSVidFeature;
   };
   [
     uuid(86151827-E47B-45EE-8421-D10E6E690979),
     helpstring("MS Video Control Closed Captions Analysis"),
     cancreate
   ]
   coclass MSVidCCA
   {
     interface IMSVidGraphSegment;
     dispinterface IMSVidFeature;
   };
   [
     uuid(7F9CB14D-48E4-43B6-9346-1AEBC39C64D3),
     helpstring("MS Video Control Standard Closed Captioning"),
     cancreate
   ]
   coclass MSVidClosedCaptioning
   {
     dispinterface IMSVidClosedCaptioning3;
     dispinterface IMSVidClosedCaptioning2;
     dispinterface IMSVidClosedCaptioning;
   };
   [
     uuid(92ED88BF-879E-448F-B6B6-A385BCEB846D),
     helpstring("MS Video Control CCSI Closed Captioning"),
     cancreate
   ]
   coclass MSVidClosedCaptioningSI
   {
     dispinterface IMSVidClosedCaptioning3;
     dispinterface IMSVidClosedCaptioning2;
     dispinterface IMSVidClosedCaptioning;
   };
   [
     uuid(334125C0-77E5-11D3-B653-00C04F79498E),
     helpstring("MS Video Control Standard Data Services for Broadcast IP through NDIS stack"),
     cancreate
   ]
   coclass MSVidDataServices
   {
     dispinterface IMSVidDataServices;
   };
   [
     uuid(0149EEDF-D08F-4142-8D73-D23903D21E90),
     helpstring("MS Video Control Encoder"),
     cancreate
   ]
   coclass MSVidXDS
   {
     dispinterface IMSVidXDS;
     interface IMSVidXDSEvent;
   };
   [
     uuid(C5702CD6-9B79-11D3-B654-00C04F79498E),
     helpstring("MS Video Control Custom Composition for Analog Capture to Data Services"),
     cancreate
   ]
   coclass MSVidAnalogCaptureToDataServices
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(38F03426-E83B-4E68-B65B-DCAE73304838),
     helpstring("MS Video Control Custom Composition for Data Services to Stream Buffer Sink"),
     cancreate
   ]
   coclass MSVidDataServicesToStreamBufferSink
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(0429EC6E-1144-4BED-B88B-2FB9899A4A3D),
     helpstring("MS Video Control Custom Composition for DataServices To XDS"),
     cancreate
   ]
   coclass MSVidDataServicesToXDS
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(3540D440-5B1D-49CB-821A-E84B8CF065A7),
     helpstring("MS Video Control Custom Composition for TV Tuner to XDS"),
     cancreate
   ]
   coclass MSVidAnalogCaptureToXDS
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(B0EDF163-910A-11D2-B632-00C04F79498E),
     helpstring("MS Video Control Class"),
     cancreate,
     control
   ]
   coclass MSVidCtl
   {
     dispinterface IMSVidCtl;
     dispinterface _IMSVidCtlEvents;
     interface IMSVidGraphSegmentContainer;
   };
   [
     uuid(C5702CCC-9B79-11D3-B654-00C04F79498E),
     helpstring("MS Video Control Input Device Collection Class"),
     cancreate
   ]
   coclass MSVidInputDevices
   {
     dispinterface IMSVidInputDevices;
   };
   [
     uuid(C5702CCD-9B79-11D3-B654-00C04F79498E),
     helpstring("MS Video Control Output Device Collection Class"),
     cancreate
   ]
   coclass MSVidOutputDevices
   {
     dispinterface IMSVidOutputDevices;
   };
   [
     uuid(C5702CCE-9B79-11D3-B654-00C04F79498E),
     helpstring("MS Video Control Video Renderer Device Collection Class"),
     cancreate
   ]
   coclass MSVidVideoRendererDevices
   {
     dispinterface IMSVidVideoRendererDevices;
   };
   [
     uuid(C5702CCF-9B79-11D3-B654-00C04F79498E),
     helpstring("MS Video Control Audio Renderer Device Collection Class"),
     cancreate
   ]
   coclass MSVidAudioRendererDevices
   {
     dispinterface IMSVidAudioRendererDevices;
   };
   [
     uuid(C5702CD0-9B79-11D3-B654-00C04F79498E),
     helpstring("MS Video Control Feature Collection Class"),
     cancreate
   ]
   coclass MSVidFeatures
   {
     dispinterface IMSVidFeatures;
   };
   [
     uuid(2764BCE5-CC39-11D2-B639-00C04F79498E),
     helpstring("MS Video Control Generic Composition Class"),
     cancreate
   ]
   coclass MSVidGenericComposite
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(E18AF75A-08AF-11D3-B64A-00C04F79498E),
     helpstring("MS Video Control Custom Composition for Analog Capture to Overlay Mixer"),
     cancreate
   ]
   coclass MSVidAnalogCaptureToOverlayMixer
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(267DB0B3-55E3-4902-949B-DF8F5CEC0191),
     helpstring("MS Video Control Custom Composition for WebDVD to Overlay Mixer"),
     cancreate
   ]
   coclass MSVidWebDVDToVideoRenderer
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(8D04238E-9FD1-41C6-8DE3-9E1EE309E935),
     helpstring("MS Video Control Custom Composition for WebDVD to Audio Renderer"),
     cancreate
   ]
   coclass MSVidWebDVDToAudioRenderer
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(6AD28EE1-5002-4E71-AAF7-BD077907B1A4),
     helpstring("MS Video Control Custom Composition for Mpeg2 Decoder to Closed Captioning"),
     cancreate
   ]
   coclass MSVidMPEG2DecoderToClosedCaptioning
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(9F50E8B1-9530-4DDC-825E-1AF81D47AED6),
     helpstring("MS Video Control Custom Composition for Analog Capture to Stream Buffer Sink"),
     cancreate
   ]
   coclass MSVidAnalogCaptureToStreamBufferSink
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(ABE40035-27C3-4A2F-8153-6624471608AF),
     helpstring("MS Video Control Custom Composition for Digital Capture to Stream Buffer Sink"),
     cancreate
   ]
   coclass MSVidDigitalCaptureToStreamBufferSink
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(92B94828-1AF7-4E6E-9EBF-770657F77AF5),
     helpstring("MS Video Control Custom Composition for iTV to Stream Buffer Sink"),
     cancreate
   ]
   coclass MSVidITVToStreamBufferSink
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(3EF76D68-8661-4843-8B8F-C37163D8C9CE),
     helpstring("MS Video Control Custom Composition for CCA to Stream Buffer Sink"),
     cancreate
   ]
   coclass MSVidCCAToStreamBufferSink
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(A0B9B497-AFBC-45AD-A8A6-9B077C40D4F2),
     helpstring("MS Video Control Custom Composition for Encoder to Stream Buffer Sink"),
     cancreate
   ]
   coclass MSVidEncoderToStreamBufferSink
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(B401C5EB-8457-427F-84EA-A4D2363364B0),
     helpstring("MS Video Control Custom Composition for File Playback to Video Renderer"),
     cancreate
   ]
   coclass MSVidFilePlaybackToVideoRenderer
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(CC23F537-18D4-4ECE-93BD-207A84726979),
     helpstring("MS Video Control Custom Composition for File Playback to Audio Renderer"),
     cancreate
   ]
   coclass MSVidFilePlaybackToAudioRenderer
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(28953661-0231-41DB-8986-21FF4388EE9B),
     helpstring("MS Video Control Custom Composition for TV Tuner to Encoder"),
     cancreate
   ]
   coclass MSVidAnalogTVToEncoder
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(3C4708DC-B181-46A8-8DA8-4AB0371758CD),
     helpstring("MS Video Control Custom Composition for SBE Source to Video renderer"),
     cancreate
   ]
   coclass MSVidStreamBufferSourceToVideoRenderer
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(942B7909-A28E-49A1-A207-34EBCBCB4B3B),
     helpstring("MS Video Control Custom Composition for TV Tuner to CCA"),
     cancreate
   ]
   coclass MSVidAnalogCaptureToCCA
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(73D14237-B9DB-4EFA-A6DD-84350421FB2F),
     helpstring("MS Video Control Custom Composition for Digital Capture to CCA"),
     cancreate
   ]
   coclass MSVidDigitalCaptureToCCA
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(5D8E73F7-4989-4AC8-8A98-39BA0D325302),
     helpstring("MS Video Control Custom Composition for Digital Capture to ITV"),
     cancreate
   ]
   coclass MSVidDigitalCaptureToITV
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(2291478C-5EE3-4BEF-AB5D-B5FF2CF58352),
     helpstring("MS Video Control Custom Composition for Stream Buffer Source to ITV"),
     cancreate
   ]
   coclass MSVidSBESourceToITV
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(9193A8F9-0CBA-400E-AA97-EB4709164576),
     helpstring("MS Video Control Custom Composition for Stream Buffer Source to CC"),
     cancreate
   ]
   coclass MSVidSBESourceToCC
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(991DA7E5-953F-435B-BE5E-B92A05EDFC42),
     helpstring("MS Video Control Stream Buffer Source to Generic Sink Composition Class"),
     cancreate
   ]
   coclass MSVidSBESourceToGenericSink
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(C4BF2784-AE00-41BA-9828-9C953BD3C54A),
     helpstring("MS Video Control Custom Composition for CC to Video Renderer"),
     cancreate
   ]
   coclass MSVidCCToVMR
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(D76334CA-D89E-4BAF-86AB-DDB59372AFC2),
     helpstring("MS Video Control Custom Composition for CC to Audio Renderer"),
     cancreate
   ]
   coclass MSVidCCToAR
   {
     interface IMSVidCompositionSegment;
   };
   [
     uuid(577FAA18-4518-445E-8F70-1473F8CF4BA4),
     helpstring("MSEventBinder Class"),
     cancreate
   ]
   coclass MSEventBinder
   {
     dispinterface IMSEventBinder;
   };
   [
     uuid(CAAFDD83-CEFC-4E3D-BA03-175F17A24F91),
     helpstring("MSVidStreamBufferRecordingControl"),
     cancreate
   ]
   coclass MSVidStreamBufferRecordingControl
   {
     dispinterface IMSVidStreamBufferRecordingControl;
   };
   [
     uuid(CB4276E6-7D5F-4CF1-9727-629C5E6DB6AE),
     helpstring("Automation compliant scalable rectangle Class"),
     cancreate,
     hidden,
     restricted
   ]
   coclass MSVidRect
   {
     interface IMSVidRect;
   };
   [
     uuid(6E40476F-9C49-4C3E-8BB9-8587958EFF74),
     helpstring("dummy class to expose base interface to VB"),
     hidden,
     restricted
   ]
   coclass MSVidDevice
   {
     dispinterface IMSVidDevice;
   };
   [
     uuid(30997F7D-B3B5-4A1C-983A-1FE8098CB77D),
     helpstring("dummy class to expose base interface to VB"),
     hidden,
     restricted
   ]
   coclass MSVidDevice2
   {
     dispinterface IMSVidDevice2;
   };
   [
     uuid(AC1972F2-138A-4CA3-90DA-AE51112EDA28),
     helpstring("dummy class to expose base interface to VB"),
     hidden,
     restricted
   ]
   coclass MSVidInputDevice
   {
     dispinterface IMSVidInputDevice;
   };
   [
     uuid(95F4820B-BB3A-4E2D-BC64-5B817BC2C30E),
     helpstring("dummy class to expose base interface to VB"),
     hidden,
     restricted
   ]
   coclass MSVidVideoInputDevice
   {
     dispinterface IMSVidVideoInputDevice;
   };
   [
     uuid(1990D634-1A5E-4071-A34A-53AAFFCE9F36),
     helpstring("dummy class to expose base interface to VB"),
     hidden,
     restricted
   ]
   coclass MSVidVideoPlaybackDevice
   {
     dispinterface IMSVidPlayback;
   };
   [
     uuid(7748530B-C08A-47EA-B24C-BE8695FF405F),
     helpstring("dummy class to expose base interface to VB"),
     hidden,
     restricted
   ]
   coclass MSVidFeature
   {
     dispinterface IMSVidFeature;
   };
   [
     uuid(87EB890D-03AD-4E9D-9866-376E5EC572ED),
     helpstring("dummy class to expose base interface to VB"),
     hidden,
     restricted
   ]
   coclass MSVidOutput
   {
     dispinterface IMSVidOutputDevice;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(B0EDF164-910A-11D2-B632-00C04F79498E),
     helpstring("MS Video Control Events Interface"),
     dispatchable
   ]
   dispinterface _IMSVidCtlEvents
   {
     [id(-600)]
     void __stdcall Click (void);
     [id(-601)]
     void __stdcall DblClick (void);
     [id(-602)]
     void __stdcall KeyDown (
       short *KeyCode,
       short Shift
     );
     [id(-603)]
     void __stdcall KeyPress (
       short *KeyAscii
     );
     [id(-604)]
     void __stdcall KeyUp (
       short *KeyCode,
       short Shift
     );
     [id(-605)]
     void __stdcall MouseDown (
       short Button,
       short Shift,
       OLE_XPOS_PIXELS x,
       OLE_YPOS_PIXELS y
     );
     [id(-606)]
     void __stdcall MouseMove (
       short Button,
       short Shift,
       OLE_XPOS_PIXELS x,
       OLE_YPOS_PIXELS y
     );
     [id(-607)]
     void __stdcall MouseUp (
       short Button,
       short Shift,
       OLE_XPOS_PIXELS x,
       OLE_YPOS_PIXELS y
     );
     [id(-608)]
     void __stdcall Error (
       short Number,
       BSTR *Description,
       long Scode,
       BSTR Source,
       BSTR HelpFile,
       long HelpContext,
       CHAR *CancelDisplay
     );
     [id(21)]
     void __stdcall StateChange (
       enum MSVidCtlStateList PrevState,
       enum MSVidCtlStateList CurrState
     );
   };
   [
     uuid(37647BF7-3DDE-4CC8-A4DC-0D534D3D0037),
     helpstring("MS Video TV Tuner Interface2"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidAnalogTuner2 : IMSVidAnalogTuner
   {
     [id(193), propget]
     HRESULT __stdcall TVFormats (
       [out retval] long *Formats
     );
     [propget]
     HRESULT __stdcall TunerModes (
       [out retval] long *Modes
     );
     [propget]
     HRESULT __stdcall NumAuxInputs (
       [out retval] long *Inputs
     );
   };
   [
     uuid(1C15D47E-911D-11D2-B632-00C04F79498E),
     helpstring("MS Video TV Tuner Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidAnalogTuner : IMSVidTuner
   {
     [id(10), propget]
     HRESULT __stdcall Channel (
       [out retval] long *Channel
     );
     [id(10), propput]
     HRESULT __stdcall Channel (
       [in] long argNo1
     );
     [id(14), propget]
     HRESULT __stdcall VideoFrequency (
       [out retval] long *lcc
     );
     [propget]
     HRESULT __stdcall AudioFrequency (
       [out retval] long *lcc
     );
     [id(4), propget]
     HRESULT __stdcall CountryCode (
       [out retval] long *lcc
     );
     [id(4), propput]
     HRESULT __stdcall CountryCode (
       [in] long argNo1
     );
     [id(29), propget]
     HRESULT __stdcall SAP (
       [out retval] WINBOOL *pfSapOn
     );
     [id(29), propput]
     HRESULT __stdcall SAP (
       [in] WINBOOL argNo1
     );
     [id(13)]
     HRESULT __stdcall ChannelAvailable (
       [in] long nChannel,
       [out] long *SignalStrength,
       [out retval] WINBOOL *fSignalPresent
     );
   };
   [
     uuid(1C15D47D-911D-11D2-B632-00C04F79498E),
     helpstring("MS Video Tuner Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidTuner : IMSVidVideoInputDevice
   {
     [id(27), propget]
     HRESULT __stdcall Tune (
       [out retval] dispinterface ITuneRequest **ppTR
     );
     [id(27), propput]
     HRESULT __stdcall Tune (
       [in] dispinterface ITuneRequest *argNo1
     );
     [propget]
     HRESULT __stdcall TuningSpace (
       [out retval] dispinterface ITuningSpace **plTS
     );
     [id(28), propput, restricted, hidden]
     HRESULT __stdcall TuningSpace (
       [in] dispinterface ITuningSpace *argNo1
     );
   };
   [
     uuid(1C15D47F-911D-11D2-B632-00C04F79498E),
     helpstring("MS Video Control Video Device Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidVideoInputDevice : IMSVidInputDevice
   {
   };
   [
     uuid(37B0353D-A4C8-11D2-B634-00C04F79498E),
     helpstring("MS Video Control Input Device Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidInputDevice : IMSVidDevice
   {
     [id(21)]
     HRESULT __stdcall IsViewable (
       [in] VARIANT *v,
       [out retval] WINBOOL *pfViewable
     );
     HRESULT __stdcall View (
       [in] VARIANT *v
     );
   };
   [
     uuid(1C15D47C-911D-11D2-B632-00C04F79498E),
     helpstring("MS Video Control Device Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidDevice : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *Name
     );
     [propget]
     HRESULT __stdcall Status (
       [out retval] long *Status
     );
     [id(9), propput]
     HRESULT __stdcall Power (
       [in] WINBOOL argNo1
     );
     [id(9), propget]
     HRESULT __stdcall Power (
       [out retval] WINBOOL *Power
     );
     [id(23), propget]
     HRESULT __stdcall Category (
       [out retval] BSTR *Guid
     );
     [propget]
     HRESULT __stdcall ClassID (
       [out retval] BSTR *Clsid
     );
     [propget, restricted, hidden]
     HRESULT __stdcall _Category (
       [out retval] struct GUID *Guid
     );
     [propget, restricted, hidden]
     HRESULT __stdcall _ClassID (
       [out retval] struct GUID *Clsid
     );
     [id(144)]
     HRESULT __stdcall IsEqualDevice (
       [in] dispinterface IMSVidDevice *Device,
       [out retval] WINBOOL *IsEqual
     );
   };
   [
     uuid(07DDC146-FC3D-11D2-9D8C-00C04F72D980),
     helpstring("Tune Request Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ITuneRequest : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall TuningSpace (
       [out retval] dispinterface ITuningSpace **TuningSpace
     );
     [propget]
     HRESULT __stdcall Components (
       [out retval] dispinterface IComponents **Components
     );
     HRESULT __stdcall Clone (
       [out retval] dispinterface ITuneRequest **NewTuneRequest
     );
     [propget]
     HRESULT __stdcall Locator (
       [out retval] dispinterface ILocator **Locator
     );
     [id(4), propput]
     HRESULT __stdcall Locator (
       [in] dispinterface ILocator *argNo1
     );
   };
   [
     uuid(061C6E30-E622-11D2-9493-00C04F72D980),
     helpstring("Tuning Space Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ITuningSpace : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall UniqueName (
       [out retval] BSTR *Name
     );
     [id(1), propput]
     HRESULT __stdcall UniqueName (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall FriendlyName (
       [out retval] BSTR *Name
     );
     [id(2), propput]
     HRESULT __stdcall FriendlyName (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall Clsid (
       [out retval] BSTR *SpaceCLSID
     );
     [propget]
     HRESULT __stdcall NetworkType (
       [out retval] BSTR *NetworkTypeGuid
     );
     [id(4), propput]
     HRESULT __stdcall NetworkType (
       [in] BSTR argNo1
     );
     [propget, restricted, hidden]
     HRESULT __stdcall _NetworkType (
       [out retval] struct GUID *NetworkTypeGuid
     );
     [id(5), propput, restricted, hidden]
     HRESULT __stdcall _NetworkType (
       [in] struct GUID *argNo1
     );
     HRESULT __stdcall CreateTuneRequest (
       [out retval] dispinterface ITuneRequest **TuneRequest
     );
     [restricted, hidden]
     HRESULT __stdcall EnumCategoryGUIDs (
       [out retval] interface IEnumGUID **ppenum
     );
     [restricted, hidden]
     HRESULT __stdcall EnumDeviceMonikers (
       [out retval] interface IEnumMoniker **ppenum
     );
     [propget]
     HRESULT __stdcall DefaultPreferredComponentTypes (
       [out retval] dispinterface IComponentTypes **ComponentTypes
     );
     [id(9), propput]
     HRESULT __stdcall DefaultPreferredComponentTypes (
       [in] dispinterface IComponentTypes *argNo1
     );
     [propget]
     HRESULT __stdcall FrequencyMapping (
       [out retval] BSTR *pMapping
     );
     [id(10), propput]
     HRESULT __stdcall FrequencyMapping (
       BSTR argNo1
     );
     [propget]
     HRESULT __stdcall DefaultLocator (
       [out retval] dispinterface ILocator **LocatorVal
     );
     [id(11), propput]
     HRESULT __stdcall DefaultLocator (
       [in] dispinterface ILocator *argNo1
     );
     [id(1610743826)]
     HRESULT __stdcall Clone (
       [out retval] dispinterface ITuningSpace **NewTS
     );
   };
   [
     uuid(0DC13D4A-0313-11D3-9D8E-00C04F72D980),
     helpstring("ComponentType Collection Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IComponentTypes : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Count (
       [out retval] long *Count
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] interface IEnumVARIANT **ppNewEnum
     );
     [id(1610743810), restricted, hidden]
     HRESULT __stdcall EnumComponentTypes (
       [out retval] interface IEnumComponentTypes **ppNewEnum
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT Index,
       [out retval] dispinterface IComponentType **ComponentType
     );
     [id(0), propput]
     HRESULT __stdcall Item (
       [in] VARIANT Index,
       [in] dispinterface IComponentType *argNo2
     );
     [id(-553)]
     HRESULT __stdcall Add (
       [in] dispinterface IComponentType *ComponentType,
       [out retval] VARIANT *NewIndex
     );
     [id(-555)]
     HRESULT __stdcall Remove (
       [in] VARIANT Index
     );
     [id(1610743815)]
     HRESULT __stdcall Clone (
       [out retval] dispinterface IComponentTypes **NewList
     );
   };
   [
     uuid(6A340DC0-0311-11D3-9D8E-00C04F72D980),
     helpstring("Component Type Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IComponentType : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall Category (
       [out retval] enum ComponentCategory *Category
     );
     [id(1), propput]
     HRESULT __stdcall Category (
       [in] enum ComponentCategory argNo1
     );
     [propget]
     HRESULT __stdcall MediaMajorType (
       [out retval] BSTR *MediaMajorType
     );
     [id(2), propput]
     HRESULT __stdcall MediaMajorType (
       [in] BSTR argNo1
     );
     [propget, restricted, hidden]
     HRESULT __stdcall _MediaMajorType (
       [out retval] struct GUID *MediaMajorTypeGuid
     );
     [id(3), propput, restricted, hidden]
     HRESULT __stdcall _MediaMajorType (
       [in] struct GUID *argNo1
     );
     [propget]
     HRESULT __stdcall MediaSubType (
       [out retval] BSTR *MediaSubType
     );
     [id(4), propput]
     HRESULT __stdcall MediaSubType (
       [in] BSTR argNo1
     );
     [propget, restricted, hidden]
     HRESULT __stdcall _MediaSubType (
       [out retval] struct GUID *MediaSubTypeGuid
     );
     [id(5), propput, restricted, hidden]
     HRESULT __stdcall _MediaSubType (
       [in] struct GUID *argNo1
     );
     [propget]
     HRESULT __stdcall MediaFormatType (
       [out retval] BSTR *MediaFormatType
     );
     [id(6), propput]
     HRESULT __stdcall MediaFormatType (
       [in] BSTR argNo1
     );
     [propget, restricted, hidden]
     HRESULT __stdcall _MediaFormatType (
       [out retval] struct GUID *MediaFormatTypeGuid
     );
     [id(7), propput, restricted, hidden]
     HRESULT __stdcall _MediaFormatType (
       [in] struct GUID *argNo1
     );
     [propget, restricted, hidden]
     HRESULT __stdcall MediaType (
       [out retval] struct _AMMediaType *MediaType
     );
     [id(8), propput, restricted, hidden]
     HRESULT __stdcall MediaType (
       [in] struct _AMMediaType *argNo1
     );
     HRESULT __stdcall Clone (
       [out retval] dispinterface IComponentType **NewCT
     );
   };
   [
     uuid(286D7F89-760C-4F89-80C4-66841D2507AA),
     helpstring("Generic Locator Information"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ILocator : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall CarrierFrequency (
       [out retval] long *Frequency
     );
     [id(1), propput]
     HRESULT __stdcall CarrierFrequency (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall InnerFEC (
       [out retval] enum FECMethod *FEC
     );
     [id(2), propput]
     HRESULT __stdcall InnerFEC (
       [in] enum FECMethod argNo1
     );
     [propget]
     HRESULT __stdcall InnerFECRate (
       [out retval] enum BinaryConvolutionCodeRate *FEC
     );
     [id(3), propput]
     HRESULT __stdcall InnerFECRate (
       [in] enum BinaryConvolutionCodeRate argNo1
     );
     [propget]
     HRESULT __stdcall OuterFEC (
       [out retval] enum FECMethod *FEC
     );
     [id(4), propput]
     HRESULT __stdcall OuterFEC (
       [in] enum FECMethod argNo1
     );
     [propget]
     HRESULT __stdcall OuterFECRate (
       [out retval] enum BinaryConvolutionCodeRate *FEC
     );
     [id(5), propput]
     HRESULT __stdcall OuterFECRate (
       [in] enum BinaryConvolutionCodeRate argNo1
     );
     [propget]
     HRESULT __stdcall Modulation (
       [out retval] enum ModulationType *Modulation
     );
     [id(6), propput]
     HRESULT __stdcall Modulation (
       [in] enum ModulationType argNo1
     );
     [propget]
     HRESULT __stdcall SymbolRate (
       [out retval] long *Rate
     );
     [id(7), propput]
     HRESULT __stdcall SymbolRate (
       [in] long argNo1
     );
     HRESULT __stdcall Clone (
       [out retval] dispinterface ILocator **NewLocator
     );
   };
   [
     uuid(39A48091-FFFE-4182-A161-3FF802640E26),
     helpstring("Component Collection Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IComponents : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Count (
       [out retval] long *Count
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] interface IEnumVARIANT **ppNewEnum
     );
     [id(1610743810), restricted, hidden]
     HRESULT __stdcall EnumComponents (
       [out retval] interface IEnumComponents **ppNewEnum
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT Index,
       [out retval] dispinterface IComponent **ppComponent
     );
     [id(-553)]
     HRESULT __stdcall Add (
       [in] dispinterface IComponent *Component,
       [out retval] VARIANT *NewIndex
     );
     [id(-555)]
     HRESULT __stdcall Remove (
       [in] VARIANT Index
     );
     [id(1610743814)]
     HRESULT __stdcall Clone (
       [out retval] dispinterface IComponents **NewList
     );
     [id(0), propput]
     HRESULT __stdcall Item (
       [in] VARIANT Index,
       [in] dispinterface IComponent *argNo2
     );
   };
   [
     uuid(1A5576FC-0E19-11D3-9D8E-00C04F72D980),
     helpstring("Component Interface"),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IComponent : IDispatch
   {
     [id(1), propget]
     HRESULT __stdcall type (
       [out retval] dispinterface IComponentType **CT
     );
     [id(1), propput, restricted, hidden]
     HRESULT __stdcall type (
       [in] dispinterface IComponentType *argNo1
     );
     [id(3), propget]
     HRESULT __stdcall DescLangID (
       [out retval] long *LangID
     );
     [id(3), propput]
     HRESULT __stdcall DescLangID (
       [in] long argNo1
     );
     [id(2), propget]
     HRESULT __stdcall Status (
       [out retval] enum ComponentStatus *Status
     );
     [id(2), propput]
     HRESULT __stdcall Status (
       [in] enum ComponentStatus argNo1
     );
     [id(4), propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *Description
     );
     [id(4), propput, restricted, hidden]
     HRESULT __stdcall Description (
       [in] BSTR argNo1
     );
     HRESULT __stdcall Clone (
       [out retval] dispinterface IComponent **NewComponent
     );
   };
   [
     uuid(2F7E44AF-6E52-4660-BC08-D8D542587D72),
     helpstring("MS Video Control File Playback Device 2 Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidFilePlayback2 : IMSVidFilePlayback
   {
     [id(218), propput, hidden]
     HRESULT __stdcall _SourceFilter (
       [in] BSTR argNo1
     );
     [propput, hidden]
     HRESULT __stdcall __SourceFilter (
       [in] struct GUID argNo1
     );
   };
   [
     uuid(37B03539-A4C8-11D2-B634-00C04F79498E),
     helpstring("MS Video Control File Playback Device Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidFilePlayback : IMSVidPlayback
   {
     [id(17), propget]
     HRESULT __stdcall FileName (
       [out retval] BSTR *FileName
     );
     [id(17), propput]
     HRESULT __stdcall FileName (
       [in] BSTR argNo1
     );
   };
   [
     uuid(37B03538-A4C8-11D2-B634-00C04F79498E),
     helpstring("MS Video Control Playback Device Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidPlayback : IMSVidInputDevice
   {
     [id(96), propget]
     HRESULT __stdcall EnableResetOnStop (
       [out retval] WINBOOL *pVal
     );
     [id(96), propput]
     HRESULT __stdcall EnableResetOnStop (
       [in] WINBOOL argNo1
     );
     [id(35)]
     HRESULT __stdcall Run (void);
     HRESULT __stdcall Pause (void);
     HRESULT __stdcall Stop (void);
     [id(40), propget]
     HRESULT __stdcall CanStep (
       [in] WINBOOL fBackwards,
       [out retval] WINBOOL *pfCan
     );
     [id(39)]
     HRESULT __stdcall Step (
       [in] long lStep
     );
     [id(145), propput]
     HRESULT __stdcall Rate (
       [in] double argNo1
     );
     [id(145), propget]
     HRESULT __stdcall Rate (
       [out retval] double *plRate
     );
     [propput]
     HRESULT __stdcall CurrentPosition (
       [in] long argNo1
     );
     [id(146), propget]
     HRESULT __stdcall CurrentPosition (
       [out retval] long *lPosition
     );
     [propput]
     HRESULT __stdcall PositionMode (
       [in] enum PositionModeList argNo1
     );
     [id(147), propget]
     HRESULT __stdcall PositionMode (
       [out retval] enum PositionModeList *lPositionMode
     );
     [propget]
     HRESULT __stdcall Length (
       [out retval] long *lLength
     );
   };
   [
     uuid(CF45F88B-AC56-4EE2-A73A-ED04E2885D3C),
     helpstring("IMSVidWebDVD Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidWebDVD : IMSVidPlayback
   {
     [id(1610940416)]
     HRESULT __stdcall OnDVDEvent (
       [in] long lEvent,
       [in] LONG_PTR lParam1,
       [in] LONG_PTR lParam2
     );
     [id(42)]
     HRESULT __stdcall PlayTitle (
       [in] long lTitle
     );
     HRESULT __stdcall PlayChapterInTitle (
       [in] long lTitle,
       [in] long lChapter
     );
     HRESULT __stdcall PlayChapter (
       [in] long lChapter
     );
     HRESULT __stdcall PlayChaptersAutoStop (
       [in] long lTitle,
       [in] long lstrChapter,
       [in] long lChapterCount
     );
     HRESULT __stdcall PlayAtTime (
       [in] BSTR strTime
     );
     HRESULT __stdcall PlayAtTimeInTitle (
       [in] long lTitle,
       [in] BSTR strTime
     );
     HRESULT __stdcall PlayPeriodInTitleAutoStop (
       [in] long lTitle,
       [in] BSTR strStartTime,
       [in] BSTR strEndTime
     );
     HRESULT __stdcall ReplayChapter (void);
     HRESULT __stdcall PlayPrevChapter (void);
     HRESULT __stdcall PlayNextChapter (void);
     [id(54)]
     HRESULT __stdcall StillOff (void);
     [propget]
     HRESULT __stdcall AudioLanguage (
       [in] long lStream,
       [in opt] WINBOOL fFormat = (BOOL) 0,
       [out retval] BSTR *strAudioLang
     );
     HRESULT __stdcall ShowMenu (
       [in] enum DVDMenuIDConstants MenuID
     );
     HRESULT __stdcall Resume (void);
     HRESULT __stdcall ReturnFromSubmenu (void);
     [propget]
     HRESULT __stdcall ButtonsAvailable (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall CurrentButton (
       [out retval] long *pVal
     );
     HRESULT __stdcall SelectAndActivateButton (
       [in] long lButton
     );
     HRESULT __stdcall ActivateButton (void);
     HRESULT __stdcall SelectRightButton (void);
     HRESULT __stdcall SelectLeftButton (void);
     HRESULT __stdcall SelectLowerButton (void);
     HRESULT __stdcall SelectUpperButton (void);
     HRESULT __stdcall ActivateAtPosition (
       [in] long xPos,
       [in] long yPos
     );
     HRESULT __stdcall SelectAtPosition (
       [in] long xPos,
       [in] long yPos
     );
     [propget]
     HRESULT __stdcall ButtonAtPosition (
       [in] long xPos,
       [in] long yPos,
       [out retval] long *plButton
     );
     [propget]
     HRESULT __stdcall NumberOfChapters (
       [in] long lTitle,
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall TotalTitleTime (
       [out retval] BSTR *pVal
     );
     [propget]
     HRESULT __stdcall TitlesAvailable (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall VolumesAvailable (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall CurrentVolume (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall CurrentDiscSide (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall CurrentDomain (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall CurrentChapter (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall CurrentTitle (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall CurrentTime (
       [out retval] BSTR *pVal
     );
     [id(81)]
     HRESULT __stdcall DVDTimeCode2bstr (
       [in] long timeCode,
       [out retval] BSTR *pTimeStr
     );
     [propget]
     HRESULT __stdcall DVDDirectory (
       [out retval] BSTR *pVal
     );
     [id(82), propput]
     HRESULT __stdcall DVDDirectory (
       [in] BSTR argNo1
     );
     HRESULT __stdcall IsSubpictureStreamEnabled (
       [in] long lStream,
       [out retval] WINBOOL *fEnabled
     );
     HRESULT __stdcall IsAudioStreamEnabled (
       [in] long lStream,
       [out retval] WINBOOL *fEnabled
     );
     [propget]
     HRESULT __stdcall CurrentSubpictureStream (
       [out retval] long *pVal
     );
     [id(85), propput]
     HRESULT __stdcall CurrentSubpictureStream (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall SubpictureLanguage (
       long lStream,
       [out retval] BSTR *strLanguage
     );
     [propget]
     HRESULT __stdcall CurrentAudioStream (
       [out retval] long *pVal
     );
     [id(87), propput]
     HRESULT __stdcall CurrentAudioStream (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall AudioStreamsAvailable (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall AnglesAvailable (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall CurrentAngle (
       [out retval] long *pVal
     );
     [id(90), propput]
     HRESULT __stdcall CurrentAngle (
       [in] long argNo1
     );
     [id(93), propget]
     HRESULT __stdcall SubpictureStreamsAvailable (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall SubpictureOn (
       [out retval] WINBOOL *pVal
     );
     [id(94), propput]
     HRESULT __stdcall SubpictureOn (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall DVDUniqueID (
       [out retval] BSTR *pVal
     );
     [id(97)]
     HRESULT __stdcall AcceptParentalLevelChange (
       [in] WINBOOL fAccept,
       [in] BSTR strUserName,
       [in] BSTR strPassword
     );
     HRESULT __stdcall NotifyParentalLevelChange (
       [in] WINBOOL newVal
     );
     HRESULT __stdcall SelectParentalCountry (
       [in] long lCountry,
       [in] BSTR strUserName,
       [in] BSTR strPassword
     );
     HRESULT __stdcall SelectParentalLevel (
       [in] long lParentalLevel,
       [in] BSTR strUserName,
       [in] BSTR strPassword
     );
     [propget]
     HRESULT __stdcall TitleParentalLevels (
       [in] long lTitle,
       [out retval] long *plParentalLevels
     );
     [propget]
     HRESULT __stdcall PlayerParentalCountry (
       [out retval] long *plCountryCode
     );
     [propget]
     HRESULT __stdcall PlayerParentalLevel (
       [out retval] long *plParentalLevel
     );
     HRESULT __stdcall Eject (void);
     HRESULT __stdcall UOPValid (
       [in] long lUOP,
       [out retval] WINBOOL *pfValid
     );
     [propget]
     HRESULT __stdcall SPRM (
       [in] long lIndex,
       [out retval] short *psSPRM
     );
     [propget]
     HRESULT __stdcall GPRM (
       [in] long lIndex,
       [out retval] short *psSPRM
     );
     [id(107), propput]
     HRESULT __stdcall GPRM (
       [in] long lIndex,
       [in] short argNo2
     );
     [propget]
     HRESULT __stdcall DVDTextStringType (
       [in] long lLangIndex,
       [in] long lStringIndex,
       [out retval] enum DVDTextStringType *pType
     );
     [propget]
     HRESULT __stdcall DVDTextString (
       [in] long lLangIndex,
       [in] long lStringIndex,
       [out retval] BSTR *pstrText
     );
     [propget]
     HRESULT __stdcall DVDTextNumberOfStrings (
       [in] long lLangIndex,
       [out retval] long *plNumOfStrings
     );
     [propget]
     HRESULT __stdcall DVDTextNumberOfLanguages (
       [out retval] long *plNumOfLangs
     );
     [propget]
     HRESULT __stdcall DVDTextLanguageLCID (
       [in] long lLangIndex,
       [out retval] long *lcid
     );
     HRESULT __stdcall RegionChange (void);
     [propget]
     HRESULT __stdcall DVDAdm (
       [out retval] IDispatch **pVal
     );
     HRESULT __stdcall DeleteBookmark (void);
     HRESULT __stdcall RestoreBookmark (void);
     HRESULT __stdcall SaveBookmark (void);
     HRESULT __stdcall SelectDefaultAudioLanguage (
       [in] long lang,
       [in] long ext
     );
     HRESULT __stdcall SelectDefaultSubpictureLanguage (
       [in] long lang,
       [in] enum DVDSPExt ext
     );
     [propget]
     HRESULT __stdcall PreferredSubpictureStream (
       [out retval] long *pVal
     );
     [propget]
     HRESULT __stdcall DefaultMenuLanguage (
       [out retval] long *lang
     );
     [id(121), propput]
     HRESULT __stdcall DefaultMenuLanguage (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall DefaultSubpictureLanguage (
       [out retval] long *lang
     );
     [propget]
     HRESULT __stdcall DefaultAudioLanguage (
       [out retval] long *lang
     );
     [propget]
     HRESULT __stdcall DefaultSubpictureLanguageExt (
       [out retval] enum DVDSPExt *ext
     );
     [propget]
     HRESULT __stdcall DefaultAudioLanguageExt (
       [out retval] long *ext
     );
     [propget]
     HRESULT __stdcall LanguageFromLCID (
       [in] long lcid,
       [out retval] BSTR *lang
     );
     [propget]
     HRESULT __stdcall KaraokeAudioPresentationMode (
       [out retval] long *pVal
     );
     [id(127), propput]
     HRESULT __stdcall KaraokeAudioPresentationMode (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall KaraokeChannelContent (
       [in] long lStream,
       [in] long lChan,
       [out retval] long *lContent
     );
     [propget]
     HRESULT __stdcall KaraokeChannelAssignment (
       [in] long lStream,
       [out retval] long *lChannelAssignment
     );
     HRESULT __stdcall RestorePreferredSettings (void);
     [propget]
     HRESULT __stdcall ButtonRect (
       [in] long lButton,
       [out retval] interface IMSVidRect **pRect
     );
     [propget]
     HRESULT __stdcall DVDScreenInMouseCoordinates (
       [out retval] interface IMSVidRect **ppRect
     );
     [id(132), propput]
     HRESULT __stdcall DVDScreenInMouseCoordinates (
       [in] interface IMSVidRect *argNo1
     );
   };
   [
     uuid(B8BE681A-EB2C-47F0-B415-94D5452F0E05),
     helpstring("IMSVidWebDVDAdm Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidWebDVDAdm : IDispatch
   {
     [id(149)]
     HRESULT __stdcall ChangePassword (
       [in] BSTR strUserName,
       [in] BSTR strOld,
       [in] BSTR strNew
     );
     HRESULT __stdcall SaveParentalLevel (
       [in] long level,
       [in] BSTR strUserName,
       [in] BSTR strPassword
     );
     HRESULT __stdcall SaveParentalCountry (
       [in] long country,
       [in] BSTR strUserName,
       [in] BSTR strPassword
     );
     [restricted, hidden]
     HRESULT __stdcall ConfirmPassword (
       [in] BSTR strUserName,
       [in] BSTR strPassword,
       [out retval] WINBOOL *pVal
     );
     HRESULT __stdcall GetParentalLevel (
       [out retval] long *lLevel
     );
     HRESULT __stdcall GetParentalCountry (
       [out retval] long *lCountry
     );
     [propget]
     HRESULT __stdcall DefaultAudioLCID (
       [out retval] long *pVal
     );
     [id(155), propput]
     HRESULT __stdcall DefaultAudioLCID (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall DefaultSubpictureLCID (
       [out retval] long *pVal
     );
     [id(156), propput]
     HRESULT __stdcall DefaultSubpictureLCID (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall DefaultMenuLCID (
       [out retval] long *pVal
     );
     [id(157), propput]
     HRESULT __stdcall DefaultMenuLCID (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall BookmarkOnStop (
       [out retval] WINBOOL *pVal
     );
     [id(158), propput]
     HRESULT __stdcall BookmarkOnStop (
       [in] WINBOOL argNo1
     );
   };
   [
     uuid(6BDD5C1E-2810-4159-94BC-05511AE8549B),
     helpstring("MS Video Control Video Renderer Device(DX7/8) Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidVideoRenderer2 : IMSVidVideoRenderer
   {
     [id(163), propget]
     HRESULT __stdcall Allocator (
       [out retval] IUnknown **AllocPresent
     );
     [propget, restricted, hidden]
     HRESULT __stdcall _Allocator (
       [out retval] interface IVMRSurfaceAllocator **AllocPresent
     );
     [propget]
     HRESULT __stdcall Allocator_ID (
       [out retval] long *Id
     );
     HRESULT __stdcall SetAllocator (
       [in] IUnknown * AllocPresent,
       [in opt] long Id = (int) -1
     );
     [restricted, hidden]
     HRESULT __stdcall _SetAllocator (
       [in] interface IVMRSurfaceAllocator *AllocPresent,
       [in opt] long Id = (int) -1
     );
     [id(189), propput]
     HRESULT __stdcall SuppressEffects (
       [in] WINBOOL argNo1
     );
     [id(189), propget]
     HRESULT __stdcall SuppressEffects (
       [out retval] WINBOOL *bSuppress
     );
   };
   [
     uuid(37B03540-A4C8-11D2-B634-00C04F79498E),
     helpstring("MS Video Control Video Renderer Device Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidVideoRenderer : IMSVidOutputDevice
   {
     [id(134), propget]
     HRESULT __stdcall CustomCompositorClass (
       [out retval] BSTR *CompositorCLSID
     );
     [id(134), propput]
     HRESULT __stdcall CustomCompositorClass (
       [in] BSTR argNo1
     );
     [id(133), propget, restricted, hidden]
     HRESULT __stdcall _CustomCompositorClass (
       [out retval] struct GUID *CompositorCLSID
     );
     [id(133), propput, restricted, hidden]
     HRESULT __stdcall _CustomCompositorClass (
       [in] struct GUID *argNo1
     );
     [id(135), propget, restricted, hidden]
     HRESULT __stdcall _CustomCompositor (
       [out retval] interface IVMRImageCompositor **Compositor
     );
     [id(135), propput, restricted, hidden]
     HRESULT __stdcall _CustomCompositor (
       [in] interface IVMRImageCompositor *argNo1
     );
     [propget]
     HRESULT __stdcall MixerBitmap (
       [out retval] IPictureDisp **MixerPictureDisp
     );
     [propget, restricted, hidden]
     HRESULT __stdcall _MixerBitmap (
       [out retval] interface IVMRMixerBitmap **MixerPicture
     );
     [id(136), propput]
     HRESULT __stdcall MixerBitmap (
       [in] IPictureDisp *argNo1
     );
     [propput, restricted, hidden]
     HRESULT __stdcall _MixerBitmap (
       [in] struct _VMRALPHABITMAP *argNo1
     );
     [id(139), propget]
     HRESULT __stdcall MixerBitmapPositionRect (
       [out retval] interface IMSVidRect **rDest
     );
     [id(139), propput]
     HRESULT __stdcall MixerBitmapPositionRect (
       [in] interface IMSVidRect *argNo1
     );
     [id(138), propget]
     HRESULT __stdcall MixerBitmapOpacity (
       [out retval] int *opacity
     );
     [id(138), propput]
     HRESULT __stdcall MixerBitmapOpacity (
       [in] int argNo1
     );
     [id(140)]
     HRESULT __stdcall SetupMixerBitmap (
       [in] IPictureDisp *MixerPictureDisp,
       [in] long opacity,
       [in] interface IMSVidRect *rDest
     );
     [id(41), propget]
     HRESULT __stdcall SourceSize (
       [out retval] enum SourceSizeList *CurrentSize
     );
     [id(41), propput]
     HRESULT __stdcall SourceSize (
       [in] enum SourceSizeList argNo1
     );
     [id(5), propget]
     HRESULT __stdcall OverScan (
       [out retval] long *plPercent
     );
     [id(5), propput]
     HRESULT __stdcall OverScan (
       [in] long argNo1
     );
     [id(33), propget]
     HRESULT __stdcall AvailableSourceRect (
       [out retval] interface IMSVidRect **pRect
     );
     [id(159), propget]
     HRESULT __stdcall MaxVidRect (
       [out retval] interface IMSVidRect **ppVidRect
     );
     [propget]
     HRESULT __stdcall MinVidRect (
       [out retval] interface IMSVidRect **ppVidRect
     );
     [id(32), propget]
     HRESULT __stdcall ClippedSourceRect (
       [out retval] interface IMSVidRect **pRect
     );
     [id(32), propput]
     HRESULT __stdcall ClippedSourceRect (
       [in] interface IMSVidRect *argNo1
     );
     [id(141), propget]
     HRESULT __stdcall UsingOverlay (
       [out retval] WINBOOL *UseOverlayVal
     );
     [id(141), propput]
     HRESULT __stdcall UsingOverlay (
       [in] WINBOOL argNo1
     );
     [id(161)]
     HRESULT __stdcall Capture (
       [out retval] IPictureDisp **currentImage
     );
     [id(80), propget]
     HRESULT __stdcall FramesPerSecond (
       [out retval] long *pVal
     );
     [id(162), propget]
     HRESULT __stdcall DecimateInput (
       [out retval] WINBOOL *pDeci
     );
     [id(162), propput]
     HRESULT __stdcall DecimateInput (
       [in] WINBOOL argNo1
     );
   };
   [
     uuid(37B03546-A4C8-11D2-B634-00C04F79498E),
     helpstring("MS Video Control Output Device Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidOutputDevice : IMSVidDevice
   {
   };
   [
     uuid(D58B0015-EBEF-44BB-BBDD-3F3699D76EA1),
     helpstring("MS Video Control Video Mixing Renderer 9(DX9) Device Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidVMR9 : IMSVidVideoRenderer
   {
     [id(165), propget]
     HRESULT __stdcall Allocator_ID (
       [out retval] long *Id
     );
     HRESULT __stdcall SetAllocator (
       [in] IUnknown * AllocPresent,
       [in opt] long Id = (int) -1
     );
     [id(189), propput]
     HRESULT __stdcall SuppressEffects (
       [in] WINBOOL argNo1
     );
     [id(189), propget]
     HRESULT __stdcall SuppressEffects (
       [out retval] WINBOOL *bSuppress
     );
     [id(163), propget]
     HRESULT __stdcall Allocator (
       [out retval] IUnknown **AllocPresent
     );
   };
   [
     uuid(15E496AE-82A8-4CF9-A6B6-C561DC60398F),
     helpstring("MS Video Control Enhanced Video Renderer(DX10) Device Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidEVR : IMSVidVideoRenderer
   {
     [id(164), propget]
     HRESULT __stdcall Presenter (
       [out retval] interface IMFVideoPresenter **ppAllocPresent
     );
     [id(164), propput]
     HRESULT __stdcall Presenter (
       [in] interface IMFVideoPresenter *argNo1
     );
     [id(189), propput]
     HRESULT __stdcall SuppressEffects (
       [in] WINBOOL argNo1
     );
     [id(189), propget]
     HRESULT __stdcall SuppressEffects (
       [out retval] WINBOOL *bSuppress
     );
   };
   [
     uuid(37B0353F-A4C8-11D2-B634-00C04F79498E),
     helpstring("MS Video Control Audio Renderer Device Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidAudioRenderer : IMSVidOutputDevice
   {
     [id(7), propput]
     HRESULT __stdcall Volume (
       [in] long argNo1
     );
     [id(7), propget]
     HRESULT __stdcall Volume (
       [out retval] long *lVol
     );
     [propput]
     HRESULT __stdcall Balance (
       [in] long argNo1
     );
     [id(8), propget]
     HRESULT __stdcall Balance (
       [out retval] long *lBal
     );
   };
   [
     uuid(4F8721D7-7D59-4D8B-99F5-A77775586BD5),
     helpstring("MS Video Control Stream Buffer Sink 3 Output Device Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidStreamBufferSink3 : IMSVidStreamBufferSink2
   {
     [id(200)]
     HRESULT __stdcall SetMinSeek (
       [out retval] long *pdwMin
     );
     [id(202), propget]
     HRESULT __stdcall AudioCounter (
       [out retval] IUnknown **ppunk
     );
     [propget]
     HRESULT __stdcall VideoCounter (
       [out retval] IUnknown **ppunk
     );
     [propget]
     HRESULT __stdcall CCCounter (
       [out retval] IUnknown **ppunk
     );
     [propget]
     HRESULT __stdcall WSTCounter (
       [out retval] IUnknown **ppunk
     );
     [id(210), propput]
     HRESULT __stdcall AudioAnalysisFilter (
       [in] BSTR argNo1
     );
     [id(210), propget]
     HRESULT __stdcall AudioAnalysisFilter (
       [out retval] BSTR *pszCLSID
     );
     [id(213), propput, restricted, hidden]
     HRESULT __stdcall _AudioAnalysisFilter (
       [in] struct GUID argNo1
     );
     [id(213), propget, restricted, hidden]
     HRESULT __stdcall _AudioAnalysisFilter (
       [out retval] struct GUID *pGuid
     );
     [id(211), propput]
     HRESULT __stdcall VideoAnalysisFilter (
       [in] BSTR argNo1
     );
     [id(211), propget]
     HRESULT __stdcall VideoAnalysisFilter (
       [out retval] BSTR *pszCLSID
     );
     [id(214), propput, restricted, hidden]
     HRESULT __stdcall _VideoAnalysisFilter (
       [in] struct GUID argNo1
     );
     [id(214), propget, restricted, hidden]
     HRESULT __stdcall _VideoAnalysisFilter (
       [out retval] struct GUID *pGuid
     );
     [id(212), propput]
     HRESULT __stdcall DataAnalysisFilter (
       [in] BSTR argNo1
     );
     [id(212), propget]
     HRESULT __stdcall DataAnalysisFilter (
       [out retval] BSTR *pszCLSID
     );
     [id(215), propput, restricted, hidden]
     HRESULT __stdcall _DataAnalysisFilter (
       [in] struct GUID argNo1
     );
     [id(215), propget, restricted, hidden]
     HRESULT __stdcall _DataAnalysisFilter (
       [out retval] struct GUID *pGuid
     );
     [id(45), propget]
     HRESULT __stdcall LicenseErrorCode (
       [out retval] HRESULT *hres
     );
   };
   [
     uuid(2CA9FC63-C131-4E5A-955A-544A47C67146),
     helpstring("MS Video Control Stream Buffer Sink 2 Output Device Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidStreamBufferSink2 : IMSVidStreamBufferSink
   {
     [id(198)]
     HRESULT __stdcall UnlockProfile (void);
   };
   [
     uuid(159DBB45-CD1B-4DAB-83EA-5CB1F4F21D07),
     helpstring("MS Video Control Stream Buffer Sink Output Device Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidStreamBufferSink : IMSVidOutputDevice
   {
     [id(170), propget]
     HRESULT __stdcall ContentRecorder (
       [in] BSTR pszFilename,
       [out retval] dispinterface IMSVidStreamBufferRecordingControl **pRecordingIUnknown
     );
     [propget]
     HRESULT __stdcall ReferenceRecorder (
       [in] BSTR pszFilename,
       [out retval] dispinterface IMSVidStreamBufferRecordingControl **pRecordingIUnknown
     );
     [id(168), propget]
     HRESULT __stdcall SinkName (
       [out retval] BSTR *pName
     );
     [id(168), propput]
     HRESULT __stdcall SinkName (
       [in] BSTR argNo1
     );
     [id(176)]
     HRESULT __stdcall NameSetLock (void);
     [id(181), propget]
     HRESULT __stdcall SBESink (
       [out retval] IUnknown **sbeConfig
     );
   };
   [
     uuid(160621AA-BBBC-4326-A824-C395AEBC6E74),
     helpstring("IMSVidStreamBufferRecordingControl Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidStreamBufferRecordingControl : IDispatch
   {
     [id(172), propget]
     HRESULT __stdcall startTime (
       [out retval] long *rtStart
     );
     [id(172), propput]
     HRESULT __stdcall startTime (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall StopTime (
       [out retval] long *rtStop
     );
     [id(173), propput]
     HRESULT __stdcall StopTime (
       [in] long argNo1
     );
     [propget]
     HRESULT __stdcall RecordingStopped (
       [out retval] WINBOOL *phResult
     );
     [propget]
     HRESULT __stdcall RecordingStarted (
       [out retval] WINBOOL *phResult
     );
     [id(177), propget]
     HRESULT __stdcall RecordingType (
       [out retval] enum RecordingType *dwType
     );
     [id(179), propget]
     HRESULT __stdcall RecordingAttribute (
       [out retval] IUnknown **pRecordingAttribute
     );
   };
   [
     uuid(EB0C8CF9-6950-4772-87B1-47D11CF3A02F),
     helpstring("MS Video Control Stream Buffer Source Device Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidStreamBufferSource : IMSVidFilePlayback
   {
     [id(178), propget]
     HRESULT __stdcall Start (
       [out retval] long *lStart
     );
     [id(180), propget]
     HRESULT __stdcall RecordingAttribute (
       [out retval] IUnknown **pRecordingAttribute
     );
     [id(182)]
     HRESULT __stdcall CurrentRatings (
       [out] enum EnTvRat_System *pEnSystem,
       [out] enum EnTvRat_GenericLevel *pEnRating,
       [out] long *pBfEnAttr
     );
     HRESULT __stdcall MaxRatingsLevel (
       [in] enum EnTvRat_System enSystem,
       [in] enum EnTvRat_GenericLevel enRating,
       [in] long lbfEnAttr
     );
     [id(187), propput]
     HRESULT __stdcall BlockUnrated (
       [in] WINBOOL argNo1
     );
     [propput]
     HRESULT __stdcall UnratedDelay (
       [in] long argNo1
     );
     [id(190), propget]
     HRESULT __stdcall SBESource (
       [out retval] IUnknown **sbeFilter
     );
   };
   [
     uuid(E4BA9059-B1CE-40D8-B9A0-D4EA4A9989D3),
     helpstring("MS Video Control Stream Buffer Source Device Interface 2"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidStreamBufferSource2 : IMSVidStreamBufferSource
   {
     [id(201), propput]
     HRESULT __stdcall RateEx (
       [in] double dwRate,
       [in] UINT argNo2
     );
     [id(206), propget]
     HRESULT __stdcall AudioCounter (
       [out retval] IUnknown **ppunk
     );
     [propget]
     HRESULT __stdcall VideoCounter (
       [out retval] IUnknown **ppunk
     );
     [propget]
     HRESULT __stdcall CCCounter (
       [out retval] IUnknown **ppunk
     );
     [propget]
     HRESULT __stdcall WSTCounter (
       [out retval] IUnknown **ppunk
     );
   };
   [
     uuid(C0020FD4-BEE7-43D9-A495-9F213117103D),
     helpstring("MS Video Control Encoder Feature Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidEncoder : IMSVidFeature
   {
     [id(185), propget]
     HRESULT __stdcall VideoEncoderInterface (
       [out retval] IUnknown **ppEncInt
     );
     [id(184), propget]
     HRESULT __stdcall AudioEncoderInterface (
       [out retval] IUnknown **ppEncInt
     );
   };
   [
     uuid(37B03547-A4C8-11D2-B634-00C04F79498E),
     helpstring("MS Video Control Feature Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidFeature : IMSVidDevice
   {
   };
   [
     uuid(C8638E8A-7625-4C51-9366-2F40A9831FC0),
     helpstring("MS Video Control Closed Captioning Feature Interface 3"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidClosedCaptioning3 : IMSVidClosedCaptioning2
   {
     [id(196), propget]
     HRESULT __stdcall TeleTextFilter (
       [out retval] IUnknown **punkTTFilter
     );
   };
   [
     uuid(E00CB864-A029-4310-9987-A873F5887D97),
     helpstring("MS Video Control Closed Captioning Feature Interface 2"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidClosedCaptioning2 : IMSVidClosedCaptioning
   {
     [id(186), propget]
     HRESULT __stdcall Service (
       [out retval] enum MSVidCCService *On
     );
     [id(186), propput]
     HRESULT __stdcall Service (
       [in] enum MSVidCCService argNo1
     );
   };
   [
     uuid(99652EA1-C1F7-414F-BB7B-1C967DE75983),
     helpstring("MS Video Control Closed Captioning Feature Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidClosedCaptioning : IMSVidFeature
   {
     [id(38), propget]
     HRESULT __stdcall Enable (
       [out retval] WINBOOL *On
     );
     [id(38), propput]
     HRESULT __stdcall Enable (
       [in] WINBOOL argNo1
     );
   };
   [
     uuid(334125C1-77E5-11D3-B653-00C04F79498E),
     helpstring("MS Video Control Data Services Feature Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidDataServices : IMSVidFeature
   {
   };
   [
     uuid(11EBC158-E712-4D1F-8BB3-01ED5274C4CE),
     helpstring("MS Video Control XDS Feature Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidXDS : IMSVidFeature
   {
     [id(197), propget]
     HRESULT __stdcall ChannelChangeInterface (
       [out retval] IUnknown **punkCC
     );
   };
   [
     uuid(B0EDF162-910A-11D2-B632-00C04F79498E),
     helpstring("MS Video Control Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidCtl : IDispatch
   {
     [id(-500), propget]
     HRESULT __stdcall AutoSize (
       [out retval] WINBOOL *pbool
     );
     [id(-500), propput]
     HRESULT __stdcall AutoSize (
       [in] WINBOOL argNo1
     );
     [id(-501), propget]
     HRESULT __stdcall BackColor (
       [out retval] OLE_COLOR *BackColor
     );
     [id(-501), propput]
     HRESULT __stdcall BackColor (
       [in] OLE_COLOR argNo1
     );
     [id(-514), propget]
     HRESULT __stdcall Enabled (
       [out retval] WINBOOL *pbool
     );
     [id(-514), propput]
     HRESULT __stdcall Enabled (
       [in] WINBOOL argNo1
     );
     [id(-516), propget]
     HRESULT __stdcall TabStop (
       [out retval] WINBOOL *pbool
     );
     [id(-516), propput]
     HRESULT __stdcall TabStop (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall Window (
       [out retval] wireHWND *phwnd
     );
     [id(-550)]
     HRESULT __stdcall Refresh (void);
     [id(18), propget]
     HRESULT __stdcall DisplaySize (
       [out retval] enum DisplaySizeList *CurrentValue
     );
     [id(18), propput]
     HRESULT __stdcall DisplaySize (
       [in] enum DisplaySizeList argNo1
     );
     [propget]
     HRESULT __stdcall MaintainAspectRatio (
       [out retval] WINBOOL *CurrentValue
     );
     [id(19), propput]
     HRESULT __stdcall MaintainAspectRatio (
       [in] WINBOOL argNo1
     );
     [propget]
     HRESULT __stdcall ColorKey (
       [out retval] OLE_COLOR *CurrentValue
     );
     [id(20), propput]
     HRESULT __stdcall ColorKey (
       [in] OLE_COLOR argNo1
     );
     [id(0), propget]
     HRESULT __stdcall InputsAvailable (
       [in] BSTR CategoryGuid,
       [out retval] dispinterface IMSVidInputDevices **pVal
     );
     [propget]
     HRESULT __stdcall OutputsAvailable (
       [in] BSTR CategoryGuid,
       [out retval] dispinterface IMSVidOutputDevices **pVal
     );
     [propget, restricted, hidden]
     HRESULT __stdcall _InputsAvailable (
       [in] struct GUID *CategoryGuid,
       [out retval] dispinterface IMSVidInputDevices **pVal
     );
     [propget, restricted, hidden]
     HRESULT __stdcall _OutputsAvailable (
       [in] struct GUID *CategoryGuid,
       [out retval] dispinterface IMSVidOutputDevices **pVal
     );
     [propget]
     HRESULT __stdcall VideoRenderersAvailable (
       [out retval] dispinterface IMSVidVideoRendererDevices **pVal
     );
     [propget]
     HRESULT __stdcall AudioRenderersAvailable (
       [out retval] dispinterface IMSVidAudioRendererDevices **pVal
     );
     [propget]
     HRESULT __stdcall FeaturesAvailable (
       [out retval] dispinterface IMSVidFeatures **pVal
     );
     [propget]
     HRESULT __stdcall InputActive (
       [out retval] dispinterface IMSVidInputDevice **pVal
     );
     [id(7), propput]
     HRESULT __stdcall InputActive (
       [in] dispinterface IMSVidInputDevice *argNo1
     );
     [propget]
     HRESULT __stdcall OutputsActive (
       [out retval] dispinterface IMSVidOutputDevices **pVal
     );
     [id(8), propput]
     HRESULT __stdcall OutputsActive (
       [in] dispinterface IMSVidOutputDevices *argNo1
     );
     [propget]
     HRESULT __stdcall VideoRendererActive (
       [out retval] dispinterface IMSVidVideoRenderer **pVal
     );
     [id(9), propput]
     HRESULT __stdcall VideoRendererActive (
       [in] dispinterface IMSVidVideoRenderer *argNo1
     );
     [propget]
     HRESULT __stdcall AudioRendererActive (
       [out retval] dispinterface IMSVidAudioRenderer **pVal
     );
     [id(10), propput]
     HRESULT __stdcall AudioRendererActive (
       [in] dispinterface IMSVidAudioRenderer *argNo1
     );
     [propget]
     HRESULT __stdcall FeaturesActive (
       [out retval] dispinterface IMSVidFeatures **pVal
     );
     [id(11), propput]
     HRESULT __stdcall FeaturesActive (
       [in] dispinterface IMSVidFeatures *argNo1
     );
     [id(22), propget]
     HRESULT __stdcall State (
       [out retval] enum MSVidCtlStateList *lState
     );
     [id(12)]
     HRESULT __stdcall View (
       [in] VARIANT *v
     );
     HRESULT __stdcall Build (void);
     HRESULT __stdcall Pause (void);
     HRESULT __stdcall Run (void);
     HRESULT __stdcall Stop (void);
     HRESULT __stdcall Decompose (void);
     [id(25)]
     HRESULT __stdcall DisableVideo (void);
     HRESULT __stdcall DisableAudio (void);
     HRESULT __stdcall ViewNext (
       [in] VARIANT *v
     );
   };
   [
     uuid(C5702CD1-9B79-11D3-B654-00C04F79498E),
     helpstring("MS Video Control Input Device Writable Collection Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidInputDevices : IDispatch
   {
     [id(16), propget]
     HRESULT __stdcall Count (
       [out retval] long *lCount
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] interface IEnumVARIANT **pD
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT v,
       [out retval] dispinterface IMSVidInputDevice **pDB
     );
     [id(-553)]
     HRESULT __stdcall Add (
       [in] dispinterface IMSVidInputDevice *pDB
     );
     [id(-555)]
     HRESULT __stdcall Remove (
       [in] VARIANT v
     );
   };
   [
     uuid(C5702CD2-9B79-11D3-B654-00C04F79498E),
     helpstring("MS Video Control Output Device Writable Collection Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidOutputDevices : IDispatch
   {
     [id(16), propget]
     HRESULT __stdcall Count (
       [out retval] long *lCount
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] interface IEnumVARIANT **pD
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT v,
       [out retval] dispinterface IMSVidOutputDevice **pDB
     );
     [id(-553)]
     HRESULT __stdcall Add (
       [in] dispinterface IMSVidOutputDevice *pDB
     );
     [id(-555)]
     HRESULT __stdcall Remove (
       [in] VARIANT v
     );
   };
   [
     uuid(C5702CD3-9B79-11D3-B654-00C04F79498E),
     helpstring("MS Video Control Video Renderer Device Writable Collection Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidVideoRendererDevices : IDispatch
   {
     [id(16), propget]
     HRESULT __stdcall Count (
       [out retval] long *lCount
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] interface IEnumVARIANT **pD
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT v,
       [out retval] dispinterface IMSVidVideoRenderer **pDB
     );
     [id(-553)]
     HRESULT __stdcall Add (
       [in] dispinterface IMSVidVideoRenderer *pDB
     );
     [id(-555)]
     HRESULT __stdcall Remove (
       [in] VARIANT v
     );
   };
   [
     uuid(C5702CD4-9B79-11D3-B654-00C04F79498E),
     helpstring("MS Video Control Audio Renderer Device Writable Collection Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidAudioRendererDevices : IDispatch
   {
     [id(16), propget]
     HRESULT __stdcall Count (
       [out retval] long *lCount
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] interface IEnumVARIANT **pD
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT v,
       [out retval] dispinterface IMSVidAudioRenderer **pDB
     );
     [id(-553)]
     HRESULT __stdcall Add (
       [in] dispinterface IMSVidAudioRenderer *pDB
     );
     [id(-555)]
     HRESULT __stdcall Remove (
       [in] VARIANT v
     );
   };
   [
     uuid(C5702CD5-9B79-11D3-B654-00C04F79498E),
     helpstring("MS Video Control Features Writable Collection Interface"),
     hidden,
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSVidFeatures : IDispatch
   {
     [id(16), propget]
     HRESULT __stdcall Count (
       [out retval] long *lCount
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] interface IEnumVARIANT **pD
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT v,
       [out retval] dispinterface IMSVidFeature **pDB
     );
     [id(-553)]
     HRESULT __stdcall Add (
       [in] dispinterface IMSVidFeature *pDB
     );
     [id(-555)]
     HRESULT __stdcall Remove (
       [in] VARIANT v
     );
   };
   [
     uuid(C3A9F406-2222-436D-86D5-BA3229279EFB),
     helpstring("IMSEventBinder Interface"),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IMSEventBinder : IDispatch
   {
     [id(24)]
     HRESULT __stdcall Bind (
       [in] IDispatch * pEventObject,
       [in] BSTR EventName,
       [in] BSTR EventHandler,
       [out retval] long *CancelID
     );
     [id(23)]
     HRESULT __stdcall Unbind (
       [in] UINT CancelCookie
     );
   };
   [
     uuid(87BD2783-EBC0-478C-B4A0-E8E7F43AB78E),
     helpstring("MS Video Control Device Interface 2"),
     dual,
     oleautomation
   ]
   dispinterface IMSVidDevice2 : IUnknown
   {
     [id(217), propget]
     HRESULT __stdcall DevicePath (
       [out retval] BSTR *DevPath
     );
   };

};

/* Interface declarations.  */
[
  uuid(0002E000-0000-0000-C000-000000000046)
]
interface IEnumGUID : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] struct GUID *rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumGUID **ppenum
  );
};
[
  uuid(00000102-0000-0000-C000-000000000046)
]
interface IEnumMoniker : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] interface IMoniker **rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumMoniker **ppenum
  );
};
[
  uuid(0000000F-0000-0000-C000-000000000046)
]
interface IMoniker : IPersistStream
{
  [id(1610809344)]
  HRESULT __stdcall RemoteBindToObject (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] struct GUID *riidResult,
    [out] IUnknown **ppvResult
  );
  HRESULT __stdcall RemoteBindToStorage (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] struct GUID *riid,
    [out] IUnknown **ppvObj
  );
  HRESULT __stdcall Reduce (
    [in] interface IBindCtx *pbc,
    [in] UINT dwReduceHowFar,
    [in out] interface IMoniker **ppmkToLeft,
    [out] interface IMoniker **ppmkReduced
  );
  HRESULT __stdcall ComposeWith (
    [in] interface IMoniker *pmkRight,
    [in] long fOnlyIfNotGeneric,
    [out] interface IMoniker **ppmkComposite
  );
  HRESULT __stdcall Enum (
    [in] long fForward,
    [out] interface IEnumMoniker **ppenumMoniker
  );
  HRESULT __stdcall IsEqual (
    [in] interface IMoniker *pmkOtherMoniker
  );
  HRESULT __stdcall Hash (
    [out] UINT *pdwHash
  );
  HRESULT __stdcall IsRunning (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] interface IMoniker *pmkNewlyRunning
  );
  HRESULT __stdcall GetTimeOfLastChange (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [out] struct _FILETIME *pfiletime
  );
  HRESULT __stdcall Inverse (
    [out] interface IMoniker **ppmk
  );
  HRESULT __stdcall CommonPrefixWith (
    [in] interface IMoniker *pmkOther,
    [out] interface IMoniker **ppmkPrefix
  );
  HRESULT __stdcall RelativePathTo (
    [in] interface IMoniker *pmkOther,
    [out] interface IMoniker **ppmkRelPath
  );
  HRESULT __stdcall GetDisplayName (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [out] LPWSTR ppszDisplayName
  );
  HRESULT __stdcall ParseDisplayName (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] LPWSTR pszDisplayName,
    [out] UINT *pchEaten,
    [out] interface IMoniker **ppmkOut
  );
  HRESULT __stdcall IsSystemMoniker (
    [out] UINT *pdwMksys
  );
};
[
  uuid(00000109-0000-0000-C000-000000000046)
]
interface IPersistStream : IPersist
{
  [id(1610743808)]
  HRESULT __stdcall IsDirty (void);
  HRESULT __stdcall Load (
    [in] interface IStream *pstm
  );
  HRESULT __stdcall Save (
    [in] interface IStream *pstm,
    [in] long fClearDirty
  );
  HRESULT __stdcall GetSizeMax (
    [out] struct _ULARGE_INTEGER *pcbSize
  );
};
[
  uuid(0000010C-0000-0000-C000-000000000046)
]
interface IPersist : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetClassID (
    [out] struct GUID *pClassID
  );
};
[
  uuid(0000000C-0000-0000-C000-000000000046)
]
interface IStream : ISequentialStream
{
  [id(1610743808)]
  HRESULT __stdcall RemoteSeek (
    [in] struct _LARGE_INTEGER dlibMove,
    [in] UINT dwOrigin,
    [out] struct _ULARGE_INTEGER *plibNewPosition
  );
  HRESULT __stdcall SetSize (
    [in] struct _ULARGE_INTEGER libNewSize
  );
  HRESULT __stdcall RemoteCopyTo (
    [in] interface IStream *pstm,
    [in] struct _ULARGE_INTEGER cb,
    [out] struct _ULARGE_INTEGER *pcbRead,
    [out] struct _ULARGE_INTEGER *pcbWritten
  );
  HRESULT __stdcall Commit (
    [in] UINT grfCommitFlags
  );
  HRESULT __stdcall Revert (void);
  HRESULT __stdcall LockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall UnlockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall Stat (
    [out] struct tagSTATSTG *pstatstg,
    [in] UINT grfStatFlag
  );
  HRESULT __stdcall Clone (
    [out] interface IStream **ppstm
  );
};
[
  uuid(0C733A30-2A1C-11CE-ADE5-00AA0044773D)
]
interface ISequentialStream : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteRead (
    [out] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbRead
  );
  HRESULT __stdcall RemoteWrite (
    [in] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbWritten
  );
};
[
  uuid(0000000E-0000-0000-C000-000000000046)
]
interface IBindCtx : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RegisterObjectBound (
    [in] IUnknown * punk
  );
  HRESULT __stdcall RevokeObjectBound (
    [in] IUnknown * punk
  );
  HRESULT __stdcall ReleaseBoundObjects (void);
  HRESULT __stdcall RemoteSetBindOptions (
    [in] struct tagBIND_OPTS2 *pbindopts
  );
  HRESULT __stdcall RemoteGetBindOptions (
    [in out] struct tagBIND_OPTS2 *pbindopts
  );
  HRESULT __stdcall GetRunningObjectTable (
    [out] interface IRunningObjectTable **pprot
  );
  HRESULT __stdcall RegisterObjectParam (
    [in] LPWSTR pszKey,
    [in] IUnknown * punk
  );
  HRESULT __stdcall GetObjectParam (
    [in] LPWSTR pszKey,
    [out] IUnknown **ppunk
  );
  HRESULT __stdcall EnumObjectParam (
    [out] interface IEnumString **ppenum
  );
  HRESULT __stdcall RevokeObjectParam (
    [in] LPWSTR pszKey
  );
};
[
  uuid(00000010-0000-0000-C000-000000000046)
]
interface IRunningObjectTable : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Register (
    [in] UINT grfFlags,
    [in] IUnknown * punkObject,
    [in] interface IMoniker *pmkObjectName,
    [out] UINT *pdwRegister
  );
  HRESULT __stdcall Revoke (
    [in] UINT dwRegister
  );
  HRESULT __stdcall IsRunning (
    [in] interface IMoniker *pmkObjectName
  );
  HRESULT __stdcall GetObject (
    [in] interface IMoniker *pmkObjectName,
    [out] IUnknown **ppunkObject
  );
  HRESULT __stdcall NoteChangeTime (
    [in] UINT dwRegister,
    [in] struct _FILETIME *pfiletime
  );
  HRESULT __stdcall GetTimeOfLastChange (
    [in] interface IMoniker *pmkObjectName,
    [out] struct _FILETIME *pfiletime
  );
  HRESULT __stdcall EnumRunning (
    [out] interface IEnumMoniker **ppenumMoniker
  );
};
[
  uuid(00000101-0000-0000-C000-000000000046)
]
interface IEnumString : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] LPWSTR rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumString **ppenum
  );
};
[
  uuid(8A674B4A-1F63-11D3-B64C-00C04F79498E),
  hidden,
  restricted
]
interface IEnumComponentTypes : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT celt,
    [out] dispinterface IComponentType **rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumComponentTypes **ppenum
  );
};
[
  uuid(2A6E2939-2595-11D3-B64C-00C04F79498E),
  hidden,
  restricted
]
interface IEnumComponents : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT celt,
    [out] dispinterface IComponent **rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumComponents **ppenum
  );
};
[
  uuid(1C15D486-911D-11D2-B632-00C04F79498E),
  helpstring("MS Video Control TV Tuner Device Event Interface"),
  oleautomation,
  dispatchable
]
interface IMSVidAnalogTunerEvent : IMSVidTunerEvent
{
};
[
  uuid(1C15D485-911D-11D2-B632-00C04F79498E),
  helpstring("MS Video Control Tuner Device Event Interface"),
  hidden,
  oleautomation,
  dispatchable
]
interface IMSVidTunerEvent : IMSVidInputDeviceEvent
{
  [id(1)]
  HRESULT __stdcall TuneChanged (
    [in] dispinterface IMSVidTuner *lpd
  );
};
[
  uuid(37B0353E-A4C8-11D2-B634-00C04F79498E),
  helpstring("MS Video Control Input Device Event Interface"),
  oleautomation,
  dispatchable
]
interface IMSVidInputDeviceEvent : IDispatch
{
};
[
  uuid(238DEC54-ADEB-4005-A349-F772B9AFEBC4),
  helpstring("DShow Graph Segment Builder Interface")
]
interface IMSVidGraphSegment : IPersist
{
  [id(1610743808), propget]
  HRESULT __stdcall Init (
    [out retval] IUnknown **pInit
  );
  [id(1610743808), propput]
  HRESULT __stdcall Init (
    [in] IUnknown * argNo1
  );
  [id(1610743810)]
  HRESULT __stdcall EnumFilters (
    [out] interface IEnumFilters **pNewEnum
  );
  [propget]
  HRESULT __stdcall Container (
    [out retval] interface IMSVidGraphSegmentContainer **ppCtl
  );
  [id(1610743811), propput]
  HRESULT __stdcall Container (
    [in] interface IMSVidGraphSegmentContainer *argNo1
  );
  [id(1610743813), propget]
  HRESULT __stdcall type (
    [out retval] enum MSVidSegmentType *pType
  );
  [propget]
  HRESULT __stdcall Category (
    [out retval] struct GUID *pGuid
  );
  HRESULT __stdcall Build (void);
  HRESULT __stdcall PostBuild (void);
  HRESULT __stdcall PreRun (void);
  HRESULT __stdcall PostRun (void);
  HRESULT __stdcall PreStop (void);
  HRESULT __stdcall PostStop (void);
  HRESULT __stdcall OnEventNotify (
    long lEventCode,
    LONG_PTR lEventParm1,
    LONG_PTR lEventParm2
  );
  HRESULT __stdcall Decompose (void);
};
[
  uuid(56A86893-0AD4-11CE-B03A-0020AF0BA770)
]
interface IEnumFilters : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT cFilters,
    [out] interface IBaseFilter **ppFilter,
    [out] UINT *pcFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT cFilters
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumFilters **ppenum
  );
};
[
  uuid(56A86895-0AD4-11CE-B03A-0020AF0BA770)
]
interface IBaseFilter : IMediaFilter
{
  [id(1610809344)]
  HRESULT __stdcall EnumPins (
    [out] interface IEnumPins **ppenum
  );
  HRESULT __stdcall FindPin (
    [in] LPWSTR Id,
    [out] interface IPin **ppPin
  );
  HRESULT __stdcall QueryFilterInfo (
    [out] struct _FilterInfo *pInfo
  );
  HRESULT __stdcall JoinFilterGraph (
    [in] interface IFilterGraph *pGraph,
    [in] LPWSTR pName
  );
  HRESULT __stdcall QueryVendorInfo (
    [out] LPWSTR pVendorInfo
  );
};
[
  uuid(56A86899-0AD4-11CE-B03A-0020AF0BA770)
]
interface IMediaFilter : IPersist
{
  [id(1610743808)]
  HRESULT __stdcall Stop (void);
  HRESULT __stdcall Pause (void);
  HRESULT __stdcall Run (
    LONGLONG tStart
  );
  HRESULT __stdcall GetState (
    [in] UINT dwMilliSecsTimeout,
    [out] enum _FilterState *State
  );
  HRESULT __stdcall SetSyncSource (
    [in] interface IReferenceClock *pClock
  );
  HRESULT __stdcall GetSyncSource (
    [out] interface IReferenceClock **pClock
  );
};
[
  uuid(56A86897-0AD4-11CE-B03A-0020AF0BA770)
]
interface IReferenceClock : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetTime (
    [out] LONGLONG *pTime
  );
  HRESULT __stdcall AdviseTime (
    [in] LONGLONG baseTime,
    [in] LONGLONG streamTime,
    [in] ULONG_PTR hEvent,
    [out] ULONG_PTR *pdwAdviseCookie
  );
  HRESULT __stdcall AdvisePeriodic (
    [in] LONGLONG startTime,
    [in] LONGLONG periodTime,
    [in] ULONG_PTR hSemaphore,
    [out] ULONG_PTR *pdwAdviseCookie
  );
  HRESULT __stdcall Unadvise (
    [in] ULONG_PTR dwAdviseCookie
  );
};
[
  uuid(56A86892-0AD4-11CE-B03A-0020AF0BA770)
]
interface IEnumPins : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT cPins,
    [out] interface IPin **ppPins,
    [out] UINT *pcFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT cPins
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumPins **ppenum
  );
};
[
  uuid(56A86891-0AD4-11CE-B03A-0020AF0BA770)
]
interface IPin : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Connect (
    [in] interface IPin *pReceivePin,
    [in] struct _AMMediaType *pmt
  );
  HRESULT __stdcall ReceiveConnection (
    [in] interface IPin *pConnector,
    [in] struct _AMMediaType *pmt
  );
  HRESULT __stdcall Disconnect (void);
  HRESULT __stdcall ConnectedTo (
    [out] interface IPin **pPin
  );
  HRESULT __stdcall ConnectionMediaType (
    [out] struct _AMMediaType *pmt
  );
  HRESULT __stdcall QueryPinInfo (
    [out] struct _PinInfo *pInfo
  );
  HRESULT __stdcall QueryDirection (
    [out] enum _PinDirection *pPinDir
  );
  HRESULT __stdcall QueryId (
    [out] LPWSTR Id
  );
  HRESULT __stdcall QueryAccept (
    [in] struct _AMMediaType *pmt
  );
  HRESULT __stdcall EnumMediaTypes (
    [out] interface IEnumMediaTypes **ppenum
  );
  HRESULT __stdcall QueryInternalConnections (
    [out] interface IPin **apPin,
    [in out] UINT *nPin
  );
  HRESULT __stdcall EndOfStream (void);
  HRESULT __stdcall BeginFlush (void);
  HRESULT __stdcall EndFlush (void);
  HRESULT __stdcall NewSegment (
    [in] LONGLONG tStart,
    [in] LONGLONG tStop,
    [in] double dRate
  );
};
[
  uuid(89C31040-846B-11CE-97D3-00AA0055595A)
]
interface IEnumMediaTypes : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT cMediaTypes,
    [out] struct _AMMediaType **ppMediaTypes,
    [out] UINT *pcFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT cMediaTypes
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumMediaTypes **ppenum
  );
};
[
  uuid(56A8689F-0AD4-11CE-B03A-0020AF0BA770)
]
interface IFilterGraph : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall AddFilter (
    [in] interface IBaseFilter *pFilter,
    [in] LPWSTR pName
  );
  HRESULT __stdcall RemoveFilter (
    [in] interface IBaseFilter *pFilter
  );
  HRESULT __stdcall EnumFilters (
    [out] interface IEnumFilters **ppenum
  );
  HRESULT __stdcall FindFilterByName (
    [in] LPWSTR pName,
    [out] interface IBaseFilter **ppFilter
  );
  HRESULT __stdcall ConnectDirect (
    [in] interface IPin *ppinOut,
    [in] interface IPin *ppinIn,
    [in] struct _AMMediaType *pmt
  );
  HRESULT __stdcall Reconnect (
    [in] interface IPin *pPin
  );
  HRESULT __stdcall Disconnect (
    [in] interface IPin *pPin
  );
  HRESULT __stdcall SetDefaultSyncSource (void);
};
[
  uuid(3DD2903D-E0AA-11D2-B63A-00C04F79498E),
  helpstring("DShow Graph Segment Container")
]
interface IMSVidGraphSegmentContainer : IUnknown
{
  [id(1610678272), propget]
  HRESULT __stdcall Graph (
    [out] interface IGraphBuilder **ppGraph
  );
  [propget]
  HRESULT __stdcall Input (
    [out] interface IMSVidGraphSegment **ppInput
  );
  [propget]
  HRESULT __stdcall Outputs (
    [out] interface IEnumMSVidGraphSegment **ppOutputs
  );
  [propget]
  HRESULT __stdcall VideoRenderer (
    [out] interface IMSVidGraphSegment **ppVR
  );
  [propget]
  HRESULT __stdcall AudioRenderer (
    [out] interface IMSVidGraphSegment **ppAR
  );
  [propget]
  HRESULT __stdcall Features (
    [out] interface IEnumMSVidGraphSegment **ppFeatures
  );
  [propget]
  HRESULT __stdcall Composites (
    [out] interface IEnumMSVidGraphSegment **ppComposites
  );
  [propget]
  HRESULT __stdcall ParentContainer (
    [out] IUnknown **ppContainer
  );
  HRESULT __stdcall Decompose (
    interface IMSVidGraphSegment *pSegment
  );
  HRESULT __stdcall IsWindowless (void);
  HRESULT __stdcall GetFocus (void);
};
[
  uuid(56A868A9-0AD4-11CE-B03A-0020AF0BA770)
]
interface IGraphBuilder : IFilterGraph
{
  [id(1610743808)]
  HRESULT __stdcall Connect (
    [in] interface IPin *ppinOut,
    [in] interface IPin *ppinIn
  );
  HRESULT __stdcall Render (
    [in] interface IPin *ppinOut
  );
  HRESULT __stdcall RenderFile (
    [in] LPWSTR lpcwstrFile,
    [in] LPWSTR lpcwstrPlayList
  );
  HRESULT __stdcall AddSourceFilter (
    [in] LPWSTR lpcwstrFileName,
    [in] LPWSTR lpcwstrFilterName,
    [out] interface IBaseFilter **ppFilter
  );
  HRESULT __stdcall SetLogFile (
    [in] ULONG_PTR hFile
  );
  HRESULT __stdcall Abort (void);
  HRESULT __stdcall ShouldOperationContinue (void);
};
[
  uuid(3DD2903E-E0AA-11D2-B63A-00C04F79498E),
  helpstring("DShow Graph Segment Enumerator")
]
interface IEnumMSVidGraphSegment : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT celt,
    [out] interface IMSVidGraphSegment **rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumMSVidGraphSegment **ppenum
  );
};
[
  uuid(37B0353A-A4C8-11D2-B634-00C04F79498E),
  helpstring("MS Video Control File Playback Device Event Interface"),
  hidden,
  oleautomation,
  dispatchable
]
interface IMSVidFilePlaybackEvent : IMSVidPlaybackEvent
{
};
[
  uuid(37B0353B-A4C8-11D2-B634-00C04F79498E),
  helpstring("MS Video Control Playback Device Event Interface"),
  oleautomation,
  dispatchable
]
interface IMSVidPlaybackEvent : IMSVidInputDeviceEvent
{
  [id(2)]
  HRESULT __stdcall EndOfMedia (
    [in] dispinterface IMSVidPlayback *lpd
  );
};
[
  uuid(7F5000A6-A440-47CA-8ACC-C0E75531A2C2),
  helpstring("Automation Compliant GDI Rect with Automatic HWND Scaling"),
  dispatchable
]
interface IMSVidRect : IDispatch
{
  [id(1610743808), propget]
  HRESULT __stdcall Top (
    [out retval] long *TopVal
  );
  [id(1610743808), propput]
  HRESULT __stdcall Top (
    [in] long argNo1
  );
  [id(1610743810), propget]
  HRESULT __stdcall Left (
    [out retval] long *LeftVal
  );
  [id(1610743810), propput]
  HRESULT __stdcall Left (
    [in] long argNo1
  );
  [id(1610743812), propget]
  HRESULT __stdcall Width (
    [out retval] long *WidthVal
  );
  [id(1610743812), propput]
  HRESULT __stdcall Width (
    [in] long argNo1
  );
  [id(1610743814), propget]
  HRESULT __stdcall Height (
    [out retval] long *HeightVal
  );
  [id(1610743814), propput]
  HRESULT __stdcall Height (
    [in] long argNo1
  );
  [id(1610743816), propget]
  HRESULT __stdcall HWnd (
    [out retval] wireHWND *HWndVal
  );
  [id(1610743816), propput]
  HRESULT __stdcall HWnd (
    [in] wireHWND argNo1
  );
  [id(1610743818), propput]
  HRESULT __stdcall Rect (
    [in] interface IMSVidRect *argNo1
  );
};
[
  uuid(B4F7A674-9B83-49CB-A357-C63B871BE958),
  helpstring("MS Video Control File Playback Device Event Interface"),
  hidden,
  oleautomation,
  dispatchable
]
interface IMSVidWebDVDEvent : IMSVidPlaybackEvent
{
  [id(3)]
  HRESULT __stdcall DVDNotify (
    [in] long lEventCode,
    [in] VARIANT lParam1,
    [in] VARIANT lParam2
  );
  HRESULT __stdcall PlayForwards (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall PlayBackwards (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall ShowMenu (
    [in] enum DVDMenuIDConstants MenuID,
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall Resume (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall SelectOrActivateButton (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall StillOff (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall PauseOn (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall ChangeCurrentAudioStream (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall ChangeCurrentSubpictureStream (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall ChangeCurrentAngle (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall PlayAtTimeInTitle (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall PlayAtTime (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall PlayChapterInTitle (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall PlayChapter (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall ReplayChapter (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall PlayNextChapter (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall Stop (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall ReturnFromSubmenu (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall PlayTitle (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall PlayPrevChapter (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall ChangeKaraokePresMode (
    [in] WINBOOL bEnabled
  );
  HRESULT __stdcall ChangeVideoPresMode (
    [in] WINBOOL bEnabled
  );
};
[
  uuid(7A4FB5AF-479F-4074-BB40-CE6722E43C82),
  helpstring("IVMRImageCompositor Interface")
]
interface IVMRImageCompositor : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall InitCompositionTarget (
    [in] IUnknown * pD3DDevice,
    [in] UINT *pddsRenderTarget
  );
  HRESULT __stdcall TermCompositionTarget (
    [in] IUnknown * pD3DDevice,
    [in] UINT *pddsRenderTarget
  );
  HRESULT __stdcall SetStreamMediaType (
    [in] UINT dwStrmID,
    [in] struct _AMMediaType *pmt,
    [in] long fTexture
  );
  HRESULT __stdcall CompositeImage (
    [in] IUnknown * pD3DDevice,
    [in] UINT *pddsRenderTarget,
    [in] struct _AMMediaType *pmtRenderTarget,
    [in] LONGLONG rtStart,
    [in] LONGLONG rtEnd,
    [in] UINT dwClrBkGnd,
    [in] struct _VMRVIDEOSTREAMINFO *pVideoStreamInfo,
    [in] unsigned int cStreams
  );
};
[
  uuid(1E673275-0257-40AA-AF20-7C608D4A0428),
  helpstring("IVMRMixerBitmap Interface")
]
interface IVMRMixerBitmap : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall SetAlphaBitmap (
    [in] struct _VMRALPHABITMAP *pBmpParms
  );
  HRESULT __stdcall UpdateAlphaBitmapParameters (
    [in] struct _VMRALPHABITMAP *pBmpParms
  );
  HRESULT __stdcall GetAlphaBitmapParameters (
    [out] struct _VMRALPHABITMAP *pBmpParms
  );
};
[
  uuid(31CE832E-4484-458B-8CCA-F4D7E3DB0B52),
  helpstring("IVMRSurfaceAllocator Interface")
]
interface IVMRSurfaceAllocator : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall AllocateSurface (
    [in] ULONG_PTR dwUserID,
    [in] struct tagVMRALLOCATIONINFO *lpAllocInfo,
    [in out] UINT *lpdwActualBuffers,
    [out] UINT *lplpSurface
  );
  HRESULT __stdcall FreeSurface (
    [in] ULONG_PTR dwID
  );
  HRESULT __stdcall PrepareSurface (
    [in] ULONG_PTR dwUserID,
    [in] UINT *lpSurface,
    [in] UINT dwSurfaceFlags
  );
  HRESULT __stdcall AdviseNotify (
    [in] interface IVMRSurfaceAllocatorNotify *lpIVMRSurfAllocNotify
  );
};
[
  uuid(AADA05A8-5A4E-4729-AF0B-CEA27AED51E2),
  helpstring("IVMRSurfaceAllocatorNotify Interface")
]
interface IVMRSurfaceAllocatorNotify : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall AdviseSurfaceAllocator (
    [in] ULONG_PTR dwUserID,
    [in] interface IVMRSurfaceAllocator *lpIVRMSurfaceAllocator
  );
  HRESULT __stdcall SetDDrawDevice (
    [in] UINT *lpDDrawDevice,
    [in] void *hMonitor
  );
  HRESULT __stdcall ChangeDDrawDevice (
    [in] UINT *lpDDrawDevice,
    [in] void *hMonitor
  );
  HRESULT __stdcall RestoreDDrawSurfaces (void);
  HRESULT __stdcall NotifyEvent (
    [in] long EventCode,
    [in] LONG_PTR Param1,
    [in] LONG_PTR Param2
  );
  HRESULT __stdcall SetBorderColor (
    [in] UINT clrBorder
  );
};
[
  uuid(37B03545-A4C8-11D2-B634-00C04F79498E),
  helpstring("MS Video Control Video Renderer Device Event Interface"),
  hidden,
  oleautomation,
  dispatchable
]
interface IMSVidVideoRendererEvent : IMSVidOutputDeviceEvent
{
  [id(26)]
  HRESULT __stdcall OverlayUnavailable (void);
};
[
  uuid(2E6A14E2-571C-11D3-B652-00C04F79498E),
  helpstring("MS Video Control Output Device Event Interface"),
  oleautomation,
  dispatchable
]
interface IMSVidOutputDeviceEvent : IMSVidDeviceEvent
{
};
[
  uuid(1C15D480-911D-11D2-B632-00C04F79498E),
  helpstring("MS Video Control Device Event Interface"),
  oleautomation,
  dispatchable
]
interface IMSVidDeviceEvent : IDispatch
{
  [id(0)]
  HRESULT __stdcall StateChange (
    [in] dispinterface IMSVidDevice *lpd,
    [in] long oldState,
    [in] long newState
  );
};
[
  uuid(29AFF080-182A-4A5D-AF3B-448F3A6346CB),
  helpstring("IMFVideoPresenter Interface")
]
interface IMFVideoPresenter : IMFClockStateSink
{
  [id(1610743808)]
  HRESULT __stdcall ProcessMessage (
    enum MFVP_MESSAGE_TYPE eMessage,
    ULONG_PTR ulParam
  );
  HRESULT __stdcall GetCurrentMediaType (
    [out] interface IMFVideoMediaType **ppMediaType
  );
};
[
  uuid(F6696E82-74F7-4F3D-A178-8A5E09C3659F)
]
interface IMFClockStateSink : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall OnClockStart (
    [in] LONGLONG hnsSystemTime,
    [in] LONGLONG llClockStartOffset
  );
  HRESULT __stdcall OnClockStop (
    [in] LONGLONG hnsSystemTime
  );
  HRESULT __stdcall OnClockPause (
    [in] LONGLONG hnsSystemTime
  );
  HRESULT __stdcall OnClockRestart (
    [in] LONGLONG hnsSystemTime
  );
  HRESULT __stdcall OnClockSetRate (
    [in] LONGLONG hnsSystemTime,
    [in] float flRate
  );
};
[
  uuid(B99F381F-A8F9-47A2-A5AF-CA3A225A3890)
]
interface IMFVideoMediaType : IMFMediaType
{
  [id(1610809344)]
  struct _MFVIDEOFORMAT * __stdcall GetVideoFormat (void);
  HRESULT __stdcall GetVideoRepresentation (
    [in] struct GUID guidRepresentation,
    [out] void *ppvRepresentation,
    [in] long lStride
  );
};
[
  uuid(44AE0FA8-EA31-4109-8D2E-4CAE4997C555)
]
interface IMFMediaType : IMFAttributes
{
  [id(1610743808)]
  HRESULT __stdcall GetMajorType (
    [out] struct GUID *pguidMajorType
  );
  HRESULT __stdcall IsCompressedFormat (
    [out] long *pfCompressed
  );
  HRESULT __stdcall IsEqual (
    [in] interface IMFMediaType *pIMediaType,
    [out] UINT *pdwFlags
  );
  HRESULT __stdcall GetRepresentation (
    [in] struct GUID guidRepresentation,
    [out] void *ppvRepresentation
  );
  HRESULT __stdcall FreeRepresentation (
    [in] struct GUID guidRepresentation,
    [in] void *pvRepresentation
  );
};
[
  uuid(2CD2D921-C447-44A7-A13C-4ADABFC247E3)
]
interface IMFAttributes : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetItem (
    struct GUID *guidKey,
    [in out] struct tag_inner_PROPVARIANT *pValue
  );
  HRESULT __stdcall GetItemType (
    struct GUID *guidKey,
    [out] enum _MF_ATTRIBUTE_TYPE *pType
  );
  HRESULT __stdcall CompareItem (
    struct GUID *guidKey,
    struct tag_inner_PROPVARIANT *Value,
    [out] long *pbResult
  );
  HRESULT __stdcall Compare (
    interface IMFAttributes *pTheirs,
    enum _MF_ATTRIBUTES_MATCH_TYPE MatchType,
    [out] long *pbResult
  );
  HRESULT __stdcall GetUINT32 (
    struct GUID *guidKey,
    [out] unsigned int *punValue
  );
  HRESULT __stdcall GetUINT64 (
    struct GUID *guidKey,
    [out] ULONGLONG *punValue
  );
  HRESULT __stdcall GetDouble (
    struct GUID *guidKey,
    [out] double *pfValue
  );
  HRESULT __stdcall GetGuid (
    struct GUID *guidKey,
    [out] struct GUID *pguidValue
  );
  HRESULT __stdcall GetStringLength (
    struct GUID *guidKey,
    [out] unsigned int *pcchLength
  );
  HRESULT __stdcall GetString (
    struct GUID *guidKey,
    [out] LPWSTR pwszValue,
    unsigned int cchBufSize,
    [in out] unsigned int *pcchLength
  );
  HRESULT __stdcall GetAllocatedString (
    struct GUID *guidKey,
    [out] LPWSTR ppwszValue,
    [out] unsigned int *pcchLength
  );
  HRESULT __stdcall GetBlobSize (
    struct GUID *guidKey,
    [out] unsigned int *pcbBlobSize
  );
  HRESULT __stdcall GetBlob (
    struct GUID *guidKey,
    [out] UCHAR *pBuf,
    unsigned int cbBufSize,
    [in out] unsigned int *pcbBlobSize
  );
  HRESULT __stdcall GetAllocatedBlob (
    struct GUID *guidKey,
    [out] UCHAR *ppBuf,
    [out] unsigned int *pcbSize
  );
  HRESULT __stdcall GetUnknown (
    struct GUID *guidKey,
    struct GUID *riid,
    [out] void *ppv
  );
  HRESULT __stdcall SetItem (
    struct GUID *guidKey,
    struct tag_inner_PROPVARIANT *Value
  );
  HRESULT __stdcall DeleteItem (
    struct GUID *guidKey
  );
  HRESULT __stdcall DeleteAllItems (void);
  HRESULT __stdcall SetUINT32 (
    struct GUID *guidKey,
    unsigned int unValue
  );
  HRESULT __stdcall SetUINT64 (
    struct GUID *guidKey,
    ULONGLONG unValue
  );
  HRESULT __stdcall SetDouble (
    struct GUID *guidKey,
    double fValue
  );
  HRESULT __stdcall SetGUID (
    struct GUID *guidKey,
    struct GUID *guidValue
  );
  HRESULT __stdcall SetString (
    struct GUID *guidKey,
    [in] LPWSTR wszValue
  );
  HRESULT __stdcall SetBlob (
    struct GUID *guidKey,
    [in] UCHAR *pBuf,
    unsigned int cbBufSize
  );
  HRESULT __stdcall SetUnknown (
    struct GUID *guidKey,
    [in] IUnknown * pUnknown
  );
  HRESULT __stdcall LockStore (void);
  HRESULT __stdcall UnlockStore (void);
  HRESULT __stdcall GetCount (
    [out] unsigned int *pcItems
  );
  HRESULT __stdcall GetItemByIndex (
    unsigned int unIndex,
    [out] struct GUID *pguidKey,
    [in out] struct tag_inner_PROPVARIANT *pValue
  );
  HRESULT __stdcall CopyAllItems (
    [in] interface IMFAttributes *pDest
  );
};
[
  uuid(0000000B-0000-0000-C000-000000000046)
]
interface IStorage : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall CreateStream (
    [in] LPWSTR pwcsName,
    [in] UINT grfMode,
    [in] UINT reserved1,
    [in] UINT reserved2,
    [out] interface IStream **ppstm
  );
  HRESULT __stdcall RemoteOpenStream (
    [in] LPWSTR pwcsName,
    [in] UINT cbReserved1,
    [in] UCHAR *reserved1,
    [in] UINT grfMode,
    [in] UINT reserved2,
    [out] interface IStream **ppstm
  );
  HRESULT __stdcall CreateStorage (
    [in] LPWSTR pwcsName,
    [in] UINT grfMode,
    [in] UINT reserved1,
    [in] UINT reserved2,
    [out] interface IStorage **ppstg
  );
  HRESULT __stdcall OpenStorage (
    [in] LPWSTR pwcsName,
    [in] interface IStorage *pstgPriority,
    [in] UINT grfMode,
    [in] wireSNB snbExclude,
    [in] UINT reserved,
    [out] interface IStorage **ppstg
  );
  HRESULT __stdcall RemoteCopyTo (
    [in] UINT ciidExclude,
    [in] struct GUID *rgiidExclude,
    [in] wireSNB snbExclude,
    [in] interface IStorage *pstgDest
  );
  HRESULT __stdcall MoveElementTo (
    [in] LPWSTR pwcsName,
    [in] interface IStorage *pstgDest,
    [in] LPWSTR pwcsNewName,
    [in] UINT grfFlags
  );
  HRESULT __stdcall Commit (
    [in] UINT grfCommitFlags
  );
  HRESULT __stdcall Revert (void);
  HRESULT __stdcall RemoteEnumElements (
    [in] UINT reserved1,
    [in] UINT cbReserved2,
    [in] UCHAR *reserved2,
    [in] UINT reserved3,
    [out] interface IEnumSTATSTG **ppenum
  );
  HRESULT __stdcall DestroyElement (
    [in] LPWSTR pwcsName
  );
  HRESULT __stdcall RenameElement (
    [in] LPWSTR pwcsOldName,
    [in] LPWSTR pwcsNewName
  );
  HRESULT __stdcall SetElementTimes (
    [in] LPWSTR pwcsName,
    [in] struct _FILETIME *pctime,
    [in] struct _FILETIME *patime,
    [in] struct _FILETIME *pmtime
  );
  HRESULT __stdcall SetClass (
    [in] struct GUID *Clsid
  );
  HRESULT __stdcall SetStateBits (
    [in] UINT grfStateBits,
    [in] UINT grfMask
  );
  HRESULT __stdcall Stat (
    [out] struct tagSTATSTG *pstatstg,
    [in] UINT grfStatFlag
  );
};
[
  uuid(0000000D-0000-0000-C000-000000000046)
]
interface IEnumSTATSTG : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] struct tagSTATSTG *rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumSTATSTG **ppenum
  );
};
[
  uuid(0000002F-0000-0000-C000-000000000046)
]
interface IRecordInfo : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RecordInit (
    [out] void *pvNew
  );
  HRESULT __stdcall RecordClear (
    [in] void *pvExisting
  );
  HRESULT __stdcall RecordCopy (
    [in] void *pvExisting,
    [out] void *pvNew
  );
  HRESULT __stdcall GetGuid (
    [out] struct GUID *pGuid
  );
  HRESULT __stdcall GetName (
    [out] BSTR *pbstrName
  );
  HRESULT __stdcall GetSize (
    [out] UINT *pcbSize
  );
  HRESULT __stdcall GetTypeInfo (
    [out] interface ITypeInfo **ppTypeInfo
  );
  HRESULT __stdcall GetField (
    [in] void *pvData,
    [in] LPWSTR szFieldName,
    [out] VARIANT *pvarField
  );
  HRESULT __stdcall GetFieldNoCopy (
    [in] void *pvData,
    [in] LPWSTR szFieldName,
    [out] VARIANT *pvarField,
    [out] void *ppvDataCArray
  );
  HRESULT __stdcall PutField (
    [in] UINT wFlags,
    [in out] void *pvData,
    [in] LPWSTR szFieldName,
    [in] VARIANT *pvarField
  );
  HRESULT __stdcall PutFieldNoCopy (
    [in] UINT wFlags,
    [in out] void *pvData,
    [in] LPWSTR szFieldName,
    [in] VARIANT *pvarField
  );
  HRESULT __stdcall GetFieldNames (
    [in out] UINT *pcNames,
    [out] BSTR *rgBstrNames
  );
  long __stdcall IsMatchingType (
    [in] interface IRecordInfo *pRecordInfo
  );
  void * __stdcall RecordCreate (void);
  HRESULT __stdcall RecordCreateCopy (
    [in] void *pvSource,
    [out] void *ppvDest
  );
  HRESULT __stdcall RecordDestroy (
    [in] void *pvRecord
  );
};
[
  uuid(00020401-0000-0000-C000-000000000046)
]
interface ITypeInfo : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteGetTypeAttr (
    [out] struct tagTYPEATTR **ppTypeAttr,
    [out] DWORD *pDummy
  );
  HRESULT __stdcall GetTypeComp (
    [out] interface ITypeComp **ppTComp
  );
  HRESULT __stdcall RemoteGetFuncDesc (
    [in] unsigned int Index,
    [out] struct tagFUNCDESC **ppFuncDesc,
    [out] DWORD *pDummy
  );
  HRESULT __stdcall RemoteGetVarDesc (
    [in] unsigned int Index,
    [out] struct tagVARDESC **ppVarDesc,
    [out] DWORD *pDummy
  );
  HRESULT __stdcall RemoteGetNames (
    [in] long memid,
    [out] BSTR *rgBstrNames,
    [in] unsigned int cMaxNames,
    [out] unsigned int *pcNames
  );
  HRESULT __stdcall GetRefTypeOfImplType (
    [in] unsigned int Index,
    [out] UINT *pRefType
  );
  HRESULT __stdcall GetImplTypeFlags (
    [in] unsigned int Index,
    [out] int *pImplTypeFlags
  );
  HRESULT __stdcall LocalGetIDsOfNames (void);
  HRESULT __stdcall LocalInvoke (void);
  HRESULT __stdcall RemoteGetDocumentation (
    [in] long memid,
    [in] UINT refPtrFlags,
    [out] BSTR *pbstrName,
    [out] BSTR *pBstrDocString,
    [out] UINT *pdwHelpContext,
    [out] BSTR *pBstrHelpFile
  );
  HRESULT __stdcall RemoteGetDllEntry (
    [in] long memid,
    [in] enum tagINVOKEKIND invkind,
    [in] UINT refPtrFlags,
    [out] BSTR *pBstrDllName,
    [out] BSTR *pbstrName,
    [out] USHORT *pwOrdinal
  );
  HRESULT __stdcall GetRefTypeInfo (
    [in] UINT hreftype,
    [out] interface ITypeInfo **ppTInfo
  );
  HRESULT __stdcall LocalAddressOfMember (void);
  HRESULT __stdcall RemoteCreateInstance (
    [in] struct GUID *riid,
    [out] IUnknown **ppvObj
  );
  HRESULT __stdcall GetMops (
    [in] long memid,
    [out] BSTR *pBstrMops
  );
  HRESULT __stdcall RemoteGetContainingTypeLib (
    [out] interface ITypeLib **ppTLib,
    [out] unsigned int *pIndex
  );
  HRESULT __stdcall LocalReleaseTypeAttr (void);
  HRESULT __stdcall LocalReleaseFuncDesc (void);
  HRESULT __stdcall LocalReleaseVarDesc (void);
};
[
  uuid(00020403-0000-0000-C000-000000000046)
]
interface ITypeComp : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteBind (
    [in] LPWSTR szName,
    [in] UINT lHashVal,
    [in] USHORT wFlags,
    [out] interface ITypeInfo **ppTInfo,
    [out] enum tagDESCKIND *pDescKind,
    [out] struct tagFUNCDESC **ppFuncDesc,
    [out] struct tagVARDESC **ppVarDesc,
    [out] interface ITypeComp **ppTypeComp,
    [out] DWORD *pDummy
  );
  HRESULT __stdcall RemoteBindType (
    [in] LPWSTR szName,
    [in] UINT lHashVal,
    [out] interface ITypeInfo **ppTInfo
  );
};
[
  uuid(00020402-0000-0000-C000-000000000046)
]
interface ITypeLib : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteGetTypeInfoCount (
    [out] unsigned int *pcTInfo
  );
  HRESULT __stdcall GetTypeInfo (
    [in] unsigned int Index,
    [out] interface ITypeInfo **ppTInfo
  );
  HRESULT __stdcall GetTypeInfoType (
    [in] unsigned int Index,
    [out] enum tagTYPEKIND *pTKind
  );
  HRESULT __stdcall GetTypeInfoOfGuid (
    [in] struct GUID *Guid,
    [out] interface ITypeInfo **ppTInfo
  );
  HRESULT __stdcall RemoteGetLibAttr (
    [out] struct tagTLIBATTR **ppTLibAttr,
    [out] DWORD *pDummy
  );
  HRESULT __stdcall GetTypeComp (
    [out] interface ITypeComp **ppTComp
  );
  HRESULT __stdcall RemoteGetDocumentation (
    [in] int Index,
    [in] UINT refPtrFlags,
    [out] BSTR *pbstrName,
    [out] BSTR *pBstrDocString,
    [out] UINT *pdwHelpContext,
    [out] BSTR *pBstrHelpFile
  );
  HRESULT __stdcall RemoteIsName (
    [in] LPWSTR szNameBuf,
    [in] UINT lHashVal,
    [out] long *pfName,
    [out] BSTR *pBstrLibName
  );
  HRESULT __stdcall RemoteFindName (
    [in] LPWSTR szNameBuf,
    [in] UINT lHashVal,
    [out] interface ITypeInfo **ppTInfo,
    [out] long *rgMemId,
    [in out] USHORT *pcFound,
    [out] BSTR *pBstrLibName
  );
  HRESULT __stdcall LocalReleaseTLibAttr (void);
};
[
  uuid(349ABB10-883C-4F22-8714-CECAEEE45D62),
  helpstring("MS Video Control EVR Event Interface"),
  hidden,
  oleautomation,
  dispatchable
]
interface IMSVidEVREvent : IMSVidOutputDeviceEvent
{
  [id(220)]
  HRESULT __stdcall OnUserEvent (
    [in] long lEventCode
  );
};
[
  uuid(37B03541-A4C8-11D2-B634-00C04F79498E),
  helpstring("MS Video Control Audio Renderer Device Event Interface"),
  hidden,
  oleautomation,
  dispatchable
]
interface IMSVidAudioRendererEvent : IMSVidOutputDeviceEvent
{
};
[
  uuid(6B5A28F3-47F1-4092-B168-60CABEC08F1C),
  helpstring("MS Video Control Generic Sink Output Device 2"),
  hidden,
  oleautomation,
  dispatchable
]
interface IMSVidGenericSink2 : IMSVidGenericSink
{
  [id(199)]
  HRESULT __stdcall AddFilter (
    BSTR bstrName
  );
  [id(216)]
  HRESULT __stdcall ResetFilterList (void);
};
[
  uuid(6C29B41D-455B-4C33-963A-0D28E5E555EA),
  helpstring("MS Video Control Generic Sink Output Device"),
  hidden,
  oleautomation,
  dispatchable
]
interface IMSVidGenericSink : IMSVidOutputDevice
{
  [id(191)]
  HRESULT __stdcall SetSinkFilter (
    BSTR bstrName
  );
  [propget]
  HRESULT __stdcall SinkStreams (
    [out retval] enum MSVidSinkStreams *pStreams
  );
  [id(192), propput]
  HRESULT __stdcall SinkStreams (
    [in] enum MSVidSinkStreams argNo1
  );
};
[
  uuid(1B01DCB0-DAF0-412C-A5D1-590C7F62E2B8),
  helpstring("MS Video Control Stream Buffer Sink 4 Device Event Interface"),
  hidden,
  oleautomation,
  dispatchable
]
interface IMSVidStreamBufferSinkEvent4 : IMSVidStreamBufferSinkEvent3
{
  [id(57)]
  HRESULT __stdcall WriteFailureClear (void);
};
[
  uuid(735AD8D5-C259-48E9-81E7-D27953665B23),
  helpstring("MS Video Control Stream Buffer Sink 3 Device Event Interface"),
  hidden,
  oleautomation,
  dispatchable
]
interface IMSVidStreamBufferSinkEvent3 : IMSVidStreamBufferSinkEvent2
{
  [id(42)]
  HRESULT __stdcall LicenseChange (
    [in] long dwProt
  );
};
[
  uuid(3D7A5166-72D7-484B-A06F-286187B80CA1),
  helpstring("MS Video Control Stream Buffer Sink 2 Device Event Interface"),
  hidden,
  oleautomation,
  dispatchable
]
interface IMSVidStreamBufferSinkEvent2 : IMSVidStreamBufferSinkEvent
{
  [id(39)]
  HRESULT __stdcall EncryptionOn (void);
  HRESULT __stdcall EncryptionOff (void);
};
[
  uuid(F798A36B-B05B-4BBE-9703-EAEA7D61CD51),
  helpstring("MS Video Control Stream Buffer Sink Output Device Event Interface"),
  hidden,
  oleautomation,
  dispatchable
]
interface IMSVidStreamBufferSinkEvent : IMSVidOutputDeviceEvent
{
  [id(27)]
  HRESULT __stdcall CertificateFailure (void);
  HRESULT __stdcall CertificateSuccess (void);
  [id(34)]
  HRESULT __stdcall WriteFailure (void);
};
[
  uuid(50CE8A7D-9C28-4DA8-9042-CDFA7116F979),
  helpstring("MS Video Control Stream Buffer Source Device Event Interface"),
  hidden,
  oleautomation,
  dispatchable
]
interface IMSVidStreamBufferSourceEvent : IMSVidFilePlaybackEvent
{
  [id(29)]
  HRESULT __stdcall CertificateFailure (void);
  HRESULT __stdcall CertificateSuccess (void);
  HRESULT __stdcall RatingsBlocked (void);
  HRESULT __stdcall RatingsUnblocked (void);
  HRESULT __stdcall RatingsChanged (void);
  [id(35)]
  HRESULT __stdcall TimeHole (
    [in] long StreamOffsetMS,
    [in] long SizeMS
  );
  HRESULT __stdcall StaleDataRead (void);
  HRESULT __stdcall ContentBecomingStale (void);
  HRESULT __stdcall StaleFileDeleted (void);
};
[
  uuid(7AEF50CE-8E22-4BA8-BC06-A92A458B4EF2),
  helpstring("MS Video Control Stream Buffer Source Device Event2 Interface"),
  hidden,
  oleautomation,
  dispatchable
]
interface IMSVidStreamBufferSourceEvent2 : IMSVidStreamBufferSourceEvent
{
  [id(41)]
  HRESULT __stdcall RateChange (
    [in] double qwNewRate,
    [in] double qwOldRate
  );
};
[
  uuid(CEABD6AB-9B90-4570-ADF1-3CE76E00A763),
  helpstring("MS Video Control Stream Buffer Source Device Event3 Interface"),
  hidden,
  oleautomation,
  dispatchable
]
interface IMSVidStreamBufferSourceEvent3 : IMSVidStreamBufferSourceEvent2
{
  [id(46)]
  HRESULT __stdcall BroadcastEvent (
    [in] BSTR Guid
  );
  HRESULT __stdcall BroadcastEventEx (
    [in] BSTR Guid,
    [in] UINT Param1,
    [in] UINT Param2,
    [in] UINT Param3,
    [in] UINT Param4
  );
  [id(43)]
  HRESULT __stdcall COPPBlocked (void);
  HRESULT __stdcall COPPUnblocked (void);
  [id(48)]
  HRESULT __stdcall ContentPrimarilyAudio (void);
};
[
  uuid(49C771F9-41B2-4CF7-9F9A-A313A8F6027E),
  helpstring("MS Video Control Stream Buffer V2 Source Device Event Interface"),
  hidden,
  oleautomation,
  dispatchable
]
interface IMSVidStreamBufferV2SourceEvent : IMSVidFilePlaybackEvent
{
  [id(33)]
  HRESULT __stdcall RatingsChanged (void);
  [id(35)]
  HRESULT __stdcall TimeHole (
    [in] long StreamOffsetMS,
    [in] long SizeMS
  );
  HRESULT __stdcall StaleDataRead (void);
  HRESULT __stdcall ContentBecomingStale (void);
  HRESULT __stdcall StaleFileDeleted (void);
  [id(41)]
  HRESULT __stdcall RateChange (
    [in] double qwNewRate,
    [in] double qwOldRate
  );
  [id(46)]
  HRESULT __stdcall BroadcastEvent (
    [in] BSTR Guid
  );
  HRESULT __stdcall BroadcastEventEx (
    [in] BSTR Guid,
    [in] UINT Param1,
    [in] UINT Param2,
    [in] UINT Param3,
    [in] UINT Param4
  );
  HRESULT __stdcall ContentPrimarilyAudio (void);
};
[
  uuid(6DB2317D-3B23-41EC-BA4B-701F407EAF3A),
  helpstring("MS Video Control XDS Feature Event Interface"),
  hidden,
  oleautomation,
  dispatchable
]
interface IMSVidXDSEvent : IMSVidFeatureEvent
{
  [id(33)]
  HRESULT __stdcall RatingChange (
    [in] enum EnTvRat_System PrevRatingSystem,
    [in] enum EnTvRat_GenericLevel PrevLevel,
    [in] enum BfEnTvRat_GenericAttributes PrevAttributes,
    [in] enum EnTvRat_System NewRatingSystem,
    [in] enum EnTvRat_GenericLevel NewLevel,
    [in] enum BfEnTvRat_GenericAttributes NewAttributes
  );
};
[
  uuid(3DD2903C-E0AA-11D2-B63A-00C04F79498E),
  helpstring("MS Video Control Feature Event Interface"),
  oleautomation,
  dispatchable
]
interface IMSVidFeatureEvent : IMSVidDeviceEvent
{
};
[
  uuid(1C15D483-911D-11D2-B632-00C04F79498E),
  helpstring("DShow Graph Segment Composition Interface")
]
interface IMSVidCompositionSegment : IMSVidGraphSegment
{
  [id(1610809344)]
  HRESULT __stdcall Compose (
    [in] interface IMSVidGraphSegment *upstream,
    [in] interface IMSVidGraphSegment *downstream
  );
  [propget]
  HRESULT __stdcall Up (
    [out] interface IMSVidGraphSegment **upstream
  );
  [propget]
  HRESULT __stdcall Down (
    [out] interface IMSVidGraphSegment **downstream
  );
};

