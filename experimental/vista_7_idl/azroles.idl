/* Automated generated idl file <azroleslib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Structure forward declarations.  */
struct _RemotableHandle;

/* Union record forward declarations.  */
union __MIDL_IWinTypes_0009;

/* Union record forward declarations.  */
dispinterface IAzAuthorizationStore;
dispinterface IAzApplications;
dispinterface IAzApplication;
dispinterface IAzScopes;
dispinterface IAzScope;
dispinterface IAzApplicationGroups;
dispinterface IAzApplicationGroup;
dispinterface IAzRoles;
dispinterface IAzRole;
dispinterface IAzTasks;
dispinterface IAzTask;
dispinterface IAzOperations;
dispinterface IAzOperation;
dispinterface IAzClientContext;
dispinterface IAzAuthorizationStore2;
dispinterface IAzApplication2;
dispinterface IAzClientContext2;
dispinterface IAzAuthorizationStore3;
dispinterface IAzApplication3;
dispinterface IAzScope2;
dispinterface IAzRoleDefinitions;
dispinterface IAzRoleDefinition;
dispinterface IAzRoleAssignments;
dispinterface IAzRoleAssignment;
dispinterface IAzOperation2;
dispinterface IAzTask2;
dispinterface IAzApplicationGroup2;
dispinterface IAzClientContext3;
dispinterface IAzBizRuleParameters;
dispinterface IAzBizRuleInterfaces;
dispinterface IAzBizRuleContext;
dispinterface IAzPrincipalLocator;
dispinterface IAzNameResolver;
dispinterface IAzObjectPicker;

/* Union record forward declarations.  */
coclass AzAuthorizationStore;
coclass AzBizRuleContext;
coclass AzPrincipalLocator;

/* Enumeration declarations.  */
enum tagAZ_PROP_CONSTANTS
{
  AZ_PROP_NAME = (int) 201326593,
  AZ_PROP_DESCRIPTION = (int) 201326594,
  AZ_PROP_WRITABLE = (int) 201326595,
  AZ_PROP_APPLICATION_DATA = (int) 201326596,
  AZ_PROP_CHILD_CREATE = (int) 201326597,
  AZ_MAX_APPLICATION_NAME_LENGTH = (int) 201327104,
  AZ_MAX_OPERATION_NAME_LENGTH = (int) 201326656,
  AZ_MAX_TASK_NAME_LENGTH = (int) 201326656,
  AZ_MAX_SCOPE_NAME_LENGTH = (int) 201392128,
  AZ_MAX_GROUP_NAME_LENGTH = (int) 201326656,
  AZ_MAX_ROLE_NAME_LENGTH = (int) 201326656,
  AZ_MAX_NAME_LENGTH = (int) 201392128,
  AZ_MAX_DESCRIPTION_LENGTH = (int) 201327616,
  AZ_MAX_APPLICATION_DATA_LENGTH = (int) 201330688,
  AZ_SUBMIT_FLAG_ABORT = (int) 201326593,
  AZ_SUBMIT_FLAG_FLUSH = (int) 201326594,
  AZ_MAX_POLICY_URL_LENGTH = (int) 201392128,
  AZ_AZSTORE_FLAG_CREATE = (int) 201326593,
  AZ_AZSTORE_FLAG_MANAGE_STORE_ONLY = (int) 201326594,
  AZ_AZSTORE_FLAG_BATCH_UPDATE = (int) 201326596,
  AZ_AZSTORE_FLAG_AUDIT_IS_CRITICAL = (int) 201326600,
  AZ_AZSTORE_FORCE_APPLICATION_CLOSE = (int) 201326608,
  AZ_AZSTORE_NT6_FUNCTION_LEVEL = (int) 201326624,
  AZ_AZSTORE_FLAG_MANAGE_ONLY_PASSIVE_SUBMIT = (int) 201359360,
  AZ_PROP_AZSTORE_DOMAIN_TIMEOUT = (int) 201326692,
  AZ_AZSTORE_DEFAULT_DOMAIN_TIMEOUT = (int) 201341592,
  AZ_PROP_AZSTORE_SCRIPT_ENGINE_TIMEOUT = (int) 201326693,
  AZ_AZSTORE_MIN_DOMAIN_TIMEOUT = (int) 201327092,
  AZ_AZSTORE_MIN_SCRIPT_ENGINE_TIMEOUT = (int) 201331592,
  AZ_AZSTORE_DEFAULT_SCRIPT_ENGINE_TIMEOUT = (int) 201371592,
  AZ_PROP_AZSTORE_MAX_SCRIPT_ENGINES = (int) 201326694,
  AZ_AZSTORE_DEFAULT_MAX_SCRIPT_ENGINES = (int) 201326712,
  AZ_PROP_AZSTORE_MAJOR_VERSION = (int) 201326695,
  AZ_PROP_AZSTORE_MINOR_VERSION = (int) 201326696,
  AZ_PROP_AZSTORE_TARGET_MACHINE = (int) 201326697,
  AZ_PROP_AZTORE_IS_ADAM_INSTANCE = (int) 201326698,
  AZ_PROP_OPERATION_ID = (int) 201326792,
  AZ_PROP_TASK_OPERATIONS = (int) 201326892,
  AZ_PROP_TASK_BIZRULE = (int) 201326893,
  AZ_PROP_TASK_BIZRULE_LANGUAGE = (int) 201326894,
  AZ_PROP_TASK_TASKS = (int) 201326895,
  AZ_PROP_TASK_BIZRULE_IMPORTED_PATH = (int) 201326896,
  AZ_PROP_TASK_IS_ROLE_DEFINITION = (int) 201326897,
  AZ_MAX_TASK_BIZRULE_LENGTH = (int) 201392128,
  AZ_MAX_TASK_BIZRULE_LANGUAGE_LENGTH = (int) 201326656,
  AZ_MAX_TASK_BIZRULE_IMPORTED_PATH_LENGTH = (int) 201327104,
  AZ_MAX_BIZRULE_STRING = (int) 201392128,
  AZ_PROP_GROUP_TYPE = (int) 201326992,
  AZ_GROUPTYPE_LDAP_QUERY = (int) 201326593,
  AZ_GROUPTYPE_BASIC = (int) 201326594,
  AZ_GROUPTYPE_BIZRULE = (int) 201326595,
  AZ_PROP_GROUP_APP_MEMBERS = (int) 201326993,
  AZ_PROP_GROUP_APP_NON_MEMBERS = (int) 201326994,
  AZ_PROP_GROUP_LDAP_QUERY = (int) 201326995,
  AZ_MAX_GROUP_LDAP_QUERY_LENGTH = (int) 201330688,
  AZ_PROP_GROUP_MEMBERS = (int) 201326996,
  AZ_PROP_GROUP_NON_MEMBERS = (int) 201326997,
  AZ_PROP_GROUP_MEMBERS_NAME = (int) 201326998,
  AZ_PROP_GROUP_NON_MEMBERS_NAME = (int) 201326999,
  AZ_PROP_GROUP_BIZRULE = (int) 201327000,
  AZ_PROP_GROUP_BIZRULE_LANGUAGE = (int) 201327001,
  AZ_PROP_GROUP_BIZRULE_IMPORTED_PATH = (int) 201327002,
  AZ_MAX_GROUP_BIZRULE_LENGTH = (int) 201392128,
  AZ_MAX_GROUP_BIZRULE_LANGUAGE_LENGTH = (int) 201326656,
  AZ_MAX_GROUP_BIZRULE_IMPORTED_PATH_LENGTH = (int) 201327104,
  AZ_PROP_ROLE_APP_MEMBERS = (int) 201327092,
  AZ_PROP_ROLE_MEMBERS = (int) 201327093,
  AZ_PROP_ROLE_OPERATIONS = (int) 201327094,
  AZ_PROP_ROLE_TASKS = (int) 201327096,
  AZ_PROP_ROLE_MEMBERS_NAME = (int) 201327097,
  AZ_PROP_SCOPE_BIZRULES_WRITABLE = (int) 201327192,
  AZ_PROP_SCOPE_CAN_BE_DELEGATED = (int) 201327193,
  AZ_PROP_CLIENT_CONTEXT_USER_DN = (int) 201327292,
  AZ_PROP_CLIENT_CONTEXT_USER_SAM_COMPAT = (int) 201327293,
  AZ_PROP_CLIENT_CONTEXT_USER_DISPLAY = (int) 201327294,
  AZ_PROP_CLIENT_CONTEXT_USER_GUID = (int) 201327295,
  AZ_PROP_CLIENT_CONTEXT_USER_CANONICAL = (int) 201327296,
  AZ_PROP_CLIENT_CONTEXT_USER_UPN = (int) 201327297,
  AZ_PROP_CLIENT_CONTEXT_USER_DNS_SAM_COMPAT = (int) 201327299,
  AZ_PROP_CLIENT_CONTEXT_ROLE_FOR_ACCESS_CHECK = (int) 201327300,
  AZ_PROP_CLIENT_CONTEXT_LDAP_QUERY_DN = (int) 201327301,
  AZ_PROP_APPLICATION_AUTHZ_INTERFACE_CLSID = (int) 201327392,
  AZ_PROP_APPLICATION_VERSION = (int) 201327393,
  AZ_MAX_APPLICATION_VERSION_LENGTH = (int) 201327104,
  AZ_PROP_APPLICATION_NAME = (int) 201327394,
  AZ_PROP_APPLICATION_BIZRULE_ENABLED = (int) 201327395,
  AZ_PROP_APPLY_STORE_SACL = (int) 201327492,
  AZ_PROP_GENERATE_AUDITS = (int) 201327493,
  AZ_PROP_POLICY_ADMINS = (int) 201327494,
  AZ_PROP_POLICY_READERS = (int) 201327495,
  AZ_PROP_DELEGATED_POLICY_USERS = (int) 201327496,
  AZ_PROP_POLICY_ADMINS_NAME = (int) 201327497,
  AZ_PROP_POLICY_READERS_NAME = (int) 201327498,
  AZ_PROP_DELEGATED_POLICY_USERS_NAME = (int) 201327499,
  AZ_CLIENT_CONTEXT_SKIP_GROUP = (int) 201326593,
  AZ_CLIENT_CONTEXT_SKIP_LDAP_QUERY = (int) 201326593,
  AZ_CLIENT_CONTEXT_GET_GROUP_RECURSIVE = (int) 201326594,
  AZ_CLIENT_CONTEXT_GET_GROUPS_STORE_LEVEL_ONLY = (int) 201326594
};

/* Structure/union declarations.  */
struct _RemotableHandle
{
  long fContext;
  union __MIDL_IWinTypes_0009 u;
};
union __MIDL_IWinTypes_0009
{
  long hInproc;
  long hRemote;
};

/* Type definitions.  */
typedef struct _RemotableHandle * wireHWND;

[
  uuid(11A8B8EE-BF30-409A-8EF7-3A143EF70332),
  version(1.0),
  helpstring("azroles 1.0 Type Library")
]
library azroleslib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(B2BCFF59-A757-4B0B-A1BC-EA69981DA69E),
     helpstring("AzAuthorizationStore Class"),
     cancreate
   ]
   coclass AzAuthorizationStore
   {
     dispinterface IAzAuthorizationStore;
     dispinterface IAzAuthorizationStore2;
     dispinterface IAzAuthorizationStore3;
   };
   [
     uuid(5C2DC96F-8D51-434B-B33C-379BCCAE77C3),
     helpstring("AzBizRuleContext Class"),
     cancreate
   ]
   coclass AzBizRuleContext
   {
     dispinterface IAzBizRuleContext;
   };
   [
     uuid(483AFB5D-70DF-4E16-ABDC-A1DE4D015A3E),
     helpstring("AzPrincipalLocator Class"),
     cancreate
   ]
   coclass AzPrincipalLocator
   {
     dispinterface IAzPrincipalLocator;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(EDBD9CA9-9B82-4F6A-9E8B-98301E450F14),
     helpstring("IAzAuthorizationStore Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzAuthorizationStore : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *pbstrDescription
     );
     [id(1610743808), propput]
     HRESULT __stdcall Description (
       [in] BSTR argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall ApplicationData (
       [out retval] BSTR *pbstrApplicationData
     );
     [id(1610743810), propput]
     HRESULT __stdcall ApplicationData (
       [in] BSTR argNo1
     );
     [id(1610743812), propget]
     HRESULT __stdcall DomainTimeout (
       [out retval] long *plProp
     );
     [id(1610743812), propput]
     HRESULT __stdcall DomainTimeout (
       [in] long argNo1
     );
     [id(1610743814), propget]
     HRESULT __stdcall ScriptEngineTimeout (
       [out retval] long *plProp
     );
     [id(1610743814), propput]
     HRESULT __stdcall ScriptEngineTimeout (
       [in] long argNo1
     );
     [id(1610743816), propget]
     HRESULT __stdcall MaxScriptEngines (
       [out retval] long *plProp
     );
     [id(1610743816), propput]
     HRESULT __stdcall MaxScriptEngines (
       [in] long argNo1
     );
     [id(1610743818), propget]
     HRESULT __stdcall GenerateAudits (
       [out retval] long *pbProp
     );
     [id(1610743818), propput]
     HRESULT __stdcall GenerateAudits (
       [in] long argNo1
     );
     [id(1610743820), propget]
     HRESULT __stdcall Writable (
       [out retval] long *pfProp
     );
     HRESULT __stdcall GetProperty (
       [in] long lPropId,
       [in opt] VARIANT varReserved,
       [out retval] VARIANT *pvarProp
     );
     HRESULT __stdcall SetProperty (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddPropertyItem (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePropertyItem (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall PolicyAdministrators (
       [out retval] VARIANT *pvarAdmins
     );
     [propget]
     HRESULT __stdcall PolicyReaders (
       [out retval] VARIANT *pvarReaders
     );
     HRESULT __stdcall AddPolicyAdministrator (
       [in] BSTR bstrAdmin,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePolicyAdministrator (
       [in] BSTR bstrAdmin,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddPolicyReader (
       [in] BSTR bstrReader,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePolicyReader (
       [in] BSTR bstrReader,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall Initialize (
       [in] long lFlags,
       [in] BSTR bstrPolicyURL,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall UpdateCache (
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall Delete (
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall Applications (
       [out retval] dispinterface IAzApplications **ppAppCollection
     );
     HRESULT __stdcall OpenApplication (
       [in] BSTR bstrApplicationName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzApplication **ppApplication
     );
     HRESULT __stdcall CreateApplication (
       [in] BSTR bstrApplicationName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzApplication **ppApplication
     );
     HRESULT __stdcall DeleteApplication (
       [in] BSTR bstrApplicationName,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall ApplicationGroups (
       [out retval] dispinterface IAzApplicationGroups **ppGroupCollection
     );
     HRESULT __stdcall CreateApplicationGroup (
       [in] BSTR bstrGroupName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzApplicationGroup **ppGroup
     );
     HRESULT __stdcall OpenApplicationGroup (
       [in] BSTR bstrGroupName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzApplicationGroup **ppGroup
     );
     HRESULT __stdcall DeleteApplicationGroup (
       [in] BSTR bstrGroupName,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall Submit (
       [in opt] long lFlags = (int) 201326592,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall DelegatedPolicyUsers (
       [out retval] VARIANT *pvarDelegatedPolicyUsers
     );
     HRESULT __stdcall AddDelegatedPolicyUser (
       [in] BSTR bstrDelegatedPolicyUser,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeleteDelegatedPolicyUser (
       [in] BSTR bstrDelegatedPolicyUser,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall TargetMachine (
       [out retval] BSTR *pbstrTargetMachine
     );
     [propget]
     HRESULT __stdcall ApplyStoreSacl (
       [out retval] long *pbApplyStoreSacl
     );
     [id(1610743847), propput]
     HRESULT __stdcall ApplyStoreSacl (
       [in] long argNo1
     );
     [id(1610743849), propget]
     HRESULT __stdcall PolicyAdministratorsName (
       [out retval] VARIANT *pvarAdmins
     );
     [propget]
     HRESULT __stdcall PolicyReadersName (
       [out retval] VARIANT *pvarReaders
     );
     HRESULT __stdcall AddPolicyAdministratorName (
       [in] BSTR bstrAdmin,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePolicyAdministratorName (
       [in] BSTR bstrAdmin,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddPolicyReaderName (
       [in] BSTR bstrReader,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePolicyReaderName (
       [in] BSTR bstrReader,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall DelegatedPolicyUsersName (
       [out retval] VARIANT *pvarDelegatedPolicyUsers
     );
     HRESULT __stdcall AddDelegatedPolicyUserName (
       [in] BSTR bstrDelegatedPolicyUser,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeleteDelegatedPolicyUserName (
       [in] BSTR bstrDelegatedPolicyUser,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall CloseApplication (
       [in] BSTR bstrApplicationName,
       [in] long lFlag
     );
   };
   [
     uuid(929B11A9-95C5-4A84-A29A-20AD42C2F16C),
     helpstring("IAzApplications Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzApplications : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long Index,
       [out retval] VARIANT *pvarObtPtr
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppEnumPtr
     );
   };
   [
     uuid(987BC7C7-B813-4D27-BEDE-6BA5AE867E95),
     helpstring("IAzApplication Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzApplication : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstrName
     );
     [id(1610743808), propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *pbstrDescription
     );
     [id(1610743810), propput]
     HRESULT __stdcall Description (
       [in] BSTR argNo1
     );
     [id(1610743812), propget]
     HRESULT __stdcall ApplicationData (
       [out retval] BSTR *pbstrApplicationData
     );
     [id(1610743812), propput]
     HRESULT __stdcall ApplicationData (
       [in] BSTR argNo1
     );
     [id(1610743814), propget]
     HRESULT __stdcall AuthzInterfaceClsid (
       [out retval] BSTR *pbstrProp
     );
     [id(1610743814), propput]
     HRESULT __stdcall AuthzInterfaceClsid (
       [in] BSTR argNo1
     );
     [id(1610743816), propget]
     HRESULT __stdcall Version (
       [out retval] BSTR *pbstrProp
     );
     [id(1610743816), propput]
     HRESULT __stdcall Version (
       [in] BSTR argNo1
     );
     [id(1610743818), propget]
     HRESULT __stdcall GenerateAudits (
       [out retval] long *pbProp
     );
     [id(1610743818), propput]
     HRESULT __stdcall GenerateAudits (
       [in] long argNo1
     );
     [id(1610743820), propget]
     HRESULT __stdcall ApplyStoreSacl (
       [out retval] long *pbProp
     );
     [id(1610743820), propput]
     HRESULT __stdcall ApplyStoreSacl (
       [in] long argNo1
     );
     [id(1610743822), propget]
     HRESULT __stdcall Writable (
       [out retval] long *pfProp
     );
     HRESULT __stdcall GetProperty (
       [in] long lPropId,
       [in opt] VARIANT varReserved,
       [out retval] VARIANT *pvarProp
     );
     HRESULT __stdcall SetProperty (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall PolicyAdministrators (
       [out retval] VARIANT *pvarAdmins
     );
     [propget]
     HRESULT __stdcall PolicyReaders (
       [out retval] VARIANT *pvarReaders
     );
     HRESULT __stdcall AddPolicyAdministrator (
       [in] BSTR bstrAdmin,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePolicyAdministrator (
       [in] BSTR bstrAdmin,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddPolicyReader (
       [in] BSTR bstrReader,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePolicyReader (
       [in] BSTR bstrReader,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall Scopes (
       [out retval] dispinterface IAzScopes **ppScopeCollection
     );
     HRESULT __stdcall OpenScope (
       [in] BSTR bstrScopeName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzScope **ppScope
     );
     HRESULT __stdcall CreateScope (
       [in] BSTR bstrScopeName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzScope **ppScope
     );
     HRESULT __stdcall DeleteScope (
       [in] BSTR bstrScopeName,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall Operations (
       [out retval] dispinterface IAzOperations **ppOperationCollection
     );
     HRESULT __stdcall OpenOperation (
       [in] BSTR bstrOperationName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzOperation **ppOperation
     );
     HRESULT __stdcall CreateOperation (
       [in] BSTR bstrOperationName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzOperation **ppOperation
     );
     HRESULT __stdcall DeleteOperation (
       [in] BSTR bstrOperationName,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall Tasks (
       [out retval] dispinterface IAzTasks **ppTaskCollection
     );
     HRESULT __stdcall OpenTask (
       [in] BSTR bstrTaskName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzTask **ppTask
     );
     HRESULT __stdcall CreateTask (
       [in] BSTR bstrTaskName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzTask **ppTask
     );
     HRESULT __stdcall DeleteTask (
       [in] BSTR bstrTaskName,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall ApplicationGroups (
       [out retval] dispinterface IAzApplicationGroups **ppGroupCollection
     );
     HRESULT __stdcall OpenApplicationGroup (
       [in] BSTR bstrGroupName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzApplicationGroup **ppGroup
     );
     HRESULT __stdcall CreateApplicationGroup (
       [in] BSTR bstrGroupName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzApplicationGroup **ppGroup
     );
     HRESULT __stdcall DeleteApplicationGroup (
       [in] BSTR bstrGroupName,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall Roles (
       [out retval] dispinterface IAzRoles **ppRoleCollection
     );
     HRESULT __stdcall OpenRole (
       [in] BSTR bstrRoleName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzRole **ppRole
     );
     HRESULT __stdcall CreateRole (
       [in] BSTR bstrRoleName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzRole **ppRole
     );
     HRESULT __stdcall DeleteRole (
       [in] BSTR bstrRoleName,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall InitializeClientContextFromToken (
       [in] ULONGLONG ullTokenHandle,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzClientContext **ppClientContext
     );
     HRESULT __stdcall AddPropertyItem (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePropertyItem (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall Submit (
       [in opt] long lFlags = (int) 201326592,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall InitializeClientContextFromName (
       [in] BSTR ClientName,
       [in opt] BSTR DomainName = L"",
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzClientContext **ppClientContext
     );
     [propget]
     HRESULT __stdcall DelegatedPolicyUsers (
       [out retval] VARIANT *pvarDelegatedPolicyUsers
     );
     HRESULT __stdcall AddDelegatedPolicyUser (
       [in] BSTR bstrDelegatedPolicyUser,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeleteDelegatedPolicyUser (
       [in] BSTR bstrDelegatedPolicyUser,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall InitializeClientContextFromStringSid (
       [in] BSTR SidString,
       [in] long lOptions,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzClientContext **ppClientContext
     );
     [propget]
     HRESULT __stdcall PolicyAdministratorsName (
       [out retval] VARIANT *pvarAdmins
     );
     [propget]
     HRESULT __stdcall PolicyReadersName (
       [out retval] VARIANT *pvarReaders
     );
     HRESULT __stdcall AddPolicyAdministratorName (
       [in] BSTR bstrAdmin,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePolicyAdministratorName (
       [in] BSTR bstrAdmin,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddPolicyReaderName (
       [in] BSTR bstrReader,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePolicyReaderName (
       [in] BSTR bstrReader,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall DelegatedPolicyUsersName (
       [out retval] VARIANT *pvarDelegatedPolicyUsers
     );
     HRESULT __stdcall AddDelegatedPolicyUserName (
       [in] BSTR bstrDelegatedPolicyUser,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeleteDelegatedPolicyUserName (
       [in] BSTR bstrDelegatedPolicyUser,
       [in opt] VARIANT varReserved
     );
   };
   [
     uuid(78E14853-9F5E-406D-9B91-6BDBA6973510),
     helpstring("IAzScopes Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzScopes : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long Index,
       [out retval] VARIANT *pvarObtPtr
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppEnumPtr
     );
   };
   [
     uuid(00E52487-E08D-4514-B62E-877D5645F5AB),
     helpstring("IAzScope Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzScope : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstrName
     );
     [id(1610743808), propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *pbstrDescription
     );
     [id(1610743810), propput]
     HRESULT __stdcall Description (
       [in] BSTR argNo1
     );
     [id(1610743812), propget]
     HRESULT __stdcall ApplicationData (
       [out retval] BSTR *pbstrApplicationData
     );
     [id(1610743812), propput]
     HRESULT __stdcall ApplicationData (
       [in] BSTR argNo1
     );
     [id(1610743814), propget]
     HRESULT __stdcall Writable (
       [out retval] long *pfProp
     );
     HRESULT __stdcall GetProperty (
       [in] long lPropId,
       [in opt] VARIANT varReserved,
       [out retval] VARIANT *pvarProp
     );
     HRESULT __stdcall SetProperty (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddPropertyItem (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePropertyItem (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall PolicyAdministrators (
       [out retval] VARIANT *pvarAdmins
     );
     [propget]
     HRESULT __stdcall PolicyReaders (
       [out retval] VARIANT *pvarReaders
     );
     HRESULT __stdcall AddPolicyAdministrator (
       [in] BSTR bstrAdmin,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePolicyAdministrator (
       [in] BSTR bstrAdmin,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddPolicyReader (
       [in] BSTR bstrReader,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePolicyReader (
       [in] BSTR bstrReader,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall ApplicationGroups (
       [out retval] dispinterface IAzApplicationGroups **ppGroupCollection
     );
     HRESULT __stdcall OpenApplicationGroup (
       [in] BSTR bstrGroupName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzApplicationGroup **ppGroup
     );
     HRESULT __stdcall CreateApplicationGroup (
       [in] BSTR bstrGroupName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzApplicationGroup **ppGroup
     );
     HRESULT __stdcall DeleteApplicationGroup (
       [in] BSTR bstrGroupName,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall Roles (
       [out retval] dispinterface IAzRoles **ppRoleCollection
     );
     HRESULT __stdcall OpenRole (
       [in] BSTR bstrRoleName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzRole **ppRole
     );
     HRESULT __stdcall CreateRole (
       [in] BSTR bstrRoleName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzRole **ppRole
     );
     HRESULT __stdcall DeleteRole (
       [in] BSTR bstrRoleName,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall Tasks (
       [out retval] dispinterface IAzTasks **ppTaskCollection
     );
     HRESULT __stdcall OpenTask (
       [in] BSTR bstrTaskName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzTask **ppTask
     );
     HRESULT __stdcall CreateTask (
       [in] BSTR bstrTaskName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzTask **ppTask
     );
     HRESULT __stdcall DeleteTask (
       [in] BSTR bstrTaskName,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall Submit (
       [in opt] long lFlags = (int) 201326592,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall CanBeDelegated (
       [out retval] long *pfProp
     );
     [propget]
     HRESULT __stdcall BizrulesWritable (
       [out retval] long *pfProp
     );
     [propget]
     HRESULT __stdcall PolicyAdministratorsName (
       [out retval] VARIANT *pvarAdmins
     );
     [propget]
     HRESULT __stdcall PolicyReadersName (
       [out retval] VARIANT *pvarReaders
     );
     HRESULT __stdcall AddPolicyAdministratorName (
       [in] BSTR bstrAdmin,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePolicyAdministratorName (
       [in] BSTR bstrAdmin,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddPolicyReaderName (
       [in] BSTR bstrReader,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePolicyReaderName (
       [in] BSTR bstrReader,
       [in opt] VARIANT varReserved
     );
   };
   [
     uuid(4CE66AD5-9F3C-469D-A911-B99887A7E685),
     helpstring("IAzApplicationGroups Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzApplicationGroups : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long Index,
       [out retval] VARIANT *pvarObtPtr
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppEnumPtr
     );
   };
   [
     uuid(F1B744CD-58A6-4E06-9FBF-36F6D779E21E),
     helpstring("IAzApplicationGroup Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzApplicationGroup : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstrName
     );
     [id(1610743808), propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall Type (
       [out retval] long *plProp
     );
     [id(1610743810), propput]
     HRESULT __stdcall Type (
       [in] long argNo1
     );
     [id(1610743812), propget]
     HRESULT __stdcall LdapQuery (
       [out retval] BSTR *pbstrProp
     );
     [id(1610743812), propput]
     HRESULT __stdcall LdapQuery (
       [in] BSTR argNo1
     );
     [id(1610743814), propget]
     HRESULT __stdcall AppMembers (
       [out retval] VARIANT *pvarProp
     );
     [propget]
     HRESULT __stdcall AppNonMembers (
       [out retval] VARIANT *pvarProp
     );
     [propget]
     HRESULT __stdcall Members (
       [out retval] VARIANT *pvarProp
     );
     [propget]
     HRESULT __stdcall NonMembers (
       [out retval] VARIANT *pvarProp
     );
     [propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *pbstrDescription
     );
     [id(1610743818), propput]
     HRESULT __stdcall Description (
       [in] BSTR argNo1
     );
     [id(1610743820)]
     HRESULT __stdcall AddAppMember (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeleteAppMember (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddAppNonMember (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeleteAppNonMember (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddMember (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeleteMember (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddNonMember (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeleteNonMember (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall Writable (
       [out retval] long *pfProp
     );
     HRESULT __stdcall GetProperty (
       [in] long lPropId,
       [in opt] VARIANT varReserved,
       [out retval] VARIANT *pvarProp
     );
     HRESULT __stdcall SetProperty (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddPropertyItem (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePropertyItem (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall Submit (
       [in opt] long lFlags = (int) 201326592,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddMemberName (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeleteMemberName (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddNonMemberName (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeleteNonMemberName (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall MembersName (
       [out retval] VARIANT *pvarProp
     );
     [propget]
     HRESULT __stdcall NonMembersName (
       [out retval] VARIANT *pvarProp
     );
   };
   [
     uuid(95E0F119-13B4-4DAE-B65F-2F7D60D822E4),
     helpstring("IAzRoles Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzRoles : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long Index,
       [out retval] VARIANT *pvarObtPtr
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppEnumPtr
     );
   };
   [
     uuid(859E0D8D-62D7-41D8-A034-C0CD5D43FDFA),
     helpstring("IAzRole Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzRole : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstrName
     );
     [id(1610743808), propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *pbstrDescription
     );
     [id(1610743810), propput]
     HRESULT __stdcall Description (
       [in] BSTR argNo1
     );
     [id(1610743812), propget]
     HRESULT __stdcall ApplicationData (
       [out retval] BSTR *pbstrApplicationData
     );
     [id(1610743812), propput]
     HRESULT __stdcall ApplicationData (
       [in] BSTR argNo1
     );
     [id(1610743814)]
     HRESULT __stdcall AddAppMember (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeleteAppMember (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddTask (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeleteTask (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddOperation (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeleteOperation (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddMember (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeleteMember (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall Writable (
       [out retval] long *pfProp
     );
     HRESULT __stdcall GetProperty (
       [in] long lPropId,
       [in opt] VARIANT varReserved,
       [out retval] VARIANT *pvarProp
     );
     HRESULT __stdcall SetProperty (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall AppMembers (
       [out retval] VARIANT *pvarProp
     );
     [propget]
     HRESULT __stdcall Members (
       [out retval] VARIANT *pvarProp
     );
     [propget]
     HRESULT __stdcall Operations (
       [out retval] VARIANT *pvarProp
     );
     [propget]
     HRESULT __stdcall Tasks (
       [out retval] VARIANT *pvarProp
     );
     HRESULT __stdcall AddPropertyItem (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePropertyItem (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall Submit (
       [in opt] long lFlags = (int) 201326592,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddMemberName (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeleteMemberName (
       [in] BSTR bstrProp,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall MembersName (
       [out retval] VARIANT *pvarProp
     );
   };
   [
     uuid(B338CCAB-4C85-4388-8C0A-C58592BAD398),
     helpstring("IAzTasks Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzTasks : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long Index,
       [out retval] VARIANT *pvarObtPtr
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppEnumPtr
     );
   };
   [
     uuid(CB94E592-2E0E-4A6C-A336-B89A6DC1E388),
     helpstring("IAzTask Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzTask : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstrName
     );
     [id(1610743808), propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *pbstrDescription
     );
     [id(1610743810), propput]
     HRESULT __stdcall Description (
       [in] BSTR argNo1
     );
     [id(1610743812), propget]
     HRESULT __stdcall ApplicationData (
       [out retval] BSTR *pbstrApplicationData
     );
     [id(1610743812), propput]
     HRESULT __stdcall ApplicationData (
       [in] BSTR argNo1
     );
     [id(1610743814), propget]
     HRESULT __stdcall BizRule (
       [out retval] BSTR *pbstrProp
     );
     [id(1610743814), propput]
     HRESULT __stdcall BizRule (
       [in] BSTR argNo1
     );
     [id(1610743816), propget]
     HRESULT __stdcall BizRuleLanguage (
       [out retval] BSTR *pbstrProp
     );
     [id(1610743816), propput]
     HRESULT __stdcall BizRuleLanguage (
       [in] BSTR argNo1
     );
     [id(1610743818), propget]
     HRESULT __stdcall BizRuleImportedPath (
       [out retval] BSTR *pbstrProp
     );
     [id(1610743818), propput]
     HRESULT __stdcall BizRuleImportedPath (
       [in] BSTR argNo1
     );
     [id(1610743820), propget]
     HRESULT __stdcall IsRoleDefinition (
       [out retval] long *pfProp
     );
     [id(1610743820), propput]
     HRESULT __stdcall IsRoleDefinition (
       [in] long argNo1
     );
     [id(1610743822), propget]
     HRESULT __stdcall Operations (
       [out retval] VARIANT *pvarProp
     );
     [propget]
     HRESULT __stdcall Tasks (
       [out retval] VARIANT *pvarProp
     );
     HRESULT __stdcall AddOperation (
       [in] BSTR bstrOp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeleteOperation (
       [in] BSTR bstrOp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddTask (
       [in] BSTR bstrTask,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeleteTask (
       [in] BSTR bstrTask,
       [in opt] VARIANT varReserved
     );
     [propget]
     HRESULT __stdcall Writable (
       [out retval] long *pfProp
     );
     HRESULT __stdcall GetProperty (
       [in] long lPropId,
       [in opt] VARIANT varReserved,
       [out retval] VARIANT *pvarProp
     );
     HRESULT __stdcall SetProperty (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall AddPropertyItem (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall DeletePropertyItem (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall Submit (
       [in opt] long lFlags = (int) 201326592,
       [in opt] VARIANT varReserved
     );
   };
   [
     uuid(90EF9C07-9706-49D9-AF80-0438A5F3EC35),
     helpstring("IAzOperations Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzOperations : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long Index,
       [out retval] VARIANT *pvarObtPtr
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppEnumPtr
     );
   };
   [
     uuid(5E56B24F-EA01-4D61-BE44-C49B5E4EAF74),
     helpstring("IAzOperation Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzOperation : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstrName
     );
     [id(1610743808), propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [id(1610743810), propget]
     HRESULT __stdcall Description (
       [out retval] BSTR *pbstrDescription
     );
     [id(1610743810), propput]
     HRESULT __stdcall Description (
       [in] BSTR argNo1
     );
     [id(1610743812), propget]
     HRESULT __stdcall ApplicationData (
       [out retval] BSTR *pbstrApplicationData
     );
     [id(1610743812), propput]
     HRESULT __stdcall ApplicationData (
       [in] BSTR argNo1
     );
     [id(1610743814), propget]
     HRESULT __stdcall OperationID (
       [out retval] long *plProp
     );
     [id(1610743814), propput]
     HRESULT __stdcall OperationID (
       [in] long argNo1
     );
     [id(1610743816), propget]
     HRESULT __stdcall Writable (
       [out retval] long *pfProp
     );
     HRESULT __stdcall GetProperty (
       [in] long lPropId,
       [in opt] VARIANT varReserved,
       [out retval] VARIANT *pvarProp
     );
     HRESULT __stdcall SetProperty (
       [in] long lPropId,
       [in] VARIANT varProp,
       [in opt] VARIANT varReserved
     );
     HRESULT __stdcall Submit (
       [in opt] long lFlags = (int) 201326592,
       [in opt] VARIANT varReserved
     );
   };
   [
     uuid(EFF1F00B-488A-466D-AFD9-A401C5F9EEF5),
     helpstring("IAzClientContext Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzClientContext : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall AccessCheck (
       [in] BSTR bstrObjectName,
       [in] VARIANT varScopeNames,
       [in] VARIANT varOperations,
       [in opt] VARIANT varParameterNames,
       [in opt] VARIANT varParameterValues,
       [in opt] VARIANT varInterfaceNames,
       [in opt] VARIANT varInterfaceFlags,
       [in opt] VARIANT varInterfaces,
       [out retval] VARIANT *pvarResults
     );
     HRESULT __stdcall GetBusinessRuleString (
       [out retval] BSTR *pbstrBusinessRuleString
     );
     [propget]
     HRESULT __stdcall UserDn (
       [out retval] BSTR *pbstrProp
     );
     [propget]
     HRESULT __stdcall UserSamCompat (
       [out retval] BSTR *pbstrProp
     );
     [propget]
     HRESULT __stdcall UserDisplay (
       [out retval] BSTR *pbstrProp
     );
     [propget]
     HRESULT __stdcall UserGuid (
       [out retval] BSTR *pbstrProp
     );
     [propget]
     HRESULT __stdcall UserCanonical (
       [out retval] BSTR *pbstrProp
     );
     [propget]
     HRESULT __stdcall UserUpn (
       [out retval] BSTR *pbstrProp
     );
     [propget]
     HRESULT __stdcall UserDnsSamCompat (
       [out retval] BSTR *pbstrProp
     );
     HRESULT __stdcall GetProperty (
       [in] long lPropId,
       [in opt] VARIANT varReserved,
       [out retval] VARIANT *pvarProp
     );
     HRESULT __stdcall GetRoles (
       [in opt] BSTR bstrScopeName = L"",
       [out retval] VARIANT *pvarRoleNames
     );
     [propget]
     HRESULT __stdcall RoleForAccessCheck (
       [out retval] BSTR *pbstrProp
     );
     [id(1610743819), propput]
     HRESULT __stdcall RoleForAccessCheck (
       [in] BSTR argNo1
     );
   };
   [
     uuid(B11E5584-D577-4273-B6C5-0973E0F8E80D),
     helpstring("IAzAuthorizationStore2 Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzAuthorizationStore2 : IAzAuthorizationStore
   {
     [id(1610809344)]
     HRESULT __stdcall OpenApplication2 (
       [in] BSTR bstrApplicationName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzApplication2 **ppApplication
     );
     HRESULT __stdcall CreateApplication2 (
       [in] BSTR bstrApplicationName,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzApplication2 **ppApplication
     );
   };
   [
     uuid(086A68AF-A249-437C-B18D-D4D86D6A9660),
     helpstring("IAzApplication2 Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzApplication2 : IAzApplication
   {
     [id(1610809344)]
     HRESULT __stdcall InitializeClientContextFromToken2 (
       [in] UINT ulTokenHandleLowPart,
       [in] UINT ulTokenHandleHighPart,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzClientContext2 **ppClientContext
     );
     HRESULT __stdcall InitializeClientContext2 (
       [in] BSTR IdentifyingString,
       [in opt] VARIANT varReserved,
       [out retval] dispinterface IAzClientContext2 **ppClientContext
     );
   };
   [
     uuid(2B0C92B8-208A-488A-8F81-E4EDB22111CD),
     helpstring("IAzClientContext2 Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzClientContext2 : IAzClientContext
   {
     [id(1610809344)]
     HRESULT __stdcall GetAssignedScopesPage (
       [in] long lOptions,
       [in] long PageSize,
       [in out] VARIANT *pvarCursor,
       [out retval] VARIANT *pvarScopeNames
     );
     HRESULT __stdcall AddRoles (
       [in] VARIANT varRoles,
       [in] BSTR bstrScopeName
     );
     HRESULT __stdcall AddApplicationGroups (
       [in] VARIANT varApplicationGroups
     );
     HRESULT __stdcall AddStringSids (
       [in] VARIANT varStringSids
     );
     [propput]
     HRESULT __stdcall LDAPQueryDN (
       [in] BSTR argNo1
     );
     [id(1610809348), propget]
     HRESULT __stdcall LDAPQueryDN (
       [out retval] BSTR *pbstrLDAPQueryDN
     );
   };
   [
     uuid(ABC08425-0C86-4FA0-9BE3-7189956C926E),
     helpstring("IAzAuthorizationStore3 Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzAuthorizationStore3 : IAzAuthorizationStore2
   {
     [id(1610874880)]
     HRESULT __stdcall IsUpdateNeeded (
       [out retval] WINBOOL *pbIsUpdateNeeded
     );
     HRESULT __stdcall BizruleGroupSupported (
       [out retval] WINBOOL *pbSupported
     );
     HRESULT __stdcall UpgradeStoresFunctionalLevel (
       [in] long lFunctionalLevel
     );
     HRESULT __stdcall IsFunctionalLevelUpgradeSupported (
       [in] long lFunctionalLevel,
       [out retval] WINBOOL *pbSupported
     );
     HRESULT __stdcall GetSchemaVersion (
       [out] long *plMajorVersion,
       [out] long *plMinorVersion
     );
   };
   [
     uuid(181C845E-7196-4A7D-AC2E-020C0BB7A303),
     helpstring("IAzApplication3 Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzApplication3 : IAzApplication2
   {
     [id(1610874880)]
     HRESULT __stdcall ScopeExists (
       [in] BSTR bstrScopeName,
       [out retval] WINBOOL *pbExist
     );
     HRESULT __stdcall OpenScope2 (
       [in] BSTR bstrScopeName,
       [out retval] dispinterface IAzScope2 **ppScope2
     );
     HRESULT __stdcall CreateScope2 (
       [in] BSTR bstrScopeName,
       [out retval] dispinterface IAzScope2 **ppScope2
     );
     HRESULT __stdcall DeleteScope2 (
       [in] BSTR bstrScopeName
     );
     [propget]
     HRESULT __stdcall RoleDefinitions (
       [out retval] dispinterface IAzRoleDefinitions **ppRoleDefinitions
     );
     HRESULT __stdcall CreateRoleDefinition (
       [in] BSTR bstrRoleDefinitionName,
       [out retval] dispinterface IAzRoleDefinition **ppRoleDefinitions
     );
     HRESULT __stdcall OpenRoleDefinition (
       [in] BSTR bstrRoleDefinitionName,
       [out retval] dispinterface IAzRoleDefinition **ppRoleDefinitions
     );
     HRESULT __stdcall DeleteRoleDefinition (
       [in] BSTR bstrRoleDefinitionName
     );
     [propget]
     HRESULT __stdcall RoleAssignments (
       [out retval] dispinterface IAzRoleAssignments **ppRoleAssignments
     );
     HRESULT __stdcall CreateRoleAssignment (
       [in] BSTR bstrRoleAssignmentName,
       [out retval] dispinterface IAzRoleAssignment **ppRoleAssignment
     );
     HRESULT __stdcall OpenRoleAssignment (
       [in] BSTR bstrRoleAssignmentName,
       [out retval] dispinterface IAzRoleAssignment **ppRoleAssignment
     );
     HRESULT __stdcall DeleteRoleAssignment (
       [in] BSTR bstrRoleAssignmentName
     );
     [propget]
     HRESULT __stdcall BizRulesEnabled (
       [out retval] WINBOOL *pbEnabled
     );
     [id(1610874892), propput]
     HRESULT __stdcall BizRulesEnabled (
       [in] WINBOOL argNo1
     );
   };
   [
     uuid(EE9FE8C9-C9F3-40E2-AA12-D1D8599727FD),
     helpstring("IAzScope2 Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzScope2 : IAzScope
   {
     [id(1610809344), propget]
     HRESULT __stdcall RoleDefinitions (
       [out retval] dispinterface IAzRoleDefinitions **ppRoleDefinitions
     );
     HRESULT __stdcall CreateRoleDefinition (
       [in] BSTR bstrRoleDefinitionName,
       [out retval] dispinterface IAzRoleDefinition **ppRoleDefinitions
     );
     HRESULT __stdcall OpenRoleDefinition (
       [in] BSTR bstrRoleDefinitionName,
       [out retval] dispinterface IAzRoleDefinition **ppRoleDefinitions
     );
     HRESULT __stdcall DeleteRoleDefinition (
       [in] BSTR bstrRoleDefinitionName
     );
     [propget]
     HRESULT __stdcall RoleAssignments (
       [out retval] dispinterface IAzRoleAssignments **ppRoleAssignments
     );
     HRESULT __stdcall CreateRoleAssignment (
       [in] BSTR bstrRoleAssignmentName,
       [out retval] dispinterface IAzRoleAssignment **ppRoleAssignment
     );
     HRESULT __stdcall OpenRoleAssignment (
       [in] BSTR bstrRoleAssignmentName,
       [out retval] dispinterface IAzRoleAssignment **ppRoleAssignment
     );
     HRESULT __stdcall DeleteRoleAssignment (
       [in] BSTR bstrRoleAssignmentName
     );
   };
   [
     uuid(881F25A5-D755-4550-957A-D503A3B34001),
     helpstring("IAzRoleDefinitions Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzRoleDefinitions : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long Index,
       [out retval] VARIANT *pvarObtPtr
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppEnumPtr
     );
   };
   [
     uuid(D97FCEA1-2599-44F1-9FC3-58E9FBE09466),
     helpstring("IAzRoleDefinition Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzRoleDefinition : IAzTask
   {
     [id(1610809344)]
     HRESULT __stdcall RoleAssignments (
       [in] BSTR bstrScopeName,
       [in] WINBOOL bRecursive,
       [out retval] dispinterface IAzRoleAssignments **ppRoleAssignments
     );
     HRESULT __stdcall AddRoleDefinition (
       [in] BSTR bstrRoleDefinition
     );
     HRESULT __stdcall DeleteRoleDefinition (
       [in] BSTR bstrRoleDefinition
     );
     [propget]
     HRESULT __stdcall RoleDefinitions (
       [out retval] dispinterface IAzRoleDefinitions **ppRoleDefinitions
     );
   };
   [
     uuid(9C80B900-FCEB-4D73-A0F4-C83B0BBF2481),
     helpstring("IAzRoleAssignments Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzRoleAssignments : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long Index,
       [out retval] VARIANT *pvarObtPtr
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
     [id(-4), propget]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppEnumPtr
     );
   };
   [
     uuid(55647D31-0D5A-4FA3-B4AC-2B5F9AD5AB76),
     helpstring("IAzRoleAssignment Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzRoleAssignment : IAzRole
   {
     [id(1610809344)]
     HRESULT __stdcall AddRoleDefinition (
       [in] BSTR bstrRoleDefinition
     );
     HRESULT __stdcall DeleteRoleDefinition (
       [in] BSTR bstrRoleDefinition
     );
     [propget]
     HRESULT __stdcall RoleDefinitions (
       [out retval] dispinterface IAzRoleDefinitions **ppRoleDefinitions
     );
     [propget]
     HRESULT __stdcall Scope (
       [out retval] dispinterface IAzScope **ppScope
     );
   };
   [
     uuid(1F5EA01F-44A2-4184-9C48-A75B4DCC8CCC),
     helpstring("IAzOperation2 Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzOperation2 : IAzOperation
   {
     [id(1610809344)]
     HRESULT __stdcall RoleAssignments (
       [in] BSTR bstrScopeName,
       [in] WINBOOL bRecursive,
       [out retval] dispinterface IAzRoleAssignments **ppRoleAssignments
     );
   };
   [
     uuid(03A9A5EE-48C8-4832-9025-AAD503C46526),
     helpstring("IAzTask2 Class"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzTask2 : IAzTask
   {
     [id(1610809344)]
     HRESULT __stdcall RoleAssignments (
       [in] BSTR bstrScopeName,
       [in] WINBOOL bRecursive,
       [out retval] dispinterface IAzRoleAssignments **ppRoleAssignments
     );
   };
   [
     uuid(3F0613FC-B71A-464E-A11D-5B881A56CEFA),
     helpstring("IAzApplicationGroup2 Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzApplicationGroup2 : IAzApplicationGroup
   {
     [id(1610809344), propget]
     HRESULT __stdcall BizRule (
       [out retval] BSTR *pbstrProp
     );
     [id(1610809344), propput]
     HRESULT __stdcall BizRule (
       [in] BSTR argNo1
     );
     [id(1610809346), propget]
     HRESULT __stdcall BizRuleLanguage (
       [out retval] BSTR *pbstrProp
     );
     [id(1610809346), propput]
     HRESULT __stdcall BizRuleLanguage (
       [in] BSTR argNo1
     );
     [id(1610809348), propget]
     HRESULT __stdcall BizRuleImportedPath (
       [out retval] BSTR *pbstrProp
     );
     [id(1610809348), propput]
     HRESULT __stdcall BizRuleImportedPath (
       [in] BSTR argNo1
     );
     [id(1610809350)]
     HRESULT __stdcall RoleAssignments (
       [in] BSTR bstrScopeName,
       [in] WINBOOL bRecursive,
       [out retval] dispinterface IAzRoleAssignments **ppRoleAssignments
     );
   };
   [
     uuid(11894FDE-1DEB-4B4B-8907-6D1CDA1F5D4F),
     helpstring("IAzClientContext3 Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzClientContext3 : IAzClientContext2
   {
     [id(1610874880)]
     HRESULT __stdcall AccessCheck2 (
       [in] BSTR bstrObjectName,
       [in] BSTR bstrScopeName,
       [in] long lOperation,
       [out retval] UINT *plResult
     );
     HRESULT __stdcall IsInRoleAssignment (
       [in] BSTR bstrScopeName,
       [in] BSTR bstrRoleName,
       [out retval] WINBOOL *pbIsInRole
     );
     HRESULT __stdcall GetOperations (
       [in] BSTR bstrScopeName,
       [out retval] dispinterface IAzOperations **ppOperationCollection
     );
     HRESULT __stdcall GetTasks (
       [in] BSTR bstrScopeName,
       [out retval] dispinterface IAzTasks **ppTaskCollection
     );
     [propget]
     HRESULT __stdcall BizRuleParameters (
       [out retval] dispinterface IAzBizRuleParameters **ppBizRuleParam
     );
     [propget]
     HRESULT __stdcall BizRuleInterfaces (
       [out retval] dispinterface IAzBizRuleInterfaces **ppBizRuleInterfaces
     );
     HRESULT __stdcall GetGroups (
       [in] BSTR bstrScopeName,
       [in] UINT ulOptions,
       [out retval] VARIANT *pGroupArray
     );
     [propget]
     HRESULT __stdcall Sids (
       [out retval] VARIANT *pStringSidArray
     );
   };
   [
     uuid(FC17685F-E25D-4DCD-BAE1-276EC9533CB5),
     helpstring("IAzBizRuleParameters Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzBizRuleParameters : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall AddParameter (
       [in] BSTR bstrParameterName,
       [in] VARIANT varParameterValue
     );
     HRESULT __stdcall AddParameters (
       [in] VARIANT varParameterNames,
       [in] VARIANT varParameterValues
     );
     HRESULT __stdcall GetParameterValue (
       [in] BSTR bstrParameterName,
       [out retval] VARIANT *pvarParameterValue
     );
     HRESULT __stdcall Remove (
       [in] BSTR varParameterName
     );
     HRESULT __stdcall RemoveAll (void);
     [propget]
     HRESULT __stdcall Count (
       [out retval] UINT *plCount
     );
   };
   [
     uuid(E94128C7-E9DA-44CC-B0BD-53036F3AAB3D),
     helpstring("IAzBizRuleInterfaces Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzBizRuleInterfaces : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall AddInterface (
       [in] BSTR bstrInterfaceName,
       [in] long lInterfaceFlag,
       [in] VARIANT varInterface
     );
     HRESULT __stdcall AddInterfaces (
       [in] VARIANT varInterfaceNames,
       [in] VARIANT varInterfaceFlags,
       [in] VARIANT varInterfaces
     );
     HRESULT __stdcall GetInterfaceValue (
       [in] BSTR bstrInterfaceName,
       [out] long *lInterfaceFlag,
       [out] VARIANT *varInterface
     );
     HRESULT __stdcall Remove (
       [in] BSTR bstrInterfaceName
     );
     HRESULT __stdcall RemoveAll (void);
     [propget]
     HRESULT __stdcall Count (
       [out retval] UINT *plCount
     );
   };
   [
     uuid(E192F17D-D59F-455E-A152-940316CD77B2),
     helpstring("IAzBizRuleContext Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzBizRuleContext : IDispatch
   {
     [id(1610743808), propput]
     HRESULT __stdcall BusinessRuleResult (
       [in] long argNo1
     );
     [propput]
     HRESULT __stdcall BusinessRuleString (
       [in] BSTR argNo1
     );
     [id(1610743809), propget]
     HRESULT __stdcall BusinessRuleString (
       [out retval] BSTR *pbstrBusinessRuleString
     );
     [id(1610743811)]
     HRESULT __stdcall GetParameter (
       [in] BSTR bstrParameterName,
       [out retval] VARIANT *pvarParameterValue
     );
   };
   [
     uuid(E5C3507D-AD6A-4992-9C7F-74AB480B44CC),
     helpstring("IAzPrincipalLocator Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzPrincipalLocator : IDispatch
   {
     [id(1610743808), propget]
     HRESULT __stdcall NameResolver (
       [out retval] dispinterface IAzNameResolver **ppNameResolver
     );
     [propget]
     HRESULT __stdcall ObjectPicker (
       [out retval] dispinterface IAzObjectPicker **ppObjectPicker
     );
   };
   [
     uuid(504D0F15-73E2-43DF-A870-A64F40714F53),
     helpstring("IAzNameResolver Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzNameResolver : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall NameFromSid (
       [in] BSTR bstrSid,
       [out] long *pSidType,
       [out retval] BSTR *pbstrName
     );
     HRESULT __stdcall NamesFromSids (
       [in] VARIANT vSids,
       [out] VARIANT *pvSidTypes,
       [out retval] VARIANT *pvNames
     );
   };
   [
     uuid(63130A48-699A-42D8-BF01-C62AC3FB79F9),
     helpstring("IAzObjectPicker Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IAzObjectPicker : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall GetPrincipals (
       [in] wireHWND hParentWnd,
       [in] BSTR bstrTitle,
       [out] VARIANT *pvSidTypes,
       [out] VARIANT *pvNames,
       [out retval] VARIANT *pvSids
     );
     [propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstrName
     );
   };

};

