/* Automated generated idl file <printuiobjlib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface ICacheManager;
interface INotificationsListener;
interface ICacheProperty;
interface IEnumBSTR;
interface ISimpleCPC;
interface IEnumContext;
interface ICacheContext;
interface ILocalConnectionListener;
interface ISnapinRegistration;
interface ISnapinState;
interface IConsole2;
interface IConsole;
interface IHeaderCtrl;
interface IToolbar;
interface IImageList;
interface IDataObject;
interface IEnumFORMATETC;
interface IAdviseSink;
interface IMoniker;
interface IPersistStream;
interface IPersist;
interface IStream;
interface ISequentialStream;
interface IBindCtx;
interface IRunningObjectTable;
interface IEnumMoniker;
interface IEnumString;
interface IEnumSTATDATA;
interface IConsoleVerb;
interface IConsoleNameSpace2;
interface IConsoleNameSpace;
interface ISnapinNode;
interface IComponentData;
interface IComponent;
interface IObjectWithSite;
interface IPrinterQueueViewExtension;
interface IStdCallbackInfoset;
interface ILegacyPrintUI;
interface IGlobalServiceDS;
interface IUIGlobalNotify;
interface IStdCallback;
interface IStdCallbackUnknown;

/* Structure forward declarations.  */
struct _SYSTEMTIME;
struct tagSIZEL;
struct _RECTL;
struct _userHBITMAP;
struct _userBITMAP;
struct _MMCButton;
struct tagFORMATETC;
struct _userCLIPFORMAT;
struct tagDVTARGETDEVICE;
struct _userSTGMEDIUM;
struct _STGMEDIUM_UNION;
struct _userHMETAFILEPICT;
struct _remoteMETAFILEPICT;
struct _userHMETAFILE;
struct _BYTE_BLOB;
struct _userHENHMETAFILE;
struct _GDI_OBJECT;
struct _userHPALETTE;
struct tagLOGPALETTE;
struct tagPALETTEENTRY;
struct _userHGLOBAL;
struct _FLAGGED_BYTE_BLOB;
struct _userFLAG_STGMEDIUM;
struct _LARGE_INTEGER;
struct _ULARGE_INTEGER;
struct tagSTATSTG;
struct _FILETIME;
struct tagBIND_OPTS2;
struct _COSERVERINFO;
struct _COAUTHINFO;
struct _COAUTHIDENTITY;
struct tagSTATDATA;
struct _RemotableHandle;
struct _SCOPEDATAITEM;
struct _RESULTDATAITEM;
struct tagRECT;
struct tagINFOSET_NOTIFY_INFO;
struct _COM_DRIVER_INFO_6;
struct tagPPC_INFO;
struct tagDS_OBJ_INFO;

/* Union record forward declarations.  */
union __MIDL_IWinTypes_0007;
union __MIDL_IWinTypes_0001;
union __MIDL_IAdviseSink_0003;
union __MIDL_IWinTypes_0005;
union __MIDL_IWinTypes_0004;
union __MIDL_IWinTypes_0006;
union __MIDL_IAdviseSink_0002;
union __MIDL_IWinTypes_0008;
union __MIDL_IWinTypes_0003;
union __MIDL_IWinTypes_0009;

/* Union record forward declarations.  */
dispinterface IPrinterQueueView;

/* Union record forward declarations.  */
coclass CacheManager;
coclass SnapinRegistration;
coclass SnapinState;
coclass SnapinComponentData;
coclass SnapinComponent;
coclass PrinterQueueView;
coclass PrinterQueueViewJobExtension;
coclass PrinterStatusHTMLViewExtension;
coclass LegacyPrintUI;
coclass GlobalServiceDS;
coclass UIGlobalNotify;

/* Enumeration declarations.  */
enum tagEPrintProperties
{
  kPP_FIRST = (int) 201326592,
  kPP_SERVER_NAME = (int) 201326592,
  kPP_PRINTER_NAME = (int) 201326593,
  kPP_SHARE_NAME = (int) 201326594,
  kPP_PORT_NAME = (int) 201326595,
  kPP_DRIVER_NAME = (int) 201326596,
  kPP_COMMENT = (int) 201326597,
  kPP_LOCATION = (int) 201326598,
  kPP_DEVMODE = (int) 201326599,
  kPP_SEPFILE = (int) 201326600,
  kPP_PRINT_PROCESSOR = (int) 201326601,
  kPP_PARAMETERS = (int) 201326602,
  kPP_DATATYPE = (int) 201326603,
  kPP_SECURITY_DESCRIPTOR = (int) 201326604,
  kPP_ATTRIBUTES = (int) 201326605,
  kPP_PRIORITY = (int) 201326606,
  kPP_DEFAULT_PRIORITY = (int) 201326607,
  kPP_START_TIME = (int) 201326608,
  kPP_UNTIL_TIME = (int) 201326609,
  kPP_STATUS = (int) 201326610,
  kPP_STATUS_STRING = (int) 201326611,
  kPP_CJOBS = (int) 201326612,
  kPP_AVERAGE_PPM = (int) 201326613,
  kPP_TOTAL_PAGES = (int) 201326614,
  kPP_PAGES_PRINTED = (int) 201326615,
  kPP_TOTAL_BYTES = (int) 201326616,
  kPP_BYTES_PRINTED = (int) 201326617,
  kPP_LAST = (int) 201326617,
  kJP_FIRST = (int) 201326618,
  kJP_PRINTER_NAME = (int) 201326618,
  kJP_MACHINE_NAME = (int) 201326619,
  kJP_PORT_NAME = (int) 201326620,
  kJP_USER_NAME = (int) 201326621,
  kJP_NOTIFY_NAME = (int) 201326622,
  kJP_DATATYPE = (int) 201326623,
  kJP_PRINT_PROCESSOR = (int) 201326624,
  kJP_PARAMETERS = (int) 201326625,
  kJP_DRIVER_NAME = (int) 201326626,
  kJP_DEVMODE = (int) 201326627,
  kJP_STATUS = (int) 201326628,
  kJP_STATUS_STRING = (int) 201326629,
  kJP_SECURITY_DESCRIPTOR = (int) 201326630,
  kJP_DOCUMENT = (int) 201326631,
  kJP_PRIORITY = (int) 201326632,
  kJP_POSITION = (int) 201326633,
  kJP_SUBMITTED = (int) 201326634,
  kJP_START_TIME = (int) 201326635,
  kJP_UNTIL_TIME = (int) 201326636,
  kJP_TIME = (int) 201326637,
  kJP_TOTAL_PAGES = (int) 201326638,
  kJP_PAGES_PRINTED = (int) 201326639,
  kJP_TOTAL_BYTES = (int) 201326640,
  kJP_BYTES_PRINTED = (int) 201326641,
  kJP_PRINTER_STATUS = (int) 201326642,
  kJP_PRINTER_ASYNCUI_ENABLE_FLAG = (int) 201326643,
  kJP_LAST = (int) 201326643,
  kJP_LAST_PHYSICAL = (int) 201326641,
  kDP_FIRST = (int) 201326644,
  kDP_CVERSION = (int) 201326644,
  kDP_NAME = (int) 201326645,
  kDP_ENVIRONMENT = (int) 201326646,
  kDP_DRIVER_PATH = (int) 201326647,
  kDP_DATA_FILE = (int) 201326648,
  kDP_CONFIG_FILE = (int) 201326649,
  kDP_HELP_FILE = (int) 201326650,
  kDP_DEPENDENT_FILES = (int) 201326651,
  kDP_LANG_MONITOR = (int) 201326652,
  kDP_DEFAULT_DATA_TYPE = (int) 201326653,
  kDP_PREVIOUS_NAMES = (int) 201326654,
  kDP_DRIVER_DATE = (int) 201326655,
  kDP_DRIVER_VERSION = (int) 201326656,
  kDP_MANUFACTURER = (int) 201326657,
  kDP_OEMURL = (int) 201326658,
  kDP_HARDWARE_ID = (int) 201326659,
  kDP_PROVIDER = (int) 201326660,
  KDP_PRINT_PROCESSOR = (int) 201326661,
  KDP_INF_PATH = (int) 201326662,
  KDP_PRINTER_DRIVER_ATTRIBUTES = (int) 201326663,
  kDP_INFO_LAST = (int) 201326663,
  KDP_DRIVER_SANDBOXING = (int) 201326664,
  KDP_DRIVER_SYSTEM_ISOLATION_DEFAULT = (int) 201326665,
  KDP_DRIVER_ISOLATION_REG_SET = (int) 201326666,
  kDP_LAST = (int) 201326666,
  kPORTP_FIRST = (int) 201326667,
  kPORTP_PORTNAME = (int) 201326667,
  kPORTP_MONITORNAME = (int) 201326668,
  kPORTP_DESCRIPTION = (int) 201326669,
  kPORTP_PORTTYPE = (int) 201326670,
  kPORTP_PRINTERNAME = (int) 201326671,
  kPORTP_LAST = (int) 201326671,
  kFP_FIRST = (int) 201326672,
  kFP_FLAGS = (int) 201326672,
  kFP_NAME = (int) 201326673,
  kFP_SIZE = (int) 201326674,
  kFP_IMAGEABLEAREA = (int) 201326675,
  kFP_LAST = (int) 201326675,
  kSP_FIRST = (int) 201326676,
  kSP_SERVER_STATUS = (int) 201326676,
  kSP_LAST = (int) 201326676,
  kPDP_FIRST = (int) 201326677,
  kPDP_DRIVER_VERSION = (int) 201326677,
  kPDP_DRIVER_PROVIDER = (int) 201326678,
  kPDP_LAST = (int) 201326678,
  kServerStatus_Count = (int) 201326593,
  kPrinterProperties_Count = (int) 201326618,
  kJobProperties_Count = (int) 201326618,
  kJobInfo2Properties_Count = (int) 201326616,
  kDriverProperties_Count = (int) 201326615,
  kDriverInfoProperties_Count = (int) 201326612,
  kPortProperties_Count = (int) 201326597,
  kFormProperties_Count = (int) 201326596,
  kPrintProperties_Count = (int) 201326677,
  kPrintProperties_Invalid = (int) -1
};
enum tagEServerState
{
  kSS_FIRST = (int) 201326592,
  kSS_SERVER_REACHABLE = (int) 201326592,
  kSS_SERVER_UNREACHABLE = (int) 201326593,
  kSS_SPOOLER_REACHABLE = (int) 201326594,
  kSS_SPOOLER_UNREACHABLE = (int) 201326595,
  kSS_LAST = (int) 201326595
};
enum tagEInfosetNotifyType
{
  kNotifyInvalid = (int) -1,
  kNotifyCreate = (int) 201326592,
  kNotifyDelete = (int) 201326593,
  kNotifyUpdate = (int) 201326594,
  kNotifyUpdateAll = (int) 201326595
};
enum tagNotificationType
{
  kNotificationPrinters = (int) 201326592,
  kNotificationJobs = (int) 201326593,
  kNotificationDrivers = (int) 201326594,
  kNotificationPorts = (int) 201326595,
  kNotificationForms = (int) 201326596,
  kNotificationServer = (int) 201326597,
  kNotificationConnection = (int) 201326598,
  kNotificationPrinterDriverData = (int) 201326599,
  kNotificationInvalid = (int) -1
};
enum tagESnapinExtensionType
{
  kSnapinExtType_NameSpace = (int) 201326592,
  kSnapinExtType_ContextMenu = (int) 201326593,
  kSnapinExtType_View = (int) 201326594,
  kSnapinExtType_ToolBar = (int) 201326595,
  kSnapinExtType_PropertySheet = (int) 201326596,
  kSnapinExtType_Task = (int) 201326597,
  kSnapinExtType_Count = (int) 201326598
};
enum _MMC_BUTTON_STATE
{
  ENABLED = (int) 201326593,
  CHECKED = (int) 201326594,
  HIDDEN = (int) 201326596,
  INDETERMINATE = (int) 201326600,
  BUTTONPRESSED = (int) 201326608
};
enum _MMC_CONSOLE_VERB
{
  MMC_VERB__dummy_ = (int) 201326592
};
enum tagESnapinIconType
{
  kSnapinIconExpanded = (int) 201326592,
  kSnapinIconCollapsed = (int) 201326593
};
enum _MMC_NOTIFY_TYPE
{
  MMCN__dummy_ = (int) 201326592
};
enum _DATA_OBJECT_TYPES
{
  CCT_SCOPE = (int) 201359360,
  CCT_RESULT = (int) 201359361,
  CCT_SNAPIN_MANAGER = (int) 201359362,
  CCT_UNINITIALIZED = (int) 201392127
};

/* Structure/union declarations.  */
struct _SYSTEMTIME
{
  USHORT wYear;
  USHORT wMonth;
  USHORT wDayOfWeek;
  USHORT wDay;
  USHORT wHour;
  USHORT wMinute;
  USHORT wSecond;
  USHORT wMilliseconds;
};
struct tagSIZEL
{
  long cx;
  long cy;
};
struct _RECTL
{
  long left;
  long top;
  long right;
  long bottom;
};
struct _userHBITMAP
{
  long fContext;
  union __MIDL_IWinTypes_0007 u;
};
union __MIDL_IWinTypes_0007
{
  long hInproc;
  struct _userBITMAP *hRemote;
  LONGLONG hInproc64;
};
struct _userBITMAP
{
  long bmType;
  long bmWidth;
  long bmHeight;
  long bmWidthBytes;
  USHORT bmPlanes;
  USHORT bmBitsPixel;
  UINT cbSize;
  UCHAR *pBuffer;
};
struct _MMCButton
{
  int nBitmap;
  int idCommand;
  UCHAR fsState;
  UCHAR fsType;
  LPWSTR lpButtonText;
  LPWSTR lpTooltipText;
};
struct tagFORMATETC
{
  wireCLIPFORMAT cfFormat;
  struct tagDVTARGETDEVICE *ptd;
  UINT dwAspect;
  long lindex;
  UINT tymed;
};
struct _userCLIPFORMAT
{
  long fContext;
  union __MIDL_IWinTypes_0001 u;
};
union __MIDL_IWinTypes_0001
{
  UINT dwValue;
  LPWSTR pwszName;
};
struct tagDVTARGETDEVICE
{
  UINT tdSize;
  USHORT tdDriverNameOffset;
  USHORT tdDeviceNameOffset;
  USHORT tdPortNameOffset;
  USHORT tdExtDevmodeOffset;
  UCHAR *tdData;
};
struct _userSTGMEDIUM
{
  struct _STGMEDIUM_UNION DUMMYUNIONNAME;
  IUnknown * pUnkForRelease;
};
struct _STGMEDIUM_UNION
{
  UINT tymed;
  union __MIDL_IAdviseSink_0003 u;
};
union __MIDL_IAdviseSink_0003
{
  struct _userHMETAFILEPICT *hMetaFilePict;
  struct _userHENHMETAFILE *hHEnhMetaFile;
  struct _GDI_OBJECT *hGdiHandle;
  struct _userHGLOBAL *hGlobal;
  LPWSTR lpszFileName;
  struct _BYTE_BLOB *pstm;
  struct _BYTE_BLOB *pstg;
};
struct _userHMETAFILEPICT
{
  long fContext;
  union __MIDL_IWinTypes_0005 u;
};
union __MIDL_IWinTypes_0005
{
  long hInproc;
  struct _remoteMETAFILEPICT *hRemote;
  LONGLONG hInproc64;
};
struct _remoteMETAFILEPICT
{
  long mm;
  long xExt;
  long yExt;
  struct _userHMETAFILE *hMF;
};
struct _userHMETAFILE
{
  long fContext;
  union __MIDL_IWinTypes_0004 u;
};
union __MIDL_IWinTypes_0004
{
  long hInproc;
  struct _BYTE_BLOB *hRemote;
  LONGLONG hInproc64;
};
struct _BYTE_BLOB
{
  UINT clSize;
  UCHAR *abData;
};
struct _userHENHMETAFILE
{
  long fContext;
  union __MIDL_IWinTypes_0006 u;
};
union __MIDL_IWinTypes_0006
{
  long hInproc;
  struct _BYTE_BLOB *hRemote;
  LONGLONG hInproc64;
};
struct _GDI_OBJECT
{
  UINT ObjectType;
  union __MIDL_IAdviseSink_0002 u;
};
union __MIDL_IAdviseSink_0002
{
  struct _userHBITMAP *hBitmap;
  struct _userHPALETTE *hPalette;
  struct _userHGLOBAL *hGeneric;
};
struct _userHPALETTE
{
  long fContext;
  union __MIDL_IWinTypes_0008 u;
};
union __MIDL_IWinTypes_0008
{
  long hInproc;
  struct tagLOGPALETTE *hRemote;
  LONGLONG hInproc64;
};
struct tagLOGPALETTE
{
  USHORT palVersion;
  USHORT palNumEntries;
  struct tagPALETTEENTRY *palPalEntry;
};
struct tagPALETTEENTRY
{
  UCHAR peRed;
  UCHAR peGreen;
  UCHAR peBlue;
  UCHAR peFlags;
};
struct _userHGLOBAL
{
  long fContext;
  union __MIDL_IWinTypes_0003 u;
};
union __MIDL_IWinTypes_0003
{
  long hInproc;
  struct _FLAGGED_BYTE_BLOB *hRemote;
  LONGLONG hInproc64;
};
struct _FLAGGED_BYTE_BLOB
{
  UINT fFlags;
  UINT clSize;
  UCHAR *abData;
};
struct _userFLAG_STGMEDIUM
{
  long ContextFlags;
  long fPassOwnership;
  struct _userSTGMEDIUM Stgmed;
};
struct _LARGE_INTEGER
{
  LONGLONG QuadPart;
};
struct _ULARGE_INTEGER
{
  ULONGLONG QuadPart;
};
struct tagSTATSTG
{
  LPWSTR pwcsName;
  UINT type;
  struct _ULARGE_INTEGER cbSize;
  struct _FILETIME mtime;
  struct _FILETIME ctime;
  struct _FILETIME atime;
  UINT grfMode;
  UINT grfLocksSupported;
  struct GUID clsid;
  UINT grfStateBits;
  UINT reserved;
};
struct _FILETIME
{
  UINT dwLowDateTime;
  UINT dwHighDateTime;
};
struct tagBIND_OPTS2
{
  UINT cbStruct;
  UINT grfFlags;
  UINT grfMode;
  UINT dwTickCountDeadline;
  UINT dwTrackFlags;
  UINT dwClassContext;
  UINT locale;
  struct _COSERVERINFO *pServerInfo;
};
struct _COSERVERINFO
{
  UINT dwReserved1;
  LPWSTR pwszName;
  struct _COAUTHINFO *pAuthInfo;
  UINT dwReserved2;
};
struct _COAUTHINFO
{
  UINT dwAuthnSvc;
  UINT dwAuthzSvc;
  LPWSTR pwszServerPrincName;
  UINT dwAuthnLevel;
  UINT dwImpersonationLevel;
  struct _COAUTHIDENTITY *pAuthIdentityData;
  UINT dwCapabilities;
};
struct _COAUTHIDENTITY
{
  USHORT *User;
  UINT UserLength;
  USHORT *Domain;
  UINT DomainLength;
  USHORT *Password;
  UINT PasswordLength;
  UINT Flags;
};
struct tagSTATDATA
{
  struct tagFORMATETC formatetc;
  UINT advf;
  interface IAdviseSink *pAdvSink;
  UINT dwConnection;
};
struct _RemotableHandle
{
  long fContext;
  union __MIDL_IWinTypes_0009 u;
};
union __MIDL_IWinTypes_0009
{
  long hInproc;
  long hRemote;
};
struct _SCOPEDATAITEM
{
  UINT mask;
  LPWSTR displayname;
  int nImage;
  int nOpenImage;
  unsigned int nState;
  int cChildren;
  LONG_PTR lParam;
  LONG_PTR relativeID;
  LONG_PTR ID;
};
struct _RESULTDATAITEM
{
  UINT mask;
  long bScopeItem;
  LONG_PTR itemID;
  int nIndex;
  int nCol;
  LPWSTR str;
  int nImage;
  unsigned int nState;
  LONG_PTR lParam;
  int iIndent;
};
struct tagRECT
{
  long left;
  long top;
  long right;
  long bottom;
};
struct tagINFOSET_NOTIFY_INFO
{
  enum tagNotificationType eNotificationType;
  enum tagEInfosetNotifyType eNotifyType;
  IUnknown * pidl;
  enum tagEPrintProperties ePropChanged;
  long lServerID;
};
struct _COM_DRIVER_INFO_6
{
  UINT cVersion;
  BSTR pName;
  BSTR pEnvironment;
  BSTR pDriverPath;
  BSTR pDataFile;
  BSTR pConfigFile;
  BSTR pHelpFile;
  USHORT *pDependentFiles;
  BSTR pMonitorName;
  BSTR pDefaultDataType;
  USHORT *pszzPreviousNames;
  struct _FILETIME ftDriverDate;
  ULONGLONG dwlDriverVersion;
  BSTR pMfgName;
  BSTR pOEMUrl;
  BSTR pHardwareID;
  BSTR pProvider;
  UINT cchDependentFiles;
  UINT cchPreviousNames;
};
struct tagPPC_INFO
{
  BSTR bstrUNCName;
  BSTR bstrGPO_DSPath;
  BSTR bstrGPO_CN;
  BSTR bstrGPO_DisplayName;
  UINT dwAttributes;
  long bPerMachine;
  HRESULT hrStatus;
  UINT dwFlags;
};
struct tagDS_OBJ_INFO
{
  BSTR bstrDN;
  BSTR bstrgPLink;
  BSTR bstrName;
};

/* Type definitions.  */
typedef ULONGLONG UINT_PTR;
typedef LONGLONG LONG_PTR;
typedef ULONGLONG ULONG_PTR;
typedef struct _userHBITMAP * wireHBITMAP;
typedef struct _userCLIPFORMAT * wireCLIPFORMAT;
typedef struct _userSTGMEDIUM * wireSTGMEDIUM;
typedef struct _userFLAG_STGMEDIUM * wireFLAG_STGMEDIUM;
typedef struct _userSTGMEDIUM * wireASYNC_STGMEDIUM;
typedef struct _RemotableHandle * wireHWND;

[
  uuid(438EDB38-282C-435D-8BE3-4AB90B83CEF5),
  version(1.0),
  helpstring("PrintUI Objects 1.0 Type Library")
]
library printuiobjlib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(0977EEC5-10F7-44AE-A7FA-D4824EBA5C74),
     helpstring("PrintersCacheManager Class"),
     cancreate
   ]
   coclass CacheManager
   {
     interface ICacheManager;
   };
   [
     uuid(B2DDD548-51BA-4CFD-BE8B-5DB06F40E516),
     helpstring("SnapinRegistration Class")
   ]
   coclass SnapinRegistration
   {
     interface ISnapinRegistration;
   };
   [
     uuid(E37EF07F-8266-448B-8059-C2B35BAFE0CF),
     helpstring("SnapinState Class"),
     cancreate
   ]
   coclass SnapinState
   {
     interface ISnapinState;
   };
   [
     uuid(8A01C400-A3E0-4F8D-A933-FF780F22BD87),
     helpstring("SnapinComponentData Class"),
     cancreate
   ]
   coclass SnapinComponentData
   {
     interface IComponentData;
     interface IObjectWithSite;
   };
   [
     uuid(A8040703-2640-48B7-96CD-BC8108A4E8F1),
     helpstring("SnapinComponent Class"),
     cancreate
   ]
   coclass SnapinComponent
   {
     interface IComponent;
     interface IObjectWithSite;
   };
   [
     uuid(B021FF57-A928-459C-9D6C-14DED0C9BED2),
     helpstring("PrinterQueueView Class"),
     cancreate
   ]
   coclass PrinterQueueView
   {
     dispinterface IPrinterQueueView;
   };
   [
     uuid(C20CE506-5DA9-4B9C-9662-D88BD30E10A1),
     helpstring("PrinterQueueViewJobExtension Class"),
     cancreate
   ]
   coclass PrinterQueueViewJobExtension
   {
     interface IPrinterQueueViewExtension;
     interface IStdCallbackInfoset;
   };
   [
     uuid(DB49BBEB-C744-49F8-81AC-AF97669D4CB0),
     helpstring("PrinterStatusHTMLViewExtension Class"),
     cancreate
   ]
   coclass PrinterStatusHTMLViewExtension
   {
     interface IPrinterQueueViewExtension;
   };
   [
     uuid(53445BED-3213-453B-A12A-79AA20A702DC),
     helpstring("LegacyPrintUI Class"),
     cancreate
   ]
   coclass LegacyPrintUI
   {
     interface ILegacyPrintUI;
   };
   [
     uuid(59699770-2BF1-46C6-857C-1D509DB7079E),
     helpstring("GlobalServiceDS Class"),
     cancreate
   ]
   coclass GlobalServiceDS
   {
     interface IGlobalServiceDS;
   };
   [
     uuid(F8FB6E07-55E6-4BB9-96BC-2393A039CEE7),
     helpstring("UIGlobalNotify Class"),
     cancreate
   ]
   coclass UIGlobalNotify
   {
     interface IUIGlobalNotify;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(B65116D3-0F51-4AF8-93E4-A769AF51AD2C),
     helpstring("IPrinterQueueView Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IPrinterQueueView : IDispatch
   {
     [id(1610743808)]
     HRESULT __stdcall SetPrinterName (
       [in] BSTR bstrPrinterName,
       [in] long bStartMonitoring
     );
     [propget]
     HRESULT __stdcall ViewExtensionCount (
       [out retval] unsigned int *pnCount
     );
     HRESULT __stdcall GetViewExtensionCLSID (
       [in] unsigned int nViewIndex,
       [out retval] BSTR *pbstrCLSID
     );
     HRESULT __stdcall ActivateViewExtension (
       [in] unsigned int nViewIndex
     );
   };

};

/* Interface declarations.  */
[
  uuid(9B9027A3-4350-484E-B96E-ED4E5A5C9069),
  helpstring("ICacheManager Interface")
]
interface ICacheManager : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Initialize (
    [in] long bUIMode,
    [in] long bTimer,
    [in] long lTimerCount
  );
  HRESULT __stdcall GetPrintersCache (
    [in] BSTR bstrServerName,
    [in] unsigned int nPropCount,
    [in] enum tagEPrintProperties *pProperties2Monitor,
    [in] long bFilter,
    [in] long bAcceptStatusNotify,
    [out retval] interface INotificationsListener **ppListener
  );
  HRESULT __stdcall GetJobsCache (
    [in] BSTR bstrPrinterName,
    [in] unsigned int nPropCount,
    [in] enum tagEPrintProperties *pProperties2Monitor,
    [in] long bAcceptStatusNotify,
    [out retval] interface INotificationsListener **ppListener
  );
  HRESULT __stdcall GetDriversCache (
    [in] BSTR bstrServerName,
    [in] unsigned int nPropCount,
    [in] enum tagEPrintProperties *pProperties2Monitor,
    [in] long bAcceptStatusNotify,
    [out retval] interface INotificationsListener **ppListener
  );
  HRESULT __stdcall GetFormsCache (
    [in] BSTR bstrServerName,
    [in] unsigned int nPropCount,
    [in] enum tagEPrintProperties *pProperties2Monitor,
    [in] long bAcceptStatusNotify,
    [out retval] interface INotificationsListener **ppListener
  );
  HRESULT __stdcall GetPortsCache (
    [in] BSTR bstrServerName,
    [in] unsigned int nPropCount,
    [in] enum tagEPrintProperties *pProperties2Monitor,
    [in] long bAcceptStatusNotify,
    [out retval] interface INotificationsListener **ppListener
  );
  HRESULT __stdcall GetLocalConnectionCache (
    [out retval] interface ILocalConnectionListener **ppListener
  );
  HRESULT __stdcall RemoveServer (
    [in] long lServerID
  );
  HRESULT __stdcall TryRemoveServer (
    [in] long lServerID
  );
  HRESULT __stdcall GetServerID (
    [in] BSTR bstrServerName,
    [out] long *plServerID
  );
  HRESULT __stdcall CheckServerStatus (
    [in] BSTR bstrServerName
  );
  HRESULT __stdcall EnablePDDataMerge (
    [in] long bEnable
  );
  HRESULT __stdcall PrepareToStop (void);
};
[
  uuid(212E3BA4-ADF0-4462-906D-FEBF6768BFBB),
  helpstring("INotificationsListener Interface")
]
interface INotificationsListener : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall StartListen (void);
  HRESULT __stdcall StopListen (void);
  HRESULT __stdcall TryStop (void);
  HRESULT __stdcall IsStopped (
    [out] long *pbStopped
  );
  HRESULT __stdcall RefreshAll (
    [in] long bSynchronous
  );
  HRESULT __stdcall QueryServerStatusCheck (
    [in] ULONGLONG curTime,
    [out] long *pbNeed
  );
  HRESULT __stdcall ProcessServerStatusChange (
    [in] enum tagEServerState eServerStatus,
    [in] enum tagEServerState eSpoolerStatus
  );
  HRESULT __stdcall OnMsg (
    [in] UINT_PTR wParam,
    [in] LONG_PTR lParam
  );
  HRESULT __stdcall ProcessListenerTask (void);
  HRESULT __stdcall GetPropertyCache (
    [out] interface ICacheProperty **ppCacheProperty
  );
  HRESULT __stdcall GetServerPID (
    [out] long *pID
  );
  HRESULT __stdcall GetCPC (
    [out] interface ISimpleCPC **ppCPC
  );
  HRESULT __stdcall EnumAllObjects (
    [out] interface IEnumContext **ppEnumContext
  );
  HRESULT __stdcall GetIsCurrentUserAdminOnServer (
    [out] long *pbIsAdministrator
  );
};
[
  uuid(57EB5A03-0DC8-4959-87D5-83826CDFB724),
  helpstring("ICacheProperty Interface")
]
interface ICacheProperty : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall PropertyGetLong (
    [in] long nContextID,
    [in] enum tagEPrintProperties eProperty,
    [out retval] long *pValue
  );
  HRESULT __stdcall PropertyGetString (
    [in] long nContextID,
    [in] enum tagEPrintProperties eProperty,
    [out retval] BSTR *pValue
  );
  HRESULT __stdcall PropertyGetTime (
    [in] long nContextID,
    [in] enum tagEPrintProperties eProperty,
    [out retval] struct _SYSTEMTIME *pTime
  );
  HRESULT __stdcall PropertyGetSIZE (
    [in] long nContextID,
    [in] enum tagEPrintProperties eProperty,
    [out retval] struct tagSIZEL *pSize
  );
  HRESULT __stdcall PropertyGetRECT (
    [in] long nContextID,
    [in] enum tagEPrintProperties eProperty,
    [out retval] struct _RECTL *pRect
  );
  HRESULT __stdcall PropertyGetBLOB (
    [in] long nContextID,
    [in] enum tagEPrintProperties eProperty,
    [out] UINT *pcbBlobSize,
    [out] UCHAR *ppBLOB
  );
  HRESULT __stdcall PropertyGetDWORDLONG (
    [in] long nContextID,
    [in] enum tagEPrintProperties eProperty,
    [out retval] ULONGLONG *pValue
  );
  HRESULT __stdcall PropertyGetMultiString (
    [in] long nContextID,
    [in] enum tagEPrintProperties eProperty,
    [out retval] interface IEnumBSTR **ppEnumBstr
  );
  HRESULT __stdcall PropertySetLong (
    [in] long nContextID,
    [in] enum tagEPrintProperties eProperty,
    [in] long lValue
  );
  HRESULT __stdcall PropertySetString (
    [in] long nContextID,
    [in] enum tagEPrintProperties eProperty,
    [in] BSTR bstrValue
  );
  HRESULT __stdcall PropertySetTime (
    [in] long nContextID,
    [in] enum tagEPrintProperties eProperty,
    [in] struct _SYSTEMTIME *pTime
  );
  HRESULT __stdcall PropertySetSIZE (
    [in] long nContextID,
    [in] enum tagEPrintProperties eProperty,
    [in] struct tagSIZEL *pSize
  );
  HRESULT __stdcall PropertySetRECT (
    [in] long nContextID,
    [in] enum tagEPrintProperties eProperty,
    [in] struct _RECTL *pRect
  );
  HRESULT __stdcall PropertySetBLOB (
    [in] long nContextID,
    [in] enum tagEPrintProperties eProperty,
    [in] UINT cbBlobSize,
    [in] UCHAR *pBLOB
  );
  HRESULT __stdcall PropertySetDWORDLONG (
    [in] long nContextID,
    [in] enum tagEPrintProperties eProperty,
    [in] ULONGLONG dValue
  );
  HRESULT __stdcall PropertySetMultiString (
    [in] long nContextID,
    [in] enum tagEPrintProperties eProperty,
    [in] interface IEnumBSTR *dValue
  );
  HRESULT __stdcall CopyContent (
    [in] interface ICacheProperty *pProperties
  );
};
[
  uuid(3D8BED7A-4FDE-4149-9FFA-46E6BB9ADF21),
  helpstring("InfoSet - IEnumBSTR interface")
]
interface IEnumBSTR : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT celt,
    [out] BSTR *ppStrings,
    [in out] UINT *pceltFetched
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Clone (
    [out retval] interface IEnumBSTR **ppenum
  );
};
[
  uuid(50162D8C-2CC0-49CF-AC69-5756696DDEDD),
  helpstring("ISimpleCPC Interface")
]
interface ISimpleCPC : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall IsSinkSupported (
    [in] struct GUID *riid,
    [out retval] WINBOOL *pbSupported
  );
  HRESULT __stdcall Advise (
    [in] struct GUID *riid,
    [in] IUnknown * pUnkSink,
    [out retval] ULONG_PTR *puCookie
  );
  HRESULT __stdcall Unadvise (
    [in] ULONG_PTR uCookie
  );
};
[
  uuid(00F3296A-2EE7-4919-8B5E-E080EAB1B9ED),
  helpstring("IEnumContext Interface")
]
interface IEnumContext : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Next (
    [in] UINT celt,
    [out] interface ICacheContext **ppICacheContext,
    [in out] UINT *pceltFetched
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Clone (
    [out] interface IEnumContext **ppenum
  );
  HRESULT __stdcall Count (
    [out] UINT *plCount
  );
};
[
  uuid(3004EAD6-8FE4-44B1-A732-AF9B71C97938),
  helpstring("ICacheContext Interface")
]
interface ICacheContext : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetContextID (
    [out retval] long *pnContextID
  );
  HRESULT __stdcall GetType (
    [out retval] enum tagEInfosetNotifyType *peType
  );
  HRESULT __stdcall GetServerID (
    [out retval] long *pnContextID
  );
  HRESULT __stdcall GetSpoolerID (
    [out retval] long *plSpoolerID
  );
  HRESULT __stdcall GetChangedPropertyOnUpdate (
    [out retval] enum tagEPrintProperties *eProp
  );
};
[
  uuid(B8482F5B-C1CB-4CFB-A1E3-86618CC8067E),
  helpstring("ILocalConnectionListener Interface")
]
interface ILocalConnectionListener : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall StartListen (void);
  HRESULT __stdcall StopListen (void);
  HRESULT __stdcall GetPropertyCache (
    [in] long lConnectionID,
    [in] enum tagNotificationType eNotificationType,
    [out] interface ICacheProperty **ppCacheProperty
  );
  HRESULT __stdcall GetLocalConnectionName (
    [in] long lConnectionID,
    [out] BSTR *pstrName
  );
  HRESULT __stdcall GetCPC (
    [out] interface ISimpleCPC **ppCPC
  );
  HRESULT __stdcall GetJobListener (
    [in] long lConnectionID,
    [out] interface INotificationsListener **ppListener
  );
  HRESULT __stdcall PrepareToStop (void);
};
[
  uuid(86685DBA-B5A3-4CBB-8BEE-0EAC3B11605B),
  helpstring("ISnapinRegistration Interface")
]
interface ISnapinRegistration : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Register (
    [in] struct GUID *guidSnapin,
    [in] struct GUID *guidAbout,
    [in] void *hModule,
    [in] unsigned int nSnapinNameID,
    [in] unsigned int nDescriptionID,
    [in] unsigned int nProviderID,
    [in] long bStandalone
  );
  HRESULT __stdcall Unregister (
    [in] struct GUID *guidSnapin
  );
  HRESULT __stdcall RegisterExtendableNodes (
    [in] struct GUID *guidSnapin,
    [in] unsigned int nExtendableNodeTypesCount,
    [in] struct GUID *pguidExtendableNodeTypes
  );
  HRESULT __stdcall UnregisterExtendableNodes (
    [in] struct GUID *guidSnapin
  );
  HRESULT __stdcall RegisterExtension (
    [in] struct GUID *guidSnapin,
    [in] struct GUID *guidNodeToExtend,
    [in] void *hModule,
    [in] unsigned int nExtNameID,
    [in] enum tagESnapinExtensionType eExtensionType
  );
  HRESULT __stdcall UnregisterExtension (
    [in] struct GUID *guidSnapin,
    [in] struct GUID *guidNodeToExtend,
    [in] enum tagESnapinExtensionType eExtensionType
  );
};
[
  uuid(992BE79A-7969-4406-BB21-3EFF61985A92),
  helpstring("ISnapinState Interface")
]
interface ISnapinState : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetComponentDataCLSID (
    [out] struct GUID *pclsid
  );
  HRESULT __stdcall SetComponentDataCLSID (
    [in] struct GUID *rclsid
  );
  HRESULT __stdcall GetComponentCLSID (
    [out] struct GUID *pclsid
  );
  HRESULT __stdcall SetComponentCLSID (
    [in] struct GUID *rclsid
  );
  HRESULT __stdcall GetRootNodeCLSID (
    [out] struct GUID *pclsid
  );
  HRESULT __stdcall SetRootNodeCLSID (
    [in] struct GUID *rclsid
  );
  HRESULT __stdcall GetExtensionNodeType (
    [out] struct GUID *pguid
  );
  HRESULT __stdcall SetExtensionNodeType (
    [in] struct GUID *rguid
  );
  HRESULT __stdcall GetConsole (
    [out] interface IConsole2 **ppConsole
  );
  HRESULT __stdcall SetConsole (
    [in] interface IConsole2 *pConsole
  );
  HRESULT __stdcall GetConsoleNameSpace (
    [out] interface IConsoleNameSpace2 **ppConsoleNameSpace
  );
  HRESULT __stdcall SetConsoleNameSpace (
    [in] interface IConsoleNameSpace2 *pConsoleNameSpace
  );
  HRESULT __stdcall GetRootNode (
    [out] interface ISnapinNode **ppRootNode
  );
  HRESULT __stdcall SetRootNode (
    [in] interface ISnapinNode *pRootNode
  );
  HRESULT __stdcall GetUserCookie (
    [in] struct GUID *riid,
    [out] void *ppCookie
  );
  HRESULT __stdcall SetUserCookie (
    [in] IUnknown * pCookie
  );
  HRESULT __stdcall GetHelpFile (
    [out] BSTR *pbstrHelpFile,
    [out] BSTR *pbstrHelpLink
  );
  HRESULT __stdcall SetHelpFile (
    [in] BSTR bstrHelpFile,
    [in] BSTR bstrHelpLink
  );
  HRESULT __stdcall SetRunningAsExtension (
    [in] WINBOOL bExtension
  );
  HRESULT __stdcall GetRunningAsExtension (
    [out] WINBOOL *pbExtension
  );
  HRESULT __stdcall IsKnownExtensionNode (
    [in] struct GUID *rguid,
    [out] WINBOOL *pbExtension
  );
};
[
  uuid(103D842A-AA63-11D1-A7E1-00C04FD8D565),
  helpstring("IConsole2 Interface")
]
interface IConsole2 : IConsole
{
  [id(1610743808)]
  HRESULT __stdcall Expand (
    [in] LONG_PTR hItem,
    [in] long bExpand
  );
  HRESULT __stdcall IsTaskpadViewPreferred (void);
  HRESULT __stdcall SetStatusText (
    [in] LPWSTR pszStatusText
  );
};
[
  uuid(43136EB1-D36C-11CF-ADBC-00AA00A80033),
  helpstring("IConsole Interface")
]
interface IConsole : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall SetHeader (
    [in] interface IHeaderCtrl *pHeader
  );
  HRESULT __stdcall SetToolbar (
    [in] interface IToolbar *pToolbar
  );
  HRESULT __stdcall QueryResultView (
    [out] IUnknown **pUnknown
  );
  HRESULT __stdcall QueryScopeImageList (
    [out] interface IImageList **ppImageList
  );
  HRESULT __stdcall QueryResultImageList (
    [out] interface IImageList **ppImageList
  );
  HRESULT __stdcall UpdateAllViews (
    [in] interface IDataObject *lpDataObject,
    [in] LONG_PTR data,
    [in] LONG_PTR hint
  );
  HRESULT __stdcall MessageBox (
    [in] LPWSTR lpszText,
    [in] LPWSTR lpszTitle,
    [in] unsigned int fuStyle,
    [out] int *piRetval
  );
  HRESULT __stdcall QueryConsoleVerb (
    [out] interface IConsoleVerb **ppConsoleVerb
  );
  HRESULT __stdcall SelectScopeItem (
    [in] LONG_PTR hScopeItem
  );
  HRESULT __stdcall GetMainWindow (
    [out] wireHWND *phwnd
  );
  HRESULT __stdcall NewWindow (
    [in] LONG_PTR hScopeItem,
    [in] UINT lOptions
  );
};
[
  uuid(43136EB3-D36C-11CF-ADBC-00AA00A80033),
  helpstring("INodeInit Interface")
]
interface IHeaderCtrl : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall InsertColumn (
    [in] int nCol,
    [in] LPWSTR title,
    [in] int nFormat,
    [in] int nWidth
  );
  HRESULT __stdcall DeleteColumn (
    [in] int nCol
  );
  HRESULT __stdcall SetColumnText (
    [in] int nCol,
    [in] LPWSTR title
  );
  HRESULT __stdcall GetColumnText (
    [in] int nCol,
    [out] LPWSTR pText
  );
  HRESULT __stdcall SetColumnWidth (
    [in] int nCol,
    [in] int nWidth
  );
  HRESULT __stdcall GetColumnWidth (
    [in] int nCol,
    [out] int *pWidth
  );
};
[
  uuid(43136EB9-D36C-11CF-ADBC-00AA00A80033)
]
interface IToolbar : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall AddBitmap (
    [in] int nImages,
    [in] wireHBITMAP hbmp,
    [in] int cxSize,
    [in] int cySize,
    [in] UINT crMask
  );
  HRESULT __stdcall AddButtons (
    [in] int nButtons,
    [in] struct _MMCButton *lpButtons
  );
  HRESULT __stdcall InsertButton (
    [in] int nIndex,
    [in] struct _MMCButton *lpButton
  );
  HRESULT __stdcall DeleteButton (
    [in] int nIndex
  );
  HRESULT __stdcall GetButtonState (
    [in] int idCommand,
    [in] enum _MMC_BUTTON_STATE nState,
    [out] long *pState
  );
  HRESULT __stdcall SetButtonState (
    [in] int idCommand,
    [in] enum _MMC_BUTTON_STATE nState,
    [in] long bState
  );
};
[
  uuid(43136EB8-D36C-11CF-ADBC-00AA00A80033),
  helpstring("IImageList Interface")
]
interface IImageList : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall ImageListSetIcon (
    [in] LONG_PTR *pIcon,
    [in] long nLoc
  );
  HRESULT __stdcall ImageListSetStrip (
    [in] LONG_PTR *pBMapSm,
    [in] LONG_PTR *pBMapLg,
    [in] long nStartLoc,
    [in] UINT cMask
  );
};
[
  uuid(0000010E-0000-0000-C000-000000000046)
]
interface IDataObject : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteGetData (
    [in] struct tagFORMATETC *pformatetcIn,
    [out] wireSTGMEDIUM *pRemoteMedium
  );
  HRESULT __stdcall RemoteGetDataHere (
    [in] struct tagFORMATETC *pformatetc,
    [in out] wireSTGMEDIUM *pRemoteMedium
  );
  HRESULT __stdcall QueryGetData (
    [in] struct tagFORMATETC *pformatetc
  );
  HRESULT __stdcall GetCanonicalFormatEtc (
    [in] struct tagFORMATETC *pformatectIn,
    [out] struct tagFORMATETC *pformatetcOut
  );
  HRESULT __stdcall RemoteSetData (
    [in] struct tagFORMATETC *pformatetc,
    [in] wireFLAG_STGMEDIUM *pmedium,
    [in] long fRelease
  );
  HRESULT __stdcall EnumFormatEtc (
    [in] UINT dwDirection,
    [out] interface IEnumFORMATETC **ppenumFormatEtc
  );
  HRESULT __stdcall DAdvise (
    [in] struct tagFORMATETC *pformatetc,
    [in] UINT advf,
    [in] interface IAdviseSink *pAdvSink,
    [out] UINT *pdwConnection
  );
  HRESULT __stdcall DUnadvise (
    [in] UINT dwConnection
  );
  HRESULT __stdcall EnumDAdvise (
    [out] interface IEnumSTATDATA **ppenumAdvise
  );
};
[
  uuid(00000103-0000-0000-C000-000000000046)
]
interface IEnumFORMATETC : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] struct tagFORMATETC *rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumFORMATETC **ppenum
  );
};
[
  uuid(0000010F-0000-0000-C000-000000000046)
]
interface IAdviseSink : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteOnDataChange (
    [in] struct tagFORMATETC *pformatetc,
    [in] wireASYNC_STGMEDIUM *pStgmed
  );
  HRESULT __stdcall RemoteOnViewChange (
    [in] UINT dwAspect,
    [in] long lindex
  );
  HRESULT __stdcall RemoteOnRename (
    [in] interface IMoniker *pmk
  );
  HRESULT __stdcall RemoteOnSave (void);
  HRESULT __stdcall RemoteOnClose (void);
};
[
  uuid(0000000F-0000-0000-C000-000000000046)
]
interface IMoniker : IPersistStream
{
  [id(1610809344)]
  HRESULT __stdcall RemoteBindToObject (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] struct GUID *riidResult,
    [out] IUnknown **ppvResult
  );
  HRESULT __stdcall RemoteBindToStorage (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] struct GUID *riid,
    [out] IUnknown **ppvObj
  );
  HRESULT __stdcall Reduce (
    [in] interface IBindCtx *pbc,
    [in] UINT dwReduceHowFar,
    [in out] interface IMoniker **ppmkToLeft,
    [out] interface IMoniker **ppmkReduced
  );
  HRESULT __stdcall ComposeWith (
    [in] interface IMoniker *pmkRight,
    [in] long fOnlyIfNotGeneric,
    [out] interface IMoniker **ppmkComposite
  );
  HRESULT __stdcall Enum (
    [in] long fForward,
    [out] interface IEnumMoniker **ppenumMoniker
  );
  HRESULT __stdcall IsEqual (
    [in] interface IMoniker *pmkOtherMoniker
  );
  HRESULT __stdcall Hash (
    [out] UINT *pdwHash
  );
  HRESULT __stdcall IsRunning (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] interface IMoniker *pmkNewlyRunning
  );
  HRESULT __stdcall GetTimeOfLastChange (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [out] struct _FILETIME *pfiletime
  );
  HRESULT __stdcall Inverse (
    [out] interface IMoniker **ppmk
  );
  HRESULT __stdcall CommonPrefixWith (
    [in] interface IMoniker *pmkOther,
    [out] interface IMoniker **ppmkPrefix
  );
  HRESULT __stdcall RelativePathTo (
    [in] interface IMoniker *pmkOther,
    [out] interface IMoniker **ppmkRelPath
  );
  HRESULT __stdcall GetDisplayName (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [out] LPWSTR ppszDisplayName
  );
  HRESULT __stdcall ParseDisplayName (
    [in] interface IBindCtx *pbc,
    [in] interface IMoniker *pmkToLeft,
    [in] LPWSTR pszDisplayName,
    [out] UINT *pchEaten,
    [out] interface IMoniker **ppmkOut
  );
  HRESULT __stdcall IsSystemMoniker (
    [out] UINT *pdwMksys
  );
};
[
  uuid(00000109-0000-0000-C000-000000000046)
]
interface IPersistStream : IPersist
{
  [id(1610743808)]
  HRESULT __stdcall IsDirty (void);
  HRESULT __stdcall Load (
    [in] interface IStream *pstm
  );
  HRESULT __stdcall Save (
    [in] interface IStream *pstm,
    [in] long fClearDirty
  );
  HRESULT __stdcall GetSizeMax (
    [out] struct _ULARGE_INTEGER *pcbSize
  );
};
[
  uuid(0000010C-0000-0000-C000-000000000046)
]
interface IPersist : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetClassID (
    [out] struct GUID *pClassID
  );
};
[
  uuid(0000000C-0000-0000-C000-000000000046)
]
interface IStream : ISequentialStream
{
  [id(1610743808)]
  HRESULT __stdcall RemoteSeek (
    [in] struct _LARGE_INTEGER dlibMove,
    [in] UINT dwOrigin,
    [out] struct _ULARGE_INTEGER *plibNewPosition
  );
  HRESULT __stdcall SetSize (
    [in] struct _ULARGE_INTEGER libNewSize
  );
  HRESULT __stdcall RemoteCopyTo (
    [in] interface IStream *pstm,
    [in] struct _ULARGE_INTEGER cb,
    [out] struct _ULARGE_INTEGER *pcbRead,
    [out] struct _ULARGE_INTEGER *pcbWritten
  );
  HRESULT __stdcall Commit (
    [in] UINT grfCommitFlags
  );
  HRESULT __stdcall Revert (void);
  HRESULT __stdcall LockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall UnlockRegion (
    [in] struct _ULARGE_INTEGER libOffset,
    [in] struct _ULARGE_INTEGER cb,
    [in] UINT dwLockType
  );
  HRESULT __stdcall Stat (
    [out] struct tagSTATSTG *pstatstg,
    [in] UINT grfStatFlag
  );
  HRESULT __stdcall Clone (
    [out] interface IStream **ppstm
  );
};
[
  uuid(0C733A30-2A1C-11CE-ADE5-00AA0044773D)
]
interface ISequentialStream : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteRead (
    [out] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbRead
  );
  HRESULT __stdcall RemoteWrite (
    [in] UCHAR *pv,
    [in] UINT cb,
    [out] UINT *pcbWritten
  );
};
[
  uuid(0000000E-0000-0000-C000-000000000046)
]
interface IBindCtx : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RegisterObjectBound (
    [in] IUnknown * punk
  );
  HRESULT __stdcall RevokeObjectBound (
    [in] IUnknown * punk
  );
  HRESULT __stdcall ReleaseBoundObjects (void);
  HRESULT __stdcall RemoteSetBindOptions (
    [in] struct tagBIND_OPTS2 *pbindopts
  );
  HRESULT __stdcall RemoteGetBindOptions (
    [in out] struct tagBIND_OPTS2 *pbindopts
  );
  HRESULT __stdcall GetRunningObjectTable (
    [out] interface IRunningObjectTable **pprot
  );
  HRESULT __stdcall RegisterObjectParam (
    [in] LPWSTR pszKey,
    [in] IUnknown * punk
  );
  HRESULT __stdcall GetObjectParam (
    [in] LPWSTR pszKey,
    [out] IUnknown **ppunk
  );
  HRESULT __stdcall EnumObjectParam (
    [out] interface IEnumString **ppenum
  );
  HRESULT __stdcall RevokeObjectParam (
    [in] LPWSTR pszKey
  );
};
[
  uuid(00000010-0000-0000-C000-000000000046)
]
interface IRunningObjectTable : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Register (
    [in] UINT grfFlags,
    [in] IUnknown * punkObject,
    [in] interface IMoniker *pmkObjectName,
    [out] UINT *pdwRegister
  );
  HRESULT __stdcall Revoke (
    [in] UINT dwRegister
  );
  HRESULT __stdcall IsRunning (
    [in] interface IMoniker *pmkObjectName
  );
  HRESULT __stdcall GetObject (
    [in] interface IMoniker *pmkObjectName,
    [out] IUnknown **ppunkObject
  );
  HRESULT __stdcall NoteChangeTime (
    [in] UINT dwRegister,
    [in] struct _FILETIME *pfiletime
  );
  HRESULT __stdcall GetTimeOfLastChange (
    [in] interface IMoniker *pmkObjectName,
    [out] struct _FILETIME *pfiletime
  );
  HRESULT __stdcall EnumRunning (
    [out] interface IEnumMoniker **ppenumMoniker
  );
};
[
  uuid(00000102-0000-0000-C000-000000000046)
]
interface IEnumMoniker : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] interface IMoniker **rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumMoniker **ppenum
  );
};
[
  uuid(00000101-0000-0000-C000-000000000046)
]
interface IEnumString : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] LPWSTR rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumString **ppenum
  );
};
[
  uuid(00000105-0000-0000-C000-000000000046)
]
interface IEnumSTATDATA : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall RemoteNext (
    [in] UINT celt,
    [out] struct tagSTATDATA *rgelt,
    [out] UINT *pceltFetched
  );
  HRESULT __stdcall Skip (
    [in] UINT celt
  );
  HRESULT __stdcall Reset (void);
  HRESULT __stdcall Clone (
    [out] interface IEnumSTATDATA **ppenum
  );
};
[
  uuid(E49F7A60-74AF-11D0-A286-00C04FD8FE93)
]
interface IConsoleVerb : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetVerbState (
    [in] enum _MMC_CONSOLE_VERB eCmdID,
    [in] enum _MMC_BUTTON_STATE nState,
    [out] long *pState
  );
  HRESULT __stdcall SetVerbState (
    [in] enum _MMC_CONSOLE_VERB eCmdID,
    [in] enum _MMC_BUTTON_STATE nState,
    [in] long bState
  );
  HRESULT __stdcall SetDefaultVerb (
    [in] enum _MMC_CONSOLE_VERB eCmdID
  );
  HRESULT __stdcall GetDefaultVerb (
    [out] enum _MMC_CONSOLE_VERB *peCmdID
  );
};
[
  uuid(255F18CC-65DB-11D1-A7DC-00C04FD8D565),
  helpstring("IConsoleNameSpace2 Interface")
]
interface IConsoleNameSpace2 : IConsoleNameSpace
{
  [id(1610743808)]
  HRESULT __stdcall Expand (
    [in] LONG_PTR hItem
  );
  HRESULT __stdcall AddExtension (
    [in] LONG_PTR hItem,
    [in] struct GUID *lpClsid
  );
};
[
  uuid(BEDEB620-F24D-11CF-8AFC-00AA003CA9F6),
  helpstring("IConsoleNameSpace Interface")
]
interface IConsoleNameSpace : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall InsertItem (
    [in out] struct _SCOPEDATAITEM *item
  );
  HRESULT __stdcall DeleteItem (
    [in] LONG_PTR hItem,
    [in] long fDeleteThis
  );
  HRESULT __stdcall SetItem (
    [in] struct _SCOPEDATAITEM *item
  );
  HRESULT __stdcall GetItem (
    [in out] struct _SCOPEDATAITEM *item
  );
  HRESULT __stdcall GetChildItem (
    [in] LONG_PTR item,
    [out] LONG_PTR *pItemChild,
    [out] LONG_PTR *pCookie
  );
  HRESULT __stdcall GetNextItem (
    [in] LONG_PTR item,
    [out] LONG_PTR *pItemNext,
    [out] LONG_PTR *pCookie
  );
  HRESULT __stdcall GetParentItem (
    [in] LONG_PTR item,
    [out] LONG_PTR *pItemParent,
    [out] LONG_PTR *pCookie
  );
};
[
  uuid(2F3BE7C5-BBFC-4DB0-A305-EA42B8C8BC9C),
  helpstring("ISnapinNode Interface")
]
interface ISnapinNode : IUnknown
{
  [id(1610678272), propget]
  HRESULT __stdcall IsScopeNode (
    [out retval] long *pbIsScopeNode
  );
  [propget]
  HRESULT __stdcall NodeType (
    [out retval] struct GUID *pguidNodeType
  );
  [propget]
  HRESULT __stdcall ColumnsCount (
    [out retval] int *pnCount
  );
  [propget]
  HRESULT __stdcall displayname (
    [in] int nColumn,
    [out retval] BSTR *pbstrDisplayName
  );
  [propget]
  HRESULT __stdcall IconIndex (
    [in] enum tagESnapinIconType eIconType,
    [out retval] int *pnIndex
  );
  [propget]
  HRESULT __stdcall ScopeNodeID (
    [out retval] LONG_PTR *phID
  );
  [id(1610678277), propput]
  HRESULT __stdcall ScopeNodeID (
    [in] LONG_PTR argNo1
  );
  [id(1610678279), propget]
  HRESULT __stdcall ParentID (
    [out retval] LONG_PTR *phID
  );
  [id(1610678279), propput]
  HRESULT __stdcall ParentID (
    [in] LONG_PTR argNo1
  );
  [id(1610678281)]
  HRESULT __stdcall GetResultViewType (
    [out] BSTR *pbstrViewType,
    [out] long *pnViewOptions
  );
  HRESULT __stdcall CompareTo (
    [in] interface ISnapinNode *pNode,
    [out] int *pnResult
  );
  HRESULT __stdcall PreDisplayInfo (
    [in] interface IConsole2 *pConsole
  );
};
[
  uuid(955AB28A-5218-11D0-A985-00C04FD8D565),
  helpstring("IComponentData Interface")
]
interface IComponentData : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Initialize (
    [in] IUnknown * pUnknown
  );
  HRESULT __stdcall CreateComponent (
    [out] interface IComponent **ppComponent
  );
  HRESULT __stdcall Notify (
    [in] interface IDataObject *lpDataObject,
    [in] enum _MMC_NOTIFY_TYPE event,
    [in] LONG_PTR arg,
    [in] LONG_PTR param
  );
  HRESULT __stdcall Destroy (void);
  HRESULT __stdcall QueryDataObject (
    [in] LONG_PTR cookie,
    [in] enum _DATA_OBJECT_TYPES type,
    [out] interface IDataObject **ppDataObject
  );
  HRESULT __stdcall GetDisplayInfo (
    [in out] struct _SCOPEDATAITEM *pScopeDataItem
  );
  HRESULT __stdcall CompareObjects (
    [in] interface IDataObject *lpDataObjectA,
    [in] interface IDataObject *lpDataObjectB
  );
};
[
  uuid(43136EB2-D36C-11CF-ADBC-00AA00A80033),
  helpstring("IComponent Interface")
]
interface IComponent : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Initialize (
    [in] interface IConsole *lpConsole
  );
  HRESULT __stdcall Notify (
    [in] interface IDataObject *lpDataObject,
    [in] enum _MMC_NOTIFY_TYPE event,
    [in] LONG_PTR arg,
    [in] LONG_PTR param
  );
  HRESULT __stdcall Destroy (
    [in] LONG_PTR cookie
  );
  HRESULT __stdcall QueryDataObject (
    [in] LONG_PTR cookie,
    [in] enum _DATA_OBJECT_TYPES type,
    [out] interface IDataObject **ppDataObject
  );
  HRESULT __stdcall GetResultViewType (
    [in] LONG_PTR cookie,
    [out] LPWSTR ppViewType,
    [out] long *pViewOptions
  );
  HRESULT __stdcall GetDisplayInfo (
    [in out] struct _RESULTDATAITEM *pResultDataItem
  );
  HRESULT __stdcall CompareObjects (
    [in] interface IDataObject *lpDataObjectA,
    [in] interface IDataObject *lpDataObjectB
  );
};
[
  uuid(FC4801A3-2BA9-11CF-A229-00AA003D7352)
]
interface IObjectWithSite : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall SetSite (
    [in] IUnknown * pUnkSite
  );
  HRESULT __stdcall GetSite (
    [in] struct GUID *riid,
    [out] void *ppvSite
  );
};
[
  uuid(720F1EF7-D142-434F-AA36-F61B54DA0B56),
  helpstring("IPrinterQueueViewExtension Interface")
]
interface IPrinterQueueViewExtension : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetDisplayName (
    [out retval] BSTR *pbstrDisplayName
  );
  HRESULT __stdcall Initialize (
    [in] wireHWND hwndHost
  );
  HRESULT __stdcall SetObjectRect (
    [in] struct tagRECT *prcHostClient
  );
  HRESULT __stdcall SetPrinterName (
    [in] BSTR bstrPrinterName,
    [in] long bStartMonitoring
  );
  HRESULT __stdcall Activate (void);
  HRESULT __stdcall Deactivate (void);
  HRESULT __stdcall Uninitialize (void);
};
[
  uuid(9696B84C-6B39-4E0F-AD95-32ED6019E2B0),
  helpstring("IStdCallbackInfoset Interface")
]
interface IStdCallbackInfoset : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall OnNotify (
    [in] struct tagINFOSET_NOTIFY_INFO *pContext
  );
};
[
  uuid(81966513-2D8A-4056-99C4-B59FF186F2D2),
  helpstring("ILegacyPrintUI Interface")
]
interface ILegacyPrintUI : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall ShowJobProperties (
    [in] wireHWND hwnd,
    [in] BSTR bstrPrinterName,
    [in] UINT dwJobID,
    [in] int nCmdShow,
    [in] int nStartPage
  );
  HRESULT __stdcall ShowPrinterProperties (
    [in] wireHWND hwnd,
    [in] BSTR bstrPrinterName,
    [in] int nCmdShow,
    [in] int nStartPage,
    [in] int nFlags,
    [in] long bModal
  );
  HRESULT __stdcall ShowServerProperties (
    [in] wireHWND hwnd,
    [in] BSTR bstrServerName,
    [in] int nCmdShow,
    [in] int nStartPage,
    [in] long bModal
  );
  HRESULT __stdcall ShowDriverProperties (
    [in] wireHWND hwnd,
    [in] struct _COM_DRIVER_INFO_6 *pDriverInfo6
  );
  HRESULT __stdcall ShowDocumentDefaults (
    [in] wireHWND hwnd,
    [in] BSTR bstrPrinterName,
    [in] int nCmdShow,
    [in] int nStartPage,
    [in] long bModal,
    [in] long bGlobal
  );
  HRESULT __stdcall ShowPrinterQueue (
    [in] wireHWND hwnd,
    [in] BSTR bstrPrinterName,
    [in] int nCmdShow,
    [in] long bModal
  );
  HRESULT __stdcall PrintTestPage (
    [in] wireHWND hwnd,
    [in] BSTR bstrPrinterName
  );
  HRESULT __stdcall ShowErrorMessage (
    [in] wireHWND hwnd,
    [in] HRESULT hrError,
    [in] void *hModule,
    [in] BSTR bstrTitle,
    [in] BSTR bstrMessagePrefix,
    [in] unsigned int uType,
    [in] UINT_PTR nContext,
    [out] int *piResult
  );
  HRESULT __stdcall LaunchNAPW (
    [in] wireHWND hwnd,
    [in] BSTR bstrServerName
  );
  HRESULT __stdcall LaunchAPDW (
    [in] wireHWND hwnd,
    [in] BSTR bstrServerName
  );
  HRESULT __stdcall LaunchAddPort (
    [in] wireHWND hwnd,
    [in] BSTR bstrServerName
  );
  HRESULT __stdcall UpdateDriver (
    [in] wireHWND hwnd,
    [in] BSTR bstrServerName,
    [in] struct _COM_DRIVER_INFO_6 *pDriverInfo
  );
  HRESULT __stdcall GetErrorTextFromHRESULT (
    [in] HRESULT hrError,
    [out] BSTR *pbstrErrorText
  );
};
[
  uuid(217EBB8E-BC0F-413C-A4C4-87EDA3E952D6),
  helpstring("IGlobalServiceDS Interface")
]
interface IGlobalServiceDS : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall IsMachineOnDSDomain (
    [in] BSTR bstrServerName,
    [out] long *pbIsMachineOnDSDomain
  );
  HRESULT __stdcall IsUserOnDSDomain (
    [out] long *pbIsUserOnDSDomain
  );
  HRESULT __stdcall GetCurrentDomainDN (
    [out] BSTR *pbstrDomainDN
  );
  HRESULT __stdcall DSGetParent (
    [in] BSTR bstrLPDAPath,
    [in] unsigned int nLevelUp,
    [out] IUnknown **ppIADs
  );
  HRESULT __stdcall GetPPCsOnGPO (
    [in] IUnknown * pGPO,
    [in] long bPerMachine,
    [out] long *pnCount,
    [out] struct tagPPC_INFO **ppPPCs
  );
  HRESULT __stdcall PushPPCsToGPO (
    [in] IUnknown * pGPO,
    [in] struct GUID *guidSnapin,
    [in] long nCount,
    [in out] struct tagPPC_INFO *pPPCs
  );
  HRESULT __stdcall RemovePPCsFromGPO (
    [in] struct GUID *guidSnapin,
    [in] long nCount,
    [in out] struct tagPPC_INFO *pPPCs
  );
  HRESULT __stdcall GetPPCsOnCurrentDomain (
    [out] long *pnCount,
    [out] struct tagPPC_INFO **ppPPCs
  );
  HRESULT __stdcall GetDSObjectsWithPPC (
    [in] BSTR bstrUNCName,
    [out] long *pnCount,
    [out] struct tagDS_OBJ_INFO **ppDSObjs
  );
};
[
  uuid(07ECA99C-604E-4472-BFEE-34936E5AF764),
  helpstring("IUIGlobalNotify Interface")
]
interface IUIGlobalNotify : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall CreateChannel (void);
  HRESULT __stdcall CloseChannel (void);
  HRESULT __stdcall IsChannelOpen (
    [out] long *pbIsChannelOpen
  );
  HRESULT __stdcall SendNotify (
    [in] struct GUID *rguidNotificationType,
    [in] ULONG_PTR nCookieNotify
  );
  HRESULT __stdcall PostNotify (
    [in] struct GUID *rguidNotificationType,
    [in] IUnknown * pCookieUnknown
  );
  HRESULT __stdcall RegisterSendHandler (
    [in] struct GUID *rguidNotificationType,
    [in] interface IStdCallback *pCallback,
    [out] ULONG_PTR *pnRegistrationCookie
  );
  HRESULT __stdcall RegisterPostHandler (
    [in] struct GUID *rguidNotificationType,
    [in] interface IStdCallbackUnknown *pCallbackUnknown,
    [out] ULONG_PTR *pnRegistrationCookie
  );
  HRESULT __stdcall UnregisterHandler (
    [in] ULONG_PTR nRegistrationCookie
  );
};
[
  uuid(ABF011B6-A2BA-40F7-A588-4AF5C7BC2367),
  helpstring("IStdCallback Interface")
]
interface IStdCallback : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall OnNotify (
    [in] ULONG_PTR nContext
  );
};
[
  uuid(FE044F1C-EA33-4633-8090-1FA8AFD10398),
  helpstring("IStdCallbackUnknown Interface")
]
interface IStdCallbackUnknown : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall OnNotify (
    [in] IUnknown * pCookieUnknown
  );
};

