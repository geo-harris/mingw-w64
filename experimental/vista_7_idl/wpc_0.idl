/* Automated generated idl file <wpcapiplib>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Interface forward declarations.  */
interface ISystemSettingsCore;
interface IUserSettingsCollection;
interface IUserSettings;
interface IPerUserSettings;
interface IAllowBlockCollection;
interface IAllowBlock;
interface IExtensionCollection;
interface IExtension;
interface IProviderCollection;
interface IProvider;
interface IStringCollection;
interface IRatingsSystem;
interface IRatingCollection;
interface IRating;
interface IDescriptorCollection;
interface IDescriptor;
interface IRatingsSystemCollection;
interface IRegisteredCustomEventCollection;
interface IRegisteredCustomEvent;
interface ISystemSettings;
interface ILogParser;

/* Structure forward declarations.  */
struct _SYSTEMTIME;
struct _userHBITMAP;
struct _userBITMAP;
struct _RemotableHandle;
struct tagWPC_LOG_VIEWER_BINARY_EVENTS;
struct tagWPC_LOG_VIEWER_BINARY_EVENT;

/* Union record forward declarations.  */
union __MIDL_IWinTypes_0007;
union __MIDL_IWinTypes_0009;

/* Union record forward declarations.  */
coclass SystemSettings;
coclass LogParser;
coclass DescriptorCollection;

/* Enumeration declarations.  */
enum tagALLOWBLOCKINFO
{
  ALLOWBLOCKINFO_NONE = (int) 201326592,
  ALLOWBLOCKINFO_ALLOWED = (int) 201326593,
  ALLOWBLOCKINFO_BLOCKED = (int) 201326594,
  ALLOWBLOCKINFO_ALLOWED_OVERRIDE = (int) 201326595
};
enum tagREMINDERINTERVAL
{
  REMINDERINTERVAL_NEVER = (int) 201326592,
  REMINDERINTERVAL_DAILY = (int) 201326593,
  REMINDERINTERVAL_WEEKLY = (int) 201326599
};
enum tagRATING_SYSTEM_TYPE
{
  RATING_SYSTEM_TYPE_ALL = (int) 201326592,
  RATING_SYSTEM_TYPE_GAMES = (int) 201326593,
  RATING_SYSTEM_TYPE_WEB = (int) 201326594,
  RATING_SYSTEM_TYPE_MAX = (int) 201326596
};
enum tagRSCOLLECTION_SCOPE
{
  RSCOLLECTION_SCOPE_ACTIVE = (int) 201326592,
  RSCOLLECTION_SCOPE_DEPRECATED = (int) 201326593,
  RSCOLLECTION_SCOPE_ALL = (int) 201326594
};

/* Structure/union declarations.  */
struct _SYSTEMTIME
{
  USHORT wYear;
  USHORT wMonth;
  USHORT wDayOfWeek;
  USHORT wDay;
  USHORT wHour;
  USHORT wMinute;
  USHORT wSecond;
  USHORT wMilliseconds;
};
struct _userHBITMAP
{
  long fContext;
  union __MIDL_IWinTypes_0007 u;
};
union __MIDL_IWinTypes_0007
{
  long hInproc;
  struct _userBITMAP *hRemote;
  LONGLONG hInproc64;
};
struct _userBITMAP
{
  long bmType;
  long bmWidth;
  long bmHeight;
  long bmWidthBytes;
  USHORT bmPlanes;
  USHORT bmBitsPixel;
  UINT cbSize;
  UCHAR *pBuffer;
};
struct _RemotableHandle
{
  long fContext;
  union __MIDL_IWinTypes_0009 u;
};
union __MIDL_IWinTypes_0009
{
  long hInproc;
  long hRemote;
};
struct tagWPC_LOG_VIEWER_BINARY_EVENTS
{
  struct tagWPC_LOG_VIEWER_BINARY_EVENT beSystem;
  struct tagWPC_LOG_VIEWER_BINARY_EVENT beUser;
};
struct tagWPC_LOG_VIEWER_BINARY_EVENT
{
  UINT cbDataLength;
  UINT dwPropCount;
  UCHAR *pbaData;
};

/* Type definitions.  */
typedef struct _userHBITMAP * wireHBITMAP;
typedef struct _RemotableHandle * wireHWND;

[
  uuid(0F3A3EDB-6AEC-4A63-9A38-23245FE7962B),
  version(1.0),
  helpstring("WPC private 1.0 Type Library")
]
library wpcapiplib
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(E77E1B8B-ECF3-4AF0-8B5E-EB13739D5344),
     version(1.0),
     helpstring("WPC Private API Class"),
     cancreate
   ]
   coclass SystemSettings
   {
     interface ISystemSettingsCore;
     interface ISystemSettings;
   };
   [
     uuid(D5307D61-F9BC-4DE1-94EA-1DEF24DF4BB2),
     version(1.0),
     helpstring("WPC Private API Log Parser Class"),
     cancreate
   ]
   coclass LogParser
   {
     interface ILogParser;
   };
   [
     uuid(5323BCB5-0431-42BE-A482-5EE76F243A28),
     version(1.0),
     helpstring("WPC Private API Class"),
     cancreate
   ]
   coclass DescriptorCollection
   {
     interface IDescriptorCollection;
   };

};

/* Interface declarations.  */
[
  uuid(D4C428B7-7120-4DC4-A595-208696109381),
  helpstring("ISystemSettingsCore Interface")
]
interface ISystemSettingsCore : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall AddUser (
    [in] LPWSTR pcszSID
  );
  HRESULT __stdcall RemoveUser (
    [in] LPWSTR pcszSID
  );
  HRESULT __stdcall CreateUser (
    [in] LPWSTR pcszUserName,
    [in] long fPasswordReq
  );
  HRESULT __stdcall DemoteUser (
    [in] LPWSTR pcszUserName
  );
  HRESULT __stdcall SetPassword (
    [in] LPWSTR pcszUserName,
    [in] LPWSTR pcszPassword,
    [in] LPWSTR pcszHint
  );
  HRESULT __stdcall ForcePassword (
    [in] LPWSTR pcszUserName
  );
  HRESULT __stdcall GetUsers (
    [out] interface IUserSettingsCollection **ppUserCollection
  );
  HRESULT __stdcall IsUserLoggedOn (
    [in] LPWSTR pcszSID,
    [out] long *fLoggedOn
  );
  HRESULT __stdcall GetLogViewReminderInterval (
    [out] enum tagREMINDERINTERVAL *peInterval
  );
  HRESULT __stdcall SetLogViewReminderInterval (
    [in] enum tagREMINDERINTERVAL eInterval
  );
  HRESULT __stdcall GetLastLogViewTime (
    [out] struct _SYSTEMTIME *pTime
  );
  HRESULT __stdcall SetLastLogViewTime (
    [in] struct _SYSTEMTIME Time
  );
  HRESULT __stdcall GetExtensionsList (
    [out] interface IExtensionCollection **ppList
  );
  HRESULT __stdcall GetProviderList (
    [out] interface IProviderCollection **ppList
  );
  HRESULT __stdcall GetCurrentProvider (
    [out] interface IProvider **ppProvider
  );
  HRESULT __stdcall ResetCurrentProvider (void);
  HRESULT __stdcall GetWebFilter (
    [out] struct GUID *pguidID,
    [in out] LPWSTR ppszName
  );
  HRESULT __stdcall SetWebFilter (
    [in] struct GUID guidID,
    [in] LPWSTR pszName
  );
  HRESULT __stdcall GetHTTPExemptList (
    [out] interface IStringCollection **ppList
  );
  HRESULT __stdcall AddHTTPExemption (
    [in] LPWSTR pcszPath
  );
  HRESULT __stdcall ClearHTTPExemptList (void);
  HRESULT __stdcall GetWinHTTPExemptList (
    [out] interface IStringCollection **ppList
  );
  HRESULT __stdcall GetURLExemptList (
    [out] interface IStringCollection **ppList
  );
  HRESULT __stdcall AddURLExemption (
    [in] LPWSTR pcszURL
  );
  HRESULT __stdcall ClearURLExemptList (void);
  HRESULT __stdcall GetWinURLExemptList (
    [out] interface IStringCollection **ppList
  );
  HRESULT __stdcall GetCurrentRatingsSystemID (
    [in] enum tagRATING_SYSTEM_TYPE eType,
    [out] struct GUID *pguidID
  );
  HRESULT __stdcall SetCurrentRatingsSystemID (
    [in] enum tagRATING_SYSTEM_TYPE eType,
    [in] struct GUID pguidID
  );
  HRESULT __stdcall GetRatingsSystemByID (
    [in] enum tagRATING_SYSTEM_TYPE eType,
    [in] struct GUID pguidID,
    [out] interface IRatingsSystem **ppRatingsSystem
  );
  HRESULT __stdcall GetCurrentRatingsSystem (
    [in] enum tagRATING_SYSTEM_TYPE eType,
    [out] interface IRatingsSystem **ppRatingsSystem
  );
  HRESULT __stdcall SetCurrentRatingsSystem (
    [in] enum tagRATING_SYSTEM_TYPE eType,
    [in] interface IRatingsSystem *pSystem
  );
  HRESULT __stdcall GetAvailableRatingsSystems (
    [in] UINT dwTypes,
    [out] interface IRatingsSystemCollection **ppSystems
  );
  HRESULT __stdcall GetDefaultRatingsSystemForLocale (
    [in] enum tagRATING_SYSTEM_TYPE eType,
    [in] UINT ulLCID,
    [out] interface IRatingsSystem **ppSystem
  );
  HRESULT __stdcall GetDefaultRatingsSystemForCurrentLocale (
    [in] enum tagRATING_SYSTEM_TYPE eType,
    [out] interface IRatingsSystem **ppSystem
  );
  HRESULT __stdcall HasSettings (
    [in] LPWSTR pcszSID,
    [out] long *pfHasSettings
  );
  HRESULT __stdcall GetCustomEvents (
    [out] interface IRegisteredCustomEventCollection **ppList
  );
  HRESULT __stdcall AddCustomEvent (
    [in] LPWSTR pcszProvider,
    [in] LPWSTR pcszApplication,
    [in] LPWSTR pcszEvent,
    [in] UINT dwNumHeaders,
    [in] interface ISystemSettingsCore ppszHeaders
  );
  HRESULT __stdcall RemoveCustomEvent (
    [in] LPWSTR pcszProvider,
    [in] LPWSTR pcszApplication,
    [in] LPWSTR pcszEvent
  );
};
[
  uuid(AD4DBED4-4CC8-4880-B996-BF39E3960C8B),
  helpstring("IUserSettingsCollection")
]
interface IUserSettingsCollection : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCount (
    [out] UINT *pulCount
  );
  HRESULT __stdcall GetItem (
    [in] UINT ulIndex,
    [out] interface IUserSettings **ppiUserSettings
  );
};
[
  uuid(A14967B6-617F-464B-85F4-F7CA0E03BE9F),
  helpstring("IUserSettings Interface")
]
interface IUserSettings : IPerUserSettings
{
  [id(1610743808)]
  HRESULT __stdcall SetWPCEnabled (
    [in] long fEnabled
  );
  HRESULT __stdcall AreOverrideRequestsEnabled (
    [out] long *pfEnabled
  );
  HRESULT __stdcall SetOverrideRequestsEnabled (
    [in] long fEnabled
  );
  HRESULT __stdcall AreHourlyRestrictionsEnabled (
    [out] long *pfEnabled
  );
  HRESULT __stdcall SetHourlyRestrictionsEnabled (
    [in] long fEnabled
  );
  HRESULT __stdcall GetHourlyRestrictions (
    [in] UINT cb,
    [in out] UCHAR *pbHours
  );
  HRESULT __stdcall SetHourlyRestrictions (
    [in] UINT cb,
    [in] UCHAR *pbHours
  );
  HRESULT __stdcall AreApplicationRestrictionsEnabled (
    [out] long *pfEnabled
  );
  HRESULT __stdcall SetApplicationRestrictionsEnabled (
    [in] long fEnabled
  );
  HRESULT __stdcall IsApplicationPathEnabled (
    [in] LPWSTR pcszPath,
    [out] enum tagALLOWBLOCKINFO *peEnabled
  );
  HRESULT __stdcall IsPathDefaultEnabled (
    [in] LPWSTR pwszFullExePath,
    [out] enum tagALLOWBLOCKINFO *peEnabled
  );
  HRESULT __stdcall SetApplicationPathEnabled (
    [in] LPWSTR pcszPath,
    [in] long fEnabled
  );
  HRESULT __stdcall GetApplicationList (
    [out] interface IAllowBlockCollection **ppList
  );
  HRESULT __stdcall ClearApplicationRestrictions (void);
};
[
  uuid(E3EF7530-CADD-4651-81B0-F0251B1011C4),
  helpstring("IPerUserSettings Interface")
]
interface IPerUserSettings : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Load (void);
  HRESULT __stdcall Save (void);
  HRESULT __stdcall Remove (void);
  HRESULT __stdcall GetSID (
    [out] LPWSTR ppszSID
  );
  HRESULT __stdcall IsWPCEnabled (
    [out] long *pfEnabled
  );
  HRESULT __stdcall IsLoggingEnabled (
    [out] long *pfEnabled
  );
  HRESULT __stdcall SetLoggingEnabled (
    [in] long fEnabled
  );
};
[
  uuid(5598F93F-5C86-4CAB-987D-4F9058E0FDCE),
  helpstring("IAllowBlockCollection")
]
interface IAllowBlockCollection : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCount (
    [out] UINT *pulCount
  );
  HRESULT __stdcall GetItem (
    [in] UINT ulIndex,
    [out] interface IAllowBlock **ppiEntry
  );
};
[
  uuid(017B23D5-86A1-4D9C-9E60-B0C30B45F731),
  helpstring("IAddressAllowBlock")
]
interface IAllowBlock : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetSID (
    [out] LPWSTR ppcszSID
  );
  HRESULT __stdcall GetKey (
    [out] LPWSTR ppcszKey
  );
  HRESULT __stdcall GetAllowed (
    [out] enum tagALLOWBLOCKINFO *peAllowed
  );
};
[
  uuid(0BA6C62F-C7D3-4C34-8AC8-E43ECEF9F32C),
  helpstring("IExtensionCollection Interface")
]
interface IExtensionCollection : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCount (
    [out] UINT *pulCount
  );
  HRESULT __stdcall GetItem (
    [in] UINT ulIndex,
    [out] interface IExtension **ppiExtension
  );
  HRESULT __stdcall AddItem (
    [in] interface IExtension *piExtension
  );
  HRESULT __stdcall RemoveItem (
    [in] UINT ulIndex
  );
  HRESULT __stdcall Clear (void);
};
[
  uuid(8A456287-C88B-4BFC-8404-A15902C9A174),
  helpstring("IExtension Interface")
]
interface IExtension : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetID (
    [out] struct GUID *pguidID
  );
  HRESULT __stdcall GetPath (
    [out] LPWSTR ppszPath
  );
  HRESULT __stdcall GetImagePath (
    [out] LPWSTR ppszPath
  );
  HRESULT __stdcall GetDisabledImagePath (
    [out] LPWSTR ppszPath
  );
  HRESULT __stdcall GetName (
    [out] LPWSTR ppszPath
  );
  HRESULT __stdcall GetSubTitle (
    [out] LPWSTR ppszPath
  );
};
[
  uuid(2CC8FDB1-BC5E-4FBD-8012-E09CEA6C8050),
  helpstring("IProviderCollection Interface")
]
interface IProviderCollection : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCount (
    [out] UINT *pulCount
  );
  HRESULT __stdcall GetItem (
    [in] UINT ulIndex,
    [out] interface IProvider **ppiProvider
  );
  HRESULT __stdcall AddItem (
    [in] interface IProvider *piProvider
  );
  HRESULT __stdcall RemoveItem (
    [in] UINT ulIndex
  );
  HRESULT __stdcall Clear (void);
};
[
  uuid(4A42C4B5-5821-423D-A7D8-078809AAE4C0),
  helpstring("IProvider Interface")
]
interface IProvider : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall IsCurrent (
    [out] long *pfIsCurrent
  );
  HRESULT __stdcall Preload (void);
  HRESULT __stdcall GetID (
    [out] struct GUID *pguidID
  );
  HRESULT __stdcall GetDisplayName (
    [out] BSTR *pbstrName
  );
  HRESULT __stdcall GetDescription (
    [out] BSTR *pbstrDescription
  );
  HRESULT __stdcall GetLogoImage (
    [out] wireHBITMAP *phBitmap
  );
  HRESULT __stdcall Enable (void);
  HRESULT __stdcall GetUserSummary (
    [in] BSTR bstrSID,
    [out] BSTR *pbstrUserSummary
  );
  HRESULT __stdcall Configure (
    [in] wireHWND hWnd,
    [in] BSTR bstrSID
  );
  HRESULT __stdcall RequestOverride (
    [in] wireHWND hWnd,
    [in] BSTR bstrPath,
    [in] UINT dwFlags
  );
  HRESULT __stdcall IsGRSVisible (
    [out] long *pfGRSVisible
  );
};
[
  uuid(91203EEA-0EEF-4B90-BBE8-7C7CD14D6EE5),
  helpstring("IStringCollection Interface")
]
interface IStringCollection : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCount (
    [out] UINT *pulCount
  );
  HRESULT __stdcall GetItem (
    [in] UINT ulIndex,
    [out] LPWSTR ppszValue
  );
  HRESULT __stdcall AddItem (
    [in] LPWSTR pszValue
  );
  HRESULT __stdcall RemoveItem (
    [in] UINT ulIndex
  );
  HRESULT __stdcall Clear (void);
};
[
  uuid(2818DF95-3B08-4D8B-A063-0ECFBF3F6220),
  helpstring("IRatingsSystem Interface")
]
interface IRatingsSystem : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetID (
    [out] struct GUID *pguidID
  );
  HRESULT __stdcall GetLongName (
    [out] BSTR *pbstrLongName
  );
  HRESULT __stdcall GetShortName (
    [out] BSTR *pbstrShortName
  );
  HRESULT __stdcall GetDescription (
    [out] BSTR *pbstrDescription
  );
  HRESULT __stdcall GetWebAddress (
    [out] BSTR *pbstrWebAddress
  );
  HRESULT __stdcall GetLogo (
    [out] wireHBITMAP *phBitmap
  );
  HRESULT __stdcall GetLogoResourceInfo (
    [in out] BSTR *pbstrPath,
    [in out] BSTR *pbstrResourceId,
    [in out] BSTR *pbstrType
  );
  HRESULT __stdcall GetVersion (
    [out] BSTR *pbstrVersion
  );
  HRESULT __stdcall GetRatings (
    [in] enum tagRSCOLLECTION_SCOPE rscsScope,
    [out] interface IRatingCollection **ppiRatingCollection
  );
  HRESULT __stdcall GetDescriptors (
    [in] enum tagRSCOLLECTION_SCOPE rscsScope,
    [out] interface IDescriptorCollection **ppiDescriptorCollection
  );
  HRESULT __stdcall GetRatingByID (
    [in] struct GUID guidID,
    [out] interface IRating **ppiRating
  );
  HRESULT __stdcall GetDescriptorByID (
    [in] struct GUID guidID,
    [out] interface IDescriptor **ppiDescriptor
  );
  HRESULT __stdcall GetUpdatedRating (
    [in] interface IRating *piDeprecatedRating,
    [out] interface IRating **ppiUpdatedRating
  );
  HRESULT __stdcall GetUpdatedRatingID (
    [in] struct GUID guidDeprecatedRatingID,
    [out] struct GUID *pguidUpdatedRatingID
  );
  HRESULT __stdcall GetUpdatedDescriptor (
    [in] interface IDescriptor *piDeprecatedDescriptor,
    [out] interface IDescriptor **ppiUpdatedDescriptor
  );
  HRESULT __stdcall GetUpdatedDescriptorID (
    [in] struct GUID guidDeprecatedDescriptorID,
    [out] struct GUID *pguidUpdatedDescriptorID
  );
  HRESULT __stdcall GetDefaultMaxRating (
    [out] interface IRating **ppiRating
  );
  HRESULT __stdcall GetRatingForAge (
    [in] UINT ulAge,
    [out] interface IRating **ppiRating
  );
};
[
  uuid(180A36C6-967F-4DE0-870F-321CCE0657D8),
  helpstring("IRatingCollection")
]
interface IRatingCollection : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCount (
    [out] UINT *pulCount
  );
  HRESULT __stdcall GetItem (
    [in] UINT ulIndex,
    [out] interface IRating **ppiRating
  );
};
[
  uuid(54465C6D-E2CF-4668-BC22-88DB466DC869),
  helpstring("IRating Interface")
]
interface IRating : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetID (
    [out] struct GUID *pguidID
  );
  HRESULT __stdcall GetLongName (
    [out] BSTR *pbstrLongName
  );
  HRESULT __stdcall GetShortName (
    [out] BSTR *pbstrShortName
  );
  HRESULT __stdcall GetDescription (
    [out] BSTR *pbstrDescription
  );
  HRESULT __stdcall GetLevel (
    [out] UINT *pulCount
  );
  HRESULT __stdcall GetIcon (
    [out] wireHBITMAP *phBitmap
  );
  HRESULT __stdcall GetIconResourceInfo (
    [in out] BSTR *pbstrPath,
    [in out] BSTR *pbstrResourceId,
    [in out] BSTR *pbstrType
  );
  HRESULT __stdcall GetUpdatedID (
    [in out] struct GUID *pguidUpdatedID
  );
  HRESULT __stdcall GetMinimumAge (
    [out] UINT *pulMinimumAge
  );
};
[
  uuid(D983ED46-CD91-4A9D-9C98-416F45F9FC31),
  helpstring("IDescriptorCollection")
]
interface IDescriptorCollection : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCount (
    [out] UINT *pulCount
  );
  HRESULT __stdcall GetItem (
    [in] UINT ulIndex,
    [out] interface IDescriptor **ppiDescriptor
  );
  HRESULT __stdcall AddItem (
    [in] interface IDescriptor *piDescriptor
  );
  HRESULT __stdcall RemoveItem (
    [in] UINT ulIndex
  );
  HRESULT __stdcall Clear (void);
};
[
  uuid(D2ED260C-38F1-4ABE-8B2B-D4A088C54416),
  helpstring("IDescriptor Interface")
]
interface IDescriptor : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetID (
    [out] struct GUID *pguidID
  );
  HRESULT __stdcall GetName (
    [out] BSTR *pbstrName
  );
  HRESULT __stdcall GetDescription (
    [out] BSTR *pbstrDescription
  );
  HRESULT __stdcall GetIcon (
    [out] wireHBITMAP *phBitmap
  );
  HRESULT __stdcall GetIconResourceInfo (
    [in out] BSTR *pbstrPath,
    [in out] BSTR *pbstrResourceId,
    [in out] BSTR *pbstrType
  );
  HRESULT __stdcall GetUpdatedID (
    [in out] struct GUID *pguidUpdatedID
  );
  HRESULT __stdcall GetProperties (
    [out] UINT *pdwProperties
  );
};
[
  uuid(C8784A2E-402B-4EF0-9CB7-8275CF051899),
  helpstring("IRatingsSystemCollection")
]
interface IRatingsSystemCollection : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCount (
    [out] UINT *pulCount
  );
  HRESULT __stdcall GetItem (
    [in] UINT ulIndex,
    [out] interface IRatingsSystem **ppiRatingSystem
  );
};
[
  uuid(58DE8078-B831-4E01-B2C6-9E3AE36A469D),
  helpstring("IRegisteredCustomEventCollection")
]
interface IRegisteredCustomEventCollection : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetCount (
    [out] UINT *pulCount
  );
  HRESULT __stdcall GetItem (
    [in] UINT ulIndex,
    [out] interface IRegisteredCustomEvent **ppiEntry
  );
};
[
  uuid(AF88D8F5-96F2-461B-809F-A37CB8780430),
  helpstring("IRegisteredCustomEvent")
]
interface IRegisteredCustomEvent : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall GetPublisher (
    [out] LPWSTR ppcszPublisher
  );
  HRESULT __stdcall GetApplication (
    [out] LPWSTR ppcszApplication
  );
  HRESULT __stdcall GetEvent (
    [out] LPWSTR ppcszEventName
  );
  HRESULT __stdcall GetNumberOfHeaders (
    [out] UINT *pdwHeaders
  );
  HRESULT __stdcall GetHeader (
    UINT dwIndex,
    [out] LPWSTR ppcszHeaderName
  );
};
[
  uuid(2FD8CB67-E02C-45BD-A0DE-C869505AFA1A),
  helpstring("ISystemSettings Interface")
]
interface ISystemSettings : ISystemSettingsCore
{
  [id(1610743808)]
  HRESULT __stdcall InstallGame (
    [in] IUnknown * piGameDescription
  );
};
[
  uuid(15F125DF-C67F-4BBD-B084-093600179F0A),
  helpstring("ILogParser Interface")
]
interface ILogParser : IUnknown
{
  [id(1610678272)]
  HRESULT __stdcall Initialize (
    [in] BSTR bstrChannel,
    [in] BSTR bstrQuery,
    [in] UINT dwTimeout,
    [in] UINT dwFlags
  );
  HRESULT __stdcall GetNextEvent (
    [out] struct tagWPC_LOG_VIEWER_BINARY_EVENTS *pBinaryEvents
  );
};

