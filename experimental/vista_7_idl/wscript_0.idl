/* Automated generated idl file <ihost>.
 * Generated by genidl tool (c) 2009, 2010 Mingw-w64 project.
 */

/* Union record forward declarations.  */
dispinterface IHost;
dispinterface IArguments2;
dispinterface IArguments;
dispinterface IWSHNamedArguments;
dispinterface IWSHUnnamedArguments;
dispinterface ITextStream;
dispinterface IFileSystem;
dispinterface IDriveCollection;
dispinterface IDrive;
dispinterface IFolder;
dispinterface IFolderCollection;
dispinterface IFileCollection;
dispinterface IFile;
dispinterface IFileSystem3;

/* Union record forward declarations.  */
coclass FileSystemObject;
coclass Drive;
coclass Drives;
coclass Folder;
coclass Folders;
coclass File;
coclass Files;
coclass TextStream;
coclass IHost_Class;
coclass IArguments_Class;
coclass IWSHNamedArguments_Class;
coclass IWSHUnnamedArguments_Class;

/* Enumeration declarations.  */
enum CompareMethod
{
  BinaryCompare = (int) 201326592,
  TextCompare = (int) 201326593,
  DatabaseCompare = (int) 201326594
};
enum IOMode
{
  ForReading = (int) 201326593,
  ForWriting = (int) 201326594,
  ForAppending = (int) 201326600
};
enum Tristate
{
  TristateTrue = (int) -1,
  TristateFalse = (int) 201326592,
  TristateUseDefault = (int) -2,
  TristateMixed = (int) -2
};
enum __MIDL___MIDL_itf_ihost_0001_0000_0001
{
  Normal = (int) 201326592,
  ReadOnly = (int) 201326593,
  Hidden = (int) 201326594,
  System = (int) 201326596,
  Volume = (int) 201326600,
  Directory = (int) 201326608,
  Archive = (int) 201326624,
  Alias = (int) 201327616,
  Compressed = (int) 201328640
};
enum __MIDL___MIDL_itf_ihost_0001_0000_0002
{
  UnknownType = (int) 201326592,
  Removable = (int) 201326593,
  Fixed = (int) 201326594,
  Remote = (int) 201326595,
  CDRom = (int) 201326596,
  RamDisk = (int) 201326597
};
enum __MIDL___MIDL_itf_ihost_0001_0000_0003
{
  WindowsFolder = (int) 201326592,
  SystemFolder = (int) 201326593,
  TemporaryFolder = (int) 201326594
};
enum __MIDL___MIDL_itf_ihost_0001_0000_0004
{
  StdIn = (int) 201326592,
  StdOut = (int) 201326593,
  StdErr = (int) 201326594
};

/* Type definitions.  */
typedef enum __MIDL___MIDL_itf_ihost_0001_0000_0001 FileAttribute;
typedef enum __MIDL___MIDL_itf_ihost_0001_0000_0002 DriveTypeConst;
typedef enum __MIDL___MIDL_itf_ihost_0001_0000_0003 SpecialFolderConst;
typedef enum __MIDL___MIDL_itf_ihost_0001_0000_0004 StandardStreamTypes;

[
  uuid(60254CA0-953B-11CF-8C96-00AA00B8708C),
  version(5.6),
  helpstring("Windows Script Host (Ver 5.6)")
]
library ihost
{
  importlib("stdole2.tlb");

   /* CoClass declarations.  */
   [
     uuid(0D43FE01-F093-11CF-8940-00A0C9054228),
     cancreate
   ]
   coclass FileSystemObject
   {
     dispinterface IFileSystem3;
   };
   [
     uuid(C7C3F5B1-88A3-11D0-ABCB-00A0C90FFFC0)
   ]
   coclass Drive
   {
     dispinterface IDrive;
   };
   [
     uuid(C7C3F5B2-88A3-11D0-ABCB-00A0C90FFFC0)
   ]
   coclass Drives
   {
     dispinterface IDriveCollection;
   };
   [
     uuid(C7C3F5B3-88A3-11D0-ABCB-00A0C90FFFC0)
   ]
   coclass Folder
   {
     dispinterface IFolder;
   };
   [
     uuid(C7C3F5B4-88A3-11D0-ABCB-00A0C90FFFC0)
   ]
   coclass Folders
   {
     dispinterface IFolderCollection;
   };
   [
     uuid(C7C3F5B5-88A3-11D0-ABCB-00A0C90FFFC0)
   ]
   coclass File
   {
     dispinterface IFile;
   };
   [
     uuid(C7C3F5B6-88A3-11D0-ABCB-00A0C90FFFC0)
   ]
   coclass Files
   {
     dispinterface IFileCollection;
   };
   [
     uuid(0BB02EC0-EF49-11CF-8940-00A0C9054228)
   ]
   coclass TextStream
   {
     dispinterface ITextStream;
   };
   [
     uuid(60254CA2-953B-11CF-8C96-00AA00B8708C),
     helpstring("Windows Script Host Object"),
     cancreate
   ]
   coclass IHost_Class
   {
     dispinterface IHost;
   };
   [
     uuid(60254CA4-953B-11CF-8C96-00AA00B8708C),
     helpstring("Arguments Collection Object"),
     cancreate
   ]
   coclass IArguments_Class
   {
     dispinterface IArguments2;
   };
   [
     uuid(54A24970-B1E6-11D3-A286-00104BD35090),
     helpstring("Named Arguments Collection Object"),
     cancreate
   ]
   coclass IWSHNamedArguments_Class
   {
     dispinterface IWSHNamedArguments;
   };
   [
     uuid(2AC0525F-38ED-4B87-B9A7-78132D32D58F),
     helpstring("Unnamed Arguments Collection Object"),
     cancreate
   ]
   coclass IWSHUnnamedArguments_Class
   {
     dispinterface IWSHUnnamedArguments;
   };

   /* Dispatch interface declarations.  */
   [
     uuid(91AFBD1B-5FEB-43F5-B028-E2CA960617EC),
     helpstring("Windows Script Host Application Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IHost : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *out_Name
     );
     [id(100), propget]
     HRESULT __stdcall Application (
       [out retval] IDispatch **out_Dispatch
     );
     [propget]
     HRESULT __stdcall FullName (
       [out retval] BSTR *out_Path
     );
     [propget]
     HRESULT __stdcall Path (
       [out retval] BSTR *out_Path
     );
     [propget]
     HRESULT __stdcall Interactive (
       [out retval] WINBOOL *out_Interactive
     );
     [id(103), propput]
     HRESULT __stdcall Interactive (
       [in] WINBOOL argNo1
     );
     [id(200)]
     HRESULT __stdcall Quit (
       [in opt] int ExitCode = (int) 201326592
     );
     [id(1000), propget]
     HRESULT __stdcall ScriptName (
       [out retval] BSTR *out_ScriptName
     );
     [propget]
     HRESULT __stdcall ScriptFullName (
       [out retval] BSTR *out_ScriptFullName
     );
     [propget]
     HRESULT __stdcall Arguments (
       [out retval] dispinterface IArguments2 **out_Arguments
     );
     [propget]
     HRESULT __stdcall Version (
       [out retval] BSTR *out_Version
     );
     [propget]
     HRESULT __stdcall BuildVersion (
       [out retval] int *out_Build
     );
     [propget]
     HRESULT __stdcall Timeout (
       [out retval] long *out_Timeout
     );
     [id(1005), propput]
     HRESULT __stdcall Timeout (
       [in] long argNo1
     );
     [id(2000)]
     HRESULT __stdcall CreateObject (
       [in] BSTR ProgID,
       [in opt] BSTR Prefix = L"",
       [out retval] IDispatch **out_Dispatch
     );
     HRESULT __stdcall Echo (
       [in] VARIANT pArgs[]
     );
     HRESULT __stdcall GetObject (
       [in] BSTR Pathname,
       [in opt] BSTR ProgID = L"",
       [in opt] BSTR Prefix = L"",
       [out retval] IDispatch **out_Dispatch
     );
     HRESULT __stdcall DisconnectObject (
       [in] IDispatch * Object
     );
     HRESULT __stdcall Sleep (
       [in] long Time
     );
     HRESULT __stdcall ConnectObject (
       [in] IDispatch * Object,
       [in] BSTR Prefix
     );
     [id(1006), propget]
     HRESULT __stdcall StdIn (
       [out retval] dispinterface ITextStream **out_ppts
     );
     [propget]
     HRESULT __stdcall StdOut (
       [out retval] dispinterface ITextStream **ppts
     );
     [propget]
     HRESULT __stdcall StdErr (
       [out retval] dispinterface ITextStream **ppts
     );
   };
   [
     uuid(2CC5A9D1-B1E5-11D3-A286-00104BD35090),
     helpstring("Arguments Collection Object Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IArguments2 : IArguments
   {
     [id(3), propget]
     HRESULT __stdcall Named (
       [out retval] dispinterface IWSHNamedArguments **out_ppnamed
     );
     [propget]
     HRESULT __stdcall Unnamed (
       [out retval] dispinterface IWSHUnnamedArguments **out_ppnamed
     );
     HRESULT __stdcall ShowUsage (void);
   };
   [
     uuid(60254CA3-953B-11CF-8C96-00AA00B8708C),
     helpstring("Arguments Collection Object Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IArguments : IDispatch
   {
     [id(0)]
     HRESULT __stdcall Item (
       [in] long Index,
       [out retval] BSTR *out_Value
     );
     HRESULT __stdcall Count (
       [out retval] long *out_Count
     );
     [propget]
     HRESULT __stdcall length (
       [out retval] long *out_Count
     );
     [id(-4)]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **out_Enum
     );
   };
   [
     uuid(2CC5A9D0-B1E5-11D3-A286-00104BD35090),
     helpstring("Named Arguments Collection Object Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IWSHNamedArguments : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] BSTR Switch,
       [out retval] VARIANT *out_Value
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *out_Count
     );
     [propget]
     HRESULT __stdcall length (
       [out retval] long *out_Count
     );
     HRESULT __stdcall Exists (
       [in] BSTR Switch,
       [out retval] WINBOOL *out_Exists
     );
     [id(-4)]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **out_Enum
     );
   };
   [
     uuid(BF64FAF0-5906-426C-B4BC-7B753CBE819F),
     helpstring("Unnamed Arguments Collection Object Interface"),
     dual,
     oleautomation,
     dispatchable
   ]
   dispinterface IWSHUnnamedArguments : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] long Index,
       [out retval] VARIANT *out_Value
     );
     [propget]
     HRESULT __stdcall Count (
       [out retval] long *out_Count
     );
     [propget]
     HRESULT __stdcall length (
       [out retval] long *out_Count
     );
     [id(-4)]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **out_Enum
     );
   };
   [
     uuid(53BAD8C1-E718-11CF-893D-00A0C9054228),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface ITextStream : IDispatch
   {
     [id(10000), propget]
     HRESULT __stdcall Line (
       [out retval] long *Line
     );
     [id(-529), propget]
     HRESULT __stdcall Column (
       [out retval] long *Column
     );
     [id(10002), propget]
     HRESULT __stdcall AtEndOfStream (
       [out retval] WINBOOL *EOS
     );
     [propget]
     HRESULT __stdcall AtEndOfLine (
       [out retval] WINBOOL *EOL
     );
     HRESULT __stdcall Read (
       [in] long Characters,
       [out retval] BSTR *Text
     );
     HRESULT __stdcall ReadLine (
       [out retval] BSTR *Text
     );
     HRESULT __stdcall ReadAll (
       [out retval] BSTR *Text
     );
     HRESULT __stdcall Write (
       [in] BSTR Text
     );
     HRESULT __stdcall WriteLine (
       [in opt] BSTR Text = L""
     );
     HRESULT __stdcall WriteBlankLines (
       [in] long Lines
     );
     HRESULT __stdcall Skip (
       [in] long Characters
     );
     HRESULT __stdcall SkipLine (void);
     HRESULT __stdcall Close (void);
   };
   [
     uuid(0AB5A3D0-E5B6-11D0-ABF5-00A0C90FFFC0),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFileSystem : IDispatch
   {
     [id(10010), propget]
     HRESULT __stdcall Drives (
       [out retval] dispinterface IDriveCollection **ppdrives
     );
     [id(10000)]
     HRESULT __stdcall BuildPath (
       [in] BSTR Path,
       [in] BSTR Name,
       [out retval] BSTR *pbstrResult
     );
     [id(10004)]
     HRESULT __stdcall GetDriveName (
       [in] BSTR Path,
       [out retval] BSTR *pbstrResult
     );
     HRESULT __stdcall GetParentFolderName (
       [in] BSTR Path,
       [out retval] BSTR *pbstrResult
     );
     HRESULT __stdcall GetFileName (
       [in] BSTR Path,
       [out retval] BSTR *pbstrResult
     );
     HRESULT __stdcall GetBaseName (
       [in] BSTR Path,
       [out retval] BSTR *pbstrResult
     );
     HRESULT __stdcall GetExtensionName (
       [in] BSTR Path,
       [out retval] BSTR *pbstrResult
     );
     [id(10002)]
     HRESULT __stdcall GetAbsolutePathName (
       [in] BSTR Path,
       [out retval] BSTR *pbstrResult
     );
     HRESULT __stdcall GetTempName (
       [out retval] BSTR *pbstrResult
     );
     [id(10015)]
     HRESULT __stdcall DriveExists (
       [in] BSTR DriveSpec,
       [out retval] WINBOOL *pfExists
     );
     HRESULT __stdcall FileExists (
       [in] BSTR FileSpec,
       [out retval] WINBOOL *pfExists
     );
     HRESULT __stdcall FolderExists (
       [in] BSTR FolderSpec,
       [out retval] WINBOOL *pfExists
     );
     [id(10011)]
     HRESULT __stdcall GetDrive (
       [in] BSTR DriveSpec,
       [out retval] dispinterface IDrive **ppdrive
     );
     HRESULT __stdcall GetFile (
       [in] BSTR FilePath,
       [out retval] dispinterface IFile **ppfile
     );
     HRESULT __stdcall GetFolder (
       [in] BSTR FolderPath,
       [out retval] dispinterface IFolder **ppfolder
     );
     HRESULT __stdcall GetSpecialFolder (
       [in] SpecialFolderConst SpecialFolder,
       [out retval] dispinterface IFolder **ppfolder
     );
     [id(1200)]
     HRESULT __stdcall DeleteFile (
       [in] BSTR FileSpec,
       [in opt] WINBOOL Force = (BOOL) 0
     );
     HRESULT __stdcall DeleteFolder (
       [in] BSTR FolderSpec,
       [in opt] WINBOOL Force = (BOOL) 0
     );
     [id(1204)]
     HRESULT __stdcall MoveFile (
       [in] BSTR Source,
       [in] BSTR Destination
     );
     HRESULT __stdcall MoveFolder (
       [in] BSTR Source,
       [in] BSTR Destination
     );
     [id(1202)]
     HRESULT __stdcall CopyFile (
       [in] BSTR Source,
       [in] BSTR Destination,
       [in opt] WINBOOL OverWriteFiles = (BOOL) -1
     );
     HRESULT __stdcall CopyFolder (
       [in] BSTR Source,
       [in] BSTR Destination,
       [in opt] WINBOOL OverWriteFiles = (BOOL) -1
     );
     [id(1120)]
     HRESULT __stdcall CreateFolder (
       [in] BSTR Path,
       [out retval] dispinterface IFolder **ppfolder
     );
     [id(1101)]
     HRESULT __stdcall CreateTextFile (
       [in] BSTR FileName,
       [in opt] WINBOOL Overwrite = (BOOL) -1,
       [in opt] WINBOOL Unicode = (BOOL) 0,
       [out retval] dispinterface ITextStream **ppts
     );
     [id(1100)]
     HRESULT __stdcall OpenTextFile (
       [in] BSTR FileName,
       [in opt] enum IOMode IOMode = (int) 201326593,
       [in opt] WINBOOL Create = (BOOL) 0,
       [in opt] enum Tristate Format = (int) 201326592,
       [out retval] dispinterface ITextStream **ppts
     );
   };
   [
     uuid(C7C3F5A1-88A3-11D0-ABCB-00A0C90FFFC0),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDriveCollection : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT Key,
       [out retval] dispinterface IDrive **ppdrive
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppenum
     );
     [id(1), propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
   };
   [
     uuid(C7C3F5A0-88A3-11D0-ABCB-00A0C90FFFC0),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IDrive : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Path (
       [out retval] BSTR *pbstrPath
     );
     [id(10000), propget]
     HRESULT __stdcall DriveLetter (
       [out retval] BSTR *pbstrLetter
     );
     [propget]
     HRESULT __stdcall ShareName (
       [out retval] BSTR *pbstrShareName
     );
     [propget]
     HRESULT __stdcall DriveType (
       [out retval] DriveTypeConst *pdt
     );
     [propget]
     HRESULT __stdcall RootFolder (
       [out retval] dispinterface IFolder **ppfolder
     );
     [id(10005), propget]
     HRESULT __stdcall AvailableSpace (
       [out retval] VARIANT *pvarAvail
     );
     [id(10004), propget]
     HRESULT __stdcall FreeSpace (
       [out retval] VARIANT *pvarFree
     );
     [id(10006), propget]
     HRESULT __stdcall TotalSize (
       [out retval] VARIANT *pvarTotal
     );
     [propget]
     HRESULT __stdcall VolumeName (
       [out retval] BSTR *pbstrName
     );
     [id(10007), propput]
     HRESULT __stdcall VolumeName (
       [in] BSTR argNo1
     );
     [propget]
     HRESULT __stdcall FileSystem (
       [out retval] BSTR *pbstrFileSystem
     );
     [propget]
     HRESULT __stdcall SerialNumber (
       [out retval] long *pulSerialNumber
     );
     [propget]
     HRESULT __stdcall IsReady (
       [out retval] WINBOOL *pfReady
     );
   };
   [
     uuid(C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFolder : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Path (
       [out retval] BSTR *pbstrPath
     );
     [id(1000), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstrName
     );
     [id(1000), propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [id(1002), propget]
     HRESULT __stdcall ShortPath (
       [out retval] BSTR *pbstrPath
     );
     [id(1001), propget]
     HRESULT __stdcall ShortName (
       [out retval] BSTR *pbstrName
     );
     [id(1004), propget]
     HRESULT __stdcall Drive (
       [out retval] dispinterface IDrive **ppdrive
     );
     [propget]
     HRESULT __stdcall ParentFolder (
       [out retval] dispinterface IFolder **ppfolder
     );
     [id(1003), propget]
     HRESULT __stdcall Attributes (
       [out retval] FileAttribute *pfa
     );
     [id(1003), propput]
     HRESULT __stdcall Attributes (
       [in] FileAttribute argNo1
     );
     [id(1006), propget]
     HRESULT __stdcall DateCreated (
       [out retval] DATE *pdate
     );
     [propget]
     HRESULT __stdcall DateLastModified (
       [out retval] DATE *pdate
     );
     [propget]
     HRESULT __stdcall DateLastAccessed (
       [out retval] DATE *pdate
     );
     [id(1010), propget]
     HRESULT __stdcall Type (
       [out retval] BSTR *pbstrType
     );
     [id(1201)]
     HRESULT __stdcall Delete (
       [in opt] WINBOOL Force = (BOOL) 0
     );
     [id(1203)]
     HRESULT __stdcall Copy (
       [in] BSTR Destination,
       [in opt] WINBOOL OverWriteFiles = (BOOL) -1
     );
     [id(1205)]
     HRESULT __stdcall Move (
       [in] BSTR Destination
     );
     [id(10000), propget]
     HRESULT __stdcall IsRootFolder (
       [out retval] WINBOOL *pfRootFolder
     );
     [id(1009), propget]
     HRESULT __stdcall Size (
       [out retval] VARIANT *pvarSize
     );
     [id(10001), propget]
     HRESULT __stdcall SubFolders (
       [out retval] dispinterface IFolderCollection **ppfolders
     );
     [propget]
     HRESULT __stdcall Files (
       [out retval] dispinterface IFileCollection **ppfiles
     );
     [id(1101)]
     HRESULT __stdcall CreateTextFile (
       [in] BSTR FileName,
       [in opt] WINBOOL Overwrite = (BOOL) -1,
       [in opt] WINBOOL Unicode = (BOOL) 0,
       [out retval] dispinterface ITextStream **ppts
     );
   };
   [
     uuid(C7C3F5A3-88A3-11D0-ABCB-00A0C90FFFC0),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFolderCollection : IDispatch
   {
     [id(2)]
     HRESULT __stdcall Add (
       [in] BSTR Name,
       [out retval] dispinterface IFolder **ppfolder
     );
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT Key,
       [out retval] dispinterface IFolder **ppfolder
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppenum
     );
     [id(1), propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
   };
   [
     uuid(C7C3F5A5-88A3-11D0-ABCB-00A0C90FFFC0),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFileCollection : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Item (
       [in] VARIANT Key,
       [out retval] dispinterface IFile **ppfile
     );
     [id(-4), propget, restricted, hidden]
     HRESULT __stdcall _NewEnum (
       [out retval] IUnknown **ppenum
     );
     [id(1), propget]
     HRESULT __stdcall Count (
       [out retval] long *plCount
     );
   };
   [
     uuid(C7C3F5A4-88A3-11D0-ABCB-00A0C90FFFC0),
     hidden,
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFile : IDispatch
   {
     [id(0), propget]
     HRESULT __stdcall Path (
       [out retval] BSTR *pbstrPath
     );
     [id(1000), propget]
     HRESULT __stdcall Name (
       [out retval] BSTR *pbstrName
     );
     [id(1000), propput]
     HRESULT __stdcall Name (
       [in] BSTR argNo1
     );
     [id(1002), propget]
     HRESULT __stdcall ShortPath (
       [out retval] BSTR *pbstrPath
     );
     [id(1001), propget]
     HRESULT __stdcall ShortName (
       [out retval] BSTR *pbstrName
     );
     [id(1004), propget]
     HRESULT __stdcall Drive (
       [out retval] dispinterface IDrive **ppdrive
     );
     [propget]
     HRESULT __stdcall ParentFolder (
       [out retval] dispinterface IFolder **ppfolder
     );
     [id(1003), propget]
     HRESULT __stdcall Attributes (
       [out retval] FileAttribute *pfa
     );
     [id(1003), propput]
     HRESULT __stdcall Attributes (
       [in] FileAttribute argNo1
     );
     [id(1006), propget]
     HRESULT __stdcall DateCreated (
       [out retval] DATE *pdate
     );
     [propget]
     HRESULT __stdcall DateLastModified (
       [out retval] DATE *pdate
     );
     [propget]
     HRESULT __stdcall DateLastAccessed (
       [out retval] DATE *pdate
     );
     [propget]
     HRESULT __stdcall Size (
       [out retval] VARIANT *pvarSize
     );
     [propget]
     HRESULT __stdcall Type (
       [out retval] BSTR *pbstrType
     );
     [id(1200)]
     HRESULT __stdcall Delete (
       [in opt] WINBOOL Force = (BOOL) 0
     );
     [id(1202)]
     HRESULT __stdcall Copy (
       [in] BSTR Destination,
       [in opt] WINBOOL OverWriteFiles = (BOOL) -1
     );
     [id(1204)]
     HRESULT __stdcall Move (
       [in] BSTR Destination
     );
     [id(1100)]
     HRESULT __stdcall OpenAsTextStream (
       [in opt] enum IOMode IOMode = (int) 201326593,
       [in opt] enum Tristate Format = (int) 201326592,
       [out retval] dispinterface ITextStream **ppts
     );
   };
   [
     uuid(2A0B9D10-4B87-11D3-A97A-00104B365C9F),
     dual,
     nonextensible,
     oleautomation,
     dispatchable
   ]
   dispinterface IFileSystem3 : IFileSystem
   {
     [id(20000)]
     HRESULT __stdcall GetStandardStream (
       [in] StandardStreamTypes StandardStreamType,
       [in opt] WINBOOL Unicode = (BOOL) 0,
       [out retval] dispinterface ITextStream **ppts
     );
     [id(20010)]
     HRESULT __stdcall GetFileVersion (
       [in] BSTR FileName,
       [out retval] BSTR *FileVersion
     );
   };

};

